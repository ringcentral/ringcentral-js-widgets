{"version":3,"file":"GenericStorage.interface.js","names":[],"sources":["interfaces/GenericStorage.interface.ts"],"sourcesContent":["type Async = 'async';\ntype Sync = 'sync';\n\ntype ReturnValue<T, R> = T extends Async ? Promise<R> : R;\n\nexport interface GenericStorage<T extends Async | Sync = Sync> {\n  getLocalStorageKeys(): ReturnValue<T, string[]>;\n  getData(): ReturnValue<T, Record<string, unknown>>;\n  getItem(key: string): ReturnValue<T, unknown>;\n  setItem(key: string, value: unknown): ReturnValue<T, void>;\n  removeItem(key: string): ReturnValue<T, void>;\n  destroy(): void;\n  readonly id: string;\n  readonly driver: string;\n}\n\nexport type AsyncStorage = GenericStorage<Async>;\n\nexport interface StorageItem {\n  value: unknown;\n  setter: string;\n}\n"],"mappings":"","ignoreList":[]}