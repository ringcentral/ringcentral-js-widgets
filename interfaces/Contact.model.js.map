{"version":3,"file":"Contact.model.js","names":[],"sources":["interfaces/Contact.model.ts"],"sourcesContent":["import type ContactResource from '@rc-ex/core/lib/definitions/ContactResource';\nimport type PersonalContactResource from '@rc-ex/core/lib/definitions/PersonalContactResource';\nimport type PhoneNumberResource from '@rc-ex/core/lib/definitions/PhoneNumberResource';\nimport type PresenceInfoResponse from '@rc-ex/core/lib/definitions/PresenceInfoResponse';\n\nexport interface ContactGroup {\n  caption: string;\n  contacts: IContact[];\n  id: string;\n}\n\nexport type ContactPhoneNumber = {\n  phoneNumber?: string;\n  phoneType?: string;\n  hidden?: boolean;\n} & PhoneNumberResource;\n\nexport interface IContact extends Omit<ContactResource, 'type'> {\n  id: string;\n  type: string;\n  firstName?: string;\n  lastName?: string;\n  name?: string;\n  phoneNumber?: string;\n  phoneNumbers?: ContactPhoneNumber[];\n  email?: string;\n  emails?: string[];\n  hasProfileImage?: boolean;\n  extensionNumber?: string;\n  profileImageUrl?: string;\n  hidden?: boolean;\n  isCallQueueNumber?: boolean;\n  presence?: ContactPresence | null;\n}\n\nexport interface TypedPhoneNumber {\n  id: string;\n  name: string;\n  type: string;\n  phoneNumber: string;\n  phoneType: string;\n  contactId: string;\n  profileImageUrl?: string;\n  entityType: string;\n  isCallQueueNumber: boolean;\n}\n\nexport interface TypedContact extends IContact {\n  entityType: string;\n}\n\nexport interface ContactModel\n  extends Pick<\n    PersonalContactResource,\n    Exclude<keyof PersonalContactResource, 'id'>\n  > {\n  type: string;\n  phoneNumbers: [];\n  emails: string[];\n  name: string;\n  id: string;\n}\n\nexport type ContactPresence = Pick<\n  PresenceInfoResponse,\n  | 'dndStatus'\n  | 'presenceStatus'\n  | 'telephonyStatus'\n  | 'userStatus'\n  | 'meetingStatus'\n>;\n\nexport interface ContactSource {\n  /**\n   * source name\n   */\n  sourceName: string;\n  /**\n   * source module ready status\n   */\n  readonly ready: boolean;\n  /**\n   * source ready status\n   */\n  readonly sourceReady: boolean;\n  /**\n   * source contacts data\n   */\n  contacts: IContact[];\n  /**\n   * source contacts raw data\n   */\n  rawContacts: unknown[];\n  /**\n   * get source presence\n   */\n  getPresence?: (\n    contact: IContact,\n    useCache?: boolean,\n  ) => ContactPresence | Promise<ContactPresence | null>;\n  /**\n   * get source profile image\n   */\n  getProfileImage?: (\n    contact: IContact,\n    useCache?: boolean,\n  ) => Promise<string | null>;\n  /**\n   * find contact by id\n   */\n  findContact?: (\n    contactId: string,\n  ) => IContact | Promise<IContact | undefined> | undefined;\n  /**\n   * filter contacts\n   */\n  filterContacts?: (searchFilter: string) => IContact[] | Promise<IContact[]>;\n  /**\n   * get search contacts with a search string\n   */\n  searchForPhoneNumbers?: (\n    searchString: string,\n  ) => TypedPhoneNumber[] | Promise<TypedPhoneNumber[]>;\n  /**\n   * get match phoneNumber\n   */\n  matchContactsByPhoneNumber?: (\n    phoneNumber: string,\n  ) => TypedContact[] | Promise<TypedContact[]>;\n  /**\n   * sync source data\n   */\n  sync?: (...args: any) => Promise<void>;\n}\n"],"mappings":"","ignoreList":[]}