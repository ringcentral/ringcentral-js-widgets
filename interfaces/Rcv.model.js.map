{"version":3,"file":"Rcv.model.js","names":[],"sources":["interfaces/Rcv.model.ts"],"sourcesContent":["import type {\n  RcvWaitingRoomModeProps,\n  RcvWaitingRoomType,\n} from '../modules/RcVideo';\n\nexport type MeetingProviderTypesProps = {\n  meeting: 'RCMeetings';\n  video: 'RCVideo';\n};\n\nexport type RcVideoTypesProps = {\n  meeting: 0;\n  call: 1;\n};\n\nexport interface RcvGSuiteMeetingModel {\n  name: string;\n  type: 0 | 1;\n  allowJoinBeforeHost: boolean;\n  expiresIn: number;\n  isMeetingSecret?: boolean;\n  meetingPassword?: string;\n}\n\nexport interface RcVDialInNumberObj {\n  phoneNumber: string;\n  country: {\n    name: string;\n    isoCode: string;\n    callingCode: string;\n  };\n  default: boolean;\n  location: string;\n}\n\nexport interface RcVDialInNumberGET {\n  phoneNumbers: Array<RcVDialInNumberObj>;\n}\n\nexport interface RcVideoAPI {\n  id?: string;\n  shortId?: string;\n  extensionId?: string;\n  accountId?: string;\n  name: string;\n  type: 0 | 1;\n  startTime: Date;\n  expiresIn: number;\n  duration: number;\n  allowJoinBeforeHost: boolean;\n  muteAudio: boolean;\n  muteVideo: boolean;\n  isMeetingSecret: boolean;\n  meetingPassword?: string;\n  isOnlyAuthUserJoin: boolean;\n  isOnlyCoworkersJoin: boolean;\n  allowScreenSharing: boolean;\n  e2ee?: boolean;\n  waitingRoomMode?: RcvWaitingRoomModeProps;\n}\n\nexport interface RcVideoAPIResponse extends RcVideoAPI {\n  uri: string;\n  id: string;\n  participantCode: string;\n  hostCode: string;\n  shortId: string;\n  meetingUri: string;\n  joinUri: string;\n  allowJoinBeforeHost: boolean;\n  name: string;\n  type: 0 | 1;\n  announceOnEnter: boolean;\n  countOnEnter: boolean;\n  musicEnabled: boolean;\n  enterExitTonesMode: number; // TODO: shrinker range\n  muteAudio: boolean;\n  muteVideo: boolean;\n  accountId: string;\n  extensionId: string;\n  phoneGroup: string;\n  // meetingPassword?: string;\n  meetingPasswordPSTN?: string;\n  meetingPasswordMasked?: string;\n  isMeetingSecret: boolean;\n  allowScreenSharing: boolean;\n  isOnlyAuthUserJoin: boolean;\n  isOnlyCoworkersJoin: boolean;\n  waitingRoomMode?: RcvWaitingRoomModeProps;\n}\n\nexport interface RcVMeetingModel extends RcVideoAPI {\n  saveAsDefault?: boolean;\n  isMeetingPasswordValid?: boolean;\n  usePersonalMeetingId: boolean;\n  personalMeetingId?: string;\n  notShowAgain?: boolean;\n  settingLock: RcVSettingLocks;\n}\n\ntype ScreenSharingType = 'all' | 'host';\ntype AuthUserType = 'only_co_workers' | 'anyone_signed_into_rc';\n\ntype RcVSettingValue =\n  | boolean\n  | ScreenSharingType\n  | AuthUserType\n  | RcvWaitingRoomType;\n\nexport type RcVSettingId =\n  | 'e2ee'\n  | 'join_before_host'\n  // | 'join_video_off'\n  // | 'join_audio_mute'\n  | 'password_scheduled'\n  | 'password_instant'\n  | 'guest_join'\n  | 'join_authenticated_from_account_only'\n  | 'screen_sharing_host_only'\n  | 'waiting_room'\n  | 'waiting_room_guests_only'\n  | 'e2ee';\n\nexport interface RcVPreferenceDataItem {\n  id: RcVSettingId;\n  value: RcVSettingValue;\n  readOnly: boolean;\n  canModifyAccess: boolean;\n}\n\nexport interface RcVPreferencesGET {\n  join_before_host?: boolean;\n  // join_video_off?: boolean;\n  // join_audio_mute?: boolean;\n  e2ee?: boolean;\n  password_scheduled?: boolean;\n  password_instant?: boolean;\n  guest_join?: boolean;\n  join_authenticated_from_account_only?: AuthUserType;\n  screen_sharing_host_only?: ScreenSharingType;\n  waiting_room?: boolean;\n  waiting_room_guests_only?: RcvWaitingRoomType;\n}\n\nexport type RcVSettingLocksGET = {\n  [key in RcVSettingId]?: boolean;\n};\n\nexport interface RcVPreferencesAPIResult {\n  preferences: RcVPreferencesGET;\n  settingLocks: RcVSettingLocksGET;\n}\n\nexport type RcVSettingKey =\n  | 'e2ee'\n  | 'allowJoinBeforeHost'\n  | 'muteVideo'\n  | 'muteAudio'\n  | 'isMeetingSecret'\n  | 'isOnlyAuthUserJoin'\n  | 'isOnlyCoworkersJoin'\n  | 'allowScreenSharing'\n  | 'waitingRoomMode';\nexport type RcVPreferences = Pick<RcVideoAPI, RcVSettingKey>;\nexport type RcVSettingLocks = Omit<\n  Pick<RcVideoAPI, RcVSettingKey>,\n  'waitingRoomMode'\n> & {\n  waitingRoomMode: boolean;\n};\n\nexport interface RcvInvitationRequest {\n  hostName: string;\n  e2ee?: boolean;\n  shortId: string;\n  id: string;\n  joinUri: string;\n  isMeetingSecret: boolean;\n  meetingPassword: string;\n  meetingPasswordPSTN: string;\n  meetingPasswordMasked: string;\n  dialInNumbers: RcVDialInNumberObj[];\n  currentLocale: string;\n  brandName: string;\n  brandId: string;\n  isSIPAvailable: boolean;\n}\n\nexport interface RcvInvitationInfo {\n  body: string;\n  subject: string;\n}\n"],"mappings":""}