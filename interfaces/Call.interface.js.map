{"version":3,"file":"Call.interface.js","names":[],"sources":["interfaces/Call.interface.ts"],"sourcesContent":["import type { CallResultsValue } from '../enums/callResults';\nimport type { Entity } from './Entity.interface';\nimport type { ActiveCall } from './Presence.model';\nimport type { NormalizedSession } from './Webphone.interface';\nimport type { IWarmTransferInfo } from './ActiveSession.interface';\n\nexport interface CallerInfo {\n  phoneNumber?: string;\n  extensionId?: string; // for 1. call data from CallLog\n  extensionNumber?: string;\n  name?: string; // for data from CallLog\n}\n\nexport interface NormalizedCall {\n  id?: string;\n  partyId?: string;\n  direction?: ActiveCall['direction'];\n  telephonySession?: {\n    status: string;\n    id: string;\n    direction: string;\n  };\n  telephonySessionId?: string;\n  toName?: string;\n  fromName?: string;\n  from?: CallerInfo;\n  to?: CallerInfo;\n  startTime?: number;\n  sessionId: string;\n  webphoneSession?: NormalizedSession;\n  telephonyStatus?: ActiveCall['telephonyStatus'];\n  duration?: number;\n  warmTransferInfo?: IWarmTransferInfo;\n  isRecording?: boolean;\n}\n\nexport type NormalizedCalls = NormalizedCall[];\n\nexport interface Call extends NormalizedCall {\n  fromMatches?: Entity[];\n  toMatches?: Entity[];\n  activityMatches?: string[];\n  toNumberEntity?: string;\n  result?: CallResultsValue;\n}\n"],"mappings":""}