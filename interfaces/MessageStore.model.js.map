{"version":3,"file":"MessageStore.model.js","names":[],"sources":["interfaces/MessageStore.model.ts"],"sourcesContent":["import type GetMessageInfoResponse from '@rc-ex/core/lib/definitions/GetMessageInfoResponse';\nimport type SyncInfoMessages from '@rc-ex/core/lib/definitions/SyncInfoMessages';\n\nexport interface ConversationItem {\n  id: string;\n  creationTime: number;\n  type: GetMessageInfoResponse['type'];\n  messageId: GetMessageInfoResponse['id'];\n}\n\nexport type Message = Pick<\n  GetMessageInfoResponse,\n  Exclude<\n    keyof GetMessageInfoResponse,\n    'creationTime' | 'conversationId' | 'lastModifiedTime'\n  >\n> & {\n  conversationId?: string;\n  creationTime?: number;\n  lastModifiedTime?: number;\n  conversationMatches?: any[];\n  correspondentMatches?: any[];\n  lastMatchedCorrespondentEntity?: any;\n  correspondents?: any[];\n  unreadCounts?: number;\n  faxPageCount?: number;\n  mmsAttachments?: any[];\n  voicemailAttachment?: any;\n  faxAttachment?: any;\n  isLogging?: boolean;\n};\n\nexport type Messages = Message[];\n\nexport interface MessageSyncList {\n  records: Messages;\n  syncInfo: SyncInfoMessages;\n}\n\nexport interface MessageStoreModel {\n  syncInfo: SyncInfoMessages;\n  conversationList: ConversationItem[];\n  conversationStore: Record<string, Messages>;\n}\n"],"mappings":"","ignoreList":[]}