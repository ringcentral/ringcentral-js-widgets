{"version":3,"file":"pubnub.js","names":["_subscription","_interopRequireDefault","require","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","r","t","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","n","done","value","f","TypeError","a","u","call","next","_arrayLikeToArray","toString","slice","name","from","test","_classCallCheck","_defineProperties","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","i","_toPrimitive","toPrimitive","String","Number","RealPubnub","jest","requireActual","pubnubCache","MockedPubNub","_ref","subscribeKey","_subscribeKey","_realPubnub","encrypt","decrypt","_channels","_listeners","push","subscribe","_ref2","channels","addListener","listener","_this","setTimeout","mockedConnected","removeAllListeners","unsubscribeAll","destroy","_iterator","_step","listen","status","category","operation","err","mockCallMessage","activeCallsBody","encrypted","JSON","stringify","uuid","event","timestamp","Date","toISOString","subscriptionId","body","allowSeeMyPresence","dndStatus","extensionId","meetingsStatus","pickUpCallsOnHold","presenceStatus","ringOnMonitoredCall","sequence","telephonyStatus","userStatus","activeCalls","totalActiveCalls","subscriptionBody","deliveryMode","encryptionKey","encryptKey","keyEncoding","keyLength","mode","mockMessage","msg","pubnubMsg","channel","subscription","undefined","actualChannel","subscribedChannel","timetoken","publisher","message","forEach","l","mockPresence","OPERATIONS","CATEGORIES","getLastPubnub","_default","exports"],"sources":["integration-test/mock/pubnub.ts"],"sourcesContent":["import subscriptionBody from './data/subscription.json';\n\nconst RealPubnub = jest.requireActual('pubnub');\n\nconst pubnubCache = [];\n\nclass MockedPubNub {\n  constructor({ subscribeKey }) {\n    this._subscribeKey = subscribeKey;\n    this._realPubnub = new RealPubnub({ subscribeKey });\n    this.encrypt = this._realPubnub.encrypt;\n    this.decrypt = this._realPubnub.decrypt;\n    this._channels = [];\n    this._listeners = [];\n    pubnubCache.push(this);\n  }\n\n  subscribe({ channels }) {\n    this._channels = channels;\n  }\n\n  addListener(listener) {\n    this._listeners.push(listener);\n    setTimeout(() => this.mockedConnected(), 0);\n  }\n\n  removeAllListeners() {\n    this._listeners = [];\n  }\n\n  unsubscribeAll() {}\n\n  destroy() {\n    this._realPubnub = null;\n  }\n\n  // Methods to do mocking operations\n  mockedConnected() {\n    for (const listen of this._listeners) {\n      listen.status({\n        category: 'PNConnectedCategory',\n        operation: 'PNSubscribeOperation',\n      });\n    }\n  }\n\n  mockCallMessage(activeCallsBody) {\n    const encrypted = this._realPubnub.encrypt(\n      JSON.stringify({\n        uuid: '1088719898803550582-8036702296129764',\n        event:\n          '/restapi/v1.0/account/160746006/extension/160751006/presence?detailedTelephonyState=true&sipData=true',\n        timestamp: new Date().toISOString(),\n        subscriptionId: '24dcfdcf-e7d0-4930-9edb-555ec11843b9',\n        body: {\n          allowSeeMyPresence: true,\n          dndStatus: 'TakeAllCalls',\n          extensionId: 160751006,\n          meetingsStatus: 'Disconnected',\n          pickUpCallsOnHold: false,\n          presenceStatus: 'Busy',\n          ringOnMonitoredCall: false,\n          sequence: 368997,\n          telephonyStatus: 'OnHold',\n          userStatus: 'Available',\n          activeCalls: activeCallsBody,\n          totalActiveCalls: activeCallsBody.length,\n        },\n      }),\n      subscriptionBody.deliveryMode.encryptionKey,\n      {\n        encryptKey: false,\n        keyEncoding: 'base64',\n        keyLength: 128,\n        mode: 'ecb',\n      },\n    );\n    this.mockMessage(encrypted);\n  }\n\n  mockMessage(msg) {\n    const pubnubMsg = {\n      channel: this._channels[0],\n      subscription: undefined,\n      actualChannel: null,\n      subscribedChannel: this._channels[0],\n      timetoken: '14933652238078468',\n      publisher: undefined,\n      message: msg,\n    };\n    this._listeners.forEach((l) => l.message(pubnubMsg));\n  }\n\n  mockPresence(msg) {\n    const pubnubMsg = {\n      channel: this._channels[0],\n      subscription: undefined,\n      actualChannel: null,\n      subscribedChannel: this._channels[0],\n      timetoken: '14933652238078468',\n      publisher: undefined,\n      message: msg,\n    };\n    this._listeners.forEach((l) => l.message(pubnubMsg));\n  }\n}\n\nMockedPubNub.OPERATIONS = RealPubnub.OPERATIONS;\nMockedPubNub.CATEGORIES = RealPubnub.CATEGORIES;\nMockedPubNub.getLastPubnub = function getLastPubnub() {\n  return pubnubCache[pubnubCache.length - 1];\n};\n\nexport default MockedPubNub;\n"],"mappings":"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","ignoreList":[]}