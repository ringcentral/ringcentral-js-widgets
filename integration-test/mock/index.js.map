{"version":3,"sources":["integration-test/mock/index.ts"],"names":["mockWsServer","mockServer","createSDK","options","opts","clientId","clientSecret","server","Request","fetchMock","constructor","Response","Headers","fetch","url","refreshDelayMs","redirectUri","cachePrefix","clearCacheOnRefreshError","SDK","lastOptions","mockApi","method","path","body","status","statusText","headers","isOnce","responseHeaders","isJson","mockUrl","mock","once","bind","JSON","stringify","sendAsJson","times","startWebSocketMockServer","JestWebSocketMock","on","socket","send","wsConnectionDetailsBody","message","parse","meta","type","wsHeartbeatResponse","wsSubscriptionResponse","console","warn","WebSocket","prototype","_onCreated","connected","originalSend","args","call","nextMessage","newSend","wsMockServerStarted","wstoken","wsTokenBody","uri","authentication","access_token","token_type","expires_in","refresh_token","refresh_token_expires_in","scope","expireTime","Date","getTime","owner_id","endpoint_id","logout","tokenRefresh","failure","error_description","description","presence","id","mockResponse","extension","extensionNumber","activeCalls","presenceStatus","telephonyStatus","userStatus","dndStatus","extensionId","presenceUpdate","presenceBody","dialingPlan","dialingPlanBody","extensionInfo","extId","extensionBody","conferenceCallBringIn","conferenceCallBringInBody","removeFromConference","partyId","extensionList","extraParams","isEmptyRes","query","key","concat","extensionListBody","companyContactList","extensionsListBody","accountInfo","accountBody","apiInfo","apiInfoBody","messageSync","messageSyncBody","messageList","messageListBody","updateMessageStatus","messageItemBody","authzProfile","authzProfileBody","blockedNumber","blockedNumberBody","forwardingNumber","forwardingNumberBody","phoneNumber","phoneNumberBody","accountPhoneNumber","accountPhoneNumberBody","subscription","subscriptionBody","numberParser","numberParserBody","sms","smsBody","addressBook","addressBookBody","syncInfo","syncType","syncToken","syncTime","now","toISOString","callLog","callLogBody","records","startTime","userSettings","userSettingsBody","lockedSettings","lockedSettingsBody","assistedUsers","assistedUsersBody","delegators","device","deviceBody","conferencing","conferencingBody","numberParse","homeCountry","numberParseBody","conferenceCall","conferenceCallBody","session","updateConferenceCall","terminateConferenceCall","activeCallsBody","sipProvision","sipProvisionBody","fetchDL","fetchDLBody","fetchDLWithNoRecord","fetchDLWithNoRecordBody","restore","reset","mockForbidden","mockLimited","errorCode","errors","mockClient","client","service","ringOut","ringOutBody","ringOutUpdate","meeting","extra","meetingBody","meetingInvitation","meetingId","language","meetingInvitationBody","rcvInvitation","mockInvitation","RCV_INVITATION_BODY","Blob","RCV_INVITATION_START","RCV_INVITATION_END","meetingInfo","videoPreference","RCV_PREFERENCES_IDS","join","meetingPreferenceBody","videoPersonalSettings","videoPersonalSettingsBody","getRcvMeetingInfo","shortId","rcvMeetingSettingsBody","patchRcvMeeting","postRcvBridges","postRcvBridgesBody","serviceInfo","serviceInfoBody","meetingProvider","meetingProviderRcm","meetingProviderRcmBody","meetingProviderRcv","meetingProviderRcvBody","recentActivity","RegExp","callLogList","videoConfiguration","videoConfigurationBody","callerId","callerIdBody","features","featuresBody","timezone","timezoneBody","dialInNumbers","dialInNumbersBody","discoveryInitial","discoveryInitialBody","discoveryExternal","discoveryExternalBody","generateCode","generateCodeBody","mockForLogin","mockTimezone","mockAuthzProfile","mockMeetingInvitation","mockExtensionInfo","mockForwardingNumber","mockMessageSync","mockConferencing","mockActiveCalls","mockUpdateConference","mockNumberParser","mockRecentActivity","mockMessageSyncOnce","mockVideoConfiguration","mockUserSetting","mockGenerateCode","params","dialingPlanData","extensionInfoData","accountInfoData","apiInfoData","authzProfileData","deviceData","extensionListData","extensionListQuery","isExtensionListEmptyRes","extensionsListData","blockedNumberData","forwardingNumberData","messageListData","messageSyncData","phoneNumberData","callerIdData","subscriptionData","callLogData","addressBookData","sipProvisionData","fetchDLData","conferencingData","activeCallsData","numberParseData","numberParseIsOnce","updateConferenceCallBody","userSettingsData","lockedSettingsData","featuresData","mockAssistedUsers","mockDelegators"],"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","sourcesContent":["import fetchMock from 'fetch-mock';\nimport WebSocket from 'isomorphic-ws';\nimport JestWebSocketMock from 'jest-websocket-mock';\n\nimport { SDK } from '@ringcentral/sdk';\n\nimport { RCV_PREFERENCES_IDS } from '../../modules/RcVideo/videoHelper';\nimport accountBody from './data/accountInfo.json';\nimport accountPhoneNumberBody from './data/accountPhoneNumber.json';\nimport activeCallsBody from './data/activeCalls.json';\nimport addressBookBody from './data/addressBook.json';\nimport apiInfoBody from './data/apiInfo.json';\nimport assistedUsersBody from './data/assistedUsers.json';\nimport authzProfileBody from './data/authzProfile.json';\nimport blockedNumberBody from './data/blockedNumber.json';\nimport callerIdBody from './data/callerId.json';\nimport callLogBody from './data/callLog.json';\nimport callLogList from './data/callLogList.json';\nimport conferenceCallBody from './data/conferenceCall.json';\nimport conferenceCallBringInBody from './data/conferenceCallBringIn.json';\nimport conferencingBody from './data/conferencing.json';\nimport deviceBody from './data/device.json';\nimport dialingPlanBody from './data/dialingPlan.json';\nimport dialInNumbersBody from './data/dialInNumbers.json';\nimport discoveryExternalBody from './data/discoveryExternal.json';\nimport discoveryInitialBody from './data/discoveryInitial.json';\nimport extensionListBody from './data/extension.json';\nimport extensionBody from './data/extensionInfo.json';\nimport extensionsListBody from './data/extensions.json';\nimport featuresBody from './data/features.json';\nimport fetchDLBody from './data/fetchDL.json';\nimport fetchDLWithNoRecordBody from './data/fetchDLWithNoRecord.json';\nimport forwardingNumberBody from './data/forwardingNumber.json';\nimport generateCodeBody from './data/generateCode.json';\nimport lockedSettingsBody from './data/lockedSettings.json';\nimport meetingBody from './data/meeting.json';\nimport meetingInvitationBody from './data/meetingInvitation.json';\nimport {\n  RCV_INVITATION_BODY,\n  RCV_INVITATION_START,\n  RCV_INVITATION_END,\n} from './data/rcvInvitation';\nimport meetingProviderRcmBody from './data/meetingProviderRcm.json';\nimport meetingProviderRcvBody from './data/meetingProviderRcv.json';\nimport messageItemBody from './data/messageItem.json';\nimport messageListBody from './data/messageList.json';\nimport messageSyncBody from './data/messageSync.json';\nimport numberParseBody from './data/numberParse.json';\nimport numberParserBody from './data/numberParser.json';\nimport phoneNumberBody from './data/phoneNumber.json';\nimport postRcvBridgesBody from './data/postRcvBridges.json';\nimport presenceBody from './data/presence.json';\nimport rcvMeetingSettingsBody from './data/rcvMeetingSettings.json';\nimport ringOutBody from './data/ringOut.json';\nimport serviceInfoBody from './data/serviceInfo.json';\nimport sipProvisionBody from './data/sipProvision.json';\nimport smsBody from './data/sms.json';\nimport subscriptionBody from './data/subscription.json';\nimport timezoneBody from './data/timezone.json';\nimport updateConferenceCallBody from './data/updateConference.json';\nimport userSettingsBody from './data/userSettings.json';\nimport videoConfigurationBody from './data/videoConfiguration.json';\nimport videoPersonalSettingsBody from './data/videoPersonalSettings.json';\nimport meetingPreferenceBody from './data/videoPreference.json';\nimport wsConnectionDetailsBody from './data/ws/connectionDetails.json';\nimport wsHeartbeatResponse from './data/ws/heartbeatResponse.json';\nimport wsSubscriptionResponse from './data/ws/subscriptionResponse.json';\nimport wsTokenBody from './data/ws/wstoken.json';\n\nexport const mockWsServer = 'ws://whatever';\nexport const mockServer = 'http://whatever';\nexport function createSDK(options = {}) {\n  const opts = {\n    clientId: 'test key',\n    clientSecret: 'test secret',\n    server: mockServer,\n    Request: fetchMock.constructor.Request,\n    Response: fetchMock.constructor.Response,\n    Headers: fetchMock.constructor.Headers,\n    fetch: (url, opts) =>\n      url instanceof fetchMock.constructor.Request\n        ? fetchMock.fetchMock(url.url, url) // fetchMock doesn't fully support `Request` type\n        : fetchMock.fetchMock(url, opts),\n    refreshDelayMs: 1,\n    redirectUri: 'http://foo',\n    cachePrefix: 'sdkPrefix',\n    clearCacheOnRefreshError: false,\n    ...options,\n  };\n  return new SDK(opts);\n}\n\n// give you access to the parameters last passed in to fetch\nexport function lastOptions() {\n  return fetchMock.lastOptions();\n}\n\nexport function mockApi({\n  method = 'GET',\n  path,\n  server = mockServer,\n  url,\n  body = {},\n  status = 200,\n  statusText = 'OK',\n  headers,\n  isOnce = true,\n}) {\n  let responseHeaders;\n  const isJson = typeof body !== 'string';\n  if (isJson && !headers) {\n    responseHeaders = {\n      'Content-Type': 'application/json',\n    };\n  } else {\n    responseHeaders = headers;\n  }\n  let mockUrl;\n  if (url) {\n    mockUrl = url;\n  } else {\n    mockUrl = `${server}${path}`;\n  }\n  const mock = isOnce\n    ? fetchMock.once.bind(fetchMock)\n    : fetchMock.mock.bind(fetchMock);\n  mock(\n    mockUrl,\n    {\n      body: isJson ? JSON.stringify(body) : body,\n      status,\n      statusText,\n      headers: responseHeaders,\n      sendAsJson: false,\n    },\n    {\n      method,\n      times: isOnce ? 1 : 20,\n    },\n  );\n}\n\nfunction startWebSocketMockServer() {\n  // mock WebSocket server\n  const server = new JestWebSocketMock(mockWsServer);\n  server.on('connection', (socket) => {\n    // type: ConnectionDetails\n    socket.send(JSON.stringify(wsConnectionDetailsBody));\n    socket.on('message', (message) => {\n      const [meta, body] = JSON.parse(message);\n      // type: Heartbeat\n      if (meta.type === 'Heartbeat') {\n        socket.send(\n          JSON.stringify([\n            {\n              ...wsHeartbeatResponse[0],\n              ...meta,\n            },\n            body,\n          ]),\n        );\n      }\n      // type: ClientRequest\n      else if (meta.type === 'ClientRequest') {\n        switch (meta.path) {\n          case '/restapi/v1.0/subscription':\n            socket.send(JSON.stringify(wsSubscriptionResponse));\n            break;\n          // TODO: mock more path here\n          default:\n            console.warn(\n              `[WebSocketMockServer] Unmatched ${meta.method || 'GET'} to ${\n                meta.path\n              }`,\n            );\n            break;\n        }\n      }\n    });\n  });\n\n  // hook WebSocket\n  WebSocket.prototype._onCreated = async () => {\n    await server.connected;\n  };\n  const originalSend = WebSocket.prototype.send;\n  WebSocket.prototype.send = async function newSend(...args) {\n    await server.connected;\n    originalSend.call(this, ...args);\n    await server.nextMessage;\n  };\n}\n\nlet wsMockServerStarted = false;\nexport function wstoken() {\n  if (!wsMockServerStarted) {\n    startWebSocketMockServer();\n    wsMockServerStarted = true;\n  }\n  mockApi({\n    method: 'POST',\n    path: '/restapi/oauth/wstoken',\n    body: {\n      ...wsTokenBody,\n      uri: mockWsServer,\n    },\n    isOnce: false,\n  });\n}\n\nexport function authentication() {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/oauth/token',\n    body: {\n      access_token: 'ACCESS_TOKEN',\n      token_type: 'bearer',\n      expires_in: 3600,\n      refresh_token: 'REFRESH_TOKEN',\n      refresh_token_expires_in: 60480,\n      scope: 'SMS RCM Foo Boo CallControl TelephonySessions',\n      expireTime: new Date().getTime() + 3600000,\n      owner_id: '23231231\"',\n      endpoint_id: '3213213131',\n    },\n  });\n}\n\nexport function logout() {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/oauth/revoke',\n    isOnce: false,\n  });\n}\n\nexport function tokenRefresh(failure) {\n  if (!failure) {\n    mockApi({\n      method: 'POST',\n      path: '/restapi/oauth/token',\n      body: {\n        access_token: 'ACCESS_TOKEN_FROM_REFRESH',\n        token_type: 'bearer',\n        expires_in: 3600,\n        refresh_token: 'REFRESH_TOKEN_FROM_REFRESH',\n        refresh_token_expires_in: 60480,\n        scope: 'SMS RCM Foo Boo',\n      },\n    });\n  } else {\n    mockApi({\n      method: 'POST',\n      path: '/restapi/oauth/token',\n      body: {\n        message: 'Wrong token',\n        error_description: 'Wrong token',\n        description: 'Wrong token',\n      },\n      status: 400,\n    });\n  }\n}\n\nexport function presence(id, mockResponse = {}, isOnce = false) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/${id}/presence`,\n    body: {\n      uri: `https://platform.ringcentral.com/restapi/v1.0/account/123/extension/${id}/presence`,\n      extension: {\n        uri: `https://platform.ringcentral.com/restapi/v1.0/account/123/extension/${id}`,\n        extensionNumber: '101',\n        id,\n      },\n      activeCalls: [],\n      presenceStatus: 'Available',\n      telephonyStatus: 'Ringing',\n      userStatus: 'Available',\n      dndStatus: 'TakeAllCalls',\n      extensionId: id,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function presenceUpdate(id, mockResponse = {}) {\n  mockApi({\n    path: `/restapi/v1.0/account/~/extension/${id}/presence`,\n    method: 'PUT',\n    body: {\n      ...presenceBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function dialingPlan(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/dialing-plan?perPage=MAX&page=1',\n    body: {\n      ...dialingPlanBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function extensionInfo(mockResponse = {}, extId = '~') {\n  mockApi({\n    path: `/restapi/v1.0/account/~/extension/${extId}`,\n    body: {\n      ...extensionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function conferenceCallBringIn(id, mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}/parties/bring-in`,\n    body: {\n      ...conferenceCallBringInBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function removeFromConference(id, partyId) {\n  mockApi({\n    method: 'DELETE',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}/parties/${partyId}`,\n  });\n}\n\nexport function extensionList(\n  mockResponse = {},\n  extraParams = {},\n  isEmptyRes = false,\n) {\n  let query = '';\n  // eslint-disable-next-line guard-for-in\n  for (const key in extraParams) {\n    query = query.concat(`${key}=${extraParams[key]}`);\n  }\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension?${query}`,\n    body: isEmptyRes\n      ? {}\n      : {\n          ...extensionListBody,\n          ...mockResponse,\n        },\n    isOnce: false,\n  });\n}\n\nexport function companyContactList(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/directory/contacts?`,\n    body: {\n      ...extensionsListBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function accountInfo(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~',\n    body: {\n      ...accountBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function apiInfo(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0',\n    body: {\n      ...apiInfoBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function messageSync(mockResponse = {}, isOnce = false) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-sync`,\n    body: {\n      ...messageSyncBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function messageList(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-store?`,\n    body: {\n      ...messageListBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function updateMessageStatus(mockResponse = {}, isOnce = true) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-store/`,\n    method: 'PUT',\n    body: {\n      ...messageItemBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function authzProfile(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/authz-profile',\n    body: {\n      ...authzProfileBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function blockedNumber(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/blocked-number',\n    body: {\n      ...blockedNumberBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function forwardingNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/forwarding-number`,\n    body: {\n      ...forwardingNumberBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function phoneNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/phone-number`,\n    body: {\n      ...phoneNumberBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function accountPhoneNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/phone-number`,\n    body: {\n      ...accountPhoneNumberBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function subscription(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n  mockApi({\n    method: 'PUT',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n  mockApi({\n    method: 'DELETE',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function numberParser(mockResponse = {}, isOnce = true) {\n  mockApi({\n    method: 'POST',\n    url: `begin:${mockServer}/restapi/v1.0/number-parser/`,\n    body: {\n      ...numberParserBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function sms(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/v1.0/account/~/extension/~/sms',\n    body: {\n      ...smsBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function addressBook(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/address-book-sync`,\n    body: {\n      ...addressBookBody,\n      ...{\n        syncInfo: {\n          syncType: addressBookBody.syncInfo.syncType,\n          syncToken: addressBookBody.syncInfo.syncToken,\n          syncTime: new Date(Date.now()).toISOString(),\n        },\n      },\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function callLog(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/call-log-sync`,\n    body: {\n      ...callLogBody,\n      records: [\n        {\n          ...callLogBody.records[0],\n          startTime: new Date(Date.now()).toISOString(),\n        },\n        {\n          ...callLogBody.records[1],\n          startTime: new Date(Date.now()).toISOString(),\n        },\n      ],\n      ...{\n        syncInfo: {\n          syncType: callLogBody.syncInfo.syncType,\n          syncToken: callLogBody.syncInfo.syncToken,\n          syncTime: new Date(Date.now()).toISOString(),\n        },\n      },\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function userSettings(mockResponse = {}, extensionId = '~') {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/${extensionId}/meeting/user-settings`,\n    body: {\n      ...userSettingsBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function lockedSettings(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/meeting/locked-settings`,\n    body: {\n      ...lockedSettingsBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function assistedUsers(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meetings-configuration/assisted`,\n    body: mockResponse || assistedUsersBody,\n  });\n}\n\nexport function delegators(mockResponse) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/rcvideo/v1/accounts/~/extensions/~/delegators`,\n    body: mockResponse || [],\n    isOnce: false,\n  });\n}\n\nexport function device(mockResponse = {}, isOnce = true) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/device`,\n    body: {\n      ...deviceBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function conferencing(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/conferencing',\n    body: {\n      ...conferencingBody,\n      ...mockResponse,\n    },\n  });\n}\n\n// TODO: replace it with numberParser\nexport function numberParse(mockResponse = {}, homeCountry) {\n  mockApi({\n    method: 'POST',\n    path: `/restapi/v1.0/number-parser/parse?homeCountry=${homeCountry}`,\n    body: {\n      ...numberParseBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function conferenceCall(mockResponse = {}) {\n  conferenceCallBody.session.on = () => {};\n  mockApi({\n    method: 'POST',\n    path: '/restapi/v1.0/account/~/telephony/conference',\n    body: {\n      ...conferenceCallBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function updateConferenceCall(id, mockResponse = {}, isOnce = false) {\n  mockApi({\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}`,\n    body: {\n      // ...conferenceCallBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function terminateConferenceCall(id, mockResponse = {}) {\n  mockApi({\n    method: 'DELETE',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}`,\n    body: {\n      ...conferenceCallBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function activeCalls(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/active-calls`,\n    body: {\n      ...activeCallsBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function sipProvision(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    url: `begin:${mockServer}/restapi/v1.0/client-info/sip-provision`,\n    body: {\n      ...sipProvisionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function fetchDL(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/device`,\n    body: {\n      ...fetchDLBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function fetchDLWithNoRecord(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/device`,\n    body: {\n      ...fetchDLWithNoRecordBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function restore() {\n  fetchMock.restore();\n}\n\nexport function reset() {\n  fetchMock.reset();\n}\n\nexport function mockForbidden({ method = 'GET', path, url, body = '' }) {\n  mockApi({\n    method,\n    path,\n    body,\n    url,\n    status: 403,\n  });\n}\n\nexport function mockLimited({ method = 'GET', path, url, headers }) {\n  mockApi({\n    method,\n    path,\n    url,\n    status: 503,\n    headers,\n    body: {\n      status: 503,\n      errorCode: 'CMN-211',\n      errors: [{ errorCode: 'CMN-211' }],\n    },\n  });\n}\n\nexport function mockClient(client, options = {}) {\n  client.service = createSDK(options);\n}\n\nexport function ringOut(mockResponse = {}) {\n  mockApi({\n    isOnce: false,\n    method: 'POST',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/ring-out`,\n    body: {\n      ...ringOutBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function ringOutUpdate(mockResponse = {}) {\n  mockApi({\n    isOnce: false,\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/ring-out/`,\n    body: {\n      ...ringOutBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function meeting(mockResponse = {}, extra = {}) {\n  mockApi({\n    method: 'POST',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting`,\n    body: {\n      ...meetingBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n    ...extra,\n  });\n}\n\nexport function meetingInvitation({\n  status,\n  meetingId = null,\n  mockResponse = {},\n  extraParams = {\n    language: 'en-US',\n  },\n}: any = {}) {\n  const id = meetingId || meetingBody.id;\n  let query = '';\n  // eslint-disable-next-line guard-for-in\n  for (const key in extraParams) {\n    query = query.concat(`${key}=${extraParams[key]}`);\n  }\n\n  mockApi({\n    status,\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting/${id}/invitation?${query}`,\n    body: {\n      ...meetingInvitationBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function rcvInvitation(mockInvitation = RCV_INVITATION_BODY) {\n  mockApi({\n    method: 'POST',\n    url: `${mockServer}/restapi/v1.0/uns/render-document`,\n    body: new Blob([RCV_INVITATION_START, mockInvitation, RCV_INVITATION_END]),\n    isOnce: false,\n  });\n}\nexport function meetingInfo(\n  meetingId = null,\n  mockResponse = {},\n  isOnce = false,\n) {\n  const id = meetingId || meetingBody.id;\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting/${id}`,\n    body: {\n      ...meetingBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function videoPreference(extensionId = '~', mockResponse?: any[]) {\n  const query = `id=${RCV_PREFERENCES_IDS.join('&id=')}`;\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/rcvideo/v1/account/${accountBody.id}/extension/${extensionId}/preferences?${query}`,\n    body: mockResponse || meetingPreferenceBody,\n    isOnce: false,\n  });\n}\n\nexport function videoPersonalSettings(\n  extensionId: number | string = extensionBody.id,\n  mockResponse = {},\n) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/rcvideo/v1/bridges?default=true&accountId=${accountBody.id}&extensionId=${extensionId}`,\n    body: { ...videoPersonalSettingsBody, ...mockResponse },\n    isOnce: false,\n  });\n}\n\nexport function getRcvMeetingInfo(\n  shortId,\n  extensionId: number | string = extensionBody.id,\n  mockResponse = {},\n  isOnce = false,\n) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/rcvideo/v1/bridges?shortId=${shortId}&accountId=${accountBody.id}&extensionId=${extensionId}`,\n    body: {\n      ...rcvMeetingSettingsBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function patchRcvMeeting(meetingId, mockResponse = {}) {\n  mockApi({\n    method: 'PATCH',\n    url: `${mockServer}/rcvideo/v1/bridges/${meetingId}`,\n    body: { ...rcvMeetingSettingsBody, ...mockResponse },\n    isOnce: false,\n  });\n}\n\nexport function postRcvBridges(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'POST',\n    url: `${mockServer}/rcvideo/v1/bridges`,\n    body: {\n      ...postRcvBridgesBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function serviceInfo(mockResponse = {}, extensionId = '~') {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/${extensionId}/meeting/service-info`,\n    body: {\n      ...serviceInfoBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function meetingProvider(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/video-configuration`,\n    body: {\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function meetingProviderRcm() {\n  meetingProvider(meetingProviderRcmBody);\n}\n\nexport function meetingProviderRcv() {\n  meetingProvider(meetingProviderRcvBody);\n}\n\nexport function recentActivity(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(\n      `${mockServer}/restapi/v1.0/account/~/extension/~/call-log`,\n    ),\n    body: {\n      ...callLogList,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function videoConfiguration(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(\n      `${mockServer}/restapi/v1.0/account/~/extension/~/video-configuration`,\n    ),\n    body: {\n      ...videoConfigurationBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function callerId(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(\n      `${mockServer}/restapi/v1.0/account/~/extension/~/caller-id`,\n    ),\n    body: {\n      ...callerIdBody,\n      ...mockResponse,\n    },\n    isOnce,\n  });\n}\n\nexport function features(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(\n      `${mockServer}/restapi/v1.0/account/~/extension/~/features`,\n    ),\n    body: {\n      ...featuresBody,\n      ...mockResponse,\n    },\n  });\n}\n\nexport function timezone(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/dictionary/timezone`,\n    body: {\n      ...timezoneBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function dialInNumbers(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/rcvideo/v1/dial-in-numbers`,\n    body: {\n      ...dialInNumbersBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function discoveryInitial(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/.well-known/entry-points/initial`,\n    body: {\n      ...discoveryInitialBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function discoveryExternal(mockResponse = {}) {\n  mockApi({\n    path: `/.well-known/entry-points/external`,\n    body: {\n      ...discoveryExternalBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function generateCode(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    url: `${mockServer}/restapi/v1.0/interop/generate-code`,\n    body: {\n      ...generateCodeBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function mockForLogin({\n  mockTimezone = false,\n  mockAuthzProfile = true,\n  mockMeetingInvitation = true, // TODO: remove it if uesless\n  mockExtensionInfo = true,\n  mockForwardingNumber = true,\n  mockMessageSync = true,\n  mockConferencing = true,\n  mockActiveCalls = true,\n  mockUpdateConference = true,\n  mockNumberParser = true,\n  mockRecentActivity = true,\n  mockMessageSyncOnce = false,\n  mockVideoConfiguration = true,\n  mockUserSetting = true,\n  mockGenerateCode = false,\n  ...params\n} = {}) {\n  discoveryInitial();\n  discoveryExternal();\n  wstoken();\n  authentication();\n  logout();\n  tokenRefresh();\n  presence('~');\n  dialingPlan(params.dialingPlanData);\n  if (mockExtensionInfo) {\n    extensionInfo(params.extensionInfoData);\n  }\n  if (mockTimezone) {\n    timezone();\n  }\n  accountInfo(params.accountInfoData);\n  apiInfo(params.apiInfoData);\n  if (mockAuthzProfile) {\n    authzProfile(params.authzProfileData);\n  }\n  device(params.deviceData);\n  extensionList(\n    params.extensionListData,\n    params.extensionListQuery,\n    params.isExtensionListEmptyRes,\n  );\n  companyContactList(params.extensionsListData);\n  // accountPhoneNumber(params.accountPhoneNumberData);\n  blockedNumber(params.blockedNumberData);\n  if (mockForwardingNumber) {\n    forwardingNumber(params.forwardingNumberData);\n  }\n  messageList(params.messageListData);\n\n  if (mockMessageSync) {\n    messageSync(params.messageSyncData, mockMessageSyncOnce);\n  }\n  phoneNumber(params.phoneNumberData);\n  callerId(params.callerIdData);\n  subscription(params.subscriptionData);\n  callLog(params.callLogData);\n  addressBook(params.addressBookData);\n  sipProvision(params.sipProvisionData);\n  fetchDL(params.fetchDLData);\n  dialInNumbers(params.fetchDLData);\n  if (mockConferencing) {\n    conferencing(params.conferencingData);\n  }\n  if (mockActiveCalls) {\n    activeCalls(params.activeCallsData);\n  }\n  if (mockNumberParser) {\n    numberParser(params.numberParseData, params.numberParseIsOnce);\n  }\n  if (mockUpdateConference) {\n    conferenceCall();\n    updateConferenceCall(updateConferenceCallBody.id, updateConferenceCallBody);\n  }\n  if (mockRecentActivity) {\n    recentActivity();\n  }\n  if (mockVideoConfiguration) {\n    videoConfiguration();\n  }\n  videoPreference();\n  if (mockUserSetting) {\n    userSettings(params.userSettingsData);\n  }\n  lockedSettings(params.lockedSettingsData);\n  features(params.featuresData);\n  assistedUsers(params.mockAssistedUsers);\n  delegators(params.mockDelegators);\n  videoPersonalSettings();\n  if (mockGenerateCode) {\n    generateCode();\n  }\n}\n"],"file":"index.js"}