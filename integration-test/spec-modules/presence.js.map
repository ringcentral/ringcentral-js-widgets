{"version":3,"sources":["integration-test/spec-modules/presence.ts"],"names":["auth","client","presence","account","describe","timeout","mock","mockClient","isLoginSuccess","clientHistoryRequest","ClientHistoryRequest","Map","afterEach","logout","it","restore","mockForLogin","console","error","skip","retries","expect","presenceStatus","equal","mockAuthzProfile","authzProfile","permissions","authzProfileBody","filter","p","permission","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;eAEe,kBAACA,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAAyBC,OAAzB,EAAqC;AAClDC,EAAAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1B,IAAA,KAAI,CAACC,OAAL,CAAa,KAAb;;AACAC,IAAAA,IAAI,CAACC,UAAL,CAAgBN,MAAhB;AAEA,QAAIO,cAAJ;AACA,QAAMC,oBAAoB,GAAG,IAAIC,gCAAJ,CAAyB,IAAIC,GAAJ,EAAzB,EAAoCV,MAApC,CAA7B;AAEAW,IAAAA,SAAS,uEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFZ,IAAI,CAACa,MAAL,EADE;;AAAA;AAAA;AAAA,qBAEF,6BAAc,CAAd,CAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,GAAT;AAKAC,IAAAA,EAAE,CAAC,wEAAD,uEAA2E;AAAA;AAAA;AAAA;AAAA;AAC3ER,cAAAA,IAAI,CAACS,OAAL;AACAT,cAAAA,IAAI,CAACU,YAAL;AAF2E;AAAA,qBAGpD,2BAAYhB,IAAZ,EAAkBG,OAAlB,CAHoD;;AAAA;AAG3EK,cAAAA,cAH2E;;AAI3E,kBAAI,CAACA,cAAL,EAAqB;AACnBS,gBAAAA,OAAO,CAACC,KAAR,CACE,oDADF,EAEEf,OAFF;;AAIA,gBAAA,KAAI,CAACgB,IAAL;AACD;;AACD,cAAA,KAAI,CAACC,OAAL,CAAa,CAAb;;AAX2E;AAAA,qBAYrE,6BAAc,CAAd,CAZqE;;AAAA;AAa3EC,cAAAA,MAAM,CAACnB,QAAQ,CAACoB,cAAV,CAAN,CAAgCC,KAAhC,CAAsC,WAAtC;;AAb2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3E,GAAF;AAgBAT,IAAAA,EAAE,CAAC,+EAAD,uEAAkF;AAAA;AAAA;AAAA;AAAA;AAClFR,cAAAA,IAAI,CAACS,OAAL;AACAT,cAAAA,IAAI,CAACU,YAAL,CAAkB;AAAEQ,gBAAAA,gBAAgB,EAAE;AAApB,eAAlB;AACAlB,cAAAA,IAAI,CAACmB,YAAL,CAAkB;AAChBC,gBAAAA,WAAW,EAAEC,yBAAiBD,WAAjB,CAA6BE,MAA7B,CACX,UAACC,CAAD;AAAA,yBAAOA,CAAC,CAACC,UAAF,CAAaC,EAAb,KAAoB,oBAA3B;AAAA,iBADW;AADG,eAAlB;AAHkF;AAAA,qBAQ3D,2BAAY/B,IAAZ,EAAkBG,OAAlB,CAR2D;;AAAA;AAQlFK,cAAAA,cARkF;;AASlF,kBAAI,CAACA,cAAL,EAAqB;AACnBS,gBAAAA,OAAO,CAACC,KAAR,CACE,oDADF,EAEEf,OAFF;;AAIA,gBAAA,KAAI,CAACgB,IAAL;AACD;;AACD,cAAA,KAAI,CAACC,OAAL,CAAa,CAAb;;AAhBkF;AAAA,qBAiB5E,6BAAc,CAAd,CAjB4E;;AAAA;AAkBlFC,cAAAA,MAAM,CAACnB,QAAQ,CAACoB,cAAV,CAAN,CAAgCC,KAAhC,CAAsC,IAAtC;;AAlBkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlF,GAAF;AAoBD,GAhDO,CAAR;AAiDD,C","sourcesContent":["import * as mock from '../mock';\nimport authzProfileBody from '../mock/data/authzProfile';\nimport ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\n\nexport default (auth, client, presence, account) => {\n  describe('Presence:', () => {\n    this.timeout(20000);\n    mock.mockClient(client);\n\n    let isLoginSuccess;\n    const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    afterEach(async () => {\n      await auth.logout();\n      await waitInSeconds(1);\n    });\n\n    it('Should load presenceStatus when there is ReadPresenceStatus permission', async () => {\n      mock.restore();\n      mock.mockForLogin();\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error(\n          'Skip test case as failed to login with credential ',\n          account,\n        );\n        this.skip();\n      }\n      this.retries(2);\n      await waitInSeconds(1);\n      expect(presence.presenceStatus).equal('Available');\n    });\n\n    it(\"Should not load presenceStatus when there isn't ReadPresenceStatus permission\", async () => {\n      mock.restore();\n      mock.mockForLogin({ mockAuthzProfile: false });\n      mock.authzProfile({\n        permissions: authzProfileBody.permissions.filter(\n          (p) => p.permission.id !== 'ReadPresenceStatus',\n        ),\n      });\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error(\n          'Skip test case as failed to login with credential ',\n          account,\n        );\n        this.skip();\n      }\n      this.retries(2);\n      await waitInSeconds(1);\n      expect(presence.presenceStatus).equal(null);\n    });\n  });\n};\n"],"file":"presence.js"}