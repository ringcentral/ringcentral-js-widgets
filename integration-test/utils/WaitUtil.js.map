{"version":3,"sources":["integration-test/utils/WaitUtil.ts"],"names":["isTimeOut","startTime","timeoutInSeconds","Date","now","waitUntilNotNull","source","checkItem","Promise","resolve","timer","setInterval","checkValue","undefined","clearInterval","e","console","error","waitUntilEqual","expect","retryTtl","waitUntilObjectSizeGreaterThan","compareSize","log","length","waitInSeconds","seconds","setTimeout"],"mappings":"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","sourcesContent":["function isTimeOut(startTime, timeoutInSeconds) {\n  return Date.now() - startTime > timeoutInSeconds * 1000;\n}\n\nexport function waitUntilNotNull(source, checkItem, timeoutInSeconds) {\n  const startTime = Date.now();\n  return new Promise((resolve) => {\n    const timer = setInterval(() => {\n      try {\n        const checkValue = source();\n        if (checkValue !== null && checkValue !== undefined) {\n          clearInterval(timer);\n          resolve(true);\n          return;\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      if (isTimeOut(startTime, timeoutInSeconds)) {\n        clearInterval(timer);\n        resolve(false);\n        console.error(`Timeout wait for ${checkItem}  to be not null`);\n      }\n    }, 500);\n  });\n}\n\nexport function waitUntilEqual(\n  source,\n  checkItem,\n  expect,\n  timeoutInSeconds,\n  retryTtl = 500,\n) {\n  const startTime = Date.now();\n  return new Promise((resolve) => {\n    const timer = setInterval(() => {\n      try {\n        const checkValue = source();\n        if (checkValue === expect) {\n          clearInterval(timer);\n          resolve(true);\n          return;\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      if (isTimeOut(startTime, timeoutInSeconds)) {\n        clearInterval(timer);\n        resolve(false);\n        console.error(`Timeout wait for ${checkItem}  to be ${expect}`);\n      }\n    }, retryTtl);\n  });\n}\n\nexport function waitUntilObjectSizeGreaterThan(\n  source,\n  checkItem,\n  compareSize,\n  timeoutInSeconds,\n) {\n  const startTime = Date.now();\n  return new Promise((resolve) => {\n    const timer = setInterval(() => {\n      if (isTimeOut(startTime, timeoutInSeconds)) {\n        clearInterval(timer);\n        resolve(false);\n        console.log(`Timeout wait for ${checkItem} to be not null`);\n      }\n      try {\n        const checkValue = source();\n        if (checkValue !== null && checkValue.length > compareSize) {\n          clearInterval(timer);\n          resolve(true);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }, 500);\n  });\n}\n\nexport function waitInSeconds(seconds) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(null);\n    }, seconds * 1000);\n  });\n}\n"],"file":"WaitUtil.js"}