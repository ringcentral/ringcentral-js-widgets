{"version":3,"file":"ClientHistoryRequest.js","names":["ClientHistoryRequest","requestContainer","client","_classCallCheck","_requestContainer","_client","service","init","_createClass","key","value","_this","on","events","beforeRequest","request","set","url","requestSuccess","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","response","res","wrap","_callee$","_context","prev","next","clone","t0","t1","json","t2","sent","call","stop","_x","apply","arguments","requestError","_ref2","_callee2","error","_callee2$","_context2","console","status","_x2","getRawResponse","endPoint","rawResponse","forEach","indexOf","Error","concat","debugHistoryRequest","debug","get","exports","endPoints","callLog","dialingPlan","token","companyPager","sms","conferenceCall"],"sources":["integration-test/utils/ClientHistoryRequest.ts"],"sourcesContent":["export default class ClientHistoryRequest {\n  static endPoints = {\n    callLog: '/restapi/v1.0/account/~/extension/~/call-log',\n    dialingPlan: '/restapi/v1.0/account/~/dialing-plan',\n    token: '/restapi/oauth/token',\n    companyPager: '/restapi/v1.0/account/~/extension/~/company-pager',\n    sms: '/restapi/v1.0/account/~/extension/~/sms',\n    conferenceCall: '/restapi/v1.0/account/~/telephony/conference',\n  };\n\n  constructor(requestContainer, client) {\n    this._requestContainer = requestContainer;\n    this._client = client.service.client();\n    this.init();\n  }\n\n  init() {\n    this._client.on(this._client.events.beforeRequest, (request) => {\n      this._requestContainer.set(request.url, null);\n    });\n    this._client.on(this._client.events.requestSuccess, async (response) => {\n      const res = response.clone();\n      this._requestContainer.set(res.url, await res.json());\n    });\n    this._client.on(this._client.events.requestError, async (error) => {\n      console.error(error.request && error.request.url);\n      console.error(error.response && (await error.response.clone().json()));\n      console.error(error.response && error.response.status);\n    });\n  }\n\n  getRawResponse(endPoint) {\n    let rawResponse = null;\n    this._requestContainer.forEach((value, key) => {\n      if (key.indexOf(endPoint) > -1) {\n        rawResponse = value;\n      }\n    });\n    if (rawResponse == null) {\n      throw new Error(`Cannot find rawResponse from endPoint:'${endPoint}'`);\n    } else {\n      return rawResponse;\n    }\n  }\n\n  debugHistoryRequest() {\n    this._requestContainer.forEach((value, key) => {\n      console.debug(`Request  URL:'${key}' Response:'${value}'`);\n    });\n  }\n\n  get requestLog() {\n    return this._requestContainer;\n  }\n}\n"],"mappings":"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","ignoreList":[]}