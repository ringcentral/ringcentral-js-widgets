{"version":3,"file":"deepWriteableValues.js","names":[],"sources":["typings/deepWriteableValues.ts"],"sourcesContent":["type Values<T> = T extends { [P: string]: infer V } ? V : never;\n\ntype DeepWriteable<T> = {\n  -readonly [P in keyof T]: DeepWriteable<T[P]>;\n};\n\nexport type DeepWriteableValues<T> = Values<DeepWriteable<T>>;\n"],"mappings":"","ignoreList":[]}