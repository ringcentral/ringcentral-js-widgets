{"version":3,"file":"gulpfile.js","names":["_path","_interopRequireDefault","require","_dedent","_execa","_fsExtra","_gulp","_gulpBabel","_gulpSourcemaps","_consolidateLocale","_exportLocale","_importLocale","_transformLoader","_localeSettings","e","__esModule","_createForOfIteratorHelper","r","t","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","n","done","value","f","TypeError","o","a","u","call","next","_templateObject","data","_taggedTemplateLiteral","slice","Object","freeze","defineProperties","raw","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arrayLikeToArray","toString","constructor","name","from","test","l","i","push","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperty","_toPropertyKey","configurable","writable","_toPrimitive","_typeof","toPrimitive","String","Number","asyncGeneratorStep","c","Promise","resolve","then","_asyncToGenerator","_next","_throw","BUILD_PATH","path","__dirname","RELEASE_PATH","getVersionFromTag","_getVersionFromTag","regeneratorRuntime","mark","_callee7","tag","wrap","_callee7$","_context7","prev","process","env","TRAVIS_TAG","abrupt","execa","command","shell","sent","stdout","replace","t0","console","error","stop","clean","fs","remove","copy","gulp","src","pipe","dest","preBuild","transformLoader","localeSettings","sourcemaps","init","babel","write","build","series","exports","releaseClean","_releaseClean","_callee8","files","_iterator","_step","file","_callee8$","_context8","exists","concat","readdir","finish","releaseCopy","preRelease","_preRelease","_callee9","packageInfo","version","_callee9$","_context9","JSON","readFile","t1","parse","scripts","jest","log","writeFile","stringify","release","parallel","normalizeName","str","split","map","token","idx","toUpperCase","toLowerCase","substr","join","_callee","cssLocation","content","output","regExp","match","_match","_match2","target","normalizedName","newContent","_callee$","_context","exec","dedent","_callee2","_callee2$","_context2","exportLocale","_callee3","_callee3$","_context3","exportType","_callee4","_callee4$","_context4","_callee5","_callee5$","_context5","importLocale","_callee6","_callee6$","_context6","consolidateLocale","sourceFolder"],"sources":["gulpfile.js"],"sourcesContent":["import path from 'path';\nimport dedent from 'dedent';\nimport execa from 'execa';\nimport fs from 'fs-extra';\nimport gulp from 'gulp';\nimport babel from 'gulp-babel';\nimport sourcemaps from 'gulp-sourcemaps';\n\nimport consolidateLocale from '@ringcentral-integration/locale-loader/lib/consolidateLocale';\nimport exportLocale from '@ringcentral-integration/locale-loader/lib/exportLocale';\nimport importLocale from '@ringcentral-integration/locale-loader/lib/importLocale';\nimport transformLoader from '@ringcentral-integration/locale-loader/lib/transformLoader';\nimport localeSettings from '@ringcentral-integration/locale-settings';\n\nconst BUILD_PATH = path.resolve(__dirname, '../../build/ringcentral-widgets');\nconst RELEASE_PATH = path.resolve(\n  __dirname,\n  '../../release/ringcentral-widgets',\n);\n\nasync function getVersionFromTag() {\n  let tag = process.env.TRAVIS_TAG;\n  if (tag && /^\\d+.\\d+.\\d+/.test(tag)) {\n    return tag;\n  }\n  try {\n    tag = await execa.command(\n      'git describe --exact-match --tags $(git rev-parse HEAD)',\n      {\n        shell: true,\n      },\n    );\n    tag = tag.stdout.replace(/\\r?\\n|\\r/g, '');\n    if (/^\\d+.\\d+.\\d+/.test(tag)) {\n      return tag;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  return null;\n}\nfunction clean() {\n  return fs.remove(BUILD_PATH);\n}\nfunction copy() {\n  return gulp\n    .src([\n      './**',\n      '!./**/*.js',\n      '!./test{/**,}',\n      '!./coverage{/**,}',\n      '!./node_modules{/**,}',\n      '!./html-report{/**,}',\n      '!package-lock.json',\n    ])\n    .pipe(gulp.dest(BUILD_PATH));\n}\nfunction preBuild() {\n  return gulp\n    .src([\n      './**/*.js',\n      './**/*.ts',\n      './**/*.tsx',\n      './**/*.jsx',\n      '!./**/*.test.js',\n      '!./test{/**,}',\n      '!./coverage{/**,}',\n      '!./node_modules{/**,}',\n      '!./html-report{/**,}',\n      '!gulpfile.babel.js',\n    ])\n    .pipe(\n      transformLoader({\n        ...localeSettings,\n      }),\n    )\n    .pipe(sourcemaps.init())\n    .pipe(babel())\n    .pipe(sourcemaps.write('.'))\n    .pipe(gulp.dest(BUILD_PATH));\n}\nconst build = gulp.series(clean, copy, preBuild);\nasync function releaseClean() {\n  if (!(await fs.exists(RELEASE_PATH))) {\n    await execa.command(`mkdir -p ${RELEASE_PATH}`, { shell: true });\n  }\n  const files = (await fs.readdir(RELEASE_PATH)).filter(\n    (file) => !/^\\./.test(file),\n  );\n  for (const file of files) {\n    await fs.remove(path.resolve(RELEASE_PATH, file));\n  }\n}\nfunction releaseCopy() {\n  return gulp\n    .src([`${BUILD_PATH}/**`, `${__dirname}/README.md`, `${__dirname}/LICENSE`])\n    .pipe(gulp.dest(RELEASE_PATH));\n}\nasync function preRelease() {\n  const packageInfo = JSON.parse(\n    await fs.readFile(path.resolve(BUILD_PATH, 'package.json')),\n  );\n  delete packageInfo.scripts;\n  delete packageInfo.jest;\n  const version = await getVersionFromTag();\n  console.log('version:', version);\n  if (version) {\n    packageInfo.version = version;\n    packageInfo.name = '@ringcentral-integration/widgets';\n  }\n  await fs.writeFile(\n    path.resolve(RELEASE_PATH, 'package.json'),\n    JSON.stringify(packageInfo, null, 2),\n  );\n}\nconst release = gulp.series(\n  gulp.parallel(build, releaseClean),\n  releaseCopy,\n  preRelease,\n);\nfunction normalizeName(str) {\n  return str\n    .split(/[-_]/g)\n    .map(\n      (token, idx) =>\n        `${idx > 0 ? token[0].toUpperCase() : token[0].toLowerCase()}${token\n          .toLowerCase()\n          .substr(1)}`,\n    )\n    .join('');\n}\nexport { build, release };\n\nexports['generate-font'] = async () => {\n  try {\n    const cssLocation = path.resolve(\n      __dirname,\n      'assets/DynamicsFont/style.css',\n    );\n    const content = await fs.readFile(cssLocation, 'utf8');\n    let output = content\n      .replace(/url\\('fonts\\/dynamics_icon/g, \"url('./fonts/dynamics_icon\")\n      .replace('[class^=\"icon-\"], [class*=\" icon-\"]', '.icon');\n    const regExp = /\\.icon-(.*):before/;\n    let match;\n    do {\n      match = regExp.exec(output);\n      if (match) {\n        const [target, name] = match;\n        const normalizedName = normalizeName(name);\n        const newContent = dedent`\n      .${normalizedName} {\n        composes: icon;\n      }\n      .${normalizedName}:before `;\n        output = output.replace(target, newContent);\n      }\n    } while (match);\n    await fs.writeFile(\n      path.resolve(__dirname, 'assets/DynamicsFont/DynamicsFont.scss'),\n      output,\n      'utf8',\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\nexports['export-locale'] = async () =>\n  exportLocale({\n    ...localeSettings,\n  });\nexports['export-locale-full'] = async () =>\n  exportLocale({\n    ...localeSettings,\n    exportType: 'full',\n  });\nexports['export-locale-translated'] = async () =>\n  exportLocale({\n    ...localeSettings,\n    exportType: 'translated',\n  });\nexports['import-locale'] = async () =>\n  importLocale({\n    ...localeSettings,\n  });\nexports['consolidate-locale'] = async () =>\n  consolidateLocale({\n    ...localeSettings,\n    sourceFolder: path.resolve(__dirname, 'lib/countryNames'),\n  });\n"],"mappings":"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","ignoreList":[]}