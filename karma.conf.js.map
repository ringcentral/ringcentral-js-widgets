{"version":3,"sources":["karma.conf.ts"],"names":["config","set","basePath","frameworks","files","exclude","preprocessors","webpack","resolve","extensions","module","rules","test","use","webpackMiddleware","noInfo","stats","chunks","reporters","htmlReporter","outputDir","templatePath","focusOnFailures","namedFiles","pageTitle","urlFriendlyName","reportName","preserveDescribeNesting","foldAll","junitReporter","outputFile","undefined","suite","useBrowserName","nameFormatter","classNameFormatter","properties","port","colors","logLevel","LOG_ERROR","autoWatch","browsers","customLaunchers","ChromeNoSandbox","base","flags","singleRun","concurrency","Infinity"],"mappings":"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","sourcesContent":["// Karma configuration\n// Generated on Wed Nov 23 2016 15:54:23 GMT+0800 (CST)\n\nexport default (config) => {\n  config.set({\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: './',\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['mocha', 'chai', 'expect'],\n\n    // list of files / patterns to load in the browser\n    files: [\n      // 'modules/**/availabilityMonitorHelper.test.js',\n      'modules/AvailabilityMonitor/*.test.js',\n      // 'integration-test/**/*spec.js',\n    ],\n\n    // list of files to exclude\n    exclude: [\n      'enums/**/*.test.js',\n      'lib/**/*.test.js',\n      // 'modules/**/*.test.js'\n    ],\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n      'modules/**/*.js': ['webpack'],\n      'integration-test/**/*.js': ['webpack'],\n    },\n\n    // plugins: [\n    //   'karma-webpack',\n    //   'karma-mocha',\n    //   'karma-chai',\n    //   'karma-expect',\n    //   'karma-mocha-reporter',\n    //   'karma-commonjs',\n    //   'karma-chrome-launcher'\n    // ],\n\n    webpack: {\n      resolve: {\n        extensions: ['.js', '.ts'],\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.(js|ts)$/i,\n            use: ['babel-loader'],\n            exclude: /node_modules/,\n          },\n          {\n            test: /\\.json$/i,\n            use: 'json-loader',\n          },\n          {\n            test: /\\.ogg$/i,\n            use: 'url-loader?publicPath=./&name=audio/[name]_[hash].[ext]',\n          },\n        ],\n      },\n    },\n\n    webpackMiddleware: {\n      noInfo: true,\n      stats: {\n        chunks: false,\n      },\n    },\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['mocha', 'html', 'junit'],\n\n    htmlReporter: {\n      outputDir: 'karma', // where to put the reports\n      templatePath: null, // set if you moved jasmine_template.html\n      focusOnFailures: true, // reports show failures on start\n      namedFiles: false, // name files instead of creating sub-directories\n      pageTitle: null, // page title for reports; browser info by default\n      urlFriendlyName: false, // simply replaces spaces with _ for files/dirs\n      reportName: 'report', // report summary filename; browser info by default\n\n      // experimental\n      preserveDescribeNesting: false, // folded suites stay folded\n      foldAll: false, // reports start folded (only with preserveDescribeNesting)\n    },\n\n    junitReporter: {\n      outputDir: 'junit', // results will be saved as $outputDir/$browserName.xml\n      outputFile: undefined, // if included, results will be saved as $outputDir/$browserName/$outputFile\n      suite: '', // suite will become the package name attribute in xml testsuite element\n      useBrowserName: true, // add browser name to report and classes names\n      nameFormatter: undefined, // function (browser, result) to customize the name attribute in xml testcase element\n      classNameFormatter: undefined, // function (browser, result) to customize the classname attribute in xml testcase element\n      properties: {}, // key value pair of properties to add to the <properties> section of the report\n    },\n\n    // web server port\n    port: 9876,\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n    // level of logging\n    // possible values:\n    // config.LOG_DISABLE || config.LOG_ERROR ||\n    // config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_ERROR,\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: true,\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['ChromeNoSandbox'],\n    customLaunchers: {\n      ChromeNoSandbox: {\n        base: 'ChromeHeadless', // update to Chrome if you want to run it with Chrome UI\n        flags: ['--no-sandbox'],\n      },\n    },\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: true,\n\n    // Concurrency level\n    // how many browser should be started simultaneous\n    concurrency: Infinity,\n  });\n};\n"],"file":"karma.conf.js"}