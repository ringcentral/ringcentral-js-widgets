{"version":3,"sources":["containers/CallCtrlPage/CallCtrlContainer.tsx"],"names":["CallCtrlContainer","props","layout","getInitialLayout","disableMergeAndAdd","mergeDisabled","addDisabled","state","selectedMatcherIndex","avatarUrl","onLastMergingCallEnded","bind","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","value","sendDTMF","onPark","onAdd","onMerge","onBeforeMerge","gotoParticipantsCtrl","onCompleteTransfer","_mounted","_updateAvatarAndMatchIndex","_updateCurrentConferenceCall","_updateMergingPairToSessionId","isLastCallEnded","nextProps","lastCallInfo","isWebRTC","disableLinks","isConferenceCallOverload","hasConferenceCall","isMergeAndAddDisabled","partyData","callCtrlLayouts","mergeCtrl","status","sessionStatus","finished","normalCtrl","closeMergingPair","lastProps","showSpinner","conferenceCtrl","nextState","getLayout","conferenceCallParties","_updateMergeAddButtonDisabled","contactMatch","loadConference","conferenceCallId","setMergeParty","toSessionId","showCallQueueName","fallbackUserName","direction","callDirections","inbound","from","i18n","getString","currentLocale","backButtonLabel","formatPhone","phoneNumber","callStatus","startTime","isOnMute","isOnHold","isOnTransfer","warmTransferSessionId","recordStatus","showBackButton","onBackButtonClick","onFlip","onTransfer","disableFlip","showPark","callQueueName","areaCode","countryCode","brand","showContactDisplayPlaceholder","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","conferenceCallEquipped","afterHideMergeConfirm","afterConfirmMerge","afterOnMerge","children","Component","defaultProps","undefined","calleeType","calleeTypes","unknown","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwEMA,iB;;;;;AAIJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,QAAMC,MAAM,GAAGD,KAAK,CAACE,gBAAN,CAAuB,MAAKF,KAA5B,CAAf;;AAFiB,gCAGsB,MAAKG,kBAAL,CACrC,MAAKH,KADgC,EAErCC,MAFqC,CAHtB;AAAA,QAGTG,aAHS,yBAGTA,aAHS;AAAA,QAGMC,WAHN,yBAGMA,WAHN;;AAOjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,oBAAoB,EAAE,CADX;AAEXC,MAAAA,SAAS,EAAE,IAFA;AAGXP,MAAAA,MAAM,EAANA,MAHW;AAIXG,MAAAA,aAAa,EAAbA,aAJW;AAKXC,MAAAA,WAAW,EAAXA;AALW,KAAb;AAOA,UAAKI,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BC,IAA5B,+BAA9B;;AACA,UAAKC,mBAAL,GAA2B,UAACC,MAAD,EAAY;AACrC,UAAMC,WAAW,GAAG,MAAKb,KAAL,CAAWa,WAAX,IAA0B,EAA9C;AACA,UAAIN,oBAAoB,GAAGM,WAAW,CAACC,SAAZ,CACzB,UAACC,KAAD;AAAA,eAAWA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACI,EAA/B;AAAA,OADyB,CAA3B;;AAGA,UAAIT,oBAAoB,GAAG,CAA3B,EAA8B;AAC5BA,QAAAA,oBAAoB,GAAG,CAAvB;AACD;;AACD,YAAKU,QAAL,CAAc;AACZV,QAAAA,oBAAoB,EAApBA,oBADY;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;;AAIA,UAAMU,OAAO,GAAGL,WAAW,CAACN,oBAAD,CAA3B;;AACA,UAAIW,OAAJ,EAAa;AACX,cAAKlB,KAAL,CAAWmB,2BAAX,CAAuC,MAAKnB,KAAL,CAAWoB,OAAX,CAAmBJ,EAA1D,EAA8DE,OAA9D;;AACA,cAAKlB,KAAL,CAAWqB,YAAX,CAAwBH,OAAxB,EAAiCI,IAAjC,CAAsC,UAACd,SAAD,EAAe;AACnD,gBAAKS,QAAL,CAAc;AAAET,YAAAA,SAAS,EAATA;AAAF,WAAd;AACD,SAFD;AAGD;AACF,KAnBD;;AAoBA,UAAKe,MAAL,GAAc;AAAA,aAAM,MAAKvB,KAAL,CAAWuB,MAAX,CAAkB,MAAKvB,KAAL,CAAWoB,OAAX,CAAmBJ,EAArC,CAAN;AAAA,KAAd;;AACA,UAAKQ,QAAL,GAAgB;AAAA,aAAM,MAAKxB,KAAL,CAAWwB,QAAX,CAAoB,MAAKxB,KAAL,CAAWoB,OAAX,CAAmBJ,EAAvC,CAAN;AAAA,KAAhB;;AACA,UAAKS,MAAL,GAAc;AAAA,aAAM,MAAKzB,KAAL,CAAWyB,MAAX,CAAkB,MAAKzB,KAAL,CAAWoB,OAAX,CAAmBJ,EAArC,CAAN;AAAA,KAAd;;AACA,UAAKU,QAAL,GAAgB;AAAA,aAAM,MAAK1B,KAAL,CAAW0B,QAAX,CAAoB,MAAK1B,KAAL,CAAWoB,OAAX,CAAmBJ,EAAvC,CAAN;AAAA,KAAhB;;AACA,UAAKW,QAAL,GAAgB;AAAA,aAAM,MAAK3B,KAAL,CAAW2B,QAAX,CAAoB,MAAK3B,KAAL,CAAWoB,OAAX,CAAmBJ,EAAvC,CAAN;AAAA,KAAhB;;AACA,UAAKY,YAAL,GAAoB;AAAA,aAAM,MAAK5B,KAAL,CAAW4B,YAAX,CAAwB,MAAK5B,KAAL,CAAWoB,OAAX,CAAmBJ,EAA3C,CAAN;AAAA,KAApB;;AACA,UAAKa,QAAL,GAAgB;AAAA,aACd,MAAK7B,KAAL,CAAW6B,QAAX,CAAoB,MAAK7B,KAAL,CAAWoB,OAAX,CAAmBJ,EAAvC,EAA2C,MAAKV,KAAL,CAAWL,MAAtD,CADc;AAAA,KAAhB;;AAEA,UAAK6B,cAAL,GAAsB,UAACC,KAAD;AAAA,aACpB,MAAK/B,KAAL,CAAWgC,QAAX,CAAoBD,KAApB,EAA2B,MAAK/B,KAAL,CAAWoB,OAAX,CAAmBJ,EAA9C,CADoB;AAAA,KAAtB;;AAEA,UAAKiB,MAAL,GAAc;AAAA,aAAM,MAAKjC,KAAL,CAAWiC,MAAX,CAAkB,MAAKjC,KAAL,CAAWoB,OAAX,CAAmBJ,EAArC,CAAN;AAAA,KAAd;;AACA,UAAKkB,KAAL,GAAa;AAAA,aAAM,MAAKlC,KAAL,CAAWkC,KAAX,CAAiB,MAAKlC,KAAL,CAAWoB,OAAX,CAAmBJ,EAApC,CAAN;AAAA,KAAb;;AACA,UAAKmB,OAAL,GAAe;AAAA,aAAM,MAAKnC,KAAL,CAAWmC,OAAX,CAAmB,MAAKnC,KAAL,CAAWoB,OAAX,CAAmBJ,EAAtC,CAAN;AAAA,KAAf;;AACA,UAAKoB,aAAL,GAAqB;AAAA,aAAM,MAAKpC,KAAL,CAAWoC,aAAX,CAAyB,MAAKpC,KAAL,CAAWoB,OAAX,CAAmBJ,EAA5C,CAAN;AAAA,KAArB;;AACA,UAAKqB,oBAAL,GAA4B;AAAA,aAC1B,MAAKrC,KAAL,CAAWqC,oBAAX,CAAgC,MAAKrC,KAAL,CAAWoB,OAAX,CAAmBJ,EAAnD,CAD0B;AAAA,KAA5B;;AAEA,UAAKsB,kBAAL,GAA0B;AAAA,aACxB,MAAKtC,KAAL,CAAWsC,kBAAX,CAA8B,MAAKtC,KAAL,CAAWoB,OAAX,CAAmBJ,EAAjD,CADwB;AAAA,KAA1B;;AAnDiB;AAqDlB;;;;wCAImB;AAClB,WAAKuB,QAAL,GAAgB,IAAhB;;AACA,WAAKC,0BAAL,CAAgC,KAAKxC,KAArC;;AACA,WAAKyC,4BAAL,CAAkC,KAAKzC,KAAvC;;AACA,WAAK0C,6BAAL;;AACA,UAAI3C,iBAAiB,CAAC4C,eAAlB,CAAkC,KAAK3C,KAAvC,CAAJ,EAAmD;AACjD;AACN;AACA;AACM,aAAKS,sBAAL;AACD;AACF;;;uCACkBmC,S,EAAW3C,M,EAAQ;AAAA,UAElC4C,YAFkC,GAQhCD,SARgC,CAElCC,YAFkC;AAAA,UAGlCC,QAHkC,GAQhCF,SARgC,CAGlCE,QAHkC;AAAA,UAIlCC,YAJkC,GAQhCH,SARgC,CAIlCG,YAJkC;AAAA,UAKlCC,wBALkC,GAQhCJ,SARgC,CAKlCI,wBALkC;AAAA,UAMlC5B,OANkC,GAQhCwB,SARgC,CAMlCxB,OANkC;AAAA,UAOlC6B,iBAPkC,GAQhCL,SARgC,CAOlCK,iBAPkC,EASpC;AACA;;AACA,UAAMC,qBAAqB,GACzB,CAACJ,QAAD,IAAa,CAAC1B,OAAO,CAAC+B,SAAtB,IAAmCJ,YADrC;AAEA,UAAI3C,aAAa,GAAG8C,qBAApB;AACA,UAAI7C,WAAW,GAAG6C,qBAAlB;;AACA,UACEjD,MAAM,KAAKmD,4BAAgBC,SAA3B,KACC,CAACR,YAAD,IAAiBA,YAAY,CAACS,MAAb,KAAwBC,0BAAcC,QADxD,CADF,EAGE;AACApD,QAAAA,aAAa,GAAG,IAAhB;AACD;;AACD,UAAI6C,iBAAiB,IAAIH,QAArB,IAAiCE,wBAArC,EAA+D;AAC7D5C,QAAAA,aAAa,GAAG,IAAhB;AACAC,QAAAA,WAAW,GAAG,IAAd;AACD;;AACD,aAAO;AAAED,QAAAA,aAAa,EAAbA,aAAF;AAAiBC,QAAAA,WAAW,EAAXA;AAAjB,OAAP;AACD;;;;;;;;;qBAEK,KAAKkC,Q;;;;;;uBACD,kBAAM,IAAN,C;;;AACN,oBAAI,KAAKA,QAAT,EAAmB;AACjB,uBAAKtB,QAAL,CAAc;AACZhB,oBAAAA,MAAM,EAAEmD,4BAAgBK;AADZ,mBAAd;AAGD;;AACD,oBAAI,KAAKzD,KAAL,CAAW0D,gBAAf,EAAiC;AAC/B,uBAAK1D,KAAL,CAAW0D,gBAAX;AACD;;;;;;;;;;;;;;;;;;8BAGKC,S,EAAWf,S,EAAW;AAC9B,UAAIA,SAAS,CAACgB,WAAd,EAA2B;AACzB,eAAOR,4BAAgBS,cAAvB;AACD;;AACD,aAAO,KAAK7D,KAAL,CAAWE,gBAAX,CAA4B0C,SAA5B,CAAP;AACD;;;qDACgCA,S,EAAWkB,S,EAAW;AACrD,WAAKpB,6BAAL,CAAmCE,SAAnC,EAA8CkB,SAA9C;;AACA,UAAI7D,MAAM,GAAG,KAAKK,KAAL,CAAWL,MAAxB;;AACA,UAAI2C,SAAS,CAACxB,OAAV,CAAkBJ,EAAlB,KAAyB,KAAKhB,KAAL,CAAWoB,OAAX,CAAmBJ,EAAhD,EAAoD;AAClDf,QAAAA,MAAM,GAAG,KAAK8D,SAAL,CAAe,KAAK/D,KAApB,EAA2B4C,SAA3B,CAAT;AACA,aAAK3B,QAAL,CAAc;AACZhB,UAAAA,MAAM,EAANA;AADY,SAAd;;AAGA,YAAIA,MAAM,KAAKmD,4BAAgBK,UAA/B,EAA2C;AACzC,eAAKjB,0BAAL,CAAgCI,SAAhC;AACD;AACF,OARD,MAQO,IACL3C,MAAM,KAAKmD,4BAAgBC,SAA3B,IACAtD,iBAAiB,CAAC4C,eAAlB,CAAkC,KAAK3C,KAAvC,MAAkD,KADlD,IAEAD,iBAAiB,CAAC4C,eAAlB,CAAkCC,SAAlC,MAAiD,IAH5C,EAIL;AACA,aAAKnC,sBAAL;AACD,OANM,MAMA,IACLR,MAAM,KAAKmD,4BAAgBS,cAA3B,IACA,KAAK7D,KAAL,CAAWgE,qBAAX,KAAqCpB,SAAS,CAACoB,qBAF1C,EAGL;AACA,aAAKvB,4BAAL,CAAkCG,SAAlC;AACD;;AACD,WAAKqB,6BAAL,CAAmCrB,SAAnC,EAA8C3C,MAA9C;AACD;;;kDAC6B2C,S,EAAW3C,M,EAAQ;AAAA,mCACR,KAAKE,kBAAL,CACrCyC,SADqC,EAErC3C,MAFqC,CADQ;AAAA,UACvCG,aADuC,0BACvCA,aADuC;AAAA,UACxBC,WADwB,0BACxBA,WADwB;;AAK/C,WAAKY,QAAL,CAAc;AACZb,QAAAA,aAAa,EAAbA,aADY;AAEZC,QAAAA,WAAW,EAAXA;AAFY,OAAd;AAID;;;2CACsB;AACrB,WAAKkC,QAAL,GAAgB,KAAhB;AACD;;;+CAC0BvC,K,EAAO;AAAA;;AAChC,UAAIkB,OAAO,GAAGlB,KAAK,CAACoB,OAAN,CAAc8C,YAA5B;AACA,UAAI3D,oBAAoB,GAAG,CAA3B;;AACA,UAAI,CAACW,OAAL,EAAc;AACZA,QAAAA,OAAO,GAAGlB,KAAK,CAACa,WAAN,IAAqBb,KAAK,CAACa,WAAN,CAAkB,CAAlB,CAA/B;AACD,OAFD,MAEO;AACLN,QAAAA,oBAAoB,GAAGP,KAAK,CAACa,WAAN,CAAkBC,SAAlB,CACrB,UAACC,KAAD;AAAA,iBAAWA,KAAK,CAACC,EAAN,KAAaE,OAAO,CAACF,EAAhC;AAAA,SADqB,CAAvB;AAGD;;AACD,WAAKC,QAAL,CAAc;AACZV,QAAAA,oBAAoB,EAApBA,oBADY;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;;AAIA,UAAIU,OAAJ,EAAa;AACXlB,QAAAA,KAAK,CAACqB,YAAN,CAAmBH,OAAnB,EAA4BI,IAA5B,CAAiC,UAACd,SAAD,EAAe;AAC9C,cAAI,CAAC,MAAI,CAAC+B,QAAV,EAAoB;AAClB;AACD;;AACD,UAAA,MAAI,CAACtB,QAAL,CAAc;AAAET,YAAAA,SAAS,EAATA;AAAF,WAAd;AACD,SALD;AAMD;AACF;;;iDAC4BR,K,EAAO;AAClC,UACE,KAAKM,KAAL,CAAWL,MAAX,KAAsBmD,4BAAgBS,cAAtC,IACA7D,KAAK,CAACmE,cAFR,EAGE;AACAnE,QAAAA,KAAK,CAACmE,cAAN,CAAqBnE,KAAK,CAACoE,gBAA3B;AACD;AACF;;;oDAIC;AAAA,UAFAxB,SAEA,uEAFY,KAAK5C,KAEjB;AAAA,UADA8D,SACA,uEADY,KAAKxD,KACjB;;AACA,UACEwD,SAAS,CAAC7D,MAAV,KAAqBmD,4BAAgBC,SAArC,IACAT,SAAS,CAACC,YAFZ,EAGE;AACAD,QAAAA,SAAS,CAACyB,aAAV,CAAwB;AAAEC,UAAAA,WAAW,EAAE1B,SAAS,CAACxB,OAAV,CAAkBJ;AAAjC,SAAxB;AACD;AACF;;;6BACQ;AAAA,wBACgC,KAAKhB,KADrC;AAAA,UACCoB,OADD,eACCA,OADD;AAAA,UACUmD,iBADV,eACUA,iBADV;;AAEP,UAAI,CAACnD,OAAO,CAACJ,EAAb,EAAiB;AACf,eAAO,IAAP;AACD;;AACD,UAAIwD,gBAAJ;;AACA,UACEpD,OAAO,CAACqD,SAAR,KAAsBC,2BAAeC,OAArC,IACAvD,OAAO,CAACwD,IAAR,KAAiB,WAFnB,EAGE;AACAJ,QAAAA,gBAAgB,GAAGK,iBAAKC,SAAL,CAAe,WAAf,EAA4B,KAAK9E,KAAL,CAAW+E,aAAvC,CAAnB;AACD;;AACD,UAAI,CAACP,gBAAL,EAAuB;AACrBA,QAAAA,gBAAgB,GAAGK,iBAAKC,SAAL,CAAe,SAAf,EAA0B,KAAK9E,KAAL,CAAW+E,aAArC,CAAnB;AACD;;AACD,UAAMC,eAAe,GAAG,KAAKhF,KAAL,CAAWgF,eAAX,GACpB,KAAKhF,KAAL,CAAWgF,eADS,GAEpBH,iBAAKC,SAAL,CAAe,aAAf,EAA8B,KAAK9E,KAAL,CAAW+E,aAAzC,CAFJ;AAGA,0BACE,gCAAC,yBAAD;AACE,QAAA,aAAa,EAAE,KAAK/E,KAAL,CAAW+E,aAD5B;AAEE,QAAA,WAAW,EAAE,KAAK/E,KAAL,CAAWiF,WAF1B;AAGE,QAAA,WAAW,EAAE,KAAKjF,KAAL,CAAWkF,WAH1B;AAIE,QAAA,SAAS,EAAE9D,OAAO,CAACJ,EAJrB;AAKE,QAAA,UAAU,EAAEI,OAAO,CAAC+D,UALtB;AAME,QAAA,SAAS,EAAE/D,OAAO,CAACgE,SANrB;AAOE,QAAA,QAAQ,EAAEhE,OAAO,CAACiE,QAPpB;AAQE,QAAA,QAAQ,EAAEjE,OAAO,CAACkE,QARpB;AASE,QAAA,YAAY,EAAElE,OAAO,CAACmE,YATxB;AAUE,QAAA,mBAAmB,EAAE,CAAC,CAACnE,OAAO,CAACoE,qBAVjC;AAWE,QAAA,YAAY,EAAEpE,OAAO,CAACqE,YAXxB;AAYE,QAAA,cAAc,EAAE,KAAKzF,KAAL,CAAW0F,cAZ7B;AAaE,QAAA,eAAe,EAAEV,eAbnB;AAcE,QAAA,iBAAiB,EAAE,KAAKhF,KAAL,CAAW2F,iBAdhC;AAeE,QAAA,MAAM,EAAE,KAAKpE,MAff;AAgBE,QAAA,QAAQ,EAAE,KAAKC,QAhBjB;AAiBE,QAAA,MAAM,EAAE,KAAKC,MAjBf;AAkBE,QAAA,QAAQ,EAAE,KAAKC,QAlBjB;AAmBE,QAAA,QAAQ,EAAE,KAAKC,QAnBjB;AAoBE,QAAA,YAAY,EAAE,KAAKC,YApBrB;AAqBE,QAAA,cAAc,EAAE,KAAKE,cArBvB;AAsBE,QAAA,QAAQ,EAAE,KAAKD,QAtBjB;AAuBE,QAAA,KAAK,EAAE,KAAKK,KAvBd;AAwBE,QAAA,OAAO,EAAE,KAAKC,OAxBhB;AAyBE,QAAA,aAAa,EAAE,KAAKC,aAzBtB;AA0BE,QAAA,MAAM,EAAE,KAAKpC,KAAL,CAAW4F,MA1BrB;AA2BE,QAAA,UAAU,EAAE,KAAK5F,KAAL,CAAW6F,UA3BzB;AA4BE,QAAA,kBAAkB,EAAE,KAAKvD,kBA5B3B;AA6BE,QAAA,MAAM,EAAE,KAAKL,MA7Bf;AA8BE,QAAA,WAAW,EAAE,KAAKjC,KAAL,CAAW8F,WA9B1B;AA+BE,QAAA,QAAQ,EAAE,KAAK9F,KAAL,CAAW+F,QA/BvB;AAgCE,QAAA,WAAW,EAAE,KAAK/F,KAAL,CAAWa,WAhC1B;AAiCE,QAAA,YAAY,EAAE2D,gBAjChB;AAkCE,QAAA,iBAAiB,EAAED,iBAlCrB;AAmCE,QAAA,aAAa,EAAEA,iBAAiB,GAAGnD,OAAO,CAAC4E,aAAX,GAA2B,IAnC7D;AAoCE,QAAA,QAAQ,EAAE,KAAKhG,KAAL,CAAWiG,QApCvB;AAqCE,QAAA,WAAW,EAAE,KAAKjG,KAAL,CAAWkG,WArC1B;AAsCE,QAAA,oBAAoB,EAAE,KAAK5F,KAAL,CAAWC,oBAtCnC;AAuCE,QAAA,mBAAmB,EAAE,KAAKI,mBAvC5B;AAwCE,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWE,SAxCxB;AAyCE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWmG,KAzCpB;AA0CE,QAAA,6BAA6B,EAAE,KAAKnG,KAAL,CAAWoG,6BA1C5C;AA2CE,QAAA,WAAW,EAAE,KAAKpG,KAAL,CAAWqG,WA3C1B;AA4CE,QAAA,iBAAiB,EAAE,KAAKrG,KAAL,CAAWsG,iBA5ChC;AA6CE,QAAA,uBAAuB,EAAE,KAAKtG,KAAL,CAAWuG,uBA7CtC;AA8CE,QAAA,MAAM,EAAE,KAAKjG,KAAL,CAAWL,MA9CrB;AA+CE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAW4D,WA/C1B;AAgDE,QAAA,SAAS,EAAExC,OAAO,CAACqD,SAhDrB;AAiDE,QAAA,WAAW,EAAE,KAAKnE,KAAL,CAAWD,WAjD1B;AAkDE,QAAA,aAAa,EAAE,KAAKC,KAAL,CAAWF,aAlD5B;AAmDE,QAAA,sBAAsB,EAAE,KAAKJ,KAAL,CAAWwG,sBAnDrC;AAoDE,QAAA,iBAAiB,EAAE,KAAKxG,KAAL,CAAWiD,iBApDhC;AAqDE,QAAA,qBAAqB,EAAE,KAAKjD,KAAL,CAAWgE,qBArDpC;AAsDE,QAAA,YAAY,EAAE,KAAKhE,KAAL,CAAW6C,YAtD3B;AAuDE,QAAA,YAAY,EAAE,KAAK7C,KAAL,CAAWqB,YAvD3B;AAwDE,QAAA,oBAAoB,EAAE,KAAKgB,oBAxD7B;AAyDE,QAAA,qBAAqB,EAAE,KAAKrC,KAAL,CAAWyG,qBAzDpC;AA0DE,QAAA,iBAAiB,EAAE,KAAKzG,KAAL,CAAW0G,iBA1DhC;AA2DE,QAAA,YAAY,EAAE,KAAK1G,KAAL,CAAW2G;AA3D3B,SA6DG,KAAK3G,KAAL,CAAW4G,QA7Dd,CADF;AAiED;;;0CAhOwC;AAAA,UAAhB/D,YAAgB,QAAhBA,YAAgB;AACvC,aAAO,CAAC,EAAEA,YAAY,IAAIA,YAAY,CAACS,MAAb,KAAwBC,0BAAcC,QAAxD,CAAR;AACD;;;;EA5D6BqD,gB;;AA4RhC9G,iBAAiB,CAAC+G,YAAlB,GAAiC;AAC/BF,EAAAA,QAAQ,EAAEG,SADqB;AAE/BrB,EAAAA,cAAc,EAAE,KAFe;AAG/BV,EAAAA,eAAe,EAAE,IAHc;AAI/BW,EAAAA,iBAAiB,EAAE,IAJY;AAK/BU,EAAAA,WAAW,EAAEU,SALkB;AAM/BT,EAAAA,iBAAiB,EAAES,SANY;AAO/BR,EAAAA,uBAAuB,EAAEQ,SAPM;AAQ/B7E,EAAAA,KAAK,EAAE6E,SARwB;AAS/B5E,EAAAA,OAAO,EAAE4E,SATsB;AAU/B3E,EAAAA,aAAa,EAAE2E,SAVgB;AAW/BnD,EAAAA,WAAW,EAAE,KAXkB;AAY/B4C,EAAAA,sBAAsB,EAAE,KAZO;AAa/BvD,EAAAA,iBAAiB,EAAE,KAbY;AAc/Be,EAAAA,qBAAqB,EAAE+C,SAdQ;AAe/BlE,EAAAA,YAAY,EAAE;AAAEmE,IAAAA,UAAU,EAAEC,wBAAYC;AAA1B,GAfiB;AAgB/B7E,EAAAA,oBAAoB,EAAE,8BAAC8E,CAAD;AAAA,WAAOA,CAAP;AAAA,GAhBS;AAiB/BjH,EAAAA,gBAAgB,EAAE;AAAA,WAAMkD,4BAAgBK,UAAtB;AAAA,GAjBa;AAkB/BC,EAAAA,gBAAgB,EAAE,IAlBa;AAmB/B+C,EAAAA,qBAAqB,EAAE;AAAA,WAAM,IAAN;AAAA,GAnBQ;AAoB/BC,EAAAA,iBAAiB,EAAE;AAAA,WAAM,IAAN;AAAA,GApBY;AAqB/BC,EAAAA,YAAY,EAAE;AAAA,WAAM,IAAN;AAAA,GArBiB;AAsB/Bb,EAAAA,WAAW,EAAE,KAtBkB;AAuB/BvB,EAAAA,iBAAiB,EAAE,KAvBY;AAwB/BjC,EAAAA,kBAAkB,EAAE;AAAA,WAAM,IAAN;AAAA,GAxBW;AAyB/B4C,EAAAA,WAAW,EAAE,IAzBkB;AA0B/Ba,EAAAA,QAAQ,EAAE;AA1BqB,CAAjC;eA4BehG,iB","sourcesContent":["import React, { Component } from 'react';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport calleeTypes from '@ringcentral-integration/commons/enums/calleeTypes';\nimport { sleep } from '@ringcentral-integration/commons/lib/sleep';\nimport sessionStatus from '@ringcentral-integration/commons/modules/Webphone/sessionStatus';\n\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport i18n from './i18n';\n\ntype CallCtrlContainerProps = {\n  session: {\n    id?: string;\n    direction?: string;\n    startTime?: number;\n    isOnMute?: boolean;\n    isOnHold?: boolean;\n    isOnFlip?: boolean;\n    recordStatus?: string;\n    to?: string;\n    from?: string;\n    contactMatch?: object;\n    warmTransferSessionId?: string;\n    callStatus?: string;\n    isOnTransfer?: boolean;\n    callQueueName?: string;\n  };\n  currentLocale: string;\n  onMute: (...args: any[]) => any;\n  onUnmute: (...args: any[]) => any;\n  onHold: (...args: any[]) => any;\n  onUnhold: (...args: any[]) => any;\n  onRecord: (...args: any[]) => any;\n  onStopRecord: (...args: any[]) => any;\n  onHangup: (...args: any[]) => any;\n  sendDTMF: (...args: any[]) => any;\n  formatPhone: (...args: any[]) => any;\n  onAdd?: (...args: any[]) => any;\n  onMerge?: (...args: any[]) => any;\n  onBeforeMerge?: (...args: any[]) => any;\n  onFlip: (...args: any[]) => any;\n  onPark: (...args: any[]) => any;\n  onTransfer: (...args: any[]) => any;\n  nameMatches: any[];\n  areaCode: string;\n  countryCode: string;\n  getAvatarUrl: (...args: any[]) => any;\n  updateSessionMatchedContact: (...args: any[]) => any;\n  showBackButton?: boolean;\n  backButtonLabel?: string;\n  onBackButtonClick?: (...args: any[]) => any;\n  brand: string;\n  showContactDisplayPlaceholder: boolean;\n  sourceIcons?: object;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  showSpinner?: boolean;\n  conferenceCallParties?: any[];\n  conferenceCallEquipped?: boolean;\n  hasConferenceCall?: boolean;\n  lastCallInfo?: object;\n  gotoParticipantsCtrl?: (...args: any[]) => any;\n  getInitialLayout?: (...args: any[]) => any;\n  closeMergingPair?: (...args: any[]) => any;\n  afterHideMergeConfirm?: (...args: any[]) => any;\n  afterConfirmMerge?: (...args: any[]) => any;\n  afterOnMerge?: (...args: any[]) => any;\n  disableFlip?: boolean;\n  showCallQueueName?: boolean;\n  onCompleteTransfer?: (...args: any[]) => any;\n  phoneNumber?: string;\n  showPark?: boolean;\n};\ntype CallCtrlContainerState = {\n  layout: any;\n  mergeDisabled: any;\n  addDisabled: any;\n  selectedMatcherIndex: number;\n  avatarUrl: null | any;\n};\nclass CallCtrlContainer extends Component<\n  CallCtrlContainerProps,\n  CallCtrlContainerState\n> {\n  constructor(props) {\n    super(props);\n    const layout = props.getInitialLayout(this.props);\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(\n      this.props,\n      layout,\n    );\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      layout,\n      mergeDisabled,\n      addDisabled,\n    };\n    this.onLastMergingCallEnded = this.onLastMergingCallEnded.bind(this);\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        (match) => match.id === option.id,\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n    this.onMute = () => this.props.onMute(this.props.session.id);\n    this.onUnmute = () => this.props.onUnmute(this.props.session.id);\n    this.onHold = () => this.props.onHold(this.props.session.id);\n    this.onUnhold = () => this.props.onUnhold(this.props.session.id);\n    this.onRecord = () => this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () => this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id, this.state.layout);\n    this.onKeyPadChange = (value) =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onPark = () => this.props.onPark(this.props.session.id);\n    this.onAdd = () => this.props.onAdd(this.props.session.id);\n    this.onMerge = () => this.props.onMerge(this.props.session.id);\n    this.onBeforeMerge = () => this.props.onBeforeMerge(this.props.session.id);\n    this.gotoParticipantsCtrl = () =>\n      this.props.gotoParticipantsCtrl(this.props.session.id);\n    this.onCompleteTransfer = () =>\n      this.props.onCompleteTransfer(this.props.session.id);\n  }\n  static isLastCallEnded({ lastCallInfo }) {\n    return !!(lastCallInfo && lastCallInfo.status === sessionStatus.finished);\n  }\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n    this._updateCurrentConferenceCall(this.props);\n    this._updateMergingPairToSessionId();\n    if (CallCtrlContainer.isLastCallEnded(this.props)) {\n      /**\n       * if the last has already been terminated after rendering, need to trigger the callback at the point\n       */\n      this.onLastMergingCallEnded();\n    }\n  }\n  disableMergeAndAdd(nextProps, layout) {\n    const {\n      lastCallInfo,\n      isWebRTC,\n      disableLinks,\n      isConferenceCallOverload,\n      session,\n      hasConferenceCall,\n    } = nextProps;\n    // const isInboundCall = session.direction === callDirections.inbound;\n    // const isMergeAndAddDisabled = !isWebRTC || isInboundCall || !session.partyData;\n    const isMergeAndAddDisabled =\n      !isWebRTC || !session.partyData || disableLinks;\n    let mergeDisabled = isMergeAndAddDisabled;\n    let addDisabled = isMergeAndAddDisabled;\n    if (\n      layout === callCtrlLayouts.mergeCtrl &&\n      (!lastCallInfo || lastCallInfo.status === sessionStatus.finished)\n    ) {\n      mergeDisabled = true;\n    }\n    if (hasConferenceCall && isWebRTC && isConferenceCallOverload) {\n      mergeDisabled = true;\n      addDisabled = true;\n    }\n    return { mergeDisabled, addDisabled };\n  }\n  async onLastMergingCallEnded() {\n    if (this._mounted) {\n      await sleep(2000);\n      if (this._mounted) {\n        this.setState({\n          layout: callCtrlLayouts.normalCtrl,\n        });\n      }\n      if (this.props.closeMergingPair) {\n        this.props.closeMergingPair();\n      }\n    }\n  }\n  getLayout(lastProps, nextProps) {\n    if (nextProps.showSpinner) {\n      return callCtrlLayouts.conferenceCtrl;\n    }\n    return this.props.getInitialLayout(nextProps);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n    this._updateMergingPairToSessionId(nextProps, nextState);\n    let layout = this.state.layout;\n    if (nextProps.session.id !== this.props.session.id) {\n      layout = this.getLayout(this.props, nextProps);\n      this.setState({\n        layout,\n      });\n      if (layout === callCtrlLayouts.normalCtrl) {\n        this._updateAvatarAndMatchIndex(nextProps);\n      }\n    } else if (\n      layout === callCtrlLayouts.mergeCtrl &&\n      CallCtrlContainer.isLastCallEnded(this.props) === false &&\n      CallCtrlContainer.isLastCallEnded(nextProps) === true\n    ) {\n      this.onLastMergingCallEnded();\n    } else if (\n      layout === callCtrlLayouts.conferenceCtrl &&\n      this.props.conferenceCallParties !== nextProps.conferenceCallParties\n    ) {\n      this._updateCurrentConferenceCall(nextProps);\n    }\n    this._updateMergeAddButtonDisabled(nextProps, layout);\n  }\n  _updateMergeAddButtonDisabled(nextProps, layout) {\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(\n      nextProps,\n      layout,\n    );\n    this.setState({\n      mergeDisabled,\n      addDisabled,\n    });\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(\n        (match) => match.id === contact.id,\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n  _updateCurrentConferenceCall(props) {\n    if (\n      this.state.layout === callCtrlLayouts.conferenceCtrl &&\n      props.loadConference\n    ) {\n      props.loadConference(props.conferenceCallId);\n    }\n  }\n  _updateMergingPairToSessionId(\n    nextProps = this.props,\n    nextState = this.state,\n  ) {\n    if (\n      nextState.layout === callCtrlLayouts.mergeCtrl &&\n      nextProps.lastCallInfo\n    ) {\n      nextProps.setMergeParty({ toSessionId: nextProps.session.id });\n    }\n  }\n  render() {\n    const { session, showCallQueueName } = this.props;\n    if (!session.id) {\n      return null;\n    }\n    let fallbackUserName;\n    if (\n      session.direction === callDirections.inbound &&\n      session.from === 'anonymous'\n    ) {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={this.props.phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnTransfer={session.isOnTransfer}\n        isOnWaitingTransfer={!!session.warmTransferSessionId}\n        recordStatus={session.recordStatus}\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.onAdd}\n        onMerge={this.onMerge}\n        onBeforeMerge={this.onBeforeMerge}\n        onFlip={this.props.onFlip}\n        onTransfer={this.props.onTransfer}\n        onCompleteTransfer={this.onCompleteTransfer}\n        onPark={this.onPark}\n        disableFlip={this.props.disableFlip}\n        showPark={this.props.showPark}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        showCallQueueName={showCallQueueName}\n        callQueueName={showCallQueueName ? session.callQueueName : null}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        sourceIcons={this.props.sourceIcons}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n        layout={this.state.layout}\n        showSpinner={this.props.showSpinner}\n        direction={session.direction}\n        addDisabled={this.state.addDisabled}\n        mergeDisabled={this.state.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        gotoParticipantsCtrl={this.gotoParticipantsCtrl}\n        afterHideMergeConfirm={this.props.afterHideMergeConfirm}\n        afterConfirmMerge={this.props.afterConfirmMerge}\n        afterOnMerge={this.props.afterOnMerge}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\nCallCtrlContainer.defaultProps = {\n  children: undefined,\n  showBackButton: false,\n  backButtonLabel: null,\n  onBackButtonClick: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: { calleeType: calleeTypes.unknown },\n  gotoParticipantsCtrl: (i) => i,\n  getInitialLayout: () => callCtrlLayouts.normalCtrl,\n  closeMergingPair: null,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n  disableFlip: false,\n  showCallQueueName: false,\n  onCompleteTransfer: () => null,\n  phoneNumber: null,\n  showPark: false,\n};\nexport default CallCtrlContainer;\n"],"file":"CallCtrlContainer.js"}