{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_propTypes","_reactRedux","_withPhone","_GlipChatPanel","e","__esModule","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","getAtRender","_ref","glipGroups","glipPersons","onViewPersonProfile","onViewGroup","AtRender","_ref2","id","type","name","group","allGroups","find","g","person","personsMap","concat","firstName","lastName","onClickAtLink","preventDefault","createElement","href","onClick","propTypes","PropTypes","string","isRequired","mapToProps","_","_ref3","params","_ref3$phone","phone","glipPosts","groupId","currentGroup","posts","currentGroupPosts","textValue","postInputs","text","mapToFunctions","_ref4","_ref4$phone","dateTimeFormat","_ref4$dateTimeFormatt","dateTimeFormatter","time","formatDateTime","utcTimestamp","_ref4$mobile","mobile","loadGroup","updateCurrentGroupId","loadNextPage","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","currentGroupId","stop","createPost","_callee2","_callee2$","_context2","create","updateText","mentions","updatePostInput","uploadFile","fileName","rawFile","sendFile","atRender","viewProfile","personId","GlipChatPage","withPhone","connect","GlipChatPanel","_default","exports"],"sources":["containers/GlipChat/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport withPhone from '@ringcentral-integration/widgets/lib/withPhone';\n\nimport GlipChatPanel from '../../components/GlipChatPanel';\n\nfunction getAtRender({\n  glipGroups,\n  glipPersons,\n  onViewPersonProfile,\n  onViewGroup,\n}) {\n  const AtRender = ({ id, type }) => {\n    let name = id;\n    if (type === 'Team') {\n      const group = glipGroups.allGroups.find((g) => g.id === id);\n      name = group && group.name;\n    } else {\n      const person = glipPersons.personsMap[id];\n      name =\n        (person &&\n          `${person.firstName}${\n            person.lastName ? ` ${person.lastName}` : ''\n          }`) ||\n        id;\n    }\n    const onClickAtLink = (e) => {\n      e.preventDefault();\n      if (type === 'Person') {\n        onViewPersonProfile(id);\n      } else if (type === 'Team') {\n        onViewGroup(id);\n      }\n    };\n    return (\n      <a href={`#${id}`} onClick={onClickAtLink}>\n        @{name}\n      </a>\n    );\n  };\n  AtRender.propTypes = {\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  };\n  return AtRender;\n}\n\nfunction mapToProps(_, { params, phone: { glipGroups, glipPosts } }) {\n  return {\n    groupId: params.groupId,\n    group: glipGroups.currentGroup,\n    posts: glipGroups.currentGroupPosts,\n    textValue:\n      glipPosts.postInputs[params.groupId] &&\n      glipPosts.postInputs[params.groupId].text,\n  };\n}\n\nfunction mapToFunctions(\n  _,\n  {\n    phone: { glipGroups, glipPosts, glipPersons, dateTimeFormat },\n    dateTimeFormatter = (time) =>\n      dateTimeFormat.formatDateTime({ utcTimestamp: time }),\n    onViewPersonProfile,\n    onViewGroup,\n    mobile = true,\n  },\n) {\n  return {\n    mobile,\n    loadGroup(groupId) {\n      glipGroups.updateCurrentGroupId(groupId);\n    },\n    async loadNextPage() {\n      await glipPosts.loadNextPage(glipGroups.currentGroupId);\n    },\n    async createPost() {\n      await glipPosts.create({\n        groupId: glipGroups.currentGroupId,\n      });\n    },\n    updateText(text, mentions) {\n      glipPosts.updatePostInput({\n        text,\n        groupId: glipGroups.currentGroupId,\n        mentions,\n      });\n    },\n    uploadFile: (fileName, rawFile) =>\n      glipPosts.sendFile({\n        fileName,\n        rawFile,\n        groupId: glipGroups.currentGroupId,\n      }),\n    atRender: getAtRender({\n      glipGroups,\n      glipPersons,\n      onViewPersonProfile,\n      onViewGroup,\n    }),\n    viewProfile(personId) {\n      if (personId) {\n        onViewPersonProfile(personId);\n      }\n    },\n    dateTimeFormatter,\n  };\n}\n\nconst GlipChatPage = withPhone(\n  connect(mapToProps, mapToFunctions)(GlipChatPanel),\n);\n\nexport default GlipChatPage;\n"],"mappings":"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","ignoreList":[]}