{"version":3,"sources":["containers/ThemeContainer/ThemeContainer.tsx"],"names":["GlobalVariablesCss","variable","css","rcBlue","bigRed","darkRed","tomato","orange","leaf","dark","night","ash","coin","smoke","silver","egg","snow","rcOrange","darkergray","darkgray","gray","bggray","lightergray","lightgray","greyLight","missed","active","primaryColor","primaryColorHighlight","primaryColorHighlightSolid","linePanelBackgroundColor","callBtnColor","extensionBackgroundColor","smsBubbleBackgroundColor","brandFontColor","brandFontColorHighlight","jupiterBackgroundColor","c2dArrowColor","addMeetingBtnColor","addMeetingBtnTextColor","headerLogoWidth","headerLogoHeight","GlobalVariablesStyles","createGlobalStyle","ThemeProvider","children","theme","ThemeContainer","phone","themeUI"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAMA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,kBAAmE,GAAG,SAAtEA,kBAAsE,OAEtE;AAAA,MADJC,QACI,QADJA,QACI;AACJ,aAAOC,SAAP,qBAEiBD,QAAQ,CAACE,MAF1B,EAGgBF,QAAQ,CAACG,MAHzB,EAIiBH,QAAQ,CAACI,OAJ1B,EAKgBJ,QAAQ,CAACK,MALzB,EAMgBL,QAAQ,CAACM,MANzB,EAOcN,QAAQ,CAACO,IAPvB,EAQcP,QAAQ,CAACQ,IARvB,EASeR,QAAQ,CAACS,KATxB,EAUaT,QAAQ,CAACU,GAVtB,EAWcV,QAAQ,CAACW,IAXvB,EAYeX,QAAQ,CAACY,KAZxB,EAagBZ,QAAQ,CAACa,MAbzB,EAcab,QAAQ,CAACc,GAdtB,EAecd,QAAQ,CAACe,IAfvB,EAgBmBf,QAAQ,CAACgB,QAhB5B,EAiBoBhB,QAAQ,CAACiB,UAjB7B,EAkBkBjB,QAAQ,CAACkB,QAlB3B,EAmBclB,QAAQ,CAACmB,IAnBvB,EAoBgBnB,QAAQ,CAACoB,MApBzB,EAqBqBpB,QAAQ,CAACqB,WArB9B,EAsBmBrB,QAAQ,CAACsB,SAtB5B,EAuBoBtB,QAAQ,CAACuB,SAvB7B,EAwBgBvB,QAAQ,CAACwB,MAxBzB,EAyBgBxB,QAAQ,CAACyB,MAzBzB,EA0BuBzB,QAAQ,CAAC0B,YA1BhC,EA2BiC1B,QAAQ,CAAC2B,qBA3B1C,EA4BuC3B,QAAQ,CAAC4B,0BA5BhD,EA6BqC5B,QAAQ,CAAC6B,wBA7B9C,EA8BwB7B,QAAQ,CAAC8B,YA9BjC,EA+BoC9B,QAAQ,CAAC+B,wBA/B7C,EAgCqC/B,QAAQ,CAACgC,wBAhC9C,EAiC0BhC,QAAQ,CAACiC,cAjCnC,EAkCoCjC,QAAQ,CAACkC,uBAlC7C,EAmCkClC,QAAQ,CAACmC,sBAnC3C,EAoCM;AAAG;AApCT,IAqCyBnC,QAAQ,CAACoC,aArClC,EAsC+BpC,QAAQ,CAACqC,kBAtCxC,EAuCoCrC,QAAQ,CAACsC,sBAvC7C,EAwC2BtC,QAAQ,CAACuC,eAxCpC,EAyC4BvC,QAAQ,CAACwC,gBAzCrC;AA4CD,CA/CD;;AAiDA,IAAMC,qBAAqB,OAAGC,uBAAH,sBAEvB3C,kBAFuB,CAA3B;;AAIA,IAAM4C,aAAqD,GAAG,SAAxDA,aAAwD,QAIxD;AAAA,MAHJC,QAGI,SAHJA,QAGI;AAAA,MAFJC,KAEI,SAFJA,KAEI;AAAA,MADJ7C,QACI,SADJA,QACI;AACJ,sBACE,gCAAC,qBAAD;AAAiB,IAAA,KAAK,EAAE6C;AAAxB,kBACE,gCAAC,qBAAD;AAAuB,IAAA,QAAQ,EAAE7C;AAAjC,IADF,EAEG4C,QAFH,CADF;AAMD,CAXD;;AAaO,IAAME,cAAc,GAAG,iCAC5B,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,OAAjB;AAAA,CAD4B,EAE5BL,aAF4B,CAAvB","sourcesContent":["import {\n  createGlobalStyle,\n  css,\n  RcThemedStyled,\n  RcThemeProvider,\n} from '@ringcentral/juno';\nimport React, { FunctionComponent } from 'react';\n\nimport { connectModule } from '../../lib/phoneContext';\nimport { ThemeContainerProps } from './ThemeContainer.interface';\n\ntype GlobalVariablesStylesProps = Pick<ThemeContainerProps, 'variable'>;\n\nconst GlobalVariablesCss: RcThemedStyled<GlobalVariablesStylesProps, any> = ({\n  variable,\n}) => {\n  return css`\n    :root {\n      --rc-blue: ${variable.rcBlue};\n      --bigRed: ${variable.bigRed};\n      --darkRed: ${variable.darkRed};\n      --tomato: ${variable.tomato};\n      --orange: ${variable.orange};\n      --leaf: ${variable.leaf};\n      --dark: ${variable.dark};\n      --night: ${variable.night};\n      --ash: ${variable.ash};\n      --coin: ${variable.coin};\n      --smoke: ${variable.smoke};\n      --silver: ${variable.silver};\n      --egg: ${variable.egg};\n      --snow: ${variable.snow};\n      --rc-orange: ${variable.rcOrange};\n      --darkergray: ${variable.darkergray};\n      --darkgray: ${variable.darkgray};\n      --gray: ${variable.gray};\n      --bggray: ${variable.bggray};\n      --lightergray: ${variable.lightergray};\n      --lightgray: ${variable.lightgray};\n      --grey-light: ${variable.greyLight};\n      --missed: ${variable.missed};\n      --active: ${variable.active};\n      --primary-color: ${variable.primaryColor};\n      --primary-color-highlight: ${variable.primaryColorHighlight};\n      --primary-color-highlight-solid: ${variable.primaryColorHighlightSolid};\n      --line-panel-background-color: ${variable.linePanelBackgroundColor};\n      --call-btn-color: ${variable.callBtnColor};\n      --extension-background-color: ${variable.extensionBackgroundColor};\n      --sms-bubble-background-color: ${variable.smsBubbleBackgroundColor};\n      --brand-font-color: ${variable.brandFontColor};\n      --brand-font-color-highlight: ${variable.brandFontColorHighlight};\n      --jupiter-background-color: ${variable.jupiterBackgroundColor};\n      ${'' /** project related overwrite */}\n      --c2d-arrow-color: ${variable.c2dArrowColor};\n      --add-meeting-btn-color: ${variable.addMeetingBtnColor};\n      --add-meeting-btn-text-color: ${variable.addMeetingBtnTextColor};\n      --header-logo-width: ${variable.headerLogoWidth};\n      --header-logo-height: ${variable.headerLogoHeight};\n    }\n  `;\n};\n\nconst GlobalVariablesStyles = createGlobalStyle<\n  GlobalVariablesStylesProps\n>`${GlobalVariablesCss}`;\n\nconst ThemeProvider: FunctionComponent<ThemeContainerProps> = ({\n  children,\n  theme,\n  variable,\n}) => {\n  return (\n    <RcThemeProvider theme={theme}>\n      <GlobalVariablesStyles variable={variable} />\n      {children}\n    </RcThemeProvider>\n  );\n};\n\nexport const ThemeContainer = connectModule<any, ThemeContainerProps>(\n  (phone) => phone.themeUI,\n)(ThemeProvider);\n"],"file":"ThemeContainer.js"}