{"version":3,"sources":["containers/AppView/AppView.tsx"],"names":["AppViewPanel","children","server","enabled","onSetData","redirectUri","phone","couldNotAccess","auth","loggedIn","evAuth","agent","agentConfig","agentPermissions","currentPath","routerInteraction","allowLoginUpdates","goBack","styles","root","defaultProps","mapToFunctions","_","oAuth","environment","mapToProps","options","setData","AppView"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AAGA;;;;AAYA,IAAMA,YAA6C,GAAG,SAAhDA,YAAgD,OAOhD;AAAA;;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,KACI,QADJA,KACI;AACJ,MAAIC,cAAJ;;AACA,MACED,KAAK,CAACE,IAAN,CAAWC,QAAX,sBACAH,KAAK,CAACI,MADN,yEACA,cAAcC,KADd,iFACA,oBAAqBC,WADrB,0DACA,sBAAkCC,gBADlC,CADF,EAGE;AACA,QAAMC,WAAW,GAAGR,KAAK,CAACS,iBAAN,CAAwBD,WAA5C;;AACA,YAAQA,WAAR;AACE,WAAK,gBAAL;AACEP,QAAAA,cAAc,GACZ,CAACD,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,CAA+BC,gBAA/B,CAAgDG,iBADnD;AAEA;;AACF;AACE;AANJ;AAQD;;AACD,MAAIT,cAAJ,EAAoB;AAClBD,IAAAA,KAAK,CAACS,iBAAN,CAAwBE,MAAxB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEC,mBAAOC;AAAvB,KACGlB,QADH,eAEE,gCAAC,uBAAD;AACE,IAAA,MAAM,EAAEC,MADV;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,aAAa,EAAC;AALhB,IAFF,CADF;AAYD,CAtCD;;AAwCAL,YAAY,CAACoB,YAAb,GAA4B;AAC1BjB,EAAAA,OAAO,EAAE;AADiB,CAA5B;;AAIA,SAASkB,cAAT,CAAwBC,CAAxB,SAA8D;AAAA,0BAAjChB,KAAiC;AAAA,MAAxBiB,KAAwB,eAAxBA,KAAwB;AAAA,MAAjBC,WAAiB,eAAjBA,WAAiB;AAC5D,SAAO;AACLtB,IAAAA,MAAM,EAAEsB,WAAW,CAACtB,MADf;AAELC,IAAAA,OAAO,EAAEqB,WAAW,CAACrB,OAFhB;AAGLE,IAAAA,WAAW,EAAEkB,KAAK,CAAClB;AAHd,GAAP;AAKD;;AAED,SAASoB,UAAT,CAAoBH,CAApB,SAAmD;AAAA,MAAjBE,WAAiB,SAA1BlB,KAA0B,CAAjBkB,WAAiB;AACjD,SAAO;AACLpB,IAAAA,SAAS,EAAE,mBAACsB,OAAD,EAAkB;AAC3BF,MAAAA,WAAW,CAACG,OAAZ,CAAoBD,OAApB;AACD;AAHI,GAAP;AAKD;;AAEM,IAAME,OAAO,GAAG,2BACrB,yBAAQP,cAAR,EAAwBI,UAAxB,EAAoCzB,YAApC,CADqB,CAAhB","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport Environment from '@ringcentral-integration/widgets/components/Environment';\nimport withPhone from '@ringcentral-integration/widgets/lib/withPhone';\n\nimport { EvPhone } from '../../interfaces';\nimport styles from './styles.scss';\n\ninterface AppViewProps {\n  server: string;\n  redirectUri: string;\n  enabled: boolean;\n  clientId?: string;\n  clientSecret?: string;\n  onSetData: (options: any) => any;\n  phone: EvPhone;\n}\n\nconst AppViewPanel: FunctionComponent<AppViewProps> = ({\n  children,\n  server,\n  enabled,\n  onSetData,\n  redirectUri,\n  phone,\n}) => {\n  let couldNotAccess;\n  if (\n    phone.auth.loggedIn &&\n    phone.evAuth?.agent?.agentConfig?.agentPermissions\n  ) {\n    const currentPath = phone.routerInteraction.currentPath;\n    switch (currentPath) {\n      case '/sessionUpdate':\n        couldNotAccess =\n          !phone.evAuth.agent.agentConfig.agentPermissions.allowLoginUpdates;\n        break;\n      default:\n        break;\n    }\n  }\n  if (couldNotAccess) {\n    phone.routerInteraction.goBack();\n  }\n  return (\n    <div className={styles.root}>\n      {children}\n      <Environment\n        server={server}\n        enabled={enabled}\n        onSetData={onSetData}\n        redirectUri={redirectUri}\n        recordingHost=\"\"\n      />\n    </div>\n  );\n};\n\nAppViewPanel.defaultProps = {\n  enabled: false,\n};\n\nfunction mapToFunctions(_, { phone: { oAuth, environment } }) {\n  return {\n    server: environment.server,\n    enabled: environment.enabled,\n    redirectUri: oAuth.redirectUri,\n  };\n}\n\nfunction mapToProps(_, { phone: { environment } }) {\n  return {\n    onSetData: (options: any) => {\n      environment.setData(options);\n    },\n  };\n}\n\nexport const AppView = withPhone(\n  connect(mapToFunctions, mapToProps)(AppViewPanel),\n);\n"],"file":"AppView.js"}