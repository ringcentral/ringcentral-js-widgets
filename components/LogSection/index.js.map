{"version":3,"sources":["components/LogSection/index.tsx"],"names":["EditSection","children","scrollerRef","rest","styles","editSection","propTypes","PropTypes","object","func","defaultProps","undefined","SaveButton","isSaving","onClick","overlapped","buttonPanel","primaryButton","disabled","bool","string","LogSection","props","state","mainCtrlOverlapped","window","addEventListener","checkOverlap","removeEventListener","mainCtrl","scrollHeight","clientHeight","scrollTop","overlappedHeight","setState","renderEditLogSection","currentLocale","onSaveCallLog","onUpdateCallLog","currentLog","additionalInfo","onCallLogSaved","showSaveLogBtn","renderSaveLogButton","call","currentLogCall","i18n","getString","showSmallCallControl","currentSessionId","telephonyStatus","result","status","isActive","clickable","extraButton","renderSmallCallContrl","formatPhone","onLogBasicInfoClick","console","log","isInnerMask","showSpinner","spinner","root","renderLogBasicInfo","el","getEditLogSection","genSaveLogButton","innerMask","Component","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { isRingingInboundCall } from '@ringcentral-integration/commons/lib/callLogHelpers';\n\nimport { Button } from '../Button';\nimport LogBasicInfo from '../LogBasicInfo';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst EditSection = ({ children, scrollerRef, ...rest }) => (\n  <div {...rest} ref={scrollerRef} className={classnames(styles.editSection)}>\n    {children}\n  </div>\n);\n\nEditSection.propTypes = {\n  children: PropTypes.object,\n  scrollerRef: PropTypes.func,\n};\n\nEditSection.defaultProps = {\n  children: null,\n  scrollerRef: undefined,\n};\n\nconst SaveButton = ({ isSaving, onClick, overlapped, children }) => (\n  <div\n    className={classnames(styles.buttonPanel, overlapped && styles.overlapped)}\n  >\n    <Button\n      className={classnames(styles.primaryButton, isSaving && styles.disabled)}\n      disabled={isSaving}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  </div>\n);\n\nSaveButton.propTypes = {\n  isSaving: PropTypes.bool,\n  onClick: PropTypes.func,\n  overlapped: PropTypes.bool,\n  children: PropTypes.string,\n};\n\nSaveButton.defaultProps = {\n  isSaving: false,\n  onClick() {},\n  overlapped: false,\n  children: null,\n};\n\nclass LogSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainCtrlOverlapped: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.checkOverlap, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.checkOverlap, false);\n  }\n\n  checkOverlap() {\n    if (!this.mainCtrl) {\n      return;\n    }\n    const { scrollHeight, clientHeight, scrollTop } = this.mainCtrl;\n    const overlappedHeight = scrollHeight - clientHeight - scrollTop;\n    const mainCtrlOverlapped = overlappedHeight > 1;\n    if (mainCtrlOverlapped !== this.state.mainCtrlOverlapped) {\n      this.setState({ mainCtrlOverlapped });\n    }\n  }\n\n  getEditLogSection() {\n    const {\n      renderEditLogSection,\n      currentLocale,\n      onSaveCallLog,\n      onUpdateCallLog,\n      currentLog,\n      additionalInfo,\n      onCallLogSaved,\n    } = this.props;\n    return renderEditLogSection({\n      currentLocale,\n      onSaveCallLog,\n      onUpdateCallLog,\n      currentLog,\n      additionalInfo,\n      onCallLogSaved,\n    });\n  }\n\n  genSaveLogButton() {\n    const {\n      showSaveLogBtn,\n      renderSaveLogButton,\n      currentLocale,\n      onSaveCallLog,\n      currentLog,\n    } = this.props;\n    const { call, currentLogCall } = currentLog;\n    if (!showSaveLogBtn) {\n      return null;\n    }\n    if (renderSaveLogButton) {\n      return renderSaveLogButton({\n        currentLocale,\n        onSaveCallLog,\n        currentLog,\n        overlapped: this.state.mainCtrlOverlapped,\n      });\n    }\n    return (\n      <SaveButton\n        isSaving={currentLogCall.isSaving}\n        onClick={() => onSaveCallLog(call)}\n        overlapped={this.state.mainCtrlOverlapped}\n      >\n        {i18n.getString('saveLog', currentLocale)}\n      </SaveButton>\n    );\n  }\n\n  renderLogBasicInfo() {\n    const { currentLog, showSmallCallControl } = this.props;\n    const { currentSessionId, call } = currentLog;\n    const { telephonyStatus, result } = call;\n    const status = telephonyStatus || result;\n    // if `result` is exist, call has been disconnect\n    const isActive = !result;\n    const clickable = isActive && !isRingingInboundCall(call);\n    let extraButton;\n    if (showSmallCallControl && isActive) {\n      extraButton = this.props.renderSmallCallContrl(status, currentSessionId);\n    }\n    return (\n      <LogBasicInfo\n        dataSign=\"leftSectionInfo\"\n        currentLog={this.props.currentLog}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        extraButton={extraButton}\n        clickable={clickable}\n        onClick={\n          clickable ? this.props.onLogBasicInfoClick : () => console.log('noop')\n        }\n      />\n    );\n  }\n\n  render() {\n    const {\n      currentLog,\n      isInnerMask,\n      // onCloseLogSection\n    } = this.props;\n    const { showSpinner } = currentLog;\n    if (showSpinner) {\n      return <SpinnerOverlay className={styles.spinner} />;\n    }\n    return (\n      <div className={styles.root}>\n        {this.renderLogBasicInfo()}\n        <EditSection\n          scrollerRef={(el) => {\n            this.mainCtrl = el;\n          }}\n          onScroll={() => this.checkOverlap()}\n        >\n          {this.getEditLogSection()}\n        </EditSection>\n        {this.genSaveLogButton()}\n        {isInnerMask ? <div className={styles.innerMask} /> : null}\n      </div>\n    );\n  }\n}\n\nLogSection.propTypes = {\n  currentLog: PropTypes.object,\n  additionalInfo: PropTypes.object,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func,\n  onUpdateCallLog: PropTypes.func,\n  onSaveCallLog: PropTypes.func,\n  renderEditLogSection: PropTypes.func,\n  renderSaveLogButton: PropTypes.func,\n  isInnerMask: PropTypes.bool,\n  onLogBasicInfoClick: PropTypes.func,\n  showSaveLogBtn: PropTypes.bool,\n  showSmallCallControl: PropTypes.bool,\n  renderSmallCallContrl: PropTypes.func,\n  onCallLogSaved: PropTypes.func,\n};\n\nLogSection.defaultProps = {\n  currentLog: {},\n  additionalInfo: undefined,\n  formatPhone: undefined,\n  onUpdateCallLog: undefined,\n  onSaveCallLog: undefined,\n  renderEditLogSection: undefined,\n  renderSaveLogButton: undefined,\n  isInnerMask: undefined,\n  onLogBasicInfoClick() {},\n  renderSmallCallContrl() {},\n  showSaveLogBtn: true,\n  showSmallCallControl: true,\n  onCallLogSaved: undefined,\n};\n\nexport default LogSection;\n"],"file":"index.js"}