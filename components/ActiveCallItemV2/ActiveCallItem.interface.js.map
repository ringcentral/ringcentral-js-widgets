{"version":3,"file":"ActiveCallItem.interface.js","names":[],"sources":["components/ActiveCallItemV2/ActiveCallItem.interface.ts"],"sourcesContent":["import type {\n  Session,\n  WebPhoneSession,\n} from '@ringcentral-integration/commons/modules/ActiveCallControl';\n\nimport type { ConfirmModalOptions } from '../../modules/ModalUI/ModalUI.interface';\n\nexport interface ModalContentProps {\n  currentLocale: string;\n  contactName: string;\n}\n\nexport interface WebphoneButtonsProps {\n  currentLocale: string;\n  session?: WebPhoneSession;\n  webphoneReject: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n  ) => any;\n  webphoneHangup: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n  ) => any;\n  webphoneResume: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n  ) => any;\n  webphoneHold: (webphoneSessionId: string, telephonySessionId: string) => any;\n  showMergeCall?: boolean;\n  showHold?: boolean;\n  disableMerge?: boolean;\n  onMergeCall?: (webphoneSessionId: string) => any;\n  webphoneAnswer: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n    isHoldAndAnswer?: boolean,\n  ) => any;\n  disableLinks?: boolean;\n  isOnHold: (session: object) => boolean;\n  telephonySessionId: string;\n  webphoneIgnore?: (telephonySessionId: string) => any;\n  showIgnoreBtn?: boolean;\n  showHoldAnswerBtn?: boolean;\n  useCallDetailV2?: boolean;\n  isConnecting?: boolean;\n}\n\nexport interface ActiveCallControlButtonsProps {\n  session?: object;\n  currentLocale: string;\n  disableLinks?: boolean;\n  ringoutHangup: (telephonySessionId: string) => any;\n  ringoutTransfer?: (telephonySessionId: string) => any;\n  ringing: boolean;\n  inbound: boolean;\n  telephonySessionId: string;\n  ringoutReject: (telephonySessionId: string) => any;\n  showRingoutCallControl: boolean;\n  showSwitchCall: boolean;\n  showTransferCall: boolean;\n  showHoldOnOtherDevice: boolean;\n  onClickSwitchBtn?: () => any;\n  webphoneResume?: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n  ) => any;\n  webphoneHold?: (webphoneSessionId: string, telephonySessionId: string) => any;\n  isConnecting?: boolean;\n  clickSwitchTrack?: () => any;\n  isWide?: boolean;\n}\n\ninterface Call {\n  direction: 'Inbound' | 'Outbound';\n  telephonyStatus?: string;\n  startTime: number;\n  offset?: number;\n  activityMatches: [];\n  fromMatches: any[];\n  toMatches: any[];\n  from: {\n    phoneNumber?: string;\n    extensionNumber?: string;\n    name?: string;\n  };\n  to?: {\n    phoneNumber?: string;\n    extensionNumber?: string;\n    name?: string;\n  };\n  webphoneSession?: WebPhoneSession;\n  telephonySessionId?: string;\n  telephonySession?: Session;\n}\n\nexport interface ActiveCallItemProps {\n  call: Call;\n  areaCode: string;\n  countryCode: string;\n  currentLocale: string;\n  disableLinks?: boolean;\n  isLogging?: boolean;\n  webphoneReject: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n  ) => any;\n  webphoneHangup: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n  ) => any;\n  webphoneResume: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n  ) => any;\n  webphoneToVoicemail: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n  ) => any;\n  webphoneHold: (webphoneSessionId: string, telephonySessionId: string) => any;\n  enableContactFallback?: boolean;\n  brand?: string;\n  showContactDisplayPlaceholder?: boolean;\n  sourceIcons?: object;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  renderContactName?: (call: Call) => string;\n  renderSubContactName?: (call: Call) => string;\n  renderExtraButton?: (call: Call) => any;\n  contactDisplayStyle?: string;\n  isOnConferenceCall?: boolean;\n  conferenceCallParties: any[];\n  onClick?: (...args: any[]) => any;\n  showAvatar?: boolean;\n  getAvatarUrl?: (...args: any[]) => any;\n  showMergeCall?: boolean;\n  showHold?: boolean;\n  disableMerge?: boolean;\n  onMergeCall?: (webphoneSessionId: string) => any;\n  showCallDetail?: boolean;\n  updateSessionMatchedContact?: (...args: any[]) => any;\n  webphoneAnswer: (\n    webphoneSessionId: string,\n    telephonySessionId: string,\n    isHoldAndAnswer?: boolean,\n  ) => any;\n  ringoutHangup: (telephonySessionId: string) => any;\n  ringoutTransfer: (telephonySessionId: string) => any;\n  showRingoutCallControl?: boolean;\n  ringoutReject: (telephonySessionId: string) => any;\n  showMultipleMatch?: boolean;\n  showSwitchCall?: boolean;\n  showTransferCall?: boolean;\n  showHoldOnOtherDevice?: boolean;\n  isOnHold?: (session: object) => boolean;\n  webphoneSwitchCall: (call: Call) => any;\n  webphoneIgnore: (telephonySessionId: string) => any;\n  modalConfirm: (props: ConfirmModalOptions, usePromise?: true) => any;\n  modalClose: (id: string) => any;\n  // new Juno call direction icon\n  newCallIcon: boolean;\n  showHoldAnswerBtn?: boolean;\n  useCallDetailV2?: boolean;\n  showIgnoreBtn?: boolean;\n  clickSwitchTrack?: () => any;\n  isWide?: boolean;\n  formatPhone?: (phoneNumber: string) => string;\n  warmTransferRole?: string;\n}\n\nexport interface ActiveCallItemState {\n  selected: number;\n  isLogging: boolean;\n  avatarUrl: string;\n  extraNum: number;\n}\n"],"mappings":""}