{"version":3,"sources":["components/CallBadge/index.tsx"],"names":["CallBadge","props","updatePositionOffset","x","y","setState","badgeOffsetX","badgeOffsetY","onClick","isRinging","_isRinging","session","toggleMinimized","goToCallCtrl","id","state","defaultOffsetX","defaultOffsetY","direction","callDirections","inbound","callStatus","sessionStatus","connecting","hidden","currentLocale","active","minimized","i18n","getString","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGqBA,S;;;;;AAInB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UASnBC,oBATmB,GASI,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC/B,YAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEH,CADF;AAEZI,QAAAA,YAAY,EAAEH;AAFF,OAAd;AAID,KAdkB;;AAAA,UAgBnBI,OAhBmB,GAgBT,YAAM;AACd,UAAMC,SAAS,GAAG,MAAKC,UAAL,EAAlB;;AADc,wBAEqC,MAAKT,KAF1C;AAAA,UAENU,OAFM,eAENA,OAFM;AAAA,UAEGC,eAFH,eAEGA,eAFH;AAAA,UAEoBC,YAFpB,eAEoBA,YAFpB;;AAGd,UAAIJ,SAAJ,EAAe;AACbG,QAAAA,eAAe,CAACD,OAAO,CAACG,EAAT,CAAf;AACA;AACD;;AACDD,MAAAA,YAAY,CAACF,OAAO,CAACG,EAAT,CAAZ;AACD,KAxBkB;;AAGjB,UAAKC,KAAL,GAAa;AACXT,MAAAA,YAAY,EAAEL,KAAK,CAACe,cAAN,IAAwB,CAD3B;AAEXT,MAAAA,YAAY,EAAEN,KAAK,CAACgB,cAAN,IAAwB;AAF3B,KAAb;AAHiB;AAOlB;;;;iCAmBY;AACX,UAAIR,SAAS,GAAG,KAAhB;AADW,UAEHE,OAFG,GAES,KAAKV,KAFd,CAEHU,OAFG;;AAGX,UACEA,OAAO,CAACO,SAAR,KAAsBC,2BAAeC,OAArC,IACAT,OAAO,CAACU,UAAR,KAAuBC,0BAAcC,UAFvC,EAGE;AACAd,QAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,aAAOA,SAAP;AACD;;;6BAEQ;AAAA,yBACoC,KAAKR,KADzC;AAAA,UACCU,OADD,gBACCA,OADD;AAAA,UACUa,MADV,gBACUA,MADV;AAAA,UACkBC,aADlB,gBACkBA,aADlB;AAAA,wBAEgC,KAAKV,KAFrC;AAAA,UAECT,YAFD,eAECA,YAFD;AAAA,UAEeC,YAFf,eAEeA,YAFf;AAGP,UAAMmB,MAAM,GAAG,CAAC,CAACf,OAAO,CAACG,EAAzB;;AACA,UAAI,CAACY,MAAL,EAAa;AACX,eAAO,IAAP;AACD;;AACD,UAAMjB,SAAS,GAAG,KAAKC,UAAL,EAAlB;;AACA,UAAID,SAAS,IAAI,CAACE,OAAO,CAACgB,SAA1B,EAAqC;AACnC,eAAO,IAAP;AACD;;AACD,UAAIH,MAAJ,EAAY;AACV,eAAO,IAAP;AACD;;AACD,0BACE,gCAAC,2BAAD;AACE,QAAA,OAAO,EAAE,KAAKhB,OADhB;AAEE,QAAA,OAAO,EAAEF,YAFX;AAGE,QAAA,OAAO,EAAEC,YAHX;AAIE,QAAA,oBAAoB,EAAE,KAAKL,oBAJ7B;AAKE,QAAA,KAAK,EAAE0B,iBAAKC,SAAL,CAAe,YAAf,EAA6BJ,aAA7B;AALT,QADF;AASD;;;;EAjEoCK,gB","sourcesContent":["import React, { Component } from 'react';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport sessionStatus from '@ringcentral-integration/commons/modules/Webphone/sessionStatus';\n\nimport ActiveCallBadge from '../ActiveCallBadge';\nimport i18n from './i18n';\nimport { CallBadgeProps, CallBadgeState } from './types';\n\nexport default class CallBadge extends Component<\n  CallBadgeProps,\n  CallBadgeState\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      badgeOffsetX: props.defaultOffsetX || 0,\n      badgeOffsetY: props.defaultOffsetY || 0,\n    };\n  }\n\n  updatePositionOffset = (x, y) => {\n    this.setState({\n      badgeOffsetX: x,\n      badgeOffsetY: y,\n    });\n  };\n\n  onClick = () => {\n    const isRinging = this._isRinging();\n    const { session, toggleMinimized, goToCallCtrl } = this.props;\n    if (isRinging) {\n      toggleMinimized(session.id);\n      return;\n    }\n    goToCallCtrl(session.id);\n  };\n\n  _isRinging() {\n    let isRinging = false;\n    const { session } = this.props;\n    if (\n      session.direction === callDirections.inbound &&\n      session.callStatus === sessionStatus.connecting\n    ) {\n      isRinging = true;\n    }\n    return isRinging;\n  }\n\n  render() {\n    const { session, hidden, currentLocale } = this.props;\n    const { badgeOffsetX, badgeOffsetY } = this.state;\n    const active = !!session.id;\n    if (!active) {\n      return null;\n    }\n    const isRinging = this._isRinging();\n    if (isRinging && !session.minimized) {\n      return null;\n    }\n    if (hidden) {\n      return null;\n    }\n    return (\n      <ActiveCallBadge\n        onClick={this.onClick}\n        offsetX={badgeOffsetX}\n        offsetY={badgeOffsetY}\n        updatePositionOffset={this.updatePositionOffset}\n        title={i18n.getString('activeCall', currentLocale)}\n      />\n    );\n  }\n}\n"],"file":"index.js"}