{"version":3,"sources":["components/ReplyWithMessage/TimeInput.tsx"],"names":["MINS","HOURS","DAYS","TimeButton","RcButton","defaultProps","size","radius","keepElevation","TimeInput","timeValue","onTimeValueChange","inputRef","currentLocale","timeUnit","onSelectTimeUnit","handleSelectTimeUnit","e","unit","stopPropagation","theme","styles","timeInput","i18n","getString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;AAIA;;AACA;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,IAAI,GAAG,CAAb;;AACA,IAAMC,KAAK,GAAG,CAAd;;AACA,IAAMC,IAAI,GAAG,CAAb;;AAEP,IAAMC,UAAU,GAAG,kCAAOC,gBAAP,CAAH,mBAAhB;AAMAD,UAAU,CAACE,YAAX,GAA0B;AACxBC,EAAAA,IAAI,EAAE,QADkB;AAExBC,EAAAA,MAAM,EAAE,OAFgB;AAGxBC,EAAAA,aAAa,EAAE;AAHS,CAA1B;;AAeO,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAO7C;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,iBAKI,QALJA,iBAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,gBACI,QADJA,gBACI;;AACJ,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAC3BC,CAD2B,EAE3BC,IAF2B,EAGxB;AACHD,IAAAA,CAAC,CAACE,eAAF;AACAJ,IAAAA,gBAAgB,CAACG,IAAD,CAAhB;AACD,GAND;;AAQA,MAAME,KAAK,GAAG,mCAAd;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEC,mBAAOC;AAAvB,kBACE;AAAM,IAAA,SAAS,EAAED,mBAAOX;AAAxB,kBACE;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,KAAK,EAAEA,SAFT;AAGE,IAAA,QAAQ,EAAEC,iBAHZ;AAIE,IAAA,GAAG,EAAEC;AAJP,IADF,CADF,eASE,gCAAC,UAAD;AAAO,IAAA,UAAU,EAAE,sBAAQ,CAAR,EAAW;AAAEQ,MAAAA,KAAK,EAALA;AAAF,KAAX,CAAnB;AAA0C,IAAA,KAAK;AAA/C,kBACE,gCAAC,UAAD;AACE,IAAA,OAAO,EAAE,iBAACH,CAAD;AAAA,aAAOD,oBAAoB,CAACC,CAAD,EAAIjB,IAAJ,CAA3B;AAAA,KADX;AAEE,IAAA,OAAO,EAAEc,QAAQ,KAAKd,IAAb,GAAoB,WAApB,GAAkC;AAF7C,KAIGuB,iBAAKC,SAAL,CAAe,KAAf,EAAsBX,aAAtB,CAJH,CADF,CATF,eAiBE,gCAAC,UAAD;AACE,IAAA,OAAO,EAAEC,QAAQ,KAAKb,KAAb,GAAqB,WAArB,GAAmC,MAD9C;AAEE,IAAA,OAAO,EAAE,iBAACgB,CAAD;AAAA,aAAOD,oBAAoB,CAACC,CAAD,EAAIhB,KAAJ,CAA3B;AAAA;AAFX,KAIGsB,iBAAKC,SAAL,CAAe,OAAf,EAAwBX,aAAxB,CAJH,CAjBF,eAuBE,gCAAC,UAAD;AACE,IAAA,OAAO,EAAEC,QAAQ,KAAKZ,IAAb,GAAoB,WAApB,GAAkC,MAD7C;AAEE,IAAA,OAAO,EAAE,iBAACe,CAAD;AAAA,aAAOD,oBAAoB,CAACC,CAAD,EAAIf,IAAJ,CAA3B;AAAA;AAFX,KAIGqB,iBAAKC,SAAL,CAAe,MAAf,EAAuBX,aAAvB,CAJH,CAvBF,CADF;AAgCD,CAlDM;;;AAoDPJ,SAAS,CAACJ,YAAV,GAAyB;AACvBK,EAAAA,SAAS,EAAE,EADY;AAEvBI,EAAAA,QAAQ,EAAEd;AAFa,CAAzB","sourcesContent":["import React from 'react';\n\nimport { RcBox, RcButton, spacing, styled, useTheme } from '@ringcentral/juno';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport const MINS = 0;\nexport const HOURS = 1;\nexport const DAYS = 2;\n\nconst TimeButton = styled(RcButton)`\n  && {\n    box-shadow: none;\n  }\n`;\n\nTimeButton.defaultProps = {\n  size: 'xsmall',\n  radius: 'round',\n  keepElevation: false,\n};\n\ntype TimeInputProps = {\n  currentLocale: string;\n  timeValue?: string;\n  timeUnit?: number;\n  inputRef: (...args: any[]) => any;\n  onTimeValueChange: React.ChangeEventHandler<HTMLInputElement>;\n  onSelectTimeUnit: (unit: number) => any;\n};\n\nexport const TimeInput: React.FC<TimeInputProps> = ({\n  timeValue,\n  onTimeValueChange,\n  inputRef,\n  currentLocale,\n  timeUnit,\n  onSelectTimeUnit,\n}) => {\n  const handleSelectTimeUnit = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    unit: number,\n  ) => {\n    e.stopPropagation();\n    onSelectTimeUnit(unit);\n  };\n\n  const theme = useTheme();\n\n  return (\n    <div className={styles.timeInput}>\n      <span className={styles.timeValue}>\n        <input\n          maxLength={2}\n          value={timeValue}\n          onChange={onTimeValueChange}\n          ref={inputRef}\n        />\n      </span>\n      <RcBox marginLeft={spacing(2)({ theme })} clone>\n        <TimeButton\n          onClick={(e) => handleSelectTimeUnit(e, MINS)}\n          variant={timeUnit === MINS ? 'contained' : 'text'}\n        >\n          {i18n.getString('min', currentLocale)}\n        </TimeButton>\n      </RcBox>\n      <TimeButton\n        variant={timeUnit === HOURS ? 'contained' : 'text'}\n        onClick={(e) => handleSelectTimeUnit(e, HOURS)}\n      >\n        {i18n.getString('hours', currentLocale)}\n      </TimeButton>\n      <TimeButton\n        variant={timeUnit === DAYS ? 'contained' : 'text'}\n        onClick={(e) => handleSelectTimeUnit(e, DAYS)}\n      >\n        {i18n.getString('days', currentLocale)}\n      </TimeButton>\n    </div>\n  );\n};\n\nTimeInput.defaultProps = {\n  timeValue: '',\n  timeUnit: MINS,\n};\n"],"file":"TimeInput.js"}