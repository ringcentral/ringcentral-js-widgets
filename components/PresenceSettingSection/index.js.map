{"version":3,"sources":["components/PresenceSettingSection/index.tsx"],"names":["StyledList","RcList","RcListItem","StyledPresenceWrap","styled","div","flexCenterStyle","RcPresence","PresenceSettingSection","showPresenceSettings","toggleAcceptCallQueueCalls","isCallQueueMember","dndStatusProp","dndStatus","userStatus","currentLocale","setAvailable","setBusy","setDoNotDisturb","setInvisible","showSelects","setShowSelects","toggleShow","prev","onCallQueueChange","sectionClass","styles","section","showDropdown","acceptQueueCalls","doNotAcceptAnyCalls","takeAllCalls","i18n","getString","currentStatus","onChange","type","presenceElements","elements","selectedItem","dropdownIcon","dynamicsFont","arrow","iconLine","presenceList"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\n\nimport classnames from 'classnames';\n\nimport dndStatus, {\n  DNDStatusValueType,\n} from '@ringcentral-integration/commons/modules/Presence/dndStatus';\nimport {\n  flexCenterStyle,\n  palette2,\n  RcBox,\n  RcList,\n  RcListItem,\n  RcPresence,\n  spacing,\n  styled,\n} from '@ringcentral/juno';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport { getPresenceStatusName } from '../../lib/getPresenceStatusName';\nimport IconLine from '../IconLine';\nimport { usePresenceItems } from '../PresenceDropdown/usePresenceItems';\nimport Switch from '../Switch';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst StyledList = styled(RcList)`\n  background-color: ${palette2('neutral', 'elevation')};\n\n  ${RcListItem} {\n    padding-left: ${spacing(5)};\n  }\n`;\n\n// TODO: when full page refactor, remove this\nconst StyledPresenceWrap = styled.div`\n  ${flexCenterStyle};\n  color: ${palette2('neutral', 'f05')};\n\n  ${RcPresence} {\n    margin-right: ${spacing(2)};\n  }\n`;\n\ntype PresenceSettingSectionProps = {\n  currentLocale: string;\n  dndStatus: DNDStatusValueType;\n  userStatus: string;\n  isCallQueueMember: boolean;\n  setAvailable: (...args: any[]) => any;\n  setBusy: (...args: any[]) => any;\n  setDoNotDisturb: (...args: any[]) => any;\n  setInvisible: (...args: any[]) => any;\n  toggleAcceptCallQueueCalls: (...args: any[]) => any;\n  showPresenceSettings: boolean;\n};\n\nexport const PresenceSettingSection: FunctionComponent<PresenceSettingSectionProps> =\n  ({\n    showPresenceSettings = false,\n    toggleAcceptCallQueueCalls,\n    isCallQueueMember,\n    dndStatus: dndStatusProp,\n    userStatus,\n    currentLocale,\n    setAvailable,\n    setBusy,\n    setDoNotDisturb,\n    setInvisible,\n  }) => {\n    const [showSelects, setShowSelects] = useState(showPresenceSettings);\n\n    const toggleShow = () => {\n      setShowSelects((prev) => !prev);\n    };\n\n    const onCallQueueChange = () => {\n      toggleAcceptCallQueueCalls();\n    };\n\n    const sectionClass = classnames(\n      styles.section,\n      showSelects ? styles.showDropdown : null,\n    );\n    const acceptQueueCalls = isCallQueueMember ? (\n      <IconLine\n        dataSign=\"acceptQueueSwitch\"\n        icon={\n          <Switch\n            disable={dndStatusProp === dndStatus.doNotAcceptAnyCalls}\n            checked={dndStatusProp === dndStatus.takeAllCalls}\n            onChange={onCallQueueChange}\n          />\n        }\n      >\n        {i18n.getString('acceptQueueCalls', currentLocale)}\n      </IconLine>\n    ) : null;\n    const currentStatus = getPresenceStatusName(\n      userStatus,\n      dndStatusProp,\n      currentLocale,\n    );\n\n    const { elements: presenceElements, selectedItem } = usePresenceItems({\n      currentLocale,\n      userStatus,\n      dndStatus: dndStatusProp,\n      onChange: (type) => {\n        switch (type) {\n          case 'available':\n            setAvailable();\n            break;\n          case 'busy':\n            setBusy();\n            break;\n          case 'DND':\n            setDoNotDisturb();\n            break;\n          case 'offline':\n            setInvisible();\n            break;\n          default:\n            break;\n        }\n      },\n    });\n\n    return (\n      <section className={sectionClass}>\n        <IconLine\n          dataSign=\"statusToggleShow\"\n          icon={\n            <span className={styles.dropdownIcon}>\n              <i className={dynamicsFont.arrow} />\n            </span>\n          }\n          onClick={toggleShow}\n          className={styles.iconLine}\n        >\n          <StyledPresenceWrap>\n            <div data-sign=\"status\">\n              {i18n.getString('status', currentLocale)}\n            </div>\n            <RcBox flex=\"1 1 auto\" />\n            <RcPresence size=\"medium\" type={selectedItem?.type} />\n            <span>{currentStatus}</span>\n          </StyledPresenceWrap>\n        </IconLine>\n        <StyledList className={styles.presenceList}>\n          {presenceElements}\n        </StyledList>\n        {acceptQueueCalls}\n      </section>\n    );\n  };\n\n// export default class PresenceSettingSection extends Component<\n//   PresenceSettingSectionProps,\n//   PresenceSettingSectionState\n// > {\n//   constructor(props) {\n//     super(props);\n//   }\n// }\n"],"file":"index.js"}