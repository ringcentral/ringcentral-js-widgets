{"version":3,"sources":["components/UserGuide/index.tsx"],"names":["controlStyles","entered","transform","UserGuide","props","slideTo","idx","guides","length","exit","setState","curIdx","updateCarousel","state","playing","quickAccessEnter","firstLogin","onExited","nextProps","styles","intro","introBg","backgroundImage","buttonGroup","primaryButton","i18n","getString","currentLocale","secondaryButton","slice","imageView","map","guide","i","view","indicatorView","_","highlight","dot","onLastPage","skipButton","nextButton","controlView","control","indicator","carouselClassName","carousel","carouselBox","getIntroView","showSpinner","getCarouselView","appear","enter","appearActive","enterActive","exitActive","root","React","Component","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\nimport { CSSTransition, Transition } from 'react-transition-group';\n\nimport { Button } from '../Button';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst controlStyles = {\n  entered: { transform: 'translateY(0)' },\n};\ntype UserGuideProps = {\n  curIdx?: number;\n  entered?: boolean;\n  playing?: boolean;\n  firstLogin?: boolean;\n  updateCarousel?: (...args: any[]) => any;\n  quickAccessEnter?: (...args: any[]) => any;\n  guides: any[];\n  showSpinner: boolean;\n  currentLocale: string;\n  carouselClassName?: string;\n};\ntype UserGuideState = {\n  curIdx: any;\n  entered: any;\n  playing: any;\n};\nclass UserGuide extends React.Component<UserGuideProps, UserGuideState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curIdx: props.curIdx || 0,\n      entered: props.entered || false,\n      playing: props.playing || false,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { curIdx, entered, playing } = nextProps;\n    if (this.state.curIdx !== curIdx) {\n      this.setState({ curIdx });\n    }\n    if (this.state.entered !== entered) {\n      this.setState({ entered });\n    }\n    if (this.state.playing !== playing) {\n      this.setState({ playing });\n    }\n  }\n  slideTo = (idx) => {\n    if (idx > this.props.guides.length - 1) {\n      this.exit();\n      return;\n    }\n    this.setState({\n      curIdx: idx,\n    });\n    this.props.updateCarousel({\n      curIdx: idx,\n      entered: this.state.entered,\n      playing: this.state.playing,\n    });\n  };\n  exit = () => {\n    if (this.props.quickAccessEnter && this.props.firstLogin) {\n      this.setState({\n        playing: false,\n      });\n      this.props.updateCarousel({\n        curIdx: this.state.curIdx,\n        entered: this.state.entered,\n        playing: false,\n      });\n      this.props.quickAccessEnter();\n    } else {\n      this.setState({\n        playing: false,\n      });\n      this.onExited();\n    }\n  };\n  onExited = () => {\n    this.setState({\n      entered: false,\n    });\n    this.props.updateCarousel({\n      curIdx: 0,\n      entered: false,\n      playing: false,\n      firstLogin: false,\n    });\n  };\n  getIntroView() {\n    return (\n      <div className={styles.intro} data-sign=\"userGuide\">\n        <div\n          className={styles.introBg}\n          style={{ backgroundImage: `url(${this.props.guides[0]})` }}\n        />\n        <div className={styles.buttonGroup}>\n          <Button\n            className={styles.primaryButton}\n            onClick={() => {\n              this.slideTo(1);\n            }}\n          >\n            {i18n.getString('start', this.props.currentLocale)}\n          </Button>\n          <Button\n            onClick={() => {\n              this.exit();\n            }}\n            className={styles.secondaryButton}\n          >\n            {i18n.getString('skip', this.props.currentLocale)}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n  getCarouselView() {\n    const guides = this.props.guides.slice(1, this.props.guides.length);\n    const imageView = guides.map((guide, i) => (\n      <div\n        key={i}\n        className={styles.view}\n        style={{\n          backgroundImage: `url(${guide})`,\n          transform: `translateX(${(i + 1) * 100}vw)`,\n        }}\n      />\n    ));\n    const indicatorView = guides.map((_, i) => {\n      const highlight = i + 1 === this.state.curIdx ? styles.highlight : null;\n      return (\n        <li\n          key={i}\n          className={classnames(styles.dot, highlight)}\n          onClick={() => {\n            this.slideTo(i + 1);\n          }}\n        />\n      );\n    });\n    const onLastPage = this.state.curIdx === this.props.guides.length - 1;\n    const skipButton = onLastPage ? (\n      <div className={styles.secondaryButton} />\n    ) : (\n      <Button\n        onClick={() => {\n          this.exit();\n        }}\n        className={classnames(styles.secondaryButton)}\n        dataSign=\"skipButton\"\n      >\n        {i18n.getString('skip', this.props.currentLocale)}\n      </Button>\n    );\n    const nextButton = (\n      <Button\n        onClick={() => {\n          this.slideTo(this.state.curIdx + 1);\n        }}\n        className={classnames(styles.primaryButton)}\n      >\n        {onLastPage\n          ? i18n.getString('finish', this.props.currentLocale)\n          : i18n.getString('next', this.props.currentLocale)}\n      </Button>\n    );\n    const controlView = (\n      <Transition in={this.state.curIdx > 0} timeout={300}>\n        {(state) => (\n          <div className={styles.control} style={{ ...controlStyles[state] }}>\n            {skipButton}\n            <ul className={styles.indicator}>{indicatorView}</ul>\n            {nextButton}\n          </div>\n        )}\n      </Transition>\n    );\n    const { carouselClassName } = this.props;\n    return (\n      <div className={classnames(styles.carousel, carouselClassName)}>\n        <div\n          className={styles.carouselBox}\n          style={{ transform: `translateX(-${this.state.curIdx * 100}vw)` }}\n        >\n          {this.getIntroView()}\n          {imageView}\n        </div>\n        {controlView}\n      </div>\n    );\n  }\n  render() {\n    if (\n      !this.props.guides ||\n      this.props.guides.length === 0 ||\n      !this.state.entered\n    )\n      return null;\n    if (this.props.showSpinner) {\n      return <SpinnerOverlay />;\n    }\n    const view = this.getCarouselView();\n    return (\n      <CSSTransition\n        in={this.state.playing}\n        timeout={400}\n        classNames={{\n          appear: styles.enter,\n          appearActive: styles.enterActive,\n          exit: styles.exit,\n          exitActive: styles.exitActive,\n        }}\n        onExited={this.onExited}\n        appear\n      >\n        <div className={styles.root}>{view}</div>\n      </CSSTransition>\n    );\n  }\n}\nUserGuide.defaultProps = {\n  curIdx: 0,\n  entered: false,\n  playing: false,\n  firstLogin: false,\n  updateCarousel: () => null,\n  quickAccessEnter: undefined,\n  carouselClassName: null,\n};\nexport default UserGuide;\n"],"file":"index.js"}