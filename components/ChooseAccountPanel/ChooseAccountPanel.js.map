{"version":3,"sources":["components/ChooseAccountPanel/ChooseAccountPanel.tsx"],"names":["StyledTitle","RcTypography","ContentItem","styled","div","ChooseAccountPanel","currentLocale","agents","onAccountItemClick","styles","root","wrapperStyle","svgStyle","i18n","getString","lists","map","agent","agentId","listItem","accountName","agentType"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;AAOA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,WAAW,GAAG,kCAAOC,wBAAP,CAAH,oBACL,sBAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CADK,CAAjB;;AAIA,IAAMC,WAAW,GAAGC,6BAAOC,GAAV,qBAGY,0BAAS,SAAT,EAAoB,KAApB,CAHZ,CAAjB;;AAaO,IAAMC,kBAA8D,GAAG,SAAjEA,kBAAiE,OAIxE;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,kBACI,QADJA,kBACI;AACJ,sBACE;AAAK,IAAA,SAAS,EAAEC,mBAAOC;AAAvB,kBACE,gCAAC,4BAAD;AACE,IAAA,YAAY,EAAED,mBAAOE,YADvB;AAEE,IAAA,QAAQ,EAAEF,mBAAOG;AAFnB,IADF,eAKE,gCAAC,WAAD;AAAa,IAAA,KAAK,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC,UAApC;AAA+C,IAAA,KAAK,EAAC;AAArD,KACGC,iBAAKC,SAAL,CAAe,eAAf,EAAgCR,aAAhC,CADH,CALF,eAQE;AAAK,IAAA,SAAS,EAAEG,mBAAOM;AAAvB,KACGR,MAAM,CAACS,GAAP,CAAW,UAACC,KAAD,EAAW;AACrB,wBACE,gCAAC,oBAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAMT,kBAAkB,CAACS,KAAK,CAACC,OAAP,CAAxB;AAAA,OADX;AAEE,MAAA,GAAG,EAAED,KAAK,CAACC,OAFb;AAGE,MAAA,SAAS,EAAET,mBAAOU;AAHpB,oBAKE,gCAAC,WAAD;AAAa,mBAAU;AAAvB,oBACE,0DACE,gCAAC,wBAAD;AAAc,MAAA,OAAO,EAAC,OAAtB;AAA8B,MAAA,KAAK,EAAC;AAApC,OACGF,KAAK,CAACG,WADT,CADF,eAIE,gCAAC,wBAAD;AAAc,MAAA,OAAO,EAAC,UAAtB;AAAiC,MAAA,KAAK,EAAC;AAAvC,OACGP,iBAAKC,SAAL,CAAeG,KAAK,CAACI,SAArB,EAAgCf,aAAhC,CADH,CAJF,CADF,eASE,gCAAC,oCAAD,OATF,CALF,CADF;AAmBD,GApBA,CADH,CARF,CADF;AAkCD,CAvCM","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport { CustomArrowButton } from '@ringcentral-integration/widgets/components/Rcui/CustomArrowButton';\nimport { palette2, RcTypography, spacing, styled } from '@ringcentral/juno';\n\nimport {\n  EvChooseAccountUIFunctions,\n  EvChooseAccountUIProps,\n} from '../../interfaces/EvChooseAccountUI.interface';\nimport { EvLoginHeader } from '../EvLoginHeader';\nimport { ListItem } from '../SelectList';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type ChooseAccountPanelProps = EvChooseAccountUIProps &\n  EvChooseAccountUIFunctions;\n\nconst StyledTitle = styled(RcTypography)`\n  margin: ${spacing(2, 0, 8)};\n`;\n\nconst ContentItem = styled.div`\n  height: 56px;\n  width: 100%;\n  border-bottom: 1px solid ${palette2('neutral', 'l02')};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  > div {\n    display: inline-block;\n  }\n`;\n\nexport const ChooseAccountPanel: FunctionComponent<ChooseAccountPanelProps> = ({\n  currentLocale,\n  agents,\n  onAccountItemClick,\n}) => {\n  return (\n    <div className={styles.root}>\n      <EvLoginHeader\n        wrapperStyle={styles.wrapperStyle}\n        svgStyle={styles.svgStyle}\n      />\n      <StyledTitle align=\"center\" variant=\"caption2\" color=\"neutral.f04\">\n        {i18n.getString('chooseAccount', currentLocale)}\n      </StyledTitle>\n      <div className={styles.lists}>\n        {agents.map((agent) => {\n          return (\n            <ListItem\n              onClick={() => onAccountItemClick(agent.agentId)}\n              key={agent.agentId}\n              className={styles.listItem}\n            >\n              <ContentItem data-sign=\"subAccount\">\n                <div>\n                  <RcTypography variant=\"body1\" color=\"neutral.f06\">\n                    {agent.accountName}\n                  </RcTypography>\n                  <RcTypography variant=\"caption1\" color=\"neutral.f04\">\n                    {i18n.getString(agent.agentType, currentLocale)}\n                  </RcTypography>\n                </div>\n                <CustomArrowButton />\n              </ContentItem>\n            </ListItem>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n"],"file":"ChooseAccountPanel.js"}