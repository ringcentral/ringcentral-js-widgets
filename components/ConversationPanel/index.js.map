{"version":3,"sources":["components/ConversationPanel/index.tsx"],"names":["ConversationPanel","props","onSend","text","attachments","selectedContact","getSelectedContact","replyToReceivers","onInputHeightChange","value","setState","inputHeight","onSelectContact","idx","showContactDisplayPlaceholder","autoLog","conversation","shouldLogSelectRecord","selected","parseInt","_userSelection","logConversation","redirect","prefill","correspondentEntity","state","contactMatches","correspondentMatches","length","bind","getInitialContactIndex","isLogging","loaded","alertHeight","showSpinner","loadConversation","_mounted","nextProps","conversationMatches","prevProps","prevState","messages","readMessages","conversationId","perPage","loadPreviousMessages","getDncAlertHeight","unloadConversation","headerHeight","alertMargin","restrictSendMessage","dncAlert","clientHeight","lastMatchedCorrespondentEntity","index","correspondentMatchId","id","findIndex","contact","correspondents","phoneNumber","extensionNumber","undefined","groupNumbers","map","correspondent","name","onLogConversation","styles","root","conversationBody","loading","recipients","messageSubjectRenderer","currentLocale","getMessageListHeight","dateTimeFormatter","formatPhone","loadingNextPage","onAttachmentDownload","getGroupPhoneNumbers","getPhoneNumber","shouldHideNumber","enableCDC","fallbackName","getFallbackContactName","extraButton","renderExtraButton","logButton","disableLinks","header","brand","contactDisplay","contactDisplaySelect","areaCode","countryCode","enableContactFallback","contactPlaceholder","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","showGroupNumberName","renderContactList","dropdownClassName","goBack","backButton","dynamicsFont","arrow","target","alert","i18n","getString","messageText","updateMessageText","sendButtonDisabled","inputExpandable","supportAttachment","addAttachment","removeAttachment","Component","propTypes","PropTypes","string","isRequired","func","ConversationMessageList","arrayOf","shape","bool","object","number","size","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAuDnBC,MAvDmB,GAuDV,UAACC,IAAD,EAAOC,WAAP,EAAuB;AAC9B,UAAMC,eAAe,GAAG,MAAKC,kBAAL,EAAxB;;AACA,YAAKL,KAAL,CAAWM,gBAAX,CAA4BJ,IAA5B,EAAkCC,WAAlC,EAA+CC,eAA/C;AACD,KA1DkB;;AAAA,UA4DnBG,mBA5DmB,GA4DG,UAACC,KAAD,EAAW;AAC/B,YAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEF;AADD,OAAd;AAGD,KAhEkB;;AAAA,UAkEnBG,eAlEmB,GAkED,UAACH,KAAD,EAAQI,GAAR,EAAgB;AAAA,wBAO5B,MAAKZ,KAPuB;AAAA,UAE9Ba,6BAF8B,eAE9BA,6BAF8B;AAAA,UAG9BC,OAH8B,eAG9BA,OAH8B;AAAA,UAI9BC,YAJ8B,eAI9BA,YAJ8B;AAAA,UAK9BC,qBAL8B,eAK9BA,qBAL8B;AAAA,UAM9BL,eAN8B,eAM9BA,eAN8B;AAQhC,UAAMM,QAAQ,GAAGJ,6BAA6B,GAC1CK,QAAQ,CAACN,GAAD,EAAM,EAAN,CAAR,GAAoB,CADsB,GAE1CM,QAAQ,CAACN,GAAD,EAAM,EAAN,CAFZ;AAGA,YAAKO,cAAL,GAAsB,IAAtB;;AACA,YAAKV,QAAL,CAAc;AACZQ,QAAAA,QAAQ,EAARA;AADY,OAAd;;AAGA,UAAIH,OAAJ,EAAa;AACX,cAAKM,eAAL,CAAqB;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmBJ,UAAAA,QAAQ,EAARA,QAAnB;AAA6BK,UAAAA,OAAO,EAAE;AAAtC,SAArB;AACD;;AACD,UAAIN,qBAAqB,IAAI,OAAOL,eAAP,KAA2B,UAAxD,EAAoE;AAClEA,QAAAA,eAAe,CAAC;AACdY,UAAAA,mBAAmB,EAAE,MAAKlB,kBAAL,CAAwBY,QAAxB,CADP;AAEdF,UAAAA,YAAY,EAAZA;AAFc,SAAD,CAAf;AAID;AACF,KA1FkB;;AAAA,UA+GnBV,kBA/GmB,GA+GE,YAAoC;AAAA,UAAnCY,QAAmC,uEAAxB,MAAKO,KAAL,CAAWP,QAAa;;AACvD,UAAI,CAAC,MAAKjB,KAAL,CAAWe,YAAhB,EAA8B;AAC5B,eAAO,IAAP;AACD;;AACD,UAAMU,cAAc,GAAG,MAAKzB,KAAL,CAAWe,YAAX,CAAwBW,oBAA/C;AACA,aACGT,QAAQ,GAAG,CAAC,CAAZ,IAAiBQ,cAAc,CAACR,QAAD,CAAhC,IACCQ,cAAc,CAACE,MAAf,KAA0B,CAA1B,IAA+BF,cAAc,CAAC,CAAD,CAD9C,IAEA,IAHF;AAKD,KAzHkB;;AAAA,UAsMnBL,eAtMmB,GAsMD,MAAKA,eAAL,CAAqBQ,IAArB,+BAtMC;AAEjB,UAAKJ,KAAL,GAAa;AACXP,MAAAA,QAAQ,EAAE,MAAKY,sBAAL,EADC;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXpB,MAAAA,WAAW,EAAE,EAHF;AAIXqB,MAAAA,MAAM,EAAE,KAJG;AAKXC,MAAAA,WAAW,EAAE;AALF,KAAb;AAOA,UAAKb,cAAL,GAAsB,KAAtB;AATiB;AAUlB;;;;wCAEmB;AAClB,UAAI,CAAC,KAAKnB,KAAL,CAAWiC,WAAhB,EAA6B;AAC3B,aAAKC,gBAAL;AACD;;AACD,WAAKC,QAAL,GAAgB,IAAhB;AACD;;;qDAEgCC,S,EAAW;AAC1C,UACE,CAAC,KAAKjB,cAAN,IACA,KAAKnB,KAAL,CAAWe,YADX,IAEAqB,SAAS,CAACrB,YAFV,KAGCqB,SAAS,CAACrB,YAAV,CAAuBsB,mBAAvB,KACC,KAAKrC,KAAL,CAAWe,YAAX,CAAwBsB,mBADzB,IAECD,SAAS,CAACrB,YAAV,CAAuBW,oBAAvB,KACE,KAAK1B,KAAL,CAAWe,YAAX,CAAwBW,oBAN5B,CADF,EAQE;AACA,aAAKjB,QAAL,CAAc;AACZQ,UAAAA,QAAQ,EAAE,KAAKY,sBAAL,CAA4BO,SAA5B;AADE,SAAd;AAGD;;AACD,UAAI,CAACA,SAAS,CAACH,WAAX,IAA0B,KAAKjC,KAAL,CAAWiC,WAAzC,EAAsD;AACpD,aAAKC,gBAAL;AACD;AACF;;;uCAEkBI,S,EAAWC,S,EAAW;AACvC,UAAID,SAAS,CAACE,QAAV,KAAuB,KAAKxC,KAAL,CAAWwC,QAAtC,EAAgD;AAC9C,aAAKxC,KAAL,CAAWyC,YAAX,CAAwB,KAAKzC,KAAL,CAAW0C,cAAnC;AACD;;AACD,UAAIH,SAAS,CAACR,MAAV,KAAqB,KAArB,IAA8B,KAAKP,KAAL,CAAWO,MAAX,KAAsB,IAAxD,EAA8D;AAC5D,YAAI,KAAK/B,KAAL,CAAWwC,QAAX,CAAoBb,MAApB,GAA6B,KAAK3B,KAAL,CAAW2C,OAA5C,EAAqD;AACnD,eAAK3C,KAAL,CAAW4C,oBAAX;AACD;;AACD,aAAKC,iBAAL;AACD;AACF;;;2CAEsB;AACrB,WAAKV,QAAL,GAAgB,KAAhB;AACA,WAAKnC,KAAL,CAAW8C,kBAAX;AACD;;;2CAuCsB;AAAA;;AACrB,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,WAAW,GAAG,EAApB;;AACA,mCAAI,qBAAKhD,KAAL,EAAWiD,mBAAf,0DAAI,yCAAiC,KAAK5C,kBAAL,EAAjC,CAAJ,EAAiE;AAC/D,qCACE,KAAKmB,KAAL,CAAWQ,WAAX,GAAyBgB,WAAzB,GAAuCD,YADzC;AAGD;;AACD,mCAAsB,KAAKvB,KAAL,CAAWd,WAAX,GAAyBqC,YAA/C;AACD;;;wCAEmB;AAClB,UAAI,KAAKG,QAAT,EAAmB;AACjB,aAAKzC,QAAL,CAAc;AACZuB,UAAAA,WAAW,EAAE,KAAKkB,QAAL,CAAcC;AADf,SAAd;AAGD;AACF;;;6CAc8C;AAAA,UAAxBf,SAAwB,uEAAZ,KAAKpC,KAAO;AAAA,kCAKzCoC,SAAS,CAACrB,YAL+B;AAAA,UAE3CW,oBAF2C,yBAE3CA,oBAF2C;AAAA,UAG3C0B,8BAH2C,yBAG3CA,8BAH2C;AAAA,UAI3Cf,mBAJ2C,yBAI3CA,mBAJ2C;AAM7C,UAAIgB,KAAK,GAAG,IAAZ;AACA,UAAMC,oBAAoB,GACvBF,8BAA8B,IAAIA,8BAA8B,CAACG,EAAlE,IACClB,mBAAmB,CAAC,CAAD,CAAnB,IAA0BA,mBAAmB,CAAC,CAAD,CAAnB,CAAuBkB,EAFpD;;AAGA,UAAID,oBAAJ,EAA0B;AACxBD,QAAAA,KAAK,GAAG3B,oBAAoB,CAAC8B,SAArB,CACN,UAACC,OAAD;AAAA,iBAAaA,OAAO,CAACF,EAAR,KAAeD,oBAA5B;AAAA,SADM,CAAR;AAGA,YAAID,KAAK,GAAG,CAAC,CAAb,EAAgB,OAAOA,KAAP;AACjB;;AACD,aAAO,CAAC,CAAR;AACD;;;qCAEgB;AAAA,kCACwC,KAAKrD,KAD7C,CACPe,YADO;AAAA,iEACiC,EADjC;AAAA,yDACS2C,cADT;AAAA,UACSA,cADT,uCAC0B,EAD1B;AAEf,aACGA,cAAc,CAAC/B,MAAf,KAA0B,CAA1B,KACE+B,cAAc,CAAC,CAAD,CAAd,CAAkBC,WAAlB,IAAiCD,cAAc,CAAC,CAAD,CAAd,CAAkBE,eADrD,CAAD,IAEAC,SAHF;AAKD;;;2CAEsB;AAAA,mCACkC,KAAK7D,KADvC,CACbe,YADa;AAAA,mEAC2B,EAD3B;AAAA,0DACG2C,cADH;AAAA,UACGA,cADH,uCACoB,EADpB;AAErB,UAAMI,YAAY,GAChBJ,cAAc,CAAC/B,MAAf,GAAwB,CAAxB,GACI+B,cAAc,CAACK,GAAf,CACE,UAACC,aAAD;AAAA,eACEA,aAAa,CAACJ,eAAd,IACAI,aAAa,CAACL,WADd,IAEAE,SAHF;AAAA,OADF,CADJ,GAOI,IARN;AASA,aAAOC,YAAP;AACD;;;6CAEwB;AAAA,mCACgC,KAAK9D,KADrC,CACfe,YADe;AAAA,mEACyB,EADzB;AAAA,0DACC2C,cADD;AAAA,UACCA,cADD,uCACkB,EADlB;AAEvB,aAAQA,cAAc,CAAC/B,MAAf,KAA0B,CAA1B,IAA+B+B,cAAc,CAAC,CAAD,CAAd,CAAkBO,IAAlD,IAA2DJ,SAAlE;AACD;;;uCAEkB;AACjB,WAAK7D,KAAL,CAAWkC,gBAAX,CAA4B,KAAKlC,KAAL,CAAW0C,cAAvC;AACA,WAAKjC,QAAL,CAAc;AAAEsB,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD;;;;;;;;;;;;;;;;;+EAEqE,E,uBAA9CV,Q,EAAAA,Q,8BAAW,I,kBAAMJ,Q,QAAAA,Q,sBAAUK,O,EAAAA,O,6BAAU,I;;sBAEzD,OAAO,KAAKtB,KAAL,CAAWkE,iBAAlB,KAAwC,UAAxC,IACA,KAAK/B,QADL,IAEA,CAAC,KAAKX,KAAL,CAAWM,S;;;;;AAEZ,qBAAKrB,QAAL,CAAc;AACZqB,kBAAAA,SAAS,EAAE;AADC,iBAAd;;uBAGM,KAAK9B,KAAL,CAAWkE,iBAAX,CAA6B;AACjC3C,kBAAAA,mBAAmB,EAAE,KAAKlB,kBAAL,CAAwBY,QAAxB,CADY;AAEjCyB,kBAAAA,cAAc,EAAE,KAAK1C,KAAL,CAAWe,YAAX,CAAwB2B,cAFP;AAGjCrB,kBAAAA,QAAQ,EAARA,QAHiC;AAIjCC,kBAAAA,OAAO,EAAPA;AAJiC,iBAA7B,C;;;AAMN,oBAAI,KAAKa,QAAT,EAAmB;AACjB,uBAAK1B,QAAL,CAAc;AACZqB,oBAAAA,SAAS,EAAE;AADC,mBAAd;AAGD;;;;;;;;;;;;;;;;;;6BAMI;AAAA;AAAA;AAAA;;AACP,UAAI,CAAC,KAAKN,KAAL,CAAWO,MAAhB,EAAwB;AACtB,4BACE;AAAK,UAAA,SAAS,EAAEoC,mBAAOC;AAAvB,wBACE,gCAAC,8BAAD,OADF,CADF;AAKD;;AACD,UAAIC,gBAAgB,GAAG,IAAvB;AACA,UAAMC,OAAO,GAAG,KAAKtE,KAAL,CAAWiC,WAA3B;AATO,yBAUwC,KAAKjC,KAV7C;AAAA,UAUCuE,UAVD,gBAUCA,UAVD;AAAA,UAUaC,sBAVb,gBAUaA,sBAVb;;AAWP,UAAI,CAACF,OAAL,EAAc;AACZD,QAAAA,gBAAgB,gBACd,gCAAC,mCAAD;AACE,UAAA,aAAa,EAAE,KAAKrE,KAAL,CAAWyE,aAD5B;AAEE,UAAA,MAAM,EAAE,KAAKC,oBAAL,EAFV;AAGE,UAAA,QAAQ,EAAE,KAAK1E,KAAL,CAAWwC,QAHvB;AAIE,UAAA,SAAS,EAAE2B,mBAAOE,gBAJpB;AAKE,UAAA,iBAAiB,EAAE,KAAKrE,KAAL,CAAW2E,iBALhC;AAME,UAAA,UAAU,EAAEJ,UAAU,IAAIA,UAAU,CAAC5C,MAAX,GAAoB,CANhD;AAOE,UAAA,sBAAsB,EAAE6C,sBAP1B;AAQE,UAAA,WAAW,EAAE,KAAKxE,KAAL,CAAW4E,WAR1B;AASE,UAAA,eAAe,EAAE,KAAK5E,KAAL,CAAW6E,eAT9B;AAUE,UAAA,oBAAoB,EAAE,KAAK7E,KAAL,CAAW4C,oBAVnC;AAWE,UAAA,oBAAoB,EAAE,KAAK5C,KAAL,CAAW8E;AAXnC,UADF;AAeD;;AA3BM,mCA6BL,KAAK9E,KAAL,CAAWe,YA7BN;AAAA,UA4BCe,SA5BD,0BA4BCA,SA5BD;AAAA,UA4BYO,mBA5BZ,0BA4BYA,mBA5BZ;AAAA,UA4BiCX,oBA5BjC,0BA4BiCA,oBA5BjC;AA8BP,UAAMoC,YAAY,GAAG,KAAKiB,oBAAL,EAArB;AACA,UAAMpB,WAAW,GAAG,KAAKqB,cAAL,EAApB,CA/BO,CAgCP;;AACA,UAAMC,gBAAgB,GACpB,KAAKjF,KAAL,CAAWkF,SAAX,IACA,4DAA2BvB,WAA3B,EAAwCjC,oBAAxC,CAFF;AAGA,UAAMyD,YAAY,GAAG,KAAKC,sBAAL,EAArB;AACA,UAAMC,WAAW,GAAG,KAAKrF,KAAL,CAAWsF,iBAAX,GAChB,KAAKtF,KAAL,CAAWsF,iBAAX,CAA6B,KAAKtF,KAAL,CAAWe,YAAxC,EAAsD;AACpDK,QAAAA,eAAe,EAAE,KAAKA,eAD8B;AAEpDU,QAAAA,SAAS,EAAEA,SAAS,IAAI,KAAKN,KAAL,CAAWM;AAFiB,OAAtD,CADgB,GAKhB,IALJ;AAMA,UAAMyD,SAAS,GACb,KAAKvF,KAAL,CAAWkE,iBAAX,IAAgC,CAAC,KAAKlE,KAAL,CAAWsF,iBAA5C,gBACE,gCAAC,qBAAD;AACE,QAAA,SAAS,EAAEnB,mBAAOoB,SADpB;AAEE,QAAA,KAAK,EAAE,KAAKnE,eAFd;AAGE,QAAA,YAAY,EAAE,KAAKpB,KAAL,CAAWwF,YAH3B;AAIE,QAAA,QAAQ,EAAEnD,mBAAmB,CAACV,MAApB,GAA6B,CAJzC;AAKE,QAAA,SAAS,EAAEG,SAAS,IAAI,KAAKN,KAAL,CAAWM,SALrC;AAME,QAAA,aAAa,EAAE,KAAK9B,KAAL,CAAWyE;AAN5B,QADF,GASI,IAVN;AAWA,0BACE;AAAK,QAAA,SAAS,EAAEN,mBAAOC;AAAvB,sBACE;AAAK,qBAAU,mBAAf;AAAmC,QAAA,SAAS,EAAED,mBAAOsB;AAArD,sBACE,gCAAC,0BAAD;AACE,QAAA,KAAK,EAAE,KAAKzF,KAAL,CAAW0F,KADpB;AAEE,QAAA,SAAS,EAAEvB,mBAAOwB,cAFpB;AAGE,QAAA,eAAe,EAAExB,mBAAOyB,oBAH1B;AAIE,QAAA,cAAc,EAAElE,oBAAoB,IAAI,EAJ1C;AAKE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWP,QALvB;AAME,QAAA,eAAe,EAAE,KAAKN,eANxB;AAOE,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWwF,YAPvB;AAQE,QAAA,SAAS,EAAE1D,SAAS,IAAI,KAAKN,KAAL,CAAWM,SARrC;AASE,QAAA,YAAY,EAAEqD,YAThB;AAUE,QAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAW6F,QAVvB;AAWE,QAAA,WAAW,EAAE,KAAK7F,KAAL,CAAW8F,WAX1B;AAYE,QAAA,WAAW,EAAEb,gBAAgB,GAAG,IAAH,GAAUtB,WAZzC;AAaE,QAAA,YAAY,EAAEG,YAbhB;AAcE,QAAA,QAAQ,EAAE,KAdZ;AAeE,QAAA,aAAa,EAAE,KAAK9D,KAAL,CAAWyE,aAf5B;AAgBE,QAAA,qBAAqB,EAAE,KAAKzE,KAAL,CAAW+F,qBAhBpC;AAiBE,QAAA,WAAW,EAAE,KAAK/F,KAAL,CAAWgG,kBAjB1B;AAkBE,QAAA,eAAe,EAAE,KAAKhG,KAAL,CAAWa,6BAlB9B;AAmBE,QAAA,WAAW,EAAE,KAAKb,KAAL,CAAWiG,WAnB1B;AAoBE,QAAA,iBAAiB,EAAE,KAAKjG,KAAL,CAAWkG,iBApBhC;AAqBE,QAAA,uBAAuB,EAAE,KAAKlG,KAAL,CAAWmG,uBArBtC;AAsBE,QAAA,mBAAmB,EAAE,KAAKnG,KAAL,CAAWoG,mBAtBlC;AAuBE,QAAA,sBAAsB,EAAE,KAAKpG,KAAL,CAAWqG,iBAvBrC;AAwBE,QAAA,iBAAiB,EAAE,KAAKrG,KAAL,CAAWsG;AAxBhC,QADF,eA2BE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACtG,KAAL,CAAWuG,MAAX,EAAN;AAAA,SADX;AAEE,qBAAU,YAFZ;AAGE,QAAA,SAAS,EAAEpC,mBAAOqC;AAHpB,sBAKE;AAAM,QAAA,SAAS,EAAEC,yBAAaC;AAA9B,QALF,CA3BF,EAkCGrB,WAAW,iBAAI;AAAK,QAAA,SAAS,EAAElB,mBAAOoB;AAAvB,SAAmCF,WAAnC,CAlClB,EAmCGE,SAnCH,CADF,EAsCGlB,gBAtCH,EAuCG,gDAAKrE,KAAL,EAAWiD,mBAAX,qGAAiC,KAAK5C,kBAAL,EAAjC,kBACC,gCAAC,cAAD;AACE,QAAA,GAAG,EAAE,aAACsG,MAAD,EAAY;AACf,UAAA,MAAI,CAACzD,QAAL,GAAgByD,MAAhB;AACD,SAHH;AAIE,QAAA,QAAQ,EAAC,OAJX;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,SAAS,EAAExC,mBAAOyC,KANpB;AAOE,qBAAU;AAPZ,SASGC,iBAAKC,SAAL,CAAe,UAAf,EAA2B,KAAK9G,KAAL,CAAWyE,aAAtC,CATH,CADD,gBAaC,gCAAC,wBAAD;AACE,QAAA,KAAK,EAAE,KAAKzE,KAAL,CAAW+G,WADpB;AAEE,QAAA,QAAQ,EAAE,KAAK/G,KAAL,CAAWgH,iBAFvB;AAGE,QAAA,kBAAkB,EAAE,KAAKhH,KAAL,CAAWiH,kBAHjC;AAIE,QAAA,aAAa,EAAE,KAAKjH,KAAL,CAAWyE,aAJ5B;AAKE,QAAA,MAAM,EAAE,KAAKxE,MALf;AAME,QAAA,cAAc,EAAE,KAAKM,mBANvB;AAOE,QAAA,eAAe,EAAE,KAAKP,KAAL,CAAWkH,eAP9B;AAQE,QAAA,WAAW,EAAE,KAAKlH,KAAL,CAAWG,WAR1B;AASE,QAAA,iBAAiB,EAAE,KAAKH,KAAL,CAAWmH,iBAThC;AAUE,QAAA,aAAa,EAAE,KAAKnH,KAAL,CAAWoH,aAV5B;AAWE,QAAA,gBAAgB,EAAE,KAAKpH,KAAL,CAAWqH;AAX/B,QApDJ,CADF;AAqED;;;;EApU6BC,gB;;AAuUhCvH,iBAAiB,CAACwH,SAAlB,GAA8B;AAC5B7B,EAAAA,KAAK,EAAE8B,sBAAUC,MAAV,CAAiBC,UADI;AAE5BpH,EAAAA,gBAAgB,EAAEkH,sBAAUG,IAAV,CAAeD,UAFL;AAG5BlF,EAAAA,QAAQ,EAAEoF,oCAAwBL,SAAxB,CAAkC/E,QAHhB;AAI5BwE,EAAAA,iBAAiB,EAAEQ,sBAAUG,IAJD;AAK5BZ,EAAAA,WAAW,EAAES,sBAAUC,MALK;AAM5BlD,EAAAA,UAAU,EAAEiD,sBAAUK,OAAV,CACVL,sBAAUM,KAAV,CAAgB;AACdnE,IAAAA,WAAW,EAAE6D,sBAAUC,MADT;AAEd7D,IAAAA,eAAe,EAAE4D,sBAAUC,MAFb;AAGdxD,IAAAA,IAAI,EAAEuD,sBAAUC;AAHF,GAAhB,CADU,EAMVC,UAZ0B;AAa5BT,EAAAA,kBAAkB,EAAEO,sBAAUO,IAAV,CAAeL,UAbP;AAc5BjD,EAAAA,aAAa,EAAE+C,sBAAUC,MAAV,CAAiBC,UAdJ;AAe5BzF,EAAAA,WAAW,EAAEuF,sBAAUO,IAAV,CAAeL,UAfA;AAgB5BlC,EAAAA,YAAY,EAAEgC,sBAAUO,IAhBI;AAiB5BhH,EAAAA,YAAY,EAAEyG,sBAAUQ,MAAV,CAAiBN,UAjBH;AAkB5BxD,EAAAA,iBAAiB,EAAEsD,sBAAUG,IAlBD;AAmB5B9B,EAAAA,QAAQ,EAAE2B,sBAAUC,MAAV,CAAiBC,UAnBC;AAoB5B5B,EAAAA,WAAW,EAAE0B,sBAAUC,MAAV,CAAiBC,UApBF;AAqB5B5G,EAAAA,OAAO,EAAE0G,sBAAUO,IArBS;AAsB5BhC,EAAAA,qBAAqB,EAAEyB,sBAAUO,IAtBL;AAuB5BpD,EAAAA,iBAAiB,EAAE6C,sBAAUG,IAAV,CAAeD,UAvBN;AAwB5BnB,EAAAA,MAAM,EAAEiB,sBAAUG,IAAV,CAAeD,UAxBK;AAyB5B7G,EAAAA,6BAA6B,EAAE2G,sBAAUO,IAzBb;AA0B5B/B,EAAAA,kBAAkB,EAAEwB,sBAAUC,MA1BF;AA2B5BxB,EAAAA,WAAW,EAAEuB,sBAAUQ,MA3BK;AA4B5B9B,EAAAA,iBAAiB,EAAEsB,sBAAUG,IA5BD;AA6B5BxB,EAAAA,uBAAuB,EAAEqB,sBAAUG,IA7BP;AA8B5BvB,EAAAA,mBAAmB,EAAEoB,sBAAUO,IA9BH;AA+B5BvD,EAAAA,sBAAsB,EAAEgD,sBAAUG,IA/BN;AAgC5B/C,EAAAA,WAAW,EAAE4C,sBAAUG,IAAV,CAAeD,UAhCA;AAiC5BjF,EAAAA,YAAY,EAAE+E,sBAAUG,IAAV,CAAeD,UAjCD;AAkC5B9E,EAAAA,oBAAoB,EAAE4E,sBAAUG,IAAV,CAAeD,UAlCT;AAmC5B5E,EAAAA,kBAAkB,EAAE0E,sBAAUG,IAAV,CAAeD,UAnCP;AAoC5B/E,EAAAA,OAAO,EAAE6E,sBAAUS,MApCS;AAqC5BvF,EAAAA,cAAc,EAAE8E,sBAAUC,MAAV,CAAiBC,UArCL;AAsC5BxF,EAAAA,gBAAgB,EAAEsF,sBAAUG,IAtCA;AAuC5BrC,EAAAA,iBAAiB,EAAEkC,sBAAUG,IAvCD;AAwC5B9C,EAAAA,eAAe,EAAE2C,sBAAUO,IAxCC;AAyC5Bb,EAAAA,eAAe,EAAEM,sBAAUO,IAzCC;AA0C5B5H,EAAAA,WAAW,EAAEqH,sBAAUK,OAAV,CACXL,sBAAUM,KAAV,CAAgB;AACdI,IAAAA,IAAI,EAAEV,sBAAUS,MADF;AAEdhE,IAAAA,IAAI,EAAEuD,sBAAUC;AAFF,GAAhB,CADW,CA1Ce;AAgD5BN,EAAAA,iBAAiB,EAAEK,sBAAUO,IAhDD;AAiD5BX,EAAAA,aAAa,EAAEI,sBAAUG,IAjDG;AAkD5BN,EAAAA,gBAAgB,EAAEG,sBAAUG,IAlDA;AAmD5B7C,EAAAA,oBAAoB,EAAE0C,sBAAUG,IAnDJ;AAoD5B1E,EAAAA,mBAAmB,EAAEuE,sBAAUG,IApDH;AAqD5B3G,EAAAA,qBAAqB,EAAEwG,sBAAUO,IArDL;AAsD5BpH,EAAAA,eAAe,EAAE6G,sBAAUG,IAtDC;AAuD5BtB,EAAAA,iBAAiB,EAAEmB,sBAAUG,IAvDD;AAwD5BrB,EAAAA,iBAAiB,EAAEkB,sBAAUC,MAxDD;AAyD5BvC,EAAAA,SAAS,EAAEsC,sBAAUO;AAzDO,CAA9B;AA2DAhI,iBAAiB,CAACoI,YAAlB,GAAiC;AAC/B3C,EAAAA,YAAY,EAAE,KADiB;AAE/BtB,EAAAA,iBAAiB,EAAEL,SAFY;AAG/B/C,EAAAA,OAAO,EAAE,KAHsB;AAI/BiF,EAAAA,qBAAqB,EAAElC,SAJQ;AAK/BhD,EAAAA,6BAA6B,EAAE,IALA;AAM/BmF,EAAAA,kBAAkB,EAAE,EANW;AAO/BC,EAAAA,WAAW,EAAEpC,SAPkB;AAQ/BqC,EAAAA,iBAAiB,EAAErC,SARY;AAS/BsC,EAAAA,uBAAuB,EAAEtC,SATM;AAU/BuC,EAAAA,mBAAmB,EAAE,KAVU;AAW/BW,EAAAA,WAAW,EAAE,EAXkB;AAY/BC,EAAAA,iBAAiB,EAAE;AAAA,WAAM,IAAN;AAAA,GAZY;AAa/BxC,EAAAA,sBAAsB,EAAEX,SAbO;AAc/BlB,EAAAA,OAAO,EAAEkB,SAdsB;AAe/B3B,EAAAA,gBAAgB,EAAE;AAAA,WAAM,IAAN;AAAA,GAfa;AAgB/BoD,EAAAA,iBAAiB,EAAEzB,SAhBY;AAiB/BgB,EAAAA,eAAe,EAAE,KAjBc;AAkB/BqC,EAAAA,eAAe,EAAErD,SAlBc;AAmB/B1D,EAAAA,WAAW,EAAE,EAnBkB;AAoB/BgH,EAAAA,iBAAiB,EAAE,KApBY;AAqB/BC,EAAAA,aAAa,EAAE;AAAA,WAAM,IAAN;AAAA,GArBgB;AAsB/BC,EAAAA,gBAAgB,EAAE;AAAA,WAAM,IAAN;AAAA,GAtBa;AAuB/BvC,EAAAA,oBAAoB,EAAEjB,SAvBS;AAwB/BZ,EAAAA,mBAAmB,EAAEY,SAxBU;AAyB/B7C,EAAAA,qBAAqB,EAAE,KAzBQ;AA0B/BL,EAAAA,eAAe,EAAEkD,SA1Bc;AA2B/BwC,EAAAA,iBAAiB,EAAExC,SA3BY;AA4B/ByC,EAAAA,iBAAiB,EAAE,IA5BY;AA6B/BpB,EAAAA,SAAS,EAAE;AA7BoB,CAAjC;eAgCenF,iB","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { RcAlert } from '@ringcentral/juno';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport { checkShouldHidePhoneNumber } from '../../lib/checkShouldHidePhoneNumber';\nimport ContactDisplay from '../ContactDisplay';\nimport ConversationMessageList from '../ConversationMessageList';\nimport LogButton from '../LogButton';\nimport MessageInput from '../MessageInput';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nclass ConversationPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      isLogging: false,\n      inputHeight: 63,\n      loaded: false,\n      alertHeight: 46,\n    };\n    this._userSelection = false;\n  }\n\n  componentDidMount() {\n    if (!this.props.showSpinner) {\n      this.loadConversation();\n    }\n    this._mounted = true;\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      !this._userSelection &&\n      this.props.conversation &&\n      nextProps.conversation &&\n      (nextProps.conversation.conversationMatches !==\n        this.props.conversation.conversationMatches ||\n        nextProps.conversation.correspondentMatches !==\n          this.props.conversation.correspondentMatches)\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n    if (!nextProps.showSpinner && this.props.showSpinner) {\n      this.loadConversation();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.messages !== this.props.messages) {\n      this.props.readMessages(this.props.conversationId);\n    }\n    if (prevState.loaded === false && this.state.loaded === true) {\n      if (this.props.messages.length < this.props.perPage) {\n        this.props.loadPreviousMessages();\n      }\n      this.getDncAlertHeight();\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    this.props.unloadConversation();\n  }\n\n  onSend = (text, attachments) => {\n    const selectedContact = this.getSelectedContact();\n    this.props.replyToReceivers(text, attachments, selectedContact);\n  };\n\n  onInputHeightChange = (value) => {\n    this.setState({\n      inputHeight: value,\n    });\n  };\n\n  onSelectContact = (value, idx) => {\n    const {\n      showContactDisplayPlaceholder,\n      autoLog,\n      conversation,\n      shouldLogSelectRecord,\n      onSelectContact,\n    } = this.props;\n    const selected = showContactDisplayPlaceholder\n      ? parseInt(idx, 10) - 1\n      : parseInt(idx, 10);\n    this._userSelection = true;\n    this.setState({\n      selected,\n    });\n    if (autoLog) {\n      this.logConversation({ redirect: false, selected, prefill: false });\n    }\n    if (shouldLogSelectRecord && typeof onSelectContact === 'function') {\n      onSelectContact({\n        correspondentEntity: this.getSelectedContact(selected),\n        conversation,\n      });\n    }\n  };\n\n  getMessageListHeight() {\n    const headerHeight = 41;\n    const alertMargin = 12;\n    if (this.props.restrictSendMessage?.(this.getSelectedContact())) {\n      return `calc(100% - ${\n        this.state.alertHeight + alertMargin + headerHeight\n      }px)`;\n    }\n    return `calc(100% - ${this.state.inputHeight + headerHeight}px)`;\n  }\n\n  getDncAlertHeight() {\n    if (this.dncAlert) {\n      this.setState({\n        alertHeight: this.dncAlert.clientHeight,\n      });\n    }\n  }\n\n  getSelectedContact = (selected = this.state.selected) => {\n    if (!this.props.conversation) {\n      return null;\n    }\n    const contactMatches = this.props.conversation.correspondentMatches;\n    return (\n      (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null\n    );\n  };\n\n  getInitialContactIndex(nextProps = this.props) {\n    const {\n      correspondentMatches,\n      lastMatchedCorrespondentEntity,\n      conversationMatches,\n    } = nextProps.conversation;\n    let index = null;\n    const correspondentMatchId =\n      (lastMatchedCorrespondentEntity && lastMatchedCorrespondentEntity.id) ||\n      (conversationMatches[0] && conversationMatches[0].id);\n    if (correspondentMatchId) {\n      index = correspondentMatches.findIndex(\n        (contact) => contact.id === correspondentMatchId,\n      );\n      if (index > -1) return index;\n    }\n    return -1;\n  }\n\n  getPhoneNumber() {\n    const { conversation: { correspondents = [] } = {} } = this.props;\n    return (\n      (correspondents.length === 1 &&\n        (correspondents[0].phoneNumber || correspondents[0].extensionNumber)) ||\n      undefined\n    );\n  }\n\n  getGroupPhoneNumbers() {\n    const { conversation: { correspondents = [] } = {} } = this.props;\n    const groupNumbers =\n      correspondents.length > 1\n        ? correspondents.map(\n            (correspondent) =>\n              correspondent.extensionNumber ||\n              correspondent.phoneNumber ||\n              undefined,\n          )\n        : null;\n    return groupNumbers;\n  }\n\n  getFallbackContactName() {\n    const { conversation: { correspondents = [] } = {} } = this.props;\n    return (correspondents.length === 1 && correspondents[0].name) || undefined;\n  }\n\n  loadConversation() {\n    this.props.loadConversation(this.props.conversationId);\n    this.setState({ loaded: true });\n  }\n\n  async logConversation({ redirect = true, selected, prefill = true } = {}) {\n    if (\n      typeof this.props.onLogConversation === 'function' &&\n      this._mounted &&\n      !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogConversation({\n        correspondentEntity: this.getSelectedContact(selected),\n        conversationId: this.props.conversation.conversationId,\n        redirect,\n        prefill,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n\n  logConversation = this.logConversation.bind(this);\n\n  render() {\n    if (!this.state.loaded) {\n      return (\n        <div className={styles.root}>\n          <SpinnerOverlay />\n        </div>\n      );\n    }\n    let conversationBody = null;\n    const loading = this.props.showSpinner;\n    const { recipients, messageSubjectRenderer } = this.props;\n    if (!loading) {\n      conversationBody = (\n        <ConversationMessageList\n          currentLocale={this.props.currentLocale}\n          height={this.getMessageListHeight()}\n          messages={this.props.messages}\n          className={styles.conversationBody}\n          dateTimeFormatter={this.props.dateTimeFormatter}\n          showSender={recipients && recipients.length > 1}\n          messageSubjectRenderer={messageSubjectRenderer}\n          formatPhone={this.props.formatPhone}\n          loadingNextPage={this.props.loadingNextPage}\n          loadPreviousMessages={this.props.loadPreviousMessages}\n          onAttachmentDownload={this.props.onAttachmentDownload}\n        />\n      );\n    }\n    const { isLogging, conversationMatches, correspondentMatches } =\n      this.props.conversation;\n    const groupNumbers = this.getGroupPhoneNumbers();\n    const phoneNumber = this.getPhoneNumber();\n    // TODO: Confirm on group messages similar to MessageItem\n    const shouldHideNumber =\n      this.props.enableCDC &&\n      checkShouldHidePhoneNumber(phoneNumber, correspondentMatches);\n    const fallbackName = this.getFallbackContactName();\n    const extraButton = this.props.renderExtraButton\n      ? this.props.renderExtraButton(this.props.conversation, {\n          logConversation: this.logConversation,\n          isLogging: isLogging || this.state.isLogging,\n        })\n      : null;\n    const logButton =\n      this.props.onLogConversation && !this.props.renderExtraButton ? (\n        <LogButton\n          className={styles.logButton}\n          onLog={this.logConversation}\n          disableLinks={this.props.disableLinks}\n          isLogged={conversationMatches.length > 0}\n          isLogging={isLogging || this.state.isLogging}\n          currentLocale={this.props.currentLocale}\n        />\n      ) : null;\n    return (\n      <div className={styles.root}>\n        <div data-sign=\"conversationPanel\" className={styles.header}>\n          <ContactDisplay\n            brand={this.props.brand}\n            className={styles.contactDisplay}\n            selectClassName={styles.contactDisplaySelect}\n            contactMatches={correspondentMatches || []}\n            selected={this.state.selected}\n            onSelectContact={this.onSelectContact}\n            disabled={this.props.disableLinks}\n            isLogging={isLogging || this.state.isLogging}\n            fallBackName={fallbackName}\n            areaCode={this.props.areaCode}\n            countryCode={this.props.countryCode}\n            phoneNumber={shouldHideNumber ? null : phoneNumber}\n            groupNumbers={groupNumbers}\n            showType={false}\n            currentLocale={this.props.currentLocale}\n            enableContactFallback={this.props.enableContactFallback}\n            placeholder={this.props.contactPlaceholder}\n            showPlaceholder={this.props.showContactDisplayPlaceholder}\n            sourceIcons={this.props.sourceIcons}\n            phoneTypeRenderer={this.props.phoneTypeRenderer}\n            phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n            showGroupNumberName={this.props.showGroupNumberName}\n            dropdownRenderFunction={this.props.renderContactList}\n            dropdownClassName={this.props.dropdownClassName}\n          />\n          <a\n            onClick={() => this.props.goBack()}\n            data-sign=\"backButton\"\n            className={styles.backButton}\n          >\n            <span className={dynamicsFont.arrow} />\n          </a>\n          {extraButton && <div className={styles.logButton}>{extraButton}</div>}\n          {logButton}\n        </div>\n        {conversationBody}\n        {this.props.restrictSendMessage?.(this.getSelectedContact()) ? (\n          <RcAlert\n            ref={(target) => {\n              this.dncAlert = target;\n            }}\n            severity=\"error\"\n            size=\"small\"\n            className={styles.alert}\n            data-sign=\"dncAlert\"\n          >\n            {i18n.getString('dncAlert', this.props.currentLocale)}\n          </RcAlert>\n        ) : (\n          <MessageInput\n            value={this.props.messageText}\n            onChange={this.props.updateMessageText}\n            sendButtonDisabled={this.props.sendButtonDisabled}\n            currentLocale={this.props.currentLocale}\n            onSend={this.onSend}\n            onHeightChange={this.onInputHeightChange}\n            inputExpandable={this.props.inputExpandable}\n            attachments={this.props.attachments}\n            supportAttachment={this.props.supportAttachment}\n            addAttachment={this.props.addAttachment}\n            removeAttachment={this.props.removeAttachment}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nConversationPanel.propTypes = {\n  brand: PropTypes.string.isRequired,\n  replyToReceivers: PropTypes.func.isRequired,\n  messages: ConversationMessageList.propTypes.messages,\n  updateMessageText: PropTypes.func,\n  messageText: PropTypes.string,\n  recipients: PropTypes.arrayOf(\n    PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool.isRequired,\n  disableLinks: PropTypes.bool,\n  conversation: PropTypes.object.isRequired,\n  onLogConversation: PropTypes.func,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  autoLog: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  goBack: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  contactPlaceholder: PropTypes.string,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  showGroupNumberName: PropTypes.bool,\n  messageSubjectRenderer: PropTypes.func,\n  formatPhone: PropTypes.func.isRequired,\n  readMessages: PropTypes.func.isRequired,\n  loadPreviousMessages: PropTypes.func.isRequired,\n  unloadConversation: PropTypes.func.isRequired,\n  perPage: PropTypes.number,\n  conversationId: PropTypes.string.isRequired,\n  loadConversation: PropTypes.func,\n  renderExtraButton: PropTypes.func,\n  loadingNextPage: PropTypes.bool,\n  inputExpandable: PropTypes.bool,\n  attachments: PropTypes.arrayOf(\n    PropTypes.shape({\n      size: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  ),\n  supportAttachment: PropTypes.bool,\n  addAttachment: PropTypes.func,\n  removeAttachment: PropTypes.func,\n  onAttachmentDownload: PropTypes.func,\n  restrictSendMessage: PropTypes.func,\n  shouldLogSelectRecord: PropTypes.bool,\n  onSelectContact: PropTypes.func,\n  renderContactList: PropTypes.func,\n  dropdownClassName: PropTypes.string,\n  enableCDC: PropTypes.bool,\n};\nConversationPanel.defaultProps = {\n  disableLinks: false,\n  onLogConversation: undefined,\n  autoLog: false,\n  enableContactFallback: undefined,\n  showContactDisplayPlaceholder: true,\n  contactPlaceholder: '',\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  showGroupNumberName: false,\n  messageText: '',\n  updateMessageText: () => null,\n  messageSubjectRenderer: undefined,\n  perPage: undefined,\n  loadConversation: () => null,\n  renderExtraButton: undefined,\n  loadingNextPage: false,\n  inputExpandable: undefined,\n  attachments: [],\n  supportAttachment: false,\n  addAttachment: () => null,\n  removeAttachment: () => null,\n  onAttachmentDownload: undefined,\n  restrictSendMessage: undefined,\n  shouldLogSelectRecord: false,\n  onSelectContact: undefined,\n  renderContactList: undefined,\n  dropdownClassName: null,\n  enableCDC: false,\n};\n\nexport default ConversationPanel;\n"],"file":"index.js"}