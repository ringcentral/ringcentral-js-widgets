{"version":3,"sources":["components/ForwardPanel/index.tsx"],"names":["ForwardPanel","props","_mounted","onButtonOutput","key","setState","preState","value","toNumber","onForward","telephonySessionId","forwarding","state","onToNumberChange","event","currentTarget","onBackClick","currentLocale","children","styles","root","backHeader","i18n","getString","dialInput","input","padContainer","dialPad","buttonRow","button","ForwardIcon","forwardIcon","forwardIconDisable","PureComponent"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport classnames from 'classnames';\n\nimport ForwardIcon from '../../assets/images/Forward_white.svg';\nimport BackHeader from '../BackHeader';\nimport CircleButton from '../CircleButton';\nimport DialPad from '../DialPad';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype ForwardPanelProps = {\n  onForward: (...args: any[]) => any;\n  currentLocale: string;\n  onBackClick: (...args: any[]) => any;\n  telephonySessionId: string;\n};\ntype ForwardPanelState = {\n  toNumber: string;\n  forwarding: boolean;\n};\nclass ForwardPanel extends PureComponent<ForwardPanelProps, ForwardPanelState> {\n  _mounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      toNumber: '',\n      forwarding: false,\n    };\n  }\n  componentDidMount() {\n    this._mounted = true;\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n  onButtonOutput = (key) => {\n    this.setState((preState) => {\n      const value = preState.toNumber + key;\n      return { toNumber: value };\n    });\n  };\n  onForward = async () => {\n    const { onForward, telephonySessionId } = this.props;\n    this.setState({\n      forwarding: true,\n    });\n    await onForward(this.state.toNumber, telephonySessionId);\n    // forward success then page destroyed\n    if (!this._mounted) return;\n    this.setState({\n      forwarding: false,\n    });\n  };\n  onToNumberChange = (event) => {\n    const toNumber = event.currentTarget.value;\n    this.setState({\n      toNumber,\n    });\n  };\n  render() {\n    const { onBackClick, currentLocale, children } = this.props;\n    const { forwarding } = this.state;\n    return (\n      <div className={styles.root} data-sign=\"forwardPage\">\n        <BackHeader onBackClick={onBackClick} className={styles.backHeader}>\n          {i18n.getString('forward', currentLocale)}\n        </BackHeader>\n        <div className={classnames(styles.dialInput)}>\n          <input\n            data-sign=\"input\"\n            className={styles.input}\n            value={this.state.toNumber}\n            onChange={this.onToNumberChange}\n            autoFocus // eslint-disable-line\n          />\n        </div>\n        <div className={styles.padContainer}>\n          <DialPad\n            dataSign=\"forwardDialpad\"\n            className={styles.dialPad}\n            onButtonOutput={this.onButtonOutput}\n          />\n          <div className={styles.buttonRow}>\n            <div className={styles.button}>\n              <CircleButton\n                dataSign=\"forwardBtn\"\n                onClick={this.onForward}\n                icon={ForwardIcon}\n                className={classnames(styles.forwardIcon, {\n                  [styles.forwardIconDisable]: forwarding,\n                })}\n              />\n            </div>\n          </div>\n        </div>\n        {children}\n      </div>\n    );\n  }\n}\nexport default ForwardPanel;\n"],"file":"index.js"}