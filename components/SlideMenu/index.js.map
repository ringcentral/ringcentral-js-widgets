{"version":3,"sources":["components/SlideMenu/index.tsx"],"names":["ExtendIcon","onClick","extendIconClassName","styles","extendIcon","extendInner","propTypes","PropTypes","func","string","defaultProps","undefined","SlideMenu","props","onToggle","e","stopPropagation","setState","prevState","extended","state","nextProps","_mounted","className","minHeight","maxHeight","children","withAnimation","propsExtended","stateExtended","wrapperStyles","height","root","wrapper","content","Component","node","bool","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.scss';\n\nconst ExtendIcon = ({ onClick, extendIconClassName }) => (\n  <div data-sign=\"extendButton\" className={styles.extendIcon} onClick={onClick}>\n    <div className={classnames(styles.extendInner, extendIconClassName)} />\n  </div>\n);\n\nExtendIcon.propTypes = {\n  onClick: PropTypes.func,\n  extendIconClassName: PropTypes.string,\n};\n\nExtendIcon.defaultProps = {\n  onClick() {},\n  extendIconClassName: undefined,\n};\n\nclass SlideMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      extended: false,\n    };\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { extended } = this.props;\n    if (nextProps.extended !== extended) {\n      this.setState({\n        extended: nextProps.extended,\n      });\n    }\n  }\n  componentDidMount() {\n    this._mounted = true;\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  onToggle = (e) => {\n    e.stopPropagation();\n    this.setState((prevState) => ({ extended: !prevState.extended }));\n    const { onToggle } = this.props;\n    if (onToggle) {\n      onToggle(e);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      minHeight,\n      maxHeight,\n      children,\n      withAnimation,\n      extendIconClassName,\n      extended: propsExtended,\n    } = this.props;\n\n    const { extended: stateExtended } = this.state;\n\n    const extended = propsExtended || stateExtended;\n\n    const wrapperStyles = {\n      height: extended ? maxHeight : minHeight,\n    };\n\n    return (\n      <div className={classnames(styles.root, className)}>\n        <div\n          className={classnames(\n            styles.wrapper,\n            withAnimation && styles.withAnimation,\n          )}\n          style={wrapperStyles}\n        >\n          <div className={styles.content}>{children}</div>\n        </div>\n        <ExtendIcon\n          extendIconClassName={\n            extended ? classnames(styles.extended, extendIconClassName) : null\n          }\n          onClick={this.onToggle}\n        />\n      </div>\n    );\n  }\n}\n\nSlideMenu.propTypes = {\n  children: PropTypes.node,\n  extended: PropTypes.bool,\n  onToggle: PropTypes.func,\n  className: PropTypes.string,\n  extendIconClassName: PropTypes.string,\n  minHeight: PropTypes.number,\n  maxHeight: PropTypes.number,\n  withAnimation: PropTypes.bool,\n};\nSlideMenu.defaultProps = {\n  className: undefined,\n  extendIconClassName: undefined,\n  children: undefined,\n  onToggle: undefined,\n  extended: false,\n  minHeight: 0,\n  maxHeight: 100,\n  withAnimation: true,\n};\n\nexport default SlideMenu;\n"],"file":"index.js"}