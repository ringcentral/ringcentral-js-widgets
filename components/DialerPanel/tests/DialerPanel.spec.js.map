{"version":3,"sources":["components/DialerPanel/tests/DialerPanel.spec.tsx"],"names":["mockAudio","window","HTMLMediaElement","prototype","play","Promise","resolve","describe","wrapper","getCallButton","find","at","getDeleteButton","last","afterEach","unmount","it","toNumber","setToNumber","jest","fn","recipientsInput","RcDialTextField","eventObj","target","value","simulate","expect","toBeCalledWith","deleteButton","exists","toBeFalsy","toBeTruthy","dialoutStatus","dialout","callButton","not","toBeCalled","goToManualDialSettings","manualDialSettings","hasDialer","callButtonTip","noDialerWrapper","noManualDialSettings","noCallButtonTip","noRecipientsInput"],"mappings":"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","sourcesContent":["import { ReactWrapper } from 'enzyme';\n\nimport { RcDialTextField } from '@ringcentral/juno';\n\nimport { DialoutStatusesType } from '../../../enums/dialoutStatus';\nimport { createDialerPanel } from './createDialerPanel';\n\nconst mockAudio = () => {\n  window.HTMLMediaElement.prototype.play = () => {\n    return new Promise((resolve) => {\n      resolve();\n    });\n  };\n};\n\nmockAudio();\n\ndescribe('<DialerPanel />', () => {\n  let wrapper: ReactWrapper;\n  const getCallButton = () => wrapper.find('[data-sign=\"callButton\"]').at(0);\n  const getDeleteButton = () =>\n    wrapper.find('button[data-sign=\"deleteButton\"]').last();\n\n  afterEach(async () => {\n    wrapper.unmount();\n  });\n\n  it('User can manually input numbers in the recipientsInput', async () => {\n    const toNumber = '';\n    const setToNumber = jest.fn(() => {});\n    wrapper = createDialerPanel({ toNumber, setToNumber });\n    const recipientsInput = wrapper.find(RcDialTextField).at(0);\n    const eventObj = { target: { value: '1243' } };\n    recipientsInput.find('input').at(0).simulate('change', eventObj);\n    expect(setToNumber).toBeCalledWith('1243');\n  });\n\n  it('Delete button show switch', async () => {\n    wrapper = createDialerPanel({ toNumber: '' });\n    let deleteButton = getDeleteButton();\n    expect(deleteButton.exists()).toBeFalsy();\n    wrapper = createDialerPanel({ toNumber: '6508652493' });\n    deleteButton = getDeleteButton();\n    expect(deleteButton.exists()).toBeTruthy();\n  });\n\n  it(`Dialpad is not allowed to dialout in the state of dialing`, async () => {\n    const toNumber = '6508652493';\n    const dialoutStatus = 'dialing' as DialoutStatusesType;\n    const dialout = jest.fn(() => {});\n    wrapper = createDialerPanel({ toNumber, dialout, dialoutStatus });\n    const callButton = getCallButton();\n    callButton.simulate('click');\n    expect(dialout).not.toBeCalled();\n  });\n\n  it('User clicks manualDialSettings', () => {\n    const goToManualDialSettings = jest.fn(() => {});\n    wrapper = createDialerPanel({ goToManualDialSettings });\n    const manualDialSettings = wrapper\n      .find('[data-sign=\"manualDialSettings\"]')\n      .at(0);\n    manualDialSettings.simulate('click');\n    expect(goToManualDialSettings).toBeCalled();\n  });\n\n  it('Check Disabled Allow Manual Calls', () => {\n    /* RCI-3899: Check Disabled Allow Manual Calls\n      https://testit.ringcentral.com/test-cases/RCI-3899\n    */\n    wrapper = createDialerPanel({ hasDialer: true });\n    const manualDialSettings = wrapper\n      .find('[data-sign=\"manualDialSettings\"]')\n      .at(0);\n    const callButtonTip = wrapper.find('[data-sign=\"callButtonTip\"]').at(0);\n    const recipientsInput = wrapper.find(RcDialTextField).at(0);\n    expect(recipientsInput.exists()).toBeTruthy();\n    expect(manualDialSettings.exists()).toBeTruthy();\n    expect(callButtonTip.exists()).toBeTruthy();\n\n    const noDialerWrapper = createDialerPanel({ hasDialer: false });\n    const noManualDialSettings = noDialerWrapper\n      .find('[data-sign=\"manualDialSettings\"]')\n      .at(0);\n    const noCallButtonTip = noDialerWrapper\n      .find('[data-sign=\"callButtonTip\"]')\n      .at(0);\n    const noRecipientsInput = noDialerWrapper.find(RcDialTextField).at(0);\n    expect(noRecipientsInput.exists()).toBeFalsy();\n    expect(noManualDialSettings.exists()).toBeFalsy();\n    expect(noCallButtonTip.exists()).toBeFalsy();\n  });\n});\n"],"file":"DialerPanel.spec.js"}