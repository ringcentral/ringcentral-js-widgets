{"version":3,"sources":["components/DialerPanel/Dialer/Dialer.tsx"],"names":["Dialer","value","setValue","children","placeholder","isHaveValue","length","endAdornment","Deletenumber","RcDialerPadSounds","v"],"mappings":";;;;;;;;;AAAA;;AASA;;AACA;;AAEA;;;;AAOO,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,OAKhD;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,WACI,QADJA,WACI;AACJ,MAAMC,WAAW,GAAGJ,KAAK,CAACK,MAAN,GAAe,CAAnC;AAEA,sBACE,gCAAC,cAAD,qBACE,gCAAC,qBAAD,qBACE,gCAAC,wBAAD;AAAkB,IAAA,WAAW,EAAED;AAA/B,kBACE,gCAAC,qBAAD;AACE,iBAAU,aADZ;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,KAAK,EAAC,QAJR;AAKE,IAAA,WAAW,EAAEG,WALf;AAME,IAAA,SAAS,MANX;AAOE,IAAA,oBAAoB,MAPtB;AAQE,IAAA,QAAQ,EAAEF,QARZ;AASE,IAAA,UAAU,EAAE;AACVK,MAAAA,YAAY,EAAEN,KAAK,CAACK,MAAN,GAAe,CAAf,iBACZ,gCAAC,kBAAD,qBACE,gCAAC,kBAAD;AACE,QAAA,MAAM,EAAEE,kBADV;AAEE,qBAAU,cAFZ;AAGE,QAAA,KAAK,EAAC,aAHR;AAIE,QAAA,KAAK,EAAC,QAJR;AAKE,QAAA,OAAO,EAAC,OALV;AAME,QAAA,IAAI,EAAC;AANP,QADF;AAFQ;AATd,IADF,CADF,eA2BE,gCAAC,sBAAD,qBACE,gCAAC,eAAD;AACE,iBAAU,SADZ;AAEE,IAAA,MAAM,EAAEC,uBAFV;AAGE,IAAA,qBAAqB,EAAE,+BAACC,CAAD;AAAA,aAAQ;AAAE,sCAAuBA,CAAvB;AAAF,OAAR;AAAA;AAHzB,IADF,CA3BF,EAkCGP,QAlCH,CADF,CADF;AAwCD,CAhDM","sourcesContent":["import {\n  RcDialDelete,\n  RcDialer,\n  RcDialerPadSounds,\n  RcDialPad,\n  RcDialTextField,\n  RcDialTextFieldProps,\n  RcIconButton,\n} from '@ringcentral/juno';\nimport { Deletenumber } from '@ringcentral/juno/icon';\nimport React, { FunctionComponent } from 'react';\n\nimport { DialerWrapper, DialPadWrapper, TextFieldWrapper } from './styles';\n\nexport type DialerProps = {\n  value: string;\n  setValue: (value: string) => void;\n} & Pick<RcDialTextFieldProps, 'placeholder'>;\n\nexport const Dialer: FunctionComponent<DialerProps> = ({\n  value,\n  setValue,\n  children,\n  placeholder,\n}) => {\n  const isHaveValue = value.length > 0;\n\n  return (\n    <RcDialer>\n      <DialerWrapper>\n        <TextFieldWrapper isHaveValue={isHaveValue}>\n          <RcDialTextField\n            data-sign=\"numberField\"\n            value={value}\n            textVariant=\"subheading1\"\n            align=\"center\"\n            placeholder={placeholder}\n            fullWidth\n            onlyAllowKeypadValue\n            onChange={setValue}\n            InputProps={{\n              endAdornment: value.length > 0 && (\n                <RcDialDelete>\n                  <RcIconButton\n                    symbol={Deletenumber}\n                    data-sign=\"deleteButton\"\n                    color=\"neutral.f03\"\n                    title=\"delete\"\n                    variant=\"plain\"\n                    size=\"large\"\n                  />\n                </RcDialDelete>\n              ),\n            }}\n          />\n        </TextFieldWrapper>\n        <DialPadWrapper>\n          <RcDialPad\n            data-sign=\"DialPad\"\n            sounds={RcDialerPadSounds}\n            getDialPadButtonProps={(v) => ({ 'data-dial-button': `${v}` })}\n          />\n        </DialPadWrapper>\n        {children}\n      </DialerWrapper>\n    </RcDialer>\n  );\n};\n"],"file":"Dialer.js"}