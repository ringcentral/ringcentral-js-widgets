{"version":3,"sources":["components/DialerPanel/DialerPanel.tsx"],"names":["DialerPanel","currentLocale","callButtonDisabled","className","dialButtonsClassName","onToNumberChange","onCallButtonClick","toNumber","fromNumber","fromNumbers","changeFromNumber","formatPhone","isWebphoneMode","showSpinner","dialButtonVolume","dialButtonMuted","searchContact","searchContactList","recipients","recipient","clearToNumber","setRecipient","clearRecipient","phoneTypeRenderer","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","autoFocus","showFromField","disableFromField","children","withTabs","inConference","isLastInputFromDialpad","showAnonymous","useV2","inputEl","current","focus","input","styles","inputField","recipientsField","element","root","dialButtons","dialPad","key","callBtnRow","callBtnRowWithTabs","callBtnRowInConference","callBtn","dialBtn","disabled","AnswerIcon","Empty","defaultProps","phoneNumber"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useRef } from 'react';\n\nimport classnames from 'classnames';\n\nimport AnswerIcon from '../../assets/images/Answer.svg';\nimport CircleButton from '../CircleButton';\nimport DialPad from '../DialPad';\nimport FromField from '../FromField';\nimport RecipientsInput from '../RecipientsInput';\nimport { RecipientsInputV2 } from '../RecipientsInputV2';\nimport { Recipient } from '../RecipientsInputV2/RecipientsInputV2.interface';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport styles from './styles.scss';\n\nexport interface DialerPanelProps {\n  currentLocale: string;\n  className?: string;\n  dialButtonsClassName?: string;\n  onCallButtonClick: (...args: any[]) => any;\n  callButtonDisabled?: boolean;\n  isWebphoneMode?: boolean;\n  toNumber?: string;\n  onToNumberChange?: (...args: any[]) => any;\n  fromNumber?: string;\n  fromNumbers?: {\n    phoneNumber?: string;\n    usageType?: string;\n  }[];\n  changeFromNumber?: (...args: any[]) => any;\n  formatPhone?: (...args: any[]) => any;\n  showSpinner?: boolean;\n  dialButtonVolume?: number;\n  dialButtonMuted?: boolean;\n  searchContact: (...args: any[]) => any;\n  searchContactList: {\n    name: string;\n    entityType: string;\n    phoneType: string;\n    phoneNumber: string;\n  }[];\n  recipient?: Recipient;\n  recipients: Recipient[];\n  clearToNumber: (...args: any[]) => any;\n  setRecipient: (...args: any[]) => any;\n  clearRecipient: (...args: any[]) => any;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  recipientsContactInfoRenderer?: (...args: any[]) => any;\n  recipientsContactPhoneRenderer?: (...args: any[]) => any;\n  autoFocus?: boolean;\n  showFromField?: boolean;\n  disableFromField?: boolean;\n  withTabs?: boolean;\n  inConference?: boolean;\n  isLastInputFromDialpad?: boolean;\n  useV2?: boolean;\n  showAnonymous?: boolean;\n}\nconst DialerPanel: FunctionComponent<DialerPanelProps> = ({\n  currentLocale,\n  callButtonDisabled,\n  className,\n  dialButtonsClassName,\n  onToNumberChange,\n  onCallButtonClick,\n  toNumber,\n  fromNumber,\n  fromNumbers,\n  changeFromNumber,\n  formatPhone,\n  isWebphoneMode,\n  showSpinner,\n  dialButtonVolume,\n  dialButtonMuted,\n  searchContact,\n  searchContactList,\n  recipients,\n  recipient,\n  clearToNumber,\n  setRecipient,\n  clearRecipient,\n  phoneTypeRenderer,\n  phoneSourceNameRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n  autoFocus,\n  showFromField = true,\n  disableFromField = false,\n  children,\n  withTabs,\n  inConference,\n  isLastInputFromDialpad,\n  showAnonymous,\n  useV2,\n}) => {\n  const inputEl = useRef(null);\n  useEffect(() => {\n    if (useV2 && autoFocus && inputEl.current) {\n      inputEl.current.focus();\n    }\n  }, []);\n  const input = useV2 ? (\n    <RecipientsInputV2\n      ref={inputEl}\n      value={toNumber}\n      onInputChange={onToNumberChange}\n      onInputClear={clearToNumber}\n      recipients={recipients}\n      addToRecipients={setRecipient}\n      removeFromRecipients={clearRecipient}\n      searchContactList={searchContactList}\n      formatContactPhone={formatPhone}\n      currentLocale={currentLocale}\n      phoneTypeRenderer={phoneTypeRenderer}\n      phoneSourceNameRenderer={phoneSourceNameRenderer}\n      contactInfoRenderer={recipientsContactInfoRenderer}\n      contactPhoneRenderer={recipientsContactPhoneRenderer}\n      isLastInputFromDialpad={isLastInputFromDialpad}\n      enableTitle\n      className={\n        !showFromField\n          ? classnames(styles.inputField, styles.recipientsField)\n          : null\n      }\n    />\n  ) : (\n    <RecipientsInput\n      inputRef={(element) => {\n        inputEl.current = element;\n      }}\n      value={toNumber}\n      onChange={onToNumberChange}\n      onClean={clearToNumber}\n      recipient={recipient}\n      addToRecipients={setRecipient}\n      removeFromRecipients={clearRecipient}\n      searchContact={searchContact}\n      searchContactList={searchContactList}\n      formatContactPhone={formatPhone}\n      currentLocale={currentLocale}\n      phoneTypeRenderer={phoneTypeRenderer}\n      phoneSourceNameRenderer={phoneSourceNameRenderer}\n      contactInfoRenderer={recipientsContactInfoRenderer}\n      contactPhoneRenderer={recipientsContactPhoneRenderer}\n      isLastInputFromDialpad={isLastInputFromDialpad}\n      titleEnabled\n      autoFocus={autoFocus}\n      className={\n        !showFromField\n          ? classnames(styles.inputField, styles.recipientsField)\n          : null\n      }\n    />\n  );\n  return (\n    <div className={classnames(styles.root, className)}>\n      {input}\n      {showFromField ? (\n        <div className={styles.inputField}>\n          <FromField\n            showAnonymous={showAnonymous}\n            fromNumber={fromNumber}\n            fromNumbers={fromNumbers}\n            onChange={changeFromNumber}\n            formatPhone={formatPhone}\n            currentLocale={currentLocale}\n            hidden={!isWebphoneMode}\n            disabled={disableFromField}\n          />\n        </div>\n      ) : null}\n      <div className={classnames(styles.dialButtons, dialButtonsClassName)}>\n        <DialPad\n          className={styles.dialPad}\n          onButtonOutput={(key) => {\n            onToNumberChange(toNumber + key, true);\n            if (inputEl.current) {\n              inputEl.current.focus();\n            }\n          }}\n          dialButtonVolume={dialButtonVolume}\n          dialButtonMuted={dialButtonMuted}\n        />\n        <div\n          className={classnames(\n            styles.callBtnRow,\n            withTabs && styles.callBtnRowWithTabs,\n            inConference && styles.callBtnRowInConference,\n          )}\n        >\n          <div className={styles.callBtn}>\n            <CircleButton\n              dataSign=\"callButton\"\n              className={classnames(\n                styles.dialBtn,\n                callButtonDisabled && styles.disabled,\n              )}\n              onClick={onCallButtonClick}\n              disabled={callButtonDisabled}\n              icon={AnswerIcon}\n              showBorder={false}\n            />\n          </div>\n        </div>\n      </div>\n      {showSpinner ? <SpinnerOverlay /> : null}\n      {children}\n    </div>\n  );\n};\n\nconst Empty: FunctionComponent = () => null;\n\nDialerPanel.defaultProps = {\n  className: null,\n  dialButtonsClassName: null,\n  fromNumber: null,\n  callButtonDisabled: false,\n  toNumber: '',\n  fromNumbers: [],\n  isWebphoneMode: false,\n  changeFromNumber: Empty,\n  onToNumberChange: Empty,\n  formatPhone: (phoneNumber) => phoneNumber,\n  showSpinner: false,\n  dialButtonVolume: 1,\n  dialButtonMuted: false,\n  recipients: [],\n  autoFocus: false,\n  showFromField: true,\n  disableFromField: false,\n  withTabs: false,\n  inConference: false,\n  isLastInputFromDialpad: false,\n  useV2: false,\n  showAnonymous: true,\n};\nexport default DialerPanel;\n"],"file":"DialerPanel.js"}