{"version":3,"sources":["components/DialerPanel/DialerPanel.tsx"],"names":["LinkSizeMapping","small","medium","large","DialerPanel","dialout","toNumber","currentLocale","size","hasDialer","setToNumber","goToManualDialSettings","dialoutStatus","dialButtonDisabled","hangup","isIdle","i18n","getString"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAYA;;AACA;;AACA;;;;AAEA,IAAMA,eAAwD,GAAG;AAC/DC,EAAAA,KAAK,EAAE,UADwD;AAE/DC,EAAAA,MAAM,EAAE,OAFuD;AAG/DC,EAAAA,KAAK,EAAE;AAHwD,CAAjE;;AAQA,IAAMC,WAAgD,GAAG,SAAnDA,WAAmD,OAWnD;AAAA,MAVJC,OAUI,QAVJA,OAUI;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJC,aAQI,QARJA,aAQI;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,sBAII,QAJJA,sBAII;AAAA,gCAHJC,aAGI;AAAA,MAHJA,aAGI,mCAHY,MAGZ;AAAA,MAFJC,kBAEI,QAFJA,kBAEI;AAAA,MADJC,MACI,QADJA,MACI;;AACJ,MAAI,CAACL,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AACD,MAAMM,MAAM,GAAGH,aAAa,KAAK,MAAjC;AAEA,sBACE,gCAAC,cAAD;AACE,IAAA,KAAK,EAAEN,QADT;AAEE,IAAA,QAAQ,EAAEI,WAFZ;AAGE,IAAA,WAAW,EAAEM,iBAAKC,SAAL,CAAe,iBAAf,EAAkCV,aAAlC;AAHf,KAKG,CAACD,QAAD,iBACC,gCAAC,iCAAD,qBACE,gCAAC,YAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,MAAM,EAAE,KAHV;AAIE,IAAA,KAAK,EAAC,aAJR;AAKE,iBAAU;AALZ,KAOGU,iBAAKC,SAAL,CAAe,eAAf,EAAgCV,aAAhC,CAPH,CADF,eAUE,gCAAC,YAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,MAAM,EAAE,KAHV;AAIE,IAAA,KAAK,EAAC,aAJR;AAKE,iBAAU;AALZ,KAOGS,iBAAKC,SAAL,CAAe,wBAAf,EAAyCV,aAAzC,CAPH,CAVF,CANJ,EA4BGD,QAAQ,iBACP,gCAAC,cAAD;AACE,IAAA,IAAI,EAAEE,IAAI,KAAK,QAAT,GAAoB,OAApB,GAA8BA,IADtC;AAEE,IAAA,eAAe,EAAC,QAFlB;AAGE,IAAA,KAAK,EAAEQ,iBAAKC,SAAL,CAAe,YAAf,EAA6BV,aAA7B,CAHT;AAIE,iBAAU,YAJZ;AAKE,IAAA,QAAQ,EAAE,CAACQ,MAAD,IAAWF,kBALvB;AAME,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIE,MAAJ,EAAY;AACVV,QAAAA,OAAO;AACR,OAFD,MAEO;AACLS,QAAAA,MAAM;AACP;AACF;AAZH,KAcGE,iBAAKC,SAAL,CAAe,YAAf,EAA6BV,aAA7B,CAdH,CA7BJ,eA8CE,gCAAC,iCAAD,qBACE,gCAAC,YAAD;AACE,IAAA,OAAO,EAAEP,eAAe,CAACQ,IAAD,CAD1B;AAEE,IAAA,OAAO,EAAEG,sBAFX;AAGE,iBAAU;AAHZ,KAKGK,iBAAKC,SAAL,CAAe,oBAAf,EAAqCV,aAArC,CALH,CADF,CA9CF,CADF;AA0DD,CA3ED","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport {\n  RcButton,\n  RcLink,\n  RcLinkSize,\n  RcText,\n  RcTypographyVariant,\n} from '@ringcentral/juno';\n\nimport {\n  EvDialerUIFunctions,\n  EvDialerUIProps,\n} from '../../interfaces/EvDialerUI.interface';\nimport { Dialer } from './Dialer';\nimport { RcLinkWrapper, RcTextWrapper } from './DialerPanelWrapper';\nimport i18n from './i18n';\n\nconst LinkSizeMapping: Record<RcLinkSize, RcTypographyVariant> = {\n  small: 'caption1',\n  medium: 'body1',\n  large: 'headline1',\n};\n\nexport type DialerPanelProps = EvDialerUIProps & EvDialerUIFunctions;\n\nconst DialerPanel: FunctionComponent<DialerPanelProps> = ({\n  dialout,\n  toNumber,\n  currentLocale,\n  size,\n  hasDialer,\n  setToNumber,\n  goToManualDialSettings,\n  dialoutStatus = 'idle',\n  dialButtonDisabled,\n  hangup,\n}) => {\n  if (!hasDialer) {\n    return null;\n  }\n  const isIdle = dialoutStatus === 'idle';\n\n  return (\n    <Dialer\n      value={toNumber}\n      setValue={setToNumber}\n      placeholder={i18n.getString('dialPlaceholder', currentLocale)}\n    >\n      {!toNumber && (\n        <RcTextWrapper>\n          <RcText\n            variant=\"inherit\"\n            align=\"center\"\n            noWrap={false}\n            color=\"neutral.f03\"\n            data-sign=\"callButtonTip\"\n          >\n            {i18n.getString('callButtonTip', currentLocale)}\n          </RcText>\n          <RcText\n            variant=\"inherit\"\n            align=\"center\"\n            noWrap={false}\n            color=\"neutral.f03\"\n            data-sign=\"callButtonEmergencyTip\"\n          >\n            {i18n.getString('callButtonEmergencyTip', currentLocale)}\n          </RcText>\n        </RcTextWrapper>\n      )}\n\n      {toNumber && (\n        <RcButton\n          size={size === 'medium' ? 'large' : size}\n          disabledVariant=\"normal\"\n          title={i18n.getString('callButton', currentLocale)}\n          data-sign=\"callButton\"\n          disabled={!isIdle || dialButtonDisabled}\n          onClick={() => {\n            if (isIdle) {\n              dialout();\n            } else {\n              hangup();\n            }\n          }}\n        >\n          {i18n.getString('callButton', currentLocale)}\n        </RcButton>\n      )}\n      <RcLinkWrapper>\n        <RcLink\n          variant={LinkSizeMapping[size]}\n          onClick={goToManualDialSettings}\n          data-sign=\"manualDialSettings\"\n        >\n          {i18n.getString('manualDialSettings', currentLocale)}\n        </RcLink>\n      </RcLinkWrapper>\n    </Dialer>\n  );\n};\n\nexport { DialerPanel };\n"],"file":"DialerPanel.js"}