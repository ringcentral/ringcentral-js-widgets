{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_classnames2","_styles","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","capitalize","str","toUpperCase","slice","getMeidaCls","styles","concat","MediaObject","_ref","_classnames","containerCls","mediaLeft","mediaBody","mediaRight","leftCls","bodyCls","rightCls","mediaHeading","headingCls","leftAlignment","bodyAlignment","rightAlignment","flexible","leftAlignmentClassName","rightAlignmentClassName","bodyAlignmentClassName","createElement","className","classnames","media","flex","mediaObject","defaultProps","_default","exports"],"sources":["components/MediaObject/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\nfunction capitalize(str: any) {\n  return str[0].toUpperCase() + str.slice(1);\n}\nfunction getMeidaCls(str: any) {\n  return styles[`media${capitalize(str)}`];\n}\ntype MediaObjectProps = {\n  containerCls?: string;\n  mediaLeft?: JSX.Element;\n  mediaBody?: JSX.Element | string;\n  mediaRight?: JSX.Element;\n  mediaHeading?: string;\n  leftCls?: string;\n  bodyCls?: string;\n  rightCls?: string;\n  headingCls?: string;\n  leftAlignment?: 'top' | 'middle' | 'bottom';\n  bodyAlignment?: 'top' | 'middle' | 'bottom';\n  rightAlignment?: 'top' | 'middle' | 'bottom';\n  flexible?: boolean;\n};\nconst MediaObject: React.SFC<MediaObjectProps> = ({\n  containerCls,\n  mediaLeft,\n  mediaBody,\n  mediaRight,\n  leftCls,\n  bodyCls,\n  rightCls,\n  mediaHeading,\n  headingCls,\n  leftAlignment,\n  bodyAlignment,\n  rightAlignment,\n  flexible,\n}) => {\n  const leftAlignmentClassName = getMeidaCls(leftAlignment);\n  const rightAlignmentClassName = getMeidaCls(rightAlignment);\n  const bodyAlignmentClassName = getMeidaCls(bodyAlignment);\n  return (\n    <div\n      className={classnames({\n        [styles.media]: true,\n        [styles.flex]: !!flexible,\n        // @ts-expect-error TS(2464): A computed property name must be of type 'string',... Remove this comment to see the full error message\n        [containerCls]: !!containerCls,\n      })}\n    >\n      {mediaLeft ? (\n        <div\n          className={classnames(\n            styles.mediaLeft,\n            leftAlignmentClassName,\n            leftCls,\n          )}\n        >\n          <div className={styles.mediaObject}>{mediaLeft}</div>\n        </div>\n      ) : null}\n      <div\n        className={classnames(\n          styles.mediaBody,\n          bodyAlignmentClassName,\n          bodyCls,\n        )}\n      >\n        {mediaHeading ? (\n          <h4 className={classnames(styles.mediaHeading, headingCls)}>\n            {mediaHeading}\n          </h4>\n        ) : null}\n        {mediaBody}\n      </div>\n      {mediaRight ? (\n        <div\n          className={classnames(\n            styles.mediaRight,\n            rightAlignmentClassName,\n            rightCls,\n          )}\n        >\n          <div className={styles.mediaObject}>{mediaRight}</div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\nMediaObject.defaultProps = {\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | un... Remove this comment to see the full error message\n  containerCls: null,\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Element | u... Remove this comment to see the full error message\n  mediaLeft: null,\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | El... Remove this comment to see the full error message\n  mediaBody: null,\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Element | u... Remove this comment to see the full error message\n  mediaRight: null,\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | un... Remove this comment to see the full error message\n  mediaHeading: null,\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | un... Remove this comment to see the full error message\n  leftCls: null,\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | un... Remove this comment to see the full error message\n  bodyCls: null,\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | un... Remove this comment to see the full error message\n  rightCls: null,\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | un... Remove this comment to see the full error message\n  headingCls: null,\n  leftAlignment: 'middle',\n  bodyAlignment: 'middle',\n  rightAlignment: 'middle',\n  flexible: true,\n};\nexport default MediaObject;\n"],"mappings":"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"}