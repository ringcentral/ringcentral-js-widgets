{"version":3,"sources":["components/Rcui/RecipientsInput/RecipientsInput.tsx"],"names":["throttledTime","RecipientsInput","ref","placeholder","value","currentLocale","onChange","onDelete","onClear","className","deleteIconProps","rest","innerRef","inputRef","mouseDownTime","setMouseDownTime","timer","setTimer","haveDeleteButton","handleMouseDown","Date","setTimeout","handleMouseUp","curTime","clearTimeout","current","focus","styles","inputRoot","i18n","getString","maxLength","e","target","root","textFieldRoot","disableUnderline","classes","input","endAdornment","Deletenumber","onMouseUp","onMouseDown"],"mappings":"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","sourcesContent":["import React, { forwardRef, useEffect, useRef, useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport {\n  combineProps,\n  RcBaseProps,\n  RcIconButton,\n  RcIconButtonProps,\n  RcTextField,\n  RcTextFieldProps,\n  useEventCallback,\n  useForkRef,\n} from '@ringcentral/juno';\nimport { Deletenumber } from '@ringcentral/juno/icon';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type RecipientsInputProps = {\n  recipients?: {\n    phoneNumber: string;\n    name?: string;\n  }[];\n  /** if you need default placeholder, you need pass currentLocal */\n  currentLocale?: string;\n  onChange(value?: string): any;\n  onDelete(): any;\n  onClear(): any;\n  /** props for `deleteIcon` */\n  deleteIconProps?: RcBaseProps<RcIconButtonProps, 'variant' | 'size'>;\n  className?: string;\n} & Omit<RcTextFieldProps, 'onChange'>;\n\nconst throttledTime = 1000;\n\n/** @deprecated use juno RcDialTextField directly */\nexport const RecipientsInput = forwardRef<\n  HTMLInputElement,\n  RecipientsInputProps\n>(\n  (\n    {\n      placeholder,\n      value,\n      currentLocale,\n      onChange,\n      onDelete,\n      onClear,\n      className,\n      deleteIconProps,\n      ...rest\n    },\n    ref,\n  ) => {\n    const innerRef = useRef<HTMLInputElement>();\n\n    const inputRef = useForkRef(ref, innerRef);\n    const [mouseDownTime, setMouseDownTime] = useState<number>(null);\n    const [timer, setTimer] = useState(null);\n\n    const haveDeleteButton = !!value;\n\n    const handleMouseDown = useEventCallback(() => {\n      setMouseDownTime(+new Date());\n\n      setTimer(\n        setTimeout(() => {\n          onClear();\n          setTimer(null);\n        }, throttledTime),\n      );\n    });\n\n    const handleMouseUp = useEventCallback(() => {\n      const curTime = +new Date();\n      if (mouseDownTime && curTime - mouseDownTime >= throttledTime) {\n        return;\n      }\n\n      clearTimeout(timer);\n      onDelete();\n    });\n\n    useEffect(() => {\n      innerRef.current!.focus();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    return (\n      <div className={classNames(className, styles.inputRoot)}>\n        <RcTextField\n          placeholder={\n            placeholder || i18n.getString('dialPlaceholder', currentLocale)\n          }\n          value={value}\n          inputProps={{\n            maxLength: 30,\n          }}\n          fullWidth\n          clearBtn={false}\n          inputRef={inputRef}\n          onChange={(e) => {\n            onChange(e.target.value);\n          }}\n          classes={{\n            root: styles.textFieldRoot,\n          }}\n          data-sign=\"numberField\"\n          InputProps={{\n            disableUnderline: true,\n            classes: {\n              root: styles.root,\n              input: styles.input,\n            },\n            endAdornment: haveDeleteButton && (\n              <RcIconButton\n                color=\"neutral.f03\"\n                symbol={Deletenumber}\n                data-sign=\"deleteButton\"\n                title=\"delete\"\n                {...combineProps(\n                  {\n                    onMouseUp: handleMouseUp,\n                    onMouseDown: handleMouseDown,\n                  },\n                  deleteIconProps,\n                )}\n                variant=\"plain\"\n                size=\"large\"\n              />\n            ),\n          }}\n          autoComplete=\"off\"\n          {...rest}\n        />\n      </div>\n    );\n  },\n);\n"],"file":"RecipientsInput.js"}