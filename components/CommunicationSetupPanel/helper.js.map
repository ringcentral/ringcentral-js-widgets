{"version":3,"sources":["components/CommunicationSetupPanel/helper.ts"],"names":["isSplitterKey","e","key","keyCode","invalidCharsRegExp","numberRegExp","validateValidChars","input","chars","trim","length","test"],"mappings":";;;;;;;;;;;AAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD;AAAA,SAC3BA,CAAC,CAACC,GAAF,KAAU,GAAV,IACAD,CAAC,CAACC,GAAF,KAAU,GADV,IAECD,CAAC,CAACC,GAAF,KAAU,cAAV,MAA4B;AAC1BD,EAAAA,CAAC,CAACE,OAAF,KAAc,GAAd,IAAqB;AACpBF,EAAAA,CAAC,CAACE,OAAF,KAAc,GAFjB,CAH0B;AAAA,CAAtB,C,CAKoB;;;;AAE3B,IAAMC,kBAAkB,GAAG,gBAA3B;AACA,IAAMC,YAAY,GAAG,IAArB;;AACO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAA4B;AAC5D,MAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,EAAd;AACA,SACED,KAAK,CAACE,MAAN,GAAe,CAAf,IACA,CAACN,kBAAkB,CAACO,IAAnB,CAAwBH,KAAxB,CADD,IAEAH,YAAY,CAACM,IAAb,CAAkBH,KAAlB,CAHF;AAKD,CAPM","sourcesContent":["export const isSplitterKey = (e: React.KeyboardEvent): boolean =>\n  e.key === ',' ||\n  e.key === ';' ||\n  (e.key === 'Unidentified' && // for Safari (FF cannot rely on keyCode...)\n    (e.keyCode === 186 || // semicolon\n      e.keyCode === 188)); // comma\n\nconst invalidCharsRegExp = /[^\\d*+#\\-(). ]/;\nconst numberRegExp = /\\d/;\nexport const validateValidChars = (input: string): boolean => {\n  const chars = input.trim();\n  return (\n    chars.length > 0 &&\n    !invalidCharsRegExp.test(chars) &&\n    numberRegExp.test(chars)\n  );\n};\n"],"file":"helper.js"}