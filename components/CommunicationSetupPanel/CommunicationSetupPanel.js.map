{"version":3,"sources":["components/CommunicationSetupPanel/CommunicationSetupPanel.tsx"],"names":["maxLength","FromField","currentLocale","disableFromField","fromNumber","formatPhone","changeFromNumber","options","blockedLabel","fromFieldI18n","getString","val","BLOCKED_ID_VALUE","disableUnderline","map","item","phoneNumber","usageType","CommunicationSetupWrapper","props","onToNumberChange","toNumber","fromNumbers","recipients","multiple","setRecipient","clearRecipient","autoFocus","showFromField","children","showAnonymous","label","i18n","placeholder","detectPhoneNumbers","inputRef","openSearchPage","setOpenSearchPage","setRecipientByChars","Chars","name","current","blur","setRecipientHandler","optionItem","keyDownHandler","e","trim","preventDefault","closeSearchPage","showDirectlyLine","hasTags","length","hiddenInput","inputPropsRef","InputProps","onChange","args","apply","onKeyDown","RecipientComponent","index","size","fontSize","isWarning","ev","clipboardData","getData","pastedText","result","endAdornment","DeleteCircle","onFocus","CommunicationSetupPanel"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useMemo, useRef, useState } from 'react';\n\nimport { BLOCKED_ID_VALUE } from '@ringcentral-integration/commons/modules/CallingSettingsV2';\nimport {\n  RcDialDelete,\n  RcIconButton,\n  RcListItemText,\n  RcMenuItem,\n  RcSelect,\n  RcText,\n} from '@ringcentral/juno';\nimport { DeleteCircle } from '@ringcentral/juno/icon';\n\nimport { CommunicationSetupProvider } from './CommunicationSetupProvider';\nimport { useCommunicationSetupContext } from '../../contexts';\n\nimport fromFieldI18n from '../FromField/i18n';\nimport i18n from '../RecipientsInput/i18n';\nimport { DirectlyProceedLine } from './DirectlyProceedLine';\nimport ContactSearchContainer from './ContactSearchContainer';\nimport { isSplitterKey, validateValidChars } from './helper';\nimport {\n  CallFields,\n  FieldLine,\n  FullSizeWrapper,\n  ResultContainer,\n  RootWrapper,\n  StyledRcDialTextField,\n  StyledToInputWrapper,\n  StyledRecipientsWrapper,\n  StyledRcChip,\n} from './styles';\n\nconst maxLength = 30;\n\ninterface FromFieldProps {\n  currentLocale: string;\n  disableFromField: boolean;\n  fromNumber: string;\n  formatPhone: (...args: any[]) => string;\n  changeFromNumber: (...args: any[]) => any;\n  options: {\n    phoneNumber: string;\n    usageType?: string;\n  }[];\n  blockedLabel: string;\n}\n\nconst FromField: FunctionComponent<FromFieldProps> = ({\n  currentLocale,\n  disableFromField,\n  fromNumber,\n  formatPhone,\n  changeFromNumber,\n  options,\n  blockedLabel,\n}) => (\n  <FieldLine>\n    <RcText variant=\"caption1\" color=\"neutral.b04\">\n      {`${fromFieldI18n.getString('from', currentLocale)}:`}\n    </RcText>\n    <RcSelect\n      fullWidth\n      textVariant=\"caption1\"\n      data-sign=\"phoneNumber\"\n      renderValue={(val) =>\n        val === BLOCKED_ID_VALUE ? blockedLabel : formatPhone(val)\n      }\n      disabled={disableFromField}\n      value={fromNumber}\n      InputProps={{\n        // classes: customSelectInputClasses,\n        disableUnderline: true,\n      }}\n    >\n      {options.map((item) => (\n        <RcMenuItem\n          onClick={() => changeFromNumber(item)}\n          value={item.phoneNumber}\n          key={item.phoneNumber}\n        >\n          {item.phoneNumber === BLOCKED_ID_VALUE ? (\n            <RcListItemText primary={blockedLabel} />\n          ) : (\n            <RcListItemText\n              primary={formatPhone(item.phoneNumber)}\n              secondary={fromFieldI18n.getString(item.usageType, currentLocale)}\n            />\n          )}\n        </RcMenuItem>\n      ))}\n    </RcSelect>\n  </FieldLine>\n);\n\n// TODO: keep original style, wait check with designer\n// const CustomSelect = styled(RcSelect)``;\n// const customSelectInputClasses = RcClasses<RcSelectProps['InputProps']>(\n//   ['input'],\n//   'custom-select-input',\n// );\n// const CustomSelect = styled(RcSelect)`\n//   && {\n//     .${customSelectInputClasses.input} {\n//       background-color: transparent;\n//     }\n//   }\n// `;\n\ninterface CommunicationSetupPanelProps {\n  // To field\n  onToNumberChange: (...args: any[]) => any;\n  label?: string;\n  placeholder?: string;\n  recipients?: {\n    phoneNumber: string;\n    name?: string;\n    isWarning?: boolean;\n  }[];\n  toNumber: string;\n  setRecipient: (...args: any[]) => any;\n  clearRecipient: (...args: any[]) => any;\n  autoFocus?: boolean;\n  multiple?: boolean;\n  // From field\n  showAnonymous: boolean;\n  fromNumber: string;\n  fromNumbers: { phoneNumber: string; usageType?: string }[];\n  changeFromNumber: (...args: any[]) => any;\n  formatPhone: (...args: any[]) => string;\n  detectPhoneNumbers: (...args: any[]) => any;\n  showFromField: boolean;\n  disableFromField?: boolean;\n  // Common\n  currentLocale: string;\n}\n\nconst CommunicationSetupWrapper: FunctionComponent<CommunicationSetupPanelProps> =\n  (props) => {\n    const {\n      currentLocale,\n      onToNumberChange,\n      toNumber,\n      fromNumber,\n      fromNumbers,\n      changeFromNumber,\n      formatPhone,\n      recipients,\n      multiple = false,\n      setRecipient,\n      clearRecipient,\n      autoFocus,\n      showFromField = true,\n      disableFromField = false,\n      children,\n      showAnonymous,\n      label = `${i18n.getString('to', currentLocale)}:`,\n      placeholder = `${i18n.getString('enterNameOrNumber', currentLocale)}`,\n      detectPhoneNumbers,\n    } = props;\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const [openSearchPage, setOpenSearchPage] = useState<boolean>(false);\n\n    const setRecipientByChars = (Chars: string) => {\n      setOpenSearchPage(false);\n      setRecipient({\n        name: Chars,\n        phoneNumber: Chars,\n      });\n      inputRef.current?.blur();\n    };\n\n    const setRecipientHandler = (optionItem: any) => {\n      setOpenSearchPage(false);\n      setRecipient(optionItem);\n      inputRef.current?.blur();\n    };\n\n    const keyDownHandler = (e: React.KeyboardEvent) => {\n      if (isSplitterKey(e) && !!toNumber.trim()) {\n        e.preventDefault();\n        setRecipientByChars(toNumber);\n      }\n    };\n\n    const closeSearchPage = () => {\n      setOpenSearchPage(false);\n      onToNumberChange('');\n      inputRef.current?.blur();\n    };\n\n    const showDirectlyLine = validateValidChars(toNumber);\n    const hasTags = recipients.length > 0;\n\n    const hiddenInput = !multiple && hasTags;\n\n    const options = useMemo(() => {\n      if (showAnonymous) {\n        return [\n          ...fromNumbers,\n          {\n            phoneNumber: BLOCKED_ID_VALUE,\n          },\n        ];\n      }\n\n      return fromNumbers;\n    }, [fromNumbers, showAnonymous]);\n\n    const blockedLabel = fromFieldI18n.getString('Blocked', currentLocale);\n    const { inputPropsRef } = useCommunicationSetupContext();\n\n    const InputProps = {\n      onChange: (...args) => {\n        inputPropsRef?.current?.onChange.apply(null, args);\n      },\n      onKeyDown: (...args: any[]) => {\n        inputPropsRef?.current?.onKeyDown.apply(null, args);\n      },\n    };\n\n    const RecipientComponent = useMemo(\n      () =>\n        !!recipients.length && (\n          <StyledRecipientsWrapper>\n            {recipients.map((item, index) => (\n              <StyledRcChip\n                deleteIconProps={{ size: 'small' }}\n                style={{ fontSize: '14px' }}\n                onDelete={() => clearRecipient(item)}\n                label={item.name || item.phoneNumber}\n                key={`${item.phoneNumber} - ${index}`}\n                error={item.isWarning}\n              />\n            ))}\n          </StyledRecipientsWrapper>\n        ),\n      [recipients, clearRecipient],\n    );\n\n    return (\n      <RootWrapper>\n        <CallFields>\n          <FieldLine>\n            <RcText color=\"neutral.b05\">{label}</RcText>\n            <StyledToInputWrapper>\n              {RecipientComponent}\n              {!hiddenInput && (\n                <StyledRcDialTextField\n                  inputRef={inputRef}\n                  autoFocus={autoFocus}\n                  fullWidth\n                  size=\"small\"\n                  variant=\"borderLess\"\n                  textVariant=\"body1\"\n                  onKeyDown={keyDownHandler}\n                  value={toNumber}\n                  onChange={onToNumberChange}\n                  placeholder={placeholder}\n                  onPaste={async (ev) => {\n                    if (\n                      detectPhoneNumbers &&\n                      ev.clipboardData &&\n                      ev.clipboardData.getData\n                    ) {\n                      const pastedText = ev.clipboardData.getData('text/plain');\n                      const result = await detectPhoneNumbers(pastedText);\n                      result && ev.preventDefault();\n                    }\n                  }}\n                  InputProps={{\n                    ...InputProps,\n                    endAdornment: openSearchPage && (\n                      <RcDialDelete\n                        onDelete={(e) => {\n                          e.preventDefault();\n                          closeSearchPage();\n                        }}\n                      >\n                        <RcIconButton\n                          symbol={DeleteCircle}\n                          data-sign=\"deleteButton\"\n                          title=\"Delete\"\n                          variant=\"plain\"\n                          size=\"medium\"\n                        />\n                      </RcDialDelete>\n                    ),\n                    onFocus: () => {\n                      setOpenSearchPage(true);\n                    },\n                  }}\n                  inputProps={{\n                    'data-sign': 'recipientsInput',\n                    maxLength,\n                  }}\n                />\n              )}\n            </StyledToInputWrapper>\n          </FieldLine>\n          {showFromField && (\n            <FromField\n              currentLocale={currentLocale}\n              disableFromField={disableFromField}\n              fromNumber={fromNumber}\n              formatPhone={formatPhone}\n              changeFromNumber={changeFromNumber}\n              options={options}\n              blockedLabel={blockedLabel}\n            />\n          )}\n        </CallFields>\n        <FullSizeWrapper>\n          {openSearchPage && (\n            <ResultContainer>\n              <FullSizeWrapper>\n                <ContactSearchContainer\n                  optionClickHandler={setRecipientHandler}\n                  inputRef={inputRef}\n                  userInput={toNumber}\n                />\n              </FullSizeWrapper>\n              {showDirectlyLine && (\n                <DirectlyProceedLine\n                  inMessagePage={multiple}\n                  currentLocale={currentLocale}\n                  number={toNumber}\n                  onClick={() => setRecipientByChars(toNumber)}\n                />\n              )}\n            </ResultContainer>\n          )}\n          {children}\n        </FullSizeWrapper>\n      </RootWrapper>\n    );\n  };\n\nexport const CommunicationSetupPanel: FunctionComponent<CommunicationSetupPanelProps> =\n  (props) => (\n    <CommunicationSetupProvider>\n      <CommunicationSetupWrapper {...props} />\n    </CommunicationSetupProvider>\n  );\n"],"file":"CommunicationSetupPanel.js"}