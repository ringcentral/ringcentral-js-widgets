{"version":3,"sources":["components/SelectList/ListView/ListViewItem/ListViewItem.tsx"],"names":["ListViewItem","renderFunction","secondaryRenderFunction","startAdornment","filter","valueFunction","value","option","onChange","index","onSelect","multiple","selectElm","currentValue","thisValue","isSelected","includes","type","current","getFilterResult","text","i","toLowerCase","indexOf","substring","background","length","defaultProps"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useRef } from 'react';\n\nimport { RcCheckbox, RcListItem, RcListItemText } from '@ringcentral/juno';\n\ntype OptionData = {\n  type?: string;\n  [key: string]: any;\n};\n\nexport interface ListViewItemProps {\n  option?: OptionData;\n  value: any;\n  index: number;\n  /** the filter string with select list */\n  filter?: string;\n  onChange?: (option: OptionData) => any;\n  valueFunction: (value: any) => any;\n  startAdornment?: (type: string) => any;\n  renderFunction: (option: OptionData) => string;\n  secondaryRenderFunction?: (option: OptionData) => any;\n  onSelect: (elm?: HTMLDivElement) => any;\n  multiple?: boolean;\n}\n\nexport const ListViewItem: FunctionComponent<ListViewItemProps> = ({\n  renderFunction,\n  secondaryRenderFunction,\n  startAdornment,\n  filter,\n  valueFunction,\n  value,\n  option,\n  onChange,\n  index,\n  onSelect,\n  multiple,\n}) => {\n  const selectElm = useRef<HTMLDivElement>();\n  const currentValue = valueFunction(value);\n  const thisValue = valueFunction(option);\n  const isSelected = multiple\n    ? !!currentValue?.includes(thisValue)\n    : thisValue === currentValue;\n  const { type } = option;\n  useEffect(() => {\n    if (isSelected) {\n      onSelect(selectElm.current);\n    }\n  }, [isSelected, onSelect]);\n  const getFilterResult = (option) => {\n    const text = renderFunction(option);\n    if (filter && typeof text === 'string') {\n      const i = text.toLowerCase().indexOf(filter.toLowerCase());\n      return (\n        <>\n          <span>{text.substring(0, i)}</span>\n          <span style={{ background: '#ffdfb1' }} data-sign=\"highlight\">\n            {text.substring(i, i + filter.length)}\n          </span>\n          <span>{text.substring(i + filter.length)}</span>\n        </>\n      );\n    }\n    return text;\n  };\n  return (\n    <div ref={selectElm}>\n      <RcListItem\n        button\n        size=\"medium\"\n        singleLine\n        onClick={\n          multiple\n            ? () => onChange({ ...option, isSelected: !isSelected })\n            : () => onChange(isSelected ? {} : option)\n        }\n        data-sign={`match${index}`}\n        selected={isSelected}\n      >\n        {startAdornment && startAdornment(type)}\n        {multiple && (\n          <RcCheckbox\n            checked={isSelected}\n            data-sign={isSelected ? 'selected' : 'unselected'}\n          />\n        )}\n        <RcListItemText\n          primary={getFilterResult(option)}\n          secondary={secondaryRenderFunction(option)}\n          data-sign=\"matchedItemText\"\n          title={renderFunction(option)}\n        />\n      </RcListItem>\n    </div>\n  );\n};\nListViewItem.defaultProps = {\n  option: {},\n  filter: null,\n  onChange() {},\n  startAdornment() {},\n  secondaryRenderFunction() {},\n  multiple: false,\n};\n"],"file":"ListViewItem.js"}