{"version":3,"file":"NotificationPanel.interface.js","names":[],"sources":["components/NotificationPanel/NotificationPanel.interface.ts"],"sourcesContent":["import type { DOMAttributes, FunctionComponent } from 'react';\nimport type React from 'react';\n\nimport type { RcSnackbarContentProps } from '@ringcentral/juno';\n\nexport interface NotificationMessage {\n  id: string;\n  message: string;\n  level: 'info' | 'success' | 'warning' | 'danger';\n  payload: any;\n  ttl: number;\n  timestamp: number;\n  /**\n   * snackbar animation\n   */\n  animation?: string;\n  /**\n   * has backdrop behind whole window\n   */\n  backdrop?: boolean;\n  /**\n   * backdrop animation\n   */\n  backdropAnimation?: string;\n  /**\n   * classes for whole component\n   */\n  classes?: {\n    backdrop?: string;\n    snackbar?: RcSnackbarContentProps['classes'];\n  };\n  /** emit event when backdrop to be click */\n  onBackdropClick?: DOMAttributes<HTMLDivElement>['onClick'];\n  /**\n   * loading state\n   */\n  loading: boolean;\n  /**\n   * right action area\n   */\n  action?: React.ReactNode;\n}\n\nexport type NotificationItemProps = {\n  data: NotificationMessage;\n  currentLocale: string;\n  brand: string;\n  dismiss: (id: string) => void;\n  getRenderer(type: NotificationMessage): FunctionComponent<any>;\n  duration?: number;\n} & Pick<NotificationMessage, 'animation' | 'backdropAnimation' | 'classes'> &\n  Pick<RcSnackbarContentProps, 'size' | 'messageAlign' | 'fullWidth'>;\n\nexport type NotificationPanelProps = {\n  messages: NotificationMessage[];\n  exitAnimation?: string;\n  entranceAnimation?: string;\n\n  backdropEntranceAnimation?: string;\n  backdropExitAnimation?: string;\n\n  className?: string;\n  currentLocale: string;\n\n  brand: string;\n} & Omit<NotificationItemProps, 'data'>;\n"],"mappings":""}