{"version":3,"sources":["components/NotificationPanel/NotificationItem.tsx"],"names":["getLevelType","level","type","NotificationItem","data","currentLocale","brand","dismiss","getRenderer","duration","defaultAnimation","animation","defaultBackdropAnimation","backdropAnimation","classes","snackbarClass","snackbar","backdropClass","backdrop","size","messageAlign","fullWidth","Message","second","id","loading","action","onBackdropClick","animationStyle","animationDuration","styles","container","root","closeSvg","defaultProps"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport classNames from 'classnames';\n\nimport {\n  combineProps,\n  RcSnackbarAction,\n  RcSnackbarContent,\n  RcSnackbarContentType,\n} from '@ringcentral/juno';\nimport { Close as closeSvg } from '@ringcentral/juno/icon';\n\nimport {\n  NotificationItemProps,\n  NotificationMessage,\n} from './NotificationPanel.interface';\nimport styles from './styles.scss';\n\nexport function getLevelType(level: NotificationMessage['level']) {\n  let type: RcSnackbarContentType;\n  switch (level) {\n    case 'warning':\n      type = 'warn';\n      break;\n    case 'danger':\n      type = 'error';\n      break;\n    default:\n      type = level;\n  }\n  return type;\n}\n\nexport const NotificationItem: FunctionComponent<NotificationItemProps> = memo(\n  ({\n    data,\n    currentLocale,\n    brand,\n    dismiss,\n    getRenderer,\n    duration,\n    animation: defaultAnimation,\n    backdropAnimation: defaultBackdropAnimation,\n    classes: { snackbar: snackbarClass, backdrop: backdropClass },\n    size,\n    messageAlign,\n    fullWidth,\n  }) => {\n    const Message = getRenderer(data);\n    const second = duration / 1000;\n    const {\n      id,\n      level,\n      classes = {},\n      loading,\n      action,\n      animation = defaultAnimation,\n      backdropAnimation = defaultBackdropAnimation,\n      backdrop,\n      onBackdropClick,\n    } = data;\n\n    const type: RcSnackbarContentType = getLevelType(level);\n\n    const animationStyle = useMemo(\n      () => ({\n        animationDuration: `${second}s`,\n      }),\n      [second],\n    );\n\n    return (\n      <div className={styles.container}>\n        {backdrop && (\n          <div\n            className={classNames(\n              styles.backdrop,\n              backdropClass,\n              classes.backdrop,\n              'animated',\n              backdropAnimation,\n            )}\n            style={animationStyle}\n            onClick={onBackdropClick}\n          />\n        )}\n        <RcSnackbarContent\n          data-sign=\"notification\"\n          data-sign-type={type}\n          type={type}\n          size={size}\n          fullWidth={fullWidth}\n          loading={loading}\n          classes={combineProps(\n            {\n              root: classNames('animated', styles.snackbar, animation),\n            },\n            snackbarClass,\n          )}\n          style={animationStyle}\n          messageAlign={messageAlign}\n          message={\n            <Message\n              message={data}\n              currentLocale={currentLocale}\n              brand={brand}\n            />\n          }\n          action={\n            action ?? (\n              <RcSnackbarAction\n                variant=\"icon\"\n                symbol={closeSvg}\n                size=\"small\"\n                onClick={() => {\n                  dismiss(id);\n                }}\n              />\n            )\n          }\n        />\n      </div>\n    );\n  },\n);\n\nNotificationItem.defaultProps = {\n  duration: 500,\n  classes: {},\n  size: 'small',\n  messageAlign: 'left',\n  fullWidth: true,\n};\n"],"file":"NotificationItem.js"}