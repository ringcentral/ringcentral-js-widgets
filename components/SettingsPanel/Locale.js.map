{"version":3,"sources":["components/SettingsPanel/Locale.tsx"],"names":["Locale","supportedLocales","currentLocale","savedLocale","saveLocale","length","i18n","getString"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AAGO,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,OAKhD;AAAA,MAJJC,gBAII,QAJJA,gBAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,UACI,QADJA,UACI;;AACJ,MAAIH,gBAAgB,IAAIA,gBAAgB,CAACI,MAAjB,GAA0B,CAAlD,EAAqD;AACnD,wBACE,gCAAC,qBAAD;AAAW,MAAA,KAAK,EAAEC,iBAAKC,SAAL,CAAe,UAAf,EAA2BL,aAA3B;AAAlB,oBACE,gCAAC,wBAAD;AACE,MAAA,KAAK,EAAEC,WADT;AAEE,MAAA,QAAQ,EAAEC,UAFZ;AAGE,MAAA,OAAO,EAAEH;AAHX,MADF,CADF;AASD;;AACD,SAAO,IAAP;AACD,CAlBM","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport InputLine from '../InputLine';\nimport LocalePicker from '../LocalePicker';\nimport i18n from './i18n';\nimport { LocaleProps } from './SettingsPanel.interface';\n\nexport const Locale: FunctionComponent<LocaleProps> = ({\n  supportedLocales,\n  currentLocale,\n  savedLocale,\n  saveLocale,\n}) => {\n  if (supportedLocales && supportedLocales.length > 1) {\n    return (\n      <InputLine label={i18n.getString('language', currentLocale)}>\n        <LocalePicker\n          value={savedLocale}\n          onChange={saveLocale}\n          options={supportedLocales}\n        />\n      </InputLine>\n    );\n  }\n  return null;\n};\n"],"file":"Locale.js"}