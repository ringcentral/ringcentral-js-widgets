{"version":3,"file":"BasePanel.js","names":["_clsx","_interopRequireDefault","require","_react","_Header","_Panel","_SpinnerOverlay","_Footer","_i18n","_styles","e","__esModule","BasePanel","_ref","currentLocale","className","showSpinner","showHeader","children","loginNumber","onLogoutButtonClick","eulaLabel","eulaLink","onEulaLinkClick","version","versionContainer","privacyNoticeLabel","privacyNoticeLink","createElement","SpinnerOverlay","clsx","styles","root","Header","i18n","getString","content","contentWithHeader","Footer","exports"],"sources":["components/SettingsPanel/BasePanel.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport type { FunctionComponent } from 'react';\nimport React from 'react';\n\nimport { Header } from '../Header';\nimport Panel from '../Panel';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\n\nimport { Footer } from './Footer';\nimport type { BasePanelProps } from './SettingsPanel.interface';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport const BasePanel: FunctionComponent<BasePanelProps> = ({\n  currentLocale,\n  className,\n  showSpinner,\n  showHeader,\n  children,\n  loginNumber,\n  onLogoutButtonClick,\n  eulaLabel,\n  eulaLink,\n  onEulaLinkClick,\n  version,\n  versionContainer,\n  privacyNoticeLabel,\n  privacyNoticeLink,\n}) => {\n  if (showSpinner) {\n    return <SpinnerOverlay />;\n  }\n\n  return (\n    <div className={clsx(styles.root, className)}>\n      {showHeader ? (\n        <Header>{i18n.getString('settings', currentLocale)}</Header>\n      ) : null}\n      <Panel\n        className={clsx(styles.content, showHeader && styles.contentWithHeader)}\n      >\n        {children}\n        <Footer\n          {...{\n            loginNumber,\n            currentLocale,\n            eulaLabel,\n            eulaLink,\n            onEulaLinkClick,\n            privacyNoticeLabel,\n            privacyNoticeLink,\n            onLogoutButtonClick,\n            version,\n            versionContainer,\n          }}\n        />\n      </Panel>\n    </div>\n  );\n};\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,eAAA,GAAAJ,OAAA;AAEA,IAAAK,OAAA,GAAAL,OAAA;AAEA,IAAAM,KAAA,GAAAP,sBAAA,CAAAC,OAAA;AACA,IAAAO,OAAA,GAAAR,sBAAA,CAAAC,OAAA;AAAmC,SAAAD,uBAAAS,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAE5B,IAAME,SAA4C,GAAG,SAA/CA,SAA4CA,CAAAC,IAAA,EAenD;EAAA,IAdJC,aAAa,GAAAD,IAAA,CAAbC,aAAa;IACbC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,WAAW,GAAAH,IAAA,CAAXG,WAAW;IACXC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,QAAQ,GAAAL,IAAA,CAARK,QAAQ;IACRC,WAAW,GAAAN,IAAA,CAAXM,WAAW;IACXC,mBAAmB,GAAAP,IAAA,CAAnBO,mBAAmB;IACnBC,SAAS,GAAAR,IAAA,CAATQ,SAAS;IACTC,QAAQ,GAAAT,IAAA,CAARS,QAAQ;IACRC,eAAe,GAAAV,IAAA,CAAfU,eAAe;IACfC,OAAO,GAAAX,IAAA,CAAPW,OAAO;IACPC,gBAAgB,GAAAZ,IAAA,CAAhBY,gBAAgB;IAChBC,kBAAkB,GAAAb,IAAA,CAAlBa,kBAAkB;IAClBC,iBAAiB,GAAAd,IAAA,CAAjBc,iBAAiB;EAEjB,IAAIX,WAAW,EAAE;IACf,oBAAOb,MAAA,YAAAyB,aAAA,CAACtB,eAAA,CAAAuB,cAAc,MAAE,CAAC;EAC3B;EAEA,oBACE1B,MAAA,YAAAyB,aAAA;IAAKb,SAAS,EAAE,IAAAe,gBAAI,EAACC,kBAAM,CAACC,IAAI,EAAEjB,SAAS;EAAE,GAC1CE,UAAU,gBACTd,MAAA,YAAAyB,aAAA,CAACxB,OAAA,CAAA6B,MAAM,QAAEC,gBAAI,CAACC,SAAS,CAAC,UAAU,EAAErB,aAAa,CAAU,CAAC,GAC1D,IAAI,eACRX,MAAA,YAAAyB,aAAA,CAACvB,MAAA,WAAK;IACJU,SAAS,EAAE,IAAAe,gBAAI,EAACC,kBAAM,CAACK,OAAO,EAAEnB,UAAU,IAAIc,kBAAM,CAACM,iBAAiB;EAAE,GAEvEnB,QAAQ,eACTf,MAAA,YAAAyB,aAAA,CAACrB,OAAA,CAAA+B,MAAM;IAEHnB,WAAW,EAAXA,WAAW;IACXL,aAAa,EAAbA,aAAa;IACbO,SAAS,EAATA,SAAS;IACTC,QAAQ,EAARA,QAAQ;IACRC,eAAe,EAAfA,eAAe;IACfG,kBAAkB,EAAlBA,kBAAkB;IAClBC,iBAAiB,EAAjBA,iBAAiB;IACjBP,mBAAmB,EAAnBA,mBAAmB;IACnBI,OAAO,EAAPA,OAAO;IACPC,gBAAgB,EAAhBA;EAAgB,CAEnB,CACI,CACJ,CAAC;AAEV,CAAC;AAACc,OAAA,CAAA3B,SAAA,GAAAA,SAAA","ignoreList":[]}