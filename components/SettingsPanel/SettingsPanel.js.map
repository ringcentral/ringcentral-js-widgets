{"version":3,"sources":["components/SettingsPanel/SettingsPanel.tsx"],"names":["SettingsPanel","onLogout","currentLocale","version","agentName","userName","sessionInfo","goToSessionUpdatePage","disableEditSessionButton","showEditSessionIcon","styles","settingsPanel","name","item","TOOLTIP_LONG_DELAY_TIME","info","infoTitle","i18n","getString","pointerWrap","alignRight","Edit","infoWrap","map","value","label","infoItem","logout"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Tooltip } from '@ringcentral-integration/widgets/components/Rcui/Tooltip';\nimport { TOOLTIP_LONG_DELAY_TIME } from '@ringcentral-integration/widgets/lib/toolTipDelayTime';\nimport { RcButton, RcIconButton, RcTypography } from '@ringcentral/juno';\nimport { Edit } from '@ringcentral/juno/icon';\n\nimport {\n  EvSettingsUIFunctions,\n  EvSettingsUIProps,\n} from '../../interfaces/EvSettingsUI.interface';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type SettingsPanelProps = EvSettingsUIProps & EvSettingsUIFunctions;\n\nexport const SettingsPanel: FunctionComponent<SettingsPanelProps> = ({\n  onLogout,\n  currentLocale,\n  version,\n  agentName,\n  userName,\n  sessionInfo,\n  goToSessionUpdatePage,\n  disableEditSessionButton,\n  showEditSessionIcon,\n}) => {\n  return (\n    <div className={styles.settingsPanel}>\n      <div className={classNames(styles.name, styles.item)}>\n        {agentName && (\n          <Tooltip title={agentName} enterDelay={TOOLTIP_LONG_DELAY_TIME}>\n            <div className={styles.agentName}>{agentName}</div>\n          </Tooltip>\n        )}\n        <Tooltip title={userName} enterDelay={TOOLTIP_LONG_DELAY_TIME}>\n          <div className={styles.userName}>{userName}</div>\n        </Tooltip>\n      </div>\n      <div className={classNames(styles.info, styles.item)}>\n        <div className={styles.infoTitle}>\n          <span>{i18n.getString('sessionInfo', currentLocale)}</span>\n          {showEditSessionIcon && (\n            <span\n              className={classNames({\n                [styles.pointerWrap]: disableEditSessionButton,\n                [styles.alignRight]: true,\n              })}\n            >\n              <RcIconButton\n                data-sign=\"editSession\"\n                title={i18n.getString('edit', currentLocale)}\n                disabled={disableEditSessionButton}\n                onClick={goToSessionUpdatePage}\n                size=\"small\"\n                symbol={Edit}\n              />\n            </span>\n          )}\n        </div>\n        <div className={classNames(styles.infoWrap)}>\n          {sessionInfo.map(({ value, label }) => (\n            <div className={styles.infoItem} key={value}>\n              <RcTypography variant=\"caption1\" className={styles.label}>\n                {label}\n              </RcTypography>\n              <RcTypography variant=\"body1\" className={styles.value}>\n                {value}\n              </RcTypography>\n            </div>\n          ))}\n          <div className={classNames(styles.version, styles.item)}>\n            {i18n.getString('version', currentLocale)}\n            <span>{version}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className={classNames(styles.logout)}>\n        <RcButton\n          data-sign=\"logout\"\n          variant=\"outlined\"\n          fullWidth\n          onClick={onLogout}\n          size=\"large\"\n        >\n          {i18n.getString('logout', currentLocale)}\n        </RcButton>\n      </div>\n    </div>\n  );\n};\n"],"file":"SettingsPanel.js"}