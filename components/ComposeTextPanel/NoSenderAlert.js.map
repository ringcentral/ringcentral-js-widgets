{"version":3,"sources":["components/ComposeTextPanel/NoSenderAlert.tsx"],"names":["NoSenderAlert","props","state","showAlert","onDismissAlert","setState","getRenderer","MessageSenderAlert","messages","id","level","message","messageSenderMessages","senderNumberInvalid","nextProps","brand","currentLocale","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUMA,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAEF,KAAK,CAACE;AADN,KAAb;;AAGA,UAAKC,cAAL,GAAsB,YAAM;AAC1B,YAAKC,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAJD;;AAKA,UAAKG,WAAL,GAAmB;AAAA,aAAMC,8BAAN;AAAA,KAAnB;;AACA,UAAKC,QAAL,GAAgB,CACd;AACEC,MAAAA,EAAE,EAAE,GADN;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,OAAO,EAAEC,kCAAsBC;AAHjC,KADc,CAAhB;AAXiB;AAkBlB;;;;8CACyBC,S,EAAW;AACnC,UAAIA,SAAS,CAACX,SAAV,KAAwB,KAAKD,KAAL,CAAWC,SAAvC,EAAkD;AAChD,aAAKE,QAAL,CAAc;AACZF,UAAAA,SAAS,EAAEW,SAAS,CAACX;AADT,SAAd;AAGD;AACF;;;6BACQ;AACP,aAAO,KAAKD,KAAL,CAAWC,SAAX,gBACL,gCAAC,wBAAD;AACE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWc,KADpB;AAEE,QAAA,aAAa,EAAE,KAAKd,KAAL,CAAWe,aAF5B;AAGE,QAAA,QAAQ,EAAE,KAAKR,QAHjB;AAIE,QAAA,OAAO,EAAE,KAAKJ,cAJhB;AAKE,QAAA,WAAW,EAAE,KAAKE;AALpB,QADK,GAQH,IARJ;AASD;;;;EArCyBW,gB;;AAuC5BjB,aAAa,CAACkB,YAAd,GAA6B;AAC3BH,EAAAA,KAAK,EAAE;AADoB,CAA7B;eAGef,a","sourcesContent":["import React, { Component } from 'react';\n\nimport messageSenderMessages from '@ringcentral-integration/commons/modules/MessageSender/messageSenderMessages';\n\nimport AlertDisplay from '../AlertDisplay';\nimport MessageSenderAlert from '../AlertRenderer/MessageSenderAlert';\n\ntype NoSenderAlertProps = {\n  currentLocale: string;\n  showAlert: boolean;\n  brand?: string;\n};\ntype NoSenderAlertState = {\n  showAlert: any;\n};\nclass NoSenderAlert extends Component<NoSenderAlertProps, NoSenderAlertState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: props.showAlert,\n    };\n    this.onDismissAlert = () => {\n      this.setState({\n        showAlert: false,\n      });\n    };\n    this.getRenderer = () => MessageSenderAlert;\n    this.messages = [\n      {\n        id: '1',\n        level: 'warning',\n        message: messageSenderMessages.senderNumberInvalid,\n      },\n    ];\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.showAlert !== this.state.showAlert) {\n      this.setState({\n        showAlert: nextProps.showAlert,\n      });\n    }\n  }\n  render() {\n    return this.state.showAlert ? (\n      <AlertDisplay\n        brand={this.props.brand}\n        currentLocale={this.props.currentLocale}\n        messages={this.messages}\n        dismiss={this.onDismissAlert}\n        getRenderer={this.getRenderer}\n      />\n    ) : null;\n  }\n}\nNoSenderAlert.defaultProps = {\n  brand: 'RingCentral',\n};\nexport default NoSenderAlert;\n"],"file":"NoSenderAlert.js"}