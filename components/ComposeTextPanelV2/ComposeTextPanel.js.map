{"version":3,"file":"ComposeTextPanel.js","names":["_react","_interopRequireDefault","require","_CommunicationSetupPanel","_NoSenderAlert","_MessageInput","_SpinnerOverlay","_styles","e","__esModule","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ComposeTextPanel","_ref","showSpinner","currentLocale","brand","outboundSMS","messageText","updateMessageText","sendButtonDisabled","send","inputExpandable","attachments","supportAttachment","removeAttachment","addAttachment","typingToNumber","updateTypingToNumber","addToNumber","autoFocus","toNumbers","senderNumber","senderNumbers","hintInfo","formatPhone","updateSenderNumber","cleanTypingToNumber","removeToNumber","detectPhoneNumbers","contactSearch","triggerEventTracking","hasSenderNumbers","length","hasPersonalRecipient","some","x","type","showAlert","addToRecipients","_ref2","regeneratorRuntime","mark","_callee","receiver","isAdded","wrap","_callee$","_context","prev","next","sent","stop","_x","createElement","Root","SpinnerOverlay","CommunicationSetupPanel","toNumber","onToNumberChange","directlyProceedType","multiple","recipients","setRecipient","clearRecipient","showAnonymous","fromNumber","fromNumbers","changeFromNumber","showFromField","inputFullWidth","ContactSearch","filterCallQueueExtension","onChange","onSend","exports"],"sources":["components/ComposeTextPanelV2/ComposeTextPanel.tsx"],"sourcesContent":["import type { FunctionComponent } from 'react';\nimport React from 'react';\n\nimport { CommunicationSetupPanel } from '../CommunicationSetupPanel';\n// TODO: Re implement this component by function component\nimport NoSenderAlert from '../ComposeTextPanel/NoSenderAlert';\nimport MessageInput from '../MessageInput';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\n\nimport { Root } from './styles';\n\nexport interface ComposeTextPanelProps {\n  brand: string;\n  send: (...args: any[]) => any;\n  senderNumbers: {\n    phoneNumber: string;\n  }[];\n  sendButtonDisabled: boolean;\n  triggerEventTracking: (eventName: string, contactType: string) => any;\n  formatPhone: (...args: any[]) => any;\n  detectPhoneNumbers: (...args: any[]) => any;\n  currentLocale: string;\n  updateSenderNumber: (...args: any[]) => any;\n  updateTypingToNumber: (...args: any[]) => any;\n  cleanTypingToNumber: (...args: any[]) => any;\n  addToNumber: (...args: any[]) => any;\n  removeToNumber: (...args: any[]) => any;\n  updateMessageText: (...args: any[]) => any;\n  messageText?: string;\n  typingToNumber?: string;\n  senderNumber?: string;\n  toNumbers: {\n    phoneNumber: string;\n    name?: string;\n    type?: string;\n  }[];\n  outboundSMS?: boolean;\n  showSpinner?: boolean;\n  autoFocus?: boolean;\n  inputExpandable?: boolean;\n  supportAttachment?: boolean;\n  attachments?: {\n    name: string;\n    size: number;\n  }[];\n  addAttachment?: (...args: any[]) => any;\n  removeAttachment?: (...args: any[]) => any;\n  hintInfo?: JSX.Element;\n  // TODO: fix type\n  contactSearch?: any;\n}\n\nexport const ComposeTextPanel: FunctionComponent<ComposeTextPanelProps> = ({\n  showSpinner,\n  currentLocale,\n  brand,\n  outboundSMS,\n\n  messageText,\n  updateMessageText,\n  sendButtonDisabled,\n  send,\n  inputExpandable,\n  attachments,\n  supportAttachment,\n  removeAttachment,\n  addAttachment,\n\n  typingToNumber,\n  updateTypingToNumber,\n  addToNumber,\n  autoFocus,\n  toNumbers,\n  senderNumber,\n  senderNumbers,\n  hintInfo,\n  formatPhone,\n  updateSenderNumber,\n  cleanTypingToNumber,\n  removeToNumber,\n  detectPhoneNumbers,\n  contactSearch,\n  triggerEventTracking,\n}) => {\n  const hasSenderNumbers = senderNumbers.length > 0;\n  const hasPersonalRecipient = toNumbers.some((x) => x && x.type !== 'company');\n  // TODO:, double check the logic here.\n  const showAlert = !!(\n    !hasSenderNumbers &&\n    outboundSMS &&\n    hasPersonalRecipient\n  );\n\n  const addToRecipients = async (receiver: any) => {\n    const isAdded = await addToNumber(receiver);\n    if (isAdded) {\n      cleanTypingToNumber();\n    }\n  };\n\n  return (\n    <Root>\n      {showSpinner && <SpinnerOverlay />}\n      <CommunicationSetupPanel\n        triggerEventTracking={triggerEventTracking}\n        // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n        toNumber={typingToNumber}\n        onToNumberChange={updateTypingToNumber}\n        directlyProceedType=\"message\"\n        multiple\n        autoFocus={autoFocus}\n        recipients={toNumbers}\n        setRecipient={addToRecipients}\n        clearRecipient={removeToNumber}\n        currentLocale={currentLocale}\n        detectPhoneNumbers={detectPhoneNumbers}\n        // from field\n        showAnonymous={false}\n        fromNumber={senderNumber}\n        fromNumbers={senderNumbers}\n        formatPhone={formatPhone}\n        changeFromNumber={updateSenderNumber}\n        showFromField={hasSenderNumbers}\n        inputFullWidth={!!hintInfo}\n        ContactSearch={contactSearch}\n        filterCallQueueExtension\n      >\n        <NoSenderAlert\n          currentLocale={currentLocale}\n          showAlert={showAlert}\n          brand={brand}\n        />\n        {hintInfo}\n        <MessageInput\n          // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n          value={messageText}\n          onChange={updateMessageText}\n          sendButtonDisabled={sendButtonDisabled}\n          currentLocale={currentLocale}\n          onSend={send}\n          inputExpandable={inputExpandable}\n          attachments={attachments}\n          supportAttachment={supportAttachment}\n          addAttachment={addAttachment}\n          removeAttachment={removeAttachment}\n        />\n      </CommunicationSetupPanel>\n    </Root>\n  );\n};\n"],"mappings":"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","ignoreList":[]}