{"version":3,"sources":["components/ConnectivityBadge/index.tsx"],"names":["ConnectivityBadge","onClick","className","currentLocale","mode","webphoneConnecting","hasLimitedStatusError","isWebphoneConnecting","connectivityTypes","webphoneUnavailable","hasRetryButton","view","styles","badge","loading","i18n","getString","connecting","result","root","defaultProps"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAYA,IAAMA,iBAA4D,GAAG,SAA/DA,iBAA+D,OAO/D;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,kBAEI,QAFJA,kBAEI;AAAA,MADJC,qBACI,QADJA,qBACI;AACJ,MAAI,CAACF,IAAL,EAAW,OAAO,IAAP;AACX,MAAMG,oBAAoB,GACxBH,IAAI,KAAKI,uCAAkBC,mBAA3B,IAAkDJ,kBADpD;AAEA,MAAMK,cAAc,GAClBN,IAAI,KAAKI,uCAAkBC,mBAA3B,IAAkDH,qBADpD;AAEA,MAAIK,IAAI,GAAG,IAAX;;AACA,MAAIJ,oBAAJ,EAA0B;AACxBI,IAAAA,IAAI,gBACF,gCAAC,iBAAD;AACE,MAAA,SAAS,EAAE,4BAAWT,SAAX,EAAsBU,mBAAOC,KAA7B,EAAoCD,mBAAOE,OAA3C,CADb;AAEE,MAAA,IAAI,EAAEC,iBAAKC,SAAL,CAAeZ,IAAf,EAAqBD,aAArB;AAFR,OAIGY,iBAAKC,SAAL,CAAeR,uCAAkBS,UAAjC,EAA6Cd,aAA7C,CAJH,eAKE,gCAAC,uBAAD;AAAa,MAAA,KAAK,EAAE,EAApB;AAAwB,MAAA,MAAM,EAAE;AAAhC,MALF,CADF;AASD,GAVD,MAUO;AACLQ,IAAAA,IAAI,gBACF,gCAAC,iBAAD;AACE,MAAA,SAAS,EAAE,4BAAWT,SAAX,EAAsBU,mBAAOC,KAA7B,EAAoCD,mBAAOM,MAA3C,CADb;AAEE,MAAA,IAAI,EAAEH,iBAAKC,SAAL,CAAeZ,IAAf,EAAqBD,aAArB;AAFR,OAIGY,iBAAKC,SAAL,CAAeZ,IAAf,EAAqBD,aAArB,CAJH,EAKGO,cAAc,gBAAG,gCAAC,qBAAD;AAAW,MAAA,KAAK,EAAE,EAAlB;AAAsB,MAAA,MAAM,EAAE;AAA9B,MAAH,GAA0C,IAL3D,CADF;AASD;;AACD,sBACE,gCAAC,qBAAD;AAAW,IAAA,SAAS,EAAEE,mBAAOO,IAA7B;AAAmC,IAAA,OAAO,EAAElB;AAA5C,KACGU,IADH,CADF;AAKD,CAxCD;;AAyCAX,iBAAiB,CAACoB,YAAlB,GAAiC;AAC/BlB,EAAAA,SAAS,EAAE,IADoB;AAE/BD,EAAAA,OAF+B,qBAErB,CAAE,CAFmB;AAG/BG,EAAAA,IAAI,EAAE,IAHyB;AAI/BC,EAAAA,kBAAkB,EAAE,KAJW;AAK/BC,EAAAA,qBAAqB,EAAE;AALQ,CAAjC;eAOeN,iB","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport classnames from 'classnames';\n\nimport OvalLoading from '../../assets/images/OvalLoading.svg';\nimport RetryIcon from '../../assets/images/RetryIcon.svg';\nimport { connectivityTypes } from '../../modules/ConnectivityManager';\nimport Badge from '../Badge';\nimport Draggable from '../Draggable';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport interface ConnectivityBadgeProps {\n  className?: string;\n  currentLocale: string;\n  mode: string;\n  webphoneConnecting: boolean;\n  hasLimitedStatusError: boolean;\n  onClick: () => void;\n  showBadgeAlert: () => void;\n}\n\nconst ConnectivityBadge: FunctionComponent<ConnectivityBadgeProps> = ({\n  onClick,\n  className,\n  currentLocale,\n  mode,\n  webphoneConnecting,\n  hasLimitedStatusError,\n}) => {\n  if (!mode) return null;\n  const isWebphoneConnecting =\n    mode === connectivityTypes.webphoneUnavailable && webphoneConnecting;\n  const hasRetryButton =\n    mode === connectivityTypes.webphoneUnavailable || hasLimitedStatusError;\n  let view = null;\n  if (isWebphoneConnecting) {\n    view = (\n      <Badge\n        className={classnames(className, styles.badge, styles.loading)}\n        name={i18n.getString(mode, currentLocale)}\n      >\n        {i18n.getString(connectivityTypes.connecting, currentLocale)}\n        <OvalLoading width={12} height={12} />\n      </Badge>\n    );\n  } else {\n    view = (\n      <Badge\n        className={classnames(className, styles.badge, styles.result)}\n        name={i18n.getString(mode, currentLocale)}\n      >\n        {i18n.getString(mode, currentLocale)}\n        {hasRetryButton ? <RetryIcon width={12} height={12} /> : null}\n      </Badge>\n    );\n  }\n  return (\n    <Draggable className={styles.root} onClick={onClick}>\n      {view}\n    </Draggable>\n  );\n};\nConnectivityBadge.defaultProps = {\n  className: null,\n  onClick() {},\n  mode: null,\n  webphoneConnecting: false,\n  hasLimitedStatusError: false,\n};\nexport default ConnectivityBadge;\n"],"file":"index.js"}