{"version":3,"file":"index.js","names":["_clsx","_interopRequireDefault","require","_react","_OvalLoading","_RetryIcon","_ConnectivityManager","_Badge","_Draggable","_i18n","_styles","e","__esModule","ConnectivityBadge","_ref","onClick","className","currentLocale","mode","webphoneConnecting","hasLimitedStatusError","isWebphoneConnecting","connectivityTypes","webphoneUnavailable","hasRetryButton","view","createElement","dataSign","clsx","styles","badge","loading","name","i18n","getString","connecting","width","height","result","root","defaultProps","_default","exports"],"sources":["components/ConnectivityBadge/index.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport type { FunctionComponent } from 'react';\nimport React from 'react';\n\nimport OvalLoading from '../../assets/images/OvalLoading.svg';\nimport RetryIcon from '../../assets/images/RetryIcon.svg';\nimport { connectivityTypes } from '../../modules/ConnectivityManager';\nimport Badge from '../Badge';\nimport Draggable from '../Draggable';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport interface ConnectivityBadgeProps {\n  className?: string;\n  currentLocale: string;\n  mode: string;\n  webphoneConnecting: boolean;\n  hasLimitedStatusError: boolean;\n  onClick: () => void;\n  showBadgeAlert: () => void;\n}\n\nconst ConnectivityBadge: FunctionComponent<ConnectivityBadgeProps> = ({\n  onClick,\n  className,\n  currentLocale,\n  mode,\n  webphoneConnecting,\n  hasLimitedStatusError,\n}) => {\n  if (!mode) return null;\n  const isWebphoneConnecting =\n    mode === connectivityTypes.webphoneUnavailable && webphoneConnecting;\n  const hasRetryButton =\n    mode === connectivityTypes.webphoneUnavailable || hasLimitedStatusError;\n  let view = null;\n  if (isWebphoneConnecting) {\n    view = (\n      <Badge\n        dataSign={'ConnectivityBadge'}\n        className={clsx(className, styles.badge, styles.loading)}\n        name={i18n.getString(mode, currentLocale)}\n      >\n        {i18n.getString(connectivityTypes.connecting, currentLocale)}\n        <OvalLoading width={12} height={12} />\n      </Badge>\n    );\n  } else {\n    view = (\n      <Badge\n        dataSign={'ConnectivityBadge'}\n        className={clsx(className, styles.badge, styles.result)}\n        name={i18n.getString(mode, currentLocale)}\n      >\n        {i18n.getString(mode, currentLocale)}\n        {hasRetryButton ? <RetryIcon width={12} height={12} /> : null}\n      </Badge>\n    );\n  }\n  return (\n    <Draggable className={styles.root} onClick={onClick}>\n      {view}\n    </Draggable>\n  );\n};\nConnectivityBadge.defaultProps = {\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | un... Remove this comment to see the full error message\n  className: null,\n  onClick() {},\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string | un... Remove this comment to see the full error message\n  mode: null,\n  webphoneConnecting: false,\n  hasLimitedStatusError: false,\n};\nexport default ConnectivityBadge;\n"],"mappings":"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","ignoreList":[]}