{"version":3,"sources":["components/ConversationsPanel/index.tsx"],"names":["ConversationsPanel","onTabChanged","type","props","updateTypeFilter","onUnmount","tabs","icon","messageTypes","all","currentLocale","label","i18n","getString","path","isActive","readVoicemailPermission","voiceMail","noticeCounts","voiceUnreadCounts","readFaxPermission","fax","faxUnreadCounts","readTextPermission","text","textUnreadCounts","MessageTabButton","styles","tabBar","typeFilter","filter","x","showSpinner","showTitle","searchInput","onSearchInputChange","perPage","disableLinks","disableCallButton","conversations","brand","showConversationDetail","readMessage","markMessage","dateTimeFormatter","showContactDisplayPlaceholder","contactPlaceholder","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","showGroupNumberName","areaCode","countryCode","onLogConversation","onViewContact","onCreateContact","createEntityTypes","onClickToDial","onClickToSms","disableClickToDial","unmarkMessage","autoLog","enableContactFallback","deleteMessage","goToComposeText","composeTextPermission","previewFaxMessages","loadNextPage","loadingNextPage","renderExtraButton","outboundSmsPermission","internalSmsPermission","renderSearchTip","renderNoMessage","onFaxDownload","currentSiteCode","isMultipleSiteEnabled","showChooseEntityModal","shouldLogSelectRecord","onSelectContact","renderContactList","dropdownClassName","enableCDC","placeholder","length","content","contentWithHeader","contentWithSearch","showComposeText","buttons","push","composeText","onClick","placement","header","tabsHeader","renderTabs","renderContent","root","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\n\nimport messageTypes from '@ringcentral-integration/commons/enums/messageTypes';\n\nimport ComposeText from '../../assets/images/ComposeText.svg';\nimport ConversationList from '../ConversationList';\nimport { ButtonDefinition, Header } from '../Header';\nimport { MessageTabButton } from '../MessageTabButton';\nimport NavigationBar, { TabPropTypes } from '../NavigationBar';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport { TabTitle } from './TabTitle';\nimport NoMessage from './widgets/NoMessage';\nimport Search from './widgets/Search';\n\ntype ConversationsPanelProps = {\n  currentSiteCode?: string;\n  isMultipleSiteEnabled?: boolean;\n  currentLocale: string;\n  showSpinner?: boolean;\n  showTitle?: boolean;\n  contactPlaceholder?: string;\n  showContactDisplayPlaceholder?: boolean;\n  sourceIcons?: object;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  showComposeText?: boolean;\n  goToComposeText: (...args: any[]) => any;\n  typeFilter?: string;\n  updateTypeFilter?: (...args: any[]) => any;\n  showConversationDetail: (...args: any[]) => any;\n  textUnreadCounts: number;\n  voiceUnreadCounts: number;\n  faxUnreadCounts: number;\n  showGroupNumberName?: boolean;\n  onClickToDial?: (...args: any[]) => any;\n  onClickToSms?: (...args: any[]) => any;\n  markMessage: (...args: any[]) => any;\n  readMessage: (...args: any[]) => any;\n  readTextPermission?: boolean;\n  outboundSmsPermission?: boolean;\n  internalSmsPermission?: boolean;\n  readVoicemailPermission?: boolean;\n  readFaxPermission?: boolean;\n  onSearchInputChange?: (...args: any[]) => any;\n  searchInput?: string;\n  perPage?: number;\n  disableLinks?: boolean;\n  disableCallButton?: boolean;\n  conversations: any[];\n  brand: string;\n  dateTimeFormatter?: (...args: any[]) => any;\n  areaCode: string;\n  countryCode: string;\n  onLogConversation?: (...args: any[]) => any;\n  onViewContact?: (...args: any[]) => any;\n  onCreateContact?: (...args: any[]) => any;\n  createEntityTypes?: any[];\n  disableClickToDial?: boolean;\n  unmarkMessage: (...args: any[]) => any;\n  autoLog?: boolean;\n  enableContactFallback?: boolean;\n  deleteMessage?: (...args: any[]) => any;\n  composeTextPermission?: boolean;\n  previewFaxMessages?: (...args: any[]) => any;\n  loadNextPage: (...args: any[]) => any;\n  loadingNextPage?: boolean;\n  onUnmount?: (...args: any[]) => any;\n  renderExtraButton?: (...args: any[]) => any;\n  renderSearchTip?: (...args: any[]) => any;\n  renderNoMessage?: (...args: any[]) => any;\n  onFaxDownload?: (...args: any[]) => any;\n  showChooseEntityModal?: boolean;\n  shouldLogSelectRecord?: boolean;\n  onSelectContact?: (...args: any[]) => any;\n  renderContactList?: (...args: any[]) => any;\n  dropdownClassName?: string;\n  enableCDC?: boolean;\n};\n\nexport default class ConversationsPanel extends Component<\n  ConversationsPanelProps,\n  {}\n> {\n  static defaultProps: Partial<ConversationsPanelProps> = {\n    currentSiteCode: '',\n    isMultipleSiteEnabled: false,\n    showSpinner: false,\n    showTitle: false,\n    contactPlaceholder: '',\n    showContactDisplayPlaceholder: true,\n    showComposeText: false,\n    typeFilter: messageTypes.all,\n    showGroupNumberName: false,\n    readTextPermission: true,\n    outboundSmsPermission: true,\n    internalSmsPermission: true,\n    readVoicemailPermission: true,\n    readFaxPermission: true,\n    searchInput: '',\n    perPage: 20,\n    disableLinks: false,\n    disableCallButton: false,\n    disableClickToDial: false,\n    autoLog: false,\n    composeTextPermission: true,\n    loadingNextPage: false,\n    showChooseEntityModal: true,\n    shouldLogSelectRecord: false,\n    dropdownClassName: null,\n    enableCDC: false,\n  };\n\n  onTabChanged = (type: string) => {\n    if (typeof this.props.updateTypeFilter === 'function') {\n      this.props.updateTypeFilter(type);\n    }\n  };\n\n  componentWillUnmount() {\n    this.props?.onUnmount();\n  }\n\n  renderTabs() {\n    const tabs: TabPropTypes[] = [\n      {\n        icon: (\n          <TabTitle\n            type={messageTypes.all}\n            currentLocale={this.props.currentLocale}\n          />\n        ),\n        label: i18n.getString(messageTypes.all, this.props.currentLocale),\n        path: messageTypes.all,\n        isActive: (path) => path === messageTypes.all,\n      },\n      this.props.readVoicemailPermission && {\n        icon: (\n          <TabTitle\n            type={messageTypes.voiceMail}\n            currentLocale={this.props.currentLocale}\n          />\n        ),\n        label: i18n.getString(messageTypes.voiceMail, this.props.currentLocale),\n        path: messageTypes.voiceMail,\n        isActive: (path) => path === messageTypes.voiceMail,\n        noticeCounts: this.props.voiceUnreadCounts,\n      },\n      this.props.readFaxPermission && {\n        icon: (\n          <TabTitle\n            type={messageTypes.fax}\n            currentLocale={this.props.currentLocale}\n          />\n        ),\n        label: i18n.getString(messageTypes.fax, this.props.currentLocale),\n        path: messageTypes.fax,\n        isActive: (path) => path === messageTypes.fax,\n        noticeCounts: this.props.faxUnreadCounts,\n      },\n      this.props.readTextPermission && {\n        icon: (\n          <TabTitle\n            type={messageTypes.text}\n            currentLocale={this.props.currentLocale}\n          />\n        ),\n        label: i18n.getString(messageTypes.text, this.props.currentLocale),\n        path: messageTypes.text,\n        isActive: (path: string) => path === messageTypes.text,\n        noticeCounts: this.props.textUnreadCounts,\n      },\n    ];\n    return (\n      <NavigationBar\n        button={MessageTabButton}\n        className={styles.tabBar}\n        currentPath={this.props.typeFilter}\n        goTo={this.onTabChanged}\n        tabs={tabs.filter((x) => !!x)}\n      />\n    );\n  }\n  renderContent() {\n    const {\n      showSpinner,\n      showTitle,\n      searchInput,\n      onSearchInputChange,\n      currentLocale,\n      perPage,\n      disableLinks,\n      disableCallButton,\n      conversations,\n      brand,\n      showConversationDetail,\n      readMessage,\n      markMessage,\n      dateTimeFormatter,\n      showContactDisplayPlaceholder,\n      contactPlaceholder,\n      sourceIcons,\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      showGroupNumberName,\n      areaCode,\n      countryCode,\n      onLogConversation,\n      onViewContact,\n      onCreateContact,\n      createEntityTypes,\n      onClickToDial,\n      onClickToSms,\n      disableClickToDial,\n      unmarkMessage,\n      autoLog,\n      enableContactFallback,\n      deleteMessage,\n      typeFilter,\n      goToComposeText,\n      composeTextPermission,\n      previewFaxMessages,\n      loadNextPage,\n      loadingNextPage,\n      renderExtraButton,\n      outboundSmsPermission,\n      internalSmsPermission,\n      updateTypeFilter,\n      renderSearchTip,\n      renderNoMessage,\n      onFaxDownload,\n      currentSiteCode,\n      isMultipleSiteEnabled,\n      showChooseEntityModal,\n      shouldLogSelectRecord,\n      onSelectContact,\n      renderContactList,\n      dropdownClassName,\n      enableCDC,\n    } = this.props;\n    if (showSpinner) {\n      return <SpinnerOverlay />;\n    }\n    const placeholder =\n      onSearchInputChange && searchInput.length > 0\n        ? i18n.getString('noSearchResults', currentLocale)\n        : i18n.getString('noMessages', currentLocale);\n    return (\n      <div\n        data-sign=\"messageList\"\n        className={classnames(\n          styles.content,\n          showTitle && styles.contentWithHeader,\n        )}\n      >\n        <Search\n          composeTextPermission={composeTextPermission}\n          typeFilter={typeFilter}\n          onSearchInputChange={onSearchInputChange}\n          searchInput={searchInput}\n          currentLocale={currentLocale}\n          disableLinks={disableLinks}\n          goToComposeText={goToComposeText}\n          renderSearchTip={renderSearchTip}\n        />\n        {conversations.length ? (\n          <ConversationList\n            className={onSearchInputChange ? styles.contentWithSearch : null}\n            currentLocale={currentLocale}\n            currentSiteCode={currentSiteCode}\n            isMultipleSiteEnabled={isMultipleSiteEnabled}\n            perPage={perPage}\n            disableLinks={disableLinks}\n            disableCallButton={disableCallButton}\n            conversations={conversations}\n            brand={brand}\n            showConversationDetail={showConversationDetail}\n            readMessage={readMessage}\n            markMessage={markMessage}\n            dateTimeFormatter={dateTimeFormatter}\n            contactPlaceholder={contactPlaceholder}\n            showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n            sourceIcons={sourceIcons}\n            phoneTypeRenderer={phoneTypeRenderer}\n            phoneSourceNameRenderer={phoneSourceNameRenderer}\n            showGroupNumberName={showGroupNumberName}\n            placeholder={placeholder}\n            areaCode={areaCode}\n            countryCode={countryCode}\n            onLogConversation={onLogConversation}\n            onViewContact={onViewContact}\n            onCreateContact={onCreateContact}\n            createEntityTypes={createEntityTypes}\n            onClickToDial={onClickToDial}\n            onClickToSms={onClickToSms}\n            disableClickToDial={disableClickToDial}\n            unmarkMessage={unmarkMessage}\n            autoLog={autoLog}\n            enableContactFallback={enableContactFallback}\n            deleteMessage={deleteMessage}\n            previewFaxMessages={previewFaxMessages}\n            loadNextPage={loadNextPage}\n            loadingNextPage={loadingNextPage}\n            typeFilter={typeFilter}\n            renderExtraButton={renderExtraButton}\n            outboundSmsPermission={outboundSmsPermission}\n            internalSmsPermission={internalSmsPermission}\n            updateTypeFilter={updateTypeFilter}\n            onFaxDownload={onFaxDownload}\n            showChooseEntityModal={showChooseEntityModal}\n            shouldLogSelectRecord={shouldLogSelectRecord}\n            onSelectContact={onSelectContact}\n            renderContactList={renderContactList}\n            dropdownClassName={dropdownClassName}\n            enableCDC={enableCDC}\n          />\n        ) : (\n          !loadingNextPage &&\n          ((renderNoMessage && renderNoMessage()) || (\n            <NoMessage placeholder={placeholder} />\n          ))\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const { currentLocale, showTitle, showComposeText, goToComposeText } =\n      this.props;\n    const buttons: ButtonDefinition[] = [];\n\n    if (showComposeText) {\n      buttons.push({\n        label: <ComposeText className={styles.composeText} />,\n        onClick: goToComposeText,\n        placement: 'right',\n      });\n    }\n\n    const header = showTitle ? (\n      <Header buttons={buttons}>\n        {i18n.getString('title', currentLocale)}\n      </Header>\n    ) : null;\n    const tabsHeader = this.renderTabs();\n    const content = this.renderContent();\n\n    return (\n      <div data-sign=\"ConversationsPanel\" className={styles.root}>\n        {header}\n        {tabsHeader}\n        {content}\n      </div>\n    );\n  }\n}\n"],"file":"index.js"}