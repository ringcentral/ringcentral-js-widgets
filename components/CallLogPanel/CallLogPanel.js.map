{"version":3,"sources":["components/CallLogPanel/CallLogPanel.tsx"],"names":["CallLogPanel","editSectionRef","React","createRef","editSectionScrollBy","top","current","scrollBy","behavior","pushLogPageStatus","props","currentLog","renderEditLogSection","editSection","classes","renderKeypadPanel","showSpinner","styles","spinner","renderLogNotification","renderLogBasicInfo","getEditLogSection","getCallControlButtons","callLogCallControl","callLogCallControlRef","refs","renderCallLogCallControl","isWide","showSmallCallControl","call","telephonySessionId","webphoneSession","isCurrentDeviceCall","callControlRoot","currentLocale","onSaveCallLog","onUpdateCallLog","onSelectViewVisible","additionalInfo","subjectDropdownsTracker","contactSearch","showFoundFromServer","appName","isSearching","startAdornmentRender","objectTypeIconsMap","formatPhone","dateTimeFormatter","renderBasicInfo","logBasicInfo","currentSession","showRecordingIndicator","recordStatus","renderSaveLogButton","loading","disabled","disableSaveLog","logNotification","onCloseNotification","onSaveNotification","onExpandNotification","onDiscardNotification","currentNotificationIdentify","activeSession","onReject","onHangup","shrinkNotification","disableLinks","useNewNotification","showNotiLogButton","isWebRTC","onIgnore","onForward","endAndAnswer","holdAndAnswer","toVoicemail","forwardingNumbers","answer","clickForwardTrack","renderCallNotificationAvatar","getAvatarUrl","showNotification","logName","subContactNameDisplay","displayEntity","entityType","entityDetailLink","goBack","currentIdentify","root","backHeader","rootRef","backIcon","header","headerTitle","isInTransferPage","children","getRenderLogButton","classic","genSaveLogButtonV2","i18n","getString","renderLogSection","Component","defaultProps","nameEntities","relatedToEntities","associatedEntities","environment","defaultLocale","notificationIsExpand"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * Call log enhancement\n */\nimport classnames from 'classnames';\n\nimport { environment } from '../../lib';\nimport BackHeader from '../BackHeaderV2';\nimport LogBasicInfo from '../LogBasicInfoV2';\nimport NotificationSection from '../NotificationSection';\nimport NotificationSectionV2 from '../NotificationSectionV2';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport WebRTCNotificationSection from '../WebRTCNotificationSection';\nimport { CallLogPanelProps } from './CallLogPanel.interface';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport default class CallLogPanel extends Component<CallLogPanelProps, {}> {\n  static defaultProps: Partial<CallLogPanelProps> = {\n    currentLog: {\n      nameEntities: [],\n      relatedToEntities: [],\n      associatedEntities: [],\n    },\n    currentIdentify: '',\n    currentLocale: environment.defaultLocale,\n    classes: {},\n    refs: {},\n    // Notification\n    currentNotificationIdentify: '',\n    shrinkNotification: () => null,\n    header: true,\n    headerTitle: 'createCallLog',\n    showSmallCallControl: false,\n    isInTransferPage: false,\n    showSpinner: true,\n    isWide: true,\n    showNotiLogButton: true,\n    disableLinks: false,\n    useNewNotification: false,\n    contactSearch: null,\n    showFoundFromServer: false,\n    isSearching: false,\n    logNotification: {\n      showNotification: false,\n      call: null,\n      logName: null,\n      notificationIsExpand: false,\n      subContactNameDisplay: '',\n      displayEntity: null,\n      entityType: '',\n      entityDetailLink: '',\n    },\n    showRecordingIndicator: false,\n    renderCallNotificationAvatar: () => null,\n    getAvatarUrl: () => null,\n  };\n\n  editSectionRef = React.createRef<HTMLDivElement>();\n\n  // TODO: use react function component to refactor with react hook\n  // eslint-disable-next-line react/no-deprecated\n  componentWillMount() {\n    const { pushLogPageStatus } = this.props;\n    if (pushLogPageStatus) {\n      pushLogPageStatus(true);\n    }\n  }\n\n  componentWillUnmount() {\n    const { pushLogPageStatus } = this.props;\n    if (pushLogPageStatus) {\n      pushLogPageStatus(false);\n    }\n  }\n\n  editSectionScrollBy = (top: number) => {\n    this.editSectionRef.current.scrollBy({\n      top,\n      behavior: 'smooth',\n    });\n  };\n\n  renderLogSection() {\n    const {\n      currentLog,\n      renderEditLogSection,\n      classes: { editSection },\n      renderKeypadPanel,\n    } = this.props;\n\n    if (!currentLog) return null;\n    const { showSpinner } = this.props;\n    if (currentLog.showSpinner || showSpinner) {\n      return <SpinnerOverlay className={styles.spinner} />;\n    }\n    return (\n      <>\n        {this.renderLogNotification()}\n        {this.renderLogBasicInfo()}\n        <div\n          ref={this.editSectionRef}\n          className={classnames(styles.editSection, editSection)}\n        >\n          {renderEditLogSection && this.getEditLogSection()}\n        </div>\n        {renderKeypadPanel && renderKeypadPanel()}\n        {this.getCallControlButtons()}\n      </>\n    );\n  }\n\n  getCallControlButtons() {\n    const {\n      currentLog,\n      classes: { callLogCallControl = null },\n      refs: { callLogCallControl: callLogCallControlRef },\n      renderCallLogCallControl,\n      isWide,\n      showSmallCallControl,\n    } = this.props;\n    const { call } = currentLog;\n    const { telephonySessionId, webphoneSession } = call;\n    const isCurrentDeviceCall = !!webphoneSession;\n    if (showSmallCallControl) {\n      return (\n        <div\n          ref={callLogCallControlRef}\n          className={classnames(styles.callControlRoot, callLogCallControl)}\n          data-sign=\"smallCallControl\"\n        >\n          {renderCallLogCallControl &&\n            renderCallLogCallControl(\n              telephonySessionId,\n              isWide,\n              isCurrentDeviceCall,\n            )}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  getEditLogSection() {\n    const {\n      renderEditLogSection,\n      currentLocale,\n      onSaveCallLog,\n      onUpdateCallLog,\n      onSelectViewVisible,\n      currentLog,\n      additionalInfo,\n      subjectDropdownsTracker,\n      contactSearch,\n      showFoundFromServer,\n      appName,\n      isSearching,\n      startAdornmentRender,\n      objectTypeIconsMap,\n    } = this.props;\n    return renderEditLogSection({\n      currentLocale,\n      onSaveCallLog,\n      onUpdateCallLog,\n      onSelectViewVisible,\n      currentLog,\n      additionalInfo,\n      subjectDropdownsTracker,\n      contactSearch,\n      showFoundFromServer,\n      appName,\n      isSearching,\n      editSectionScrollBy: this.editSectionScrollBy,\n      startAdornmentRender,\n      objectTypeIconsMap,\n    });\n  }\n\n  renderLogBasicInfo() {\n    const {\n      isWide,\n      currentLog,\n      currentLocale,\n      formatPhone,\n      dateTimeFormatter,\n      renderBasicInfo,\n      classes: { logBasicInfo },\n      currentSession,\n      showRecordingIndicator,\n    } = this.props;\n    if (renderBasicInfo) {\n      return renderBasicInfo({ formatPhone, dateTimeFormatter, currentLog });\n    }\n    return (\n      <LogBasicInfo\n        dataSign=\"leftSectionInfo\"\n        isWide={isWide}\n        currentLog={currentLog}\n        currentLocale={currentLocale}\n        formatPhone={formatPhone}\n        dateTimeFormatter={dateTimeFormatter}\n        className={logBasicInfo}\n        recordStatus={currentSession?.recordStatus}\n        showRecordingIndicator={showRecordingIndicator}\n      />\n    );\n  }\n\n  genSaveLogButtonV2() {\n    const {\n      renderSaveLogButton,\n      currentLocale,\n      onSaveCallLog,\n      currentLog,\n      isWide,\n      showSpinner,\n    } = this.props;\n    const loading = showSpinner || (currentLog && currentLog.showSpinner);\n    return renderSaveLogButton({\n      currentLocale,\n      onSaveCallLog,\n      currentLog,\n      loading,\n      isWide,\n      disabled: currentLog?.disableSaveLog,\n    });\n  }\n\n  renderLogNotification() {\n    const {\n      formatPhone,\n      currentLocale,\n      logNotification,\n      onCloseNotification,\n      onSaveNotification,\n      onExpandNotification,\n      onDiscardNotification,\n      currentNotificationIdentify,\n      currentSession,\n      activeSession,\n      onReject,\n      onHangup,\n      shrinkNotification,\n      disableLinks,\n      useNewNotification,\n      showNotiLogButton,\n      isWebRTC,\n      isWide,\n      onIgnore,\n      onForward,\n      endAndAnswer,\n      holdAndAnswer,\n      toVoicemail,\n      forwardingNumbers,\n      answer,\n      clickForwardTrack,\n      renderCallNotificationAvatar,\n      getAvatarUrl,\n    } = this.props;\n    const {\n      showNotification,\n      call,\n      logName,\n      subContactNameDisplay,\n      displayEntity,\n      entityType,\n      entityDetailLink,\n    } = logNotification;\n    if (!showNotification) {\n      return null;\n    }\n    if (isWebRTC) {\n      if (!call || !call.webphoneSession) return null;\n      return (\n        <WebRTCNotificationSection\n          formatPhone={formatPhone}\n          currentLocale={currentLocale}\n          call={call}\n          logName={logName}\n          subContactNameDisplay={subContactNameDisplay}\n          displayEntity={displayEntity}\n          entityType={entityType}\n          entityDetailLink={entityDetailLink}\n          onCloseNotification={onCloseNotification}\n          currentNotificationIdentify={currentNotificationIdentify}\n          isWide={isWide}\n          onIgnore={onIgnore}\n          onForward={onForward}\n          endAndAnswer={endAndAnswer}\n          holdAndAnswer={holdAndAnswer}\n          toVoicemail={toVoicemail}\n          forwardingNumbers={forwardingNumbers}\n          hasActiveSession={!!activeSession}\n          answer={answer}\n          clickForwardTrack={clickForwardTrack}\n          renderCallNotificationAvatar={renderCallNotificationAvatar}\n          getAvatarUrl={getAvatarUrl}\n        />\n      );\n    }\n    if (useNewNotification) {\n      return (\n        <NotificationSectionV2\n          formatPhone={formatPhone}\n          currentLocale={currentLocale}\n          logNotification={logNotification}\n          showNotiLogButton={showNotiLogButton}\n          onCloseNotification={onCloseNotification}\n          onSaveNotification={onSaveNotification}\n          onExpandNotification={onExpandNotification}\n          onDiscardNotification={onDiscardNotification}\n          currentNotificationIdentify={currentNotificationIdentify}\n          currentSession={currentSession}\n          onReject={onReject}\n          onHangup={onHangup}\n          shrinkNotification={shrinkNotification}\n        />\n      );\n    }\n    return (\n      <NotificationSection\n        formatPhone={formatPhone}\n        currentLocale={currentLocale}\n        logNotification={logNotification}\n        showNotiLogButton={showNotiLogButton}\n        onCloseNotification={onCloseNotification}\n        onSaveNotification={onSaveNotification}\n        onExpandNotification={onExpandNotification}\n        onDiscardNotification={onDiscardNotification}\n        currentNotificationIdentify={currentNotificationIdentify}\n        currentSession={currentSession}\n        onReject={onReject}\n        onHangup={onHangup}\n        disableLinks={disableLinks}\n      />\n    );\n  }\n\n  goBack() {\n    const { goBack } = this.props;\n    goBack();\n  }\n\n  render() {\n    const {\n      currentIdentify,\n      currentLocale,\n      classes: { root, backHeader },\n      refs: { root: rootRef },\n      backIcon,\n      header,\n      headerTitle,\n      isInTransferPage,\n      isWide,\n      children,\n      getRenderLogButton,\n    } = this.props;\n    if (!currentIdentify || isInTransferPage) return null;\n\n    return (\n      <div\n        ref={rootRef}\n        className={classnames(\n          styles.root,\n          !isWide ? styles.classic : null,\n          root,\n        )}\n      >\n        {header && (\n          <BackHeader\n            currentLocale={currentLocale}\n            backIcon={backIcon}\n            isWide={isWide}\n            rightIcon={getRenderLogButton?.() || this.genSaveLogButtonV2()}\n            title={i18n.getString(headerTitle, currentLocale)}\n            className={classnames(styles.header, backHeader)}\n            onBackClick={() => this.goBack()}\n          />\n        )}\n        {this.renderLogSection()}\n        {children}\n      </div>\n    );\n  }\n}\n"],"file":"CallLogPanel.js"}