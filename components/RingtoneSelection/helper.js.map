{"version":3,"file":"helper.js","names":["isMp3","buf","length","exports","isWav","fileToArrayBuffer","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","file","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","reject","reader","FileReader","onload","event","_event$target","target","result","ArrayBuffer","Error","onerror","_event$target2","error","readAsArrayBuffer","stop","_x","apply","arguments","isAudioFile","_ref2","_callee2","arrayBuffer","signature","_callee2$","_context2","sent","Uint8Array","_x2","readAudioFile","_ref3","_callee3","_callee3$","_context3","fileName","name","dataUrl","readAsDataURL","_x3"],"sources":["components/RingtoneSelection/helper.ts"],"sourcesContent":["import { AudioInfo } from '@ringcentral-integration/commons/modules/RingtoneConfiguration';\n\nexport const isMp3 = (buf: Uint8Array | null): boolean => {\n  if (!buf || buf.length < 3) {\n    return false;\n  }\n\n  return (\n    (buf[0] === 0x49 && buf[1] === 0x44 && buf[2] === 0x33) ||\n    (buf[0] === 0xff && (buf[1] & 0xe0) === 0xe0) ||\n    (buf[0] === 0x54 && buf[1] === 0x41 && buf[2] === 0x47)\n  );\n};\n\nexport const isWav = (buf: Uint8Array | null): boolean => {\n  if (!buf || buf.length < 12) {\n    return false;\n  }\n\n  return (\n    buf[0] === 82 &&\n    buf[1] === 73 &&\n    buf[2] === 70 &&\n    buf[3] === 70 &&\n    buf[8] === 87 &&\n    buf[9] === 65 &&\n    buf[10] === 86 &&\n    buf[11] === 69\n  );\n};\n\nexport const fileToArrayBuffer = async (file: File): Promise<ArrayBuffer> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      if (event.target?.result instanceof ArrayBuffer) {\n        resolve(event.target.result);\n      } else {\n        reject(new Error('Failed to convert file to ArrayBuffer.'));\n      }\n    };\n\n    reader.onerror = (event) => {\n      reject(new Error('Error reading file: ' + event.target?.error));\n    };\n\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nexport const isAudioFile = async (file: File): Promise<boolean> => {\n  const arrayBuffer = await fileToArrayBuffer(file);\n  const signature = new Uint8Array(arrayBuffer);\n\n  return isMp3(signature) || isWav(signature);\n};\n\nexport const readAudioFile = async (file: File): Promise<AudioInfo> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      resolve({\n        fileName: file.name,\n        dataUrl: reader.result as string,\n      });\n    };\n    reader.onerror = () => {\n      reject('upload failed');\n    };\n    reader.readAsDataURL(file);\n  });\n};\n"],"mappings":"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","ignoreList":[]}