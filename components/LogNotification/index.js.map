{"version":3,"sources":["components/LogNotification/index.tsx"],"names":["LogNotification","formatPhone","currentLog","currentLocale","showLogButton","isExpand","onStay","onDiscard","onSave","onExpand","currentSession","onReject","onHangup","showEndButton","disableLinks","extraButtons","endButton","callStatus","direction","isInComingCall","callDirections","inbound","telephonyStatuses","ringing","endTitle","endAction","callControlI18n","getString","EndIcon","styles","hangup","buttonDisabled","extraButtonBox","i18n","expandButtonWithEnd","expandDisableButton","expandButton","container","basicInfo","confirmationContainer","confirmationInfo","confirmationButtons","saveButton","selected","discardButton","stayButton","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport telephonyStatuses from '@ringcentral-integration/commons/enums/telephonyStatus';\n\nimport EndIcon from '../../assets/images/End.svg';\nimport { Button } from '../Button';\nimport CircleButton from '../CircleButton';\nimport LogBasicInfo from '../LogBasicInfo';\nimport callControlI18n from '../SmCallControl/i18n';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype LogNotificationProps = {\n  currentLocale: string;\n  showLogButton?: boolean;\n  currentLog?: object;\n  formatPhone?: (...args: any[]) => any;\n  isExpand?: boolean;\n  onStay?: (...args: any[]) => any;\n  onDiscard?: (...args: any[]) => any;\n  onSave?: (...args: any[]) => any;\n  onExpand?: (...args: any[]) => any;\n  currentSession?: object;\n  onReject?: (...args: any[]) => any;\n  onHangup?: (...args: any[]) => any;\n  showEndButton?: boolean;\n  disableLinks?: boolean;\n};\nconst LogNotification: React.SFC<LogNotificationProps> = ({\n  formatPhone,\n  currentLog,\n  currentLocale,\n  showLogButton,\n  isExpand,\n  onStay,\n  onDiscard,\n  onSave,\n  onExpand,\n  currentSession,\n  onReject,\n  onHangup,\n  showEndButton,\n  disableLinks,\n}) => {\n  let extraButtons = null;\n  if (showEndButton && showLogButton) {\n    let endButton = null;\n    if (currentSession) {\n      const { callStatus, direction } = currentSession;\n      const isInComingCall =\n        callDirections.inbound === direction &&\n        telephonyStatuses.ringing === callStatus;\n      const endTitle = isInComingCall ? 'reject' : 'hangup';\n      const endAction = isInComingCall ? onReject : onHangup;\n      endButton = (\n        <span title={callControlI18n.getString(endTitle, currentLocale)}>\n          <CircleButton\n            dataSign={endTitle}\n            showBorder={false}\n            icon={EndIcon}\n            onClick={endAction}\n            className={classnames({\n              [styles.hangup]: true,\n              [styles.endButton]: true,\n              [styles.buttonDisabled]: disableLinks,\n            })}\n            disabled={disableLinks}\n          />\n        </span>\n      );\n    }\n    extraButtons = (\n      <div className={styles.extraButtonBox}>\n        {endButton}\n        <Button\n          tooltip={i18n.getString('log', currentLocale)}\n          disabled={isExpand}\n          className={classnames(\n            styles.expandButtonWithEnd,\n            isExpand && styles.expandDisableButton,\n          )}\n          onClick={() => onExpand()}\n        >\n          {i18n.getString('log', currentLocale)}\n        </Button>\n      </div>\n    );\n  } else if (showLogButton) {\n    extraButtons = (\n      <Button\n        disabled={isExpand}\n        className={classnames(\n          styles.expandButton,\n          isExpand && styles.expandDisableButton,\n        )}\n        onClick={() => onExpand()}\n      >\n        {i18n.getString('log', currentLocale)}\n      </Button>\n    );\n  }\n  return (\n    <div className={styles.container}>\n      <div className={styles.basicInfo}>\n        <LogBasicInfo\n          currentLog={currentLog}\n          currentLocale={currentLocale}\n          formatPhone={formatPhone}\n        />\n        {extraButtons}\n      </div>\n      {isExpand ? (\n        <div className={styles.confirmationContainer}>\n          <div className={styles.confirmationInfo}>\n            {i18n.getString('confirmationInfo', currentLocale)}\n          </div>\n          <div className={styles.confirmationButtons}>\n            {onSave ? (\n              <Button\n                tooltip={i18n.getString('save', currentLocale)}\n                className={classnames(styles.saveButton, styles.selected)}\n                onClick={() => onSave()}\n              >\n                {i18n.getString('save', currentLocale)}\n              </Button>\n            ) : null}\n            {onDiscard ? (\n              <Button\n                tooltip={i18n.getString('discard', currentLocale)}\n                className={styles.discardButton}\n                onClick={() => onDiscard()}\n              >\n                {i18n.getString('discard', currentLocale)}\n              </Button>\n            ) : null}\n            {onStay ? (\n              <Button\n                tooltip={i18n.getString('stay', currentLocale)}\n                className={styles.stayButton}\n                onClick={() => onStay()}\n              >\n                {i18n.getString('stay', currentLocale)}\n              </Button>\n            ) : null}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\nLogNotification.defaultProps = {\n  showLogButton: true,\n  currentLog: {},\n  formatPhone: undefined,\n  isExpand: undefined,\n  onStay: undefined,\n  onDiscard: undefined,\n  onSave: undefined,\n  onExpand: undefined,\n  currentSession: undefined,\n  onReject: () => null,\n  onHangup: () => null,\n  showEndButton: false,\n  disableLinks: false,\n};\nexport default LogNotification;\n"],"file":"index.js"}