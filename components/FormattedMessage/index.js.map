{"version":3,"file":"index.js","names":["_utils","require","_react","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","FormattedMessage","props","message","_props$values","values","_props$tagName","tagName","Component","nodes","useMemo","uid","Math","floor","random","toString","hashedParams","elements","tokenDelimiter","concat","keys","forEach","key","isValidElement","format","split","filter","token","map","createElement","Fragment","_default","exports"],"sources":["components/FormattedMessage/index.tsx"],"sourcesContent":["import { format } from '@ringcentral-integration/utils';\nimport type { ElementType, FunctionComponent } from 'react';\nimport React, { isValidElement, useMemo } from 'react';\n\nexport type FormattedMessageProps = {\n  message: string;\n  values?: Record<string, string | React.ReactNode>;\n  /**\n   * render element\n   * @default `span`\n   */\n  tagName?: ElementType;\n};\n\nconst FormattedMessage: FunctionComponent<FormattedMessageProps> = (props) => {\n  const { message, values = {}, tagName: Component = 'span' } = props;\n\n  const nodes = useMemo(() => {\n    const uid = Math.floor(Math.random() * 0x10000000000).toString(16);\n    const hashedParams: Record<string, string | React.ReactNode> = {};\n    const elements: Record<string, string | React.ReactNode> = {};\n    const tokenDelimiter = `@__${uid}__@`;\n\n    Object.keys(values).forEach((key) => {\n      if (isValidElement(values[key])) {\n        hashedParams[key] = `${tokenDelimiter}${key}${tokenDelimiter}`;\n        elements[key] = values[key];\n      } else {\n        hashedParams[key] = values[key];\n      }\n    });\n\n    const nodes = format(message, hashedParams)\n      .split(tokenDelimiter)\n      .filter((token) => !!token)\n      .map((token, i) => {\n        return (\n          <React.Fragment key={i}>{elements[token] || token}</React.Fragment>\n        );\n      });\n    return nodes;\n  }, [message, values]);\n\n  return <Component>{nodes}</Component>;\n};\n\nexport default FormattedMessage;\n"],"mappings":"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","ignoreList":[]}