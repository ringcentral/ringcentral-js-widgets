{"version":3,"sources":["components/DropdownNavigationItem/index.tsx"],"names":["DropdownNavigationItem","icon","activeIcon","active","isReverseFillIcon","label","title","noticeCounts","onClick","keepStyle","dataSign","notice","styles","styleClass","iconStyles","root","reverseFillIcon","iconHolder","labelHolder","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;;;AAeA,IAAMA,sBAA8D,GAAG,SAAjEA,sBAAiE,OAWjE;AAAA,MAVJC,IAUI,QAVJA,IAUI;AAAA,MATJC,UASI,QATJA,UASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,iBAOI,QAPJA,iBAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIJ,YAAY,IAAIA,YAAY,GAAG,CAAnC,EAAsC;AACpC,QAAIA,YAAY,GAAG,EAAnB,EAAuB;AACrBI,MAAAA,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAEC,mBAAOD;AAAvB,eAAT;AACD,KAFD,MAEO;AACLA,MAAAA,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAEC,mBAAOD;AAAvB,SAAgCJ,YAAhC,CAAT;AACD;AACF;;AACD,MAAMM,UAAU,GAAG,CAACJ,SAAD,GAAaG,mBAAOE,UAApB,GAAiC,IAApD;AACA,sBACE;AACE,IAAA,KAAK,EAAER,KAAK,IAAID,KADlB;AAEE,iBAAWK,QAFb;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,SAAS,EAAE,4BACTI,mBAAOG,IADE,EAETZ,MAAM,IAAIS,mBAAOT,MAFR,EAGTC,iBAAiB,IAAIQ,mBAAOI,eAHnB;AAJb,kBAUE;AAAK,IAAA,SAAS,EAAE,4BAAWJ,mBAAOK,UAAlB,EAA8BJ,UAA9B;AAAhB,KACGV,MAAM,GAAGD,UAAH,GAAgBD,IADzB,CAVF,eAaE;AAAK,IAAA,SAAS,EAAEW,mBAAOM;AAAvB,KAAqCb,KAArC,CAbF,EAcGM,MAdH,CADF;AAkBD,CAvCD;;AAwCAX,sBAAsB,CAACmB,YAAvB,GAAsC;AACpChB,EAAAA,MAAM,EAAE,KAD4B;AAEpCC,EAAAA,iBAAiB,EAAE,KAFiB;AAGpCC,EAAAA,KAAK,EAAEe,SAH6B;AAIpCd,EAAAA,KAAK,EAAEc,SAJ6B;AAKpCb,EAAAA,YAAY,EAAEa,SALsB;AAMpCZ,EAAAA,OAAO,EAAEY,SAN2B;AAOpCX,EAAAA,SAAS,EAAE;AAPyB,CAAtC;eASeT,sB","sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\ntype DropdownNavigationItemProps = {\n  icon: React.ReactNode;\n  activeIcon: React.ReactNode;\n  active?: boolean;\n  isReverseFillIcon?: boolean;\n  label?: string;\n  title?: string;\n  noticeCounts?: number;\n  onClick?: (...args: any[]) => any;\n  keepStyle?: boolean;\n  dataSign?: string;\n};\n\nconst DropdownNavigationItem: React.SFC<DropdownNavigationItemProps> = ({\n  icon,\n  activeIcon,\n  active,\n  isReverseFillIcon,\n  label,\n  title,\n  noticeCounts,\n  onClick,\n  keepStyle,\n  dataSign,\n}) => {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = <div className={styles.notice}>99+</div>;\n    } else {\n      notice = <div className={styles.notice}>{noticeCounts}</div>;\n    }\n  }\n  const styleClass = !keepStyle ? styles.iconStyles : null;\n  return (\n    <div\n      title={title || label}\n      data-sign={dataSign}\n      onClick={onClick}\n      className={classnames(\n        styles.root,\n        active && styles.active,\n        isReverseFillIcon && styles.reverseFillIcon,\n      )}\n    >\n      <div className={classnames(styles.iconHolder, styleClass)}>\n        {active ? activeIcon : icon}\n      </div>\n      <div className={styles.labelHolder}>{label}</div>\n      {notice}\n    </div>\n  );\n};\nDropdownNavigationItem.defaultProps = {\n  active: false,\n  isReverseFillIcon: false,\n  label: undefined,\n  title: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n  keepStyle: false,\n};\nexport default DropdownNavigationItem;\n"],"file":"index.js"}