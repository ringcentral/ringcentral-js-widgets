{"version":3,"file":"interface.js","names":[],"sources":["components/GenericMeetingPanel/interface.ts"],"sourcesContent":["import type { FunctionComponent } from 'react';\n\nimport type { RcVMeetingModel } from '@ringcentral-integration/commons/interfaces/Rcv.model';\nimport type { BrandConfig } from '@ringcentral-integration/commons/modules/Brand';\nimport type {\n  RcmItemType,\n  RcMMeetingModel,\n} from '@ringcentral-integration/commons/modules/Meeting';\nimport type {\n  AUTH_USER,\n  RcvDelegator,\n  RcvItemType,\n} from '@ringcentral-integration/commons/modules/RcVideo';\nimport type {\n  RcCheckboxProps,\n  RcDatePickerSize,\n  RcTimePickerSize,\n} from '@ringcentral/juno';\n\nexport interface ScheduleButtonProps {\n  currentLocale: string;\n  disabled?: boolean;\n  meeting: any;\n  onOK: () => void;\n  onClick: () => void;\n  update: (meeting: any) => any;\n  showSaveAsDefault: boolean;\n  disableSaveAsDefault: boolean;\n  launchMeeting: () => any;\n  showLaunchMeetingBtn: boolean;\n  scheduleButtonLabel: string;\n  appCode: string;\n}\n\nexport interface CommonProps {\n  scheduleButton?: FunctionComponent<ScheduleButtonProps>;\n  invite?: (meeting: any, opener: any) => any;\n  showSpinner: boolean;\n  showScheduleOnBehalf?: boolean;\n  showTopic?: boolean;\n  showWhen?: boolean;\n  showDuration?: boolean;\n  showSaveAsDefault?: boolean;\n  disableSaveAsDefault?: boolean;\n  openNewWindow?: boolean;\n  currentLocale: string;\n  disabled?: boolean;\n  configDisabled?: boolean;\n  onOK?: () => any;\n  init: () => any;\n  schedule?: (meeting: any, opener: any) => any;\n  enablePersonalMeeting?: boolean;\n  hasSettingsChanged?: boolean;\n  personalMeetingId: string;\n  switchUsePersonalMeetingId: (usePersonalMeetingId: boolean) => any;\n  defaultTopic: string;\n}\n\nexport interface VideoPanelProps extends CommonProps {\n  // TODO: any is reserved for RcM\n  updateMeetingSettings: (meeting: RcVMeetingModel | any) => void;\n  trackSettingChanges?: (itemName: RcvItemType | RcmItemType) => void;\n  validatePasswordSettings: (password: string, isSecret: boolean) => boolean;\n  e2eeInteractFunc: (e2eeValue: boolean) => void;\n  onPmiChangeClick: () => void;\n  datePickerSize?: RcDatePickerSize;\n  timePickerSize?: RcTimePickerSize;\n  checkboxSize?: RcCheckboxProps['size'];\n  showRcvAdminLock?: boolean;\n  showPmiConfirm?: boolean;\n  delegators?: RcvDelegator[];\n  joinBeforeHostLabel: string;\n  authUserTypeValue: AUTH_USER;\n  isJoinBeforeHostDisabled: boolean;\n  isMuteAudioDisabled: boolean;\n  isTurnOffCameraDisabled: boolean;\n  isAllowScreenSharingDisabled: boolean;\n  isAuthenticatedCanJoinDisabled: boolean;\n  isWaitingRoomDisabled: boolean;\n  isRequirePasswordDisabled: boolean;\n  isWaitingRoomNotCoworkerDisabled: boolean;\n  isWaitingRoomGuestDisabled: boolean;\n  isWaitingRoomAllDisabled: boolean;\n  isAuthUserTypeDisabled: boolean;\n  isWaitingRoomTypeDisabled: boolean;\n  isSignedInUsersDisabled: boolean;\n  isSignedInCoWorkersDisabled: boolean;\n  showWaitingRoom?: boolean;\n  showE2EE?: boolean;\n  isE2EEDisabled?: boolean;\n  isPersonalMeetingDisabled?: boolean;\n  isPmiChangeConfirmed?: boolean;\n}\n\nexport interface MeetingPanelProps extends CommonProps {\n  audioOptionToggle?: boolean;\n  meetingOptionToggle?: boolean;\n  showRecurringMeeting?: boolean;\n  recipientsSection: React.ReactNode;\n  passwordPlaceholderEnable?: boolean;\n  launchMeeting?: () => any;\n  showLaunchMeetingBtn: boolean;\n  scheduleButtonLabel: string;\n  appCode: string;\n  updateScheduleFor: (userExtensionId: string) => any;\n  extensionId: number;\n  recurringMeetingPosition?: 'middle' | 'bottom';\n  enableServiceWebSettings?: boolean;\n  delegators?: RcvDelegator[];\n  showIeSupportAlert?: boolean;\n  appName?: string;\n}\n\nexport interface GenericMeetingPanelProps\n  extends VideoPanelProps,\n    MeetingPanelProps {\n  meeting: RcMMeetingModel | Partial<RcVMeetingModel>;\n  useRcmV2: boolean;\n  isRCM: boolean;\n  isRCV: boolean;\n  showSpinnerInConfigPanel: boolean;\n  showCustom?: boolean;\n  CustomPanel?: React.ReactNode;\n  brandName: string;\n  labelPlacement?: 'end' | 'start' | 'top' | 'bottom';\n  showRemoveMeetingWarning: boolean;\n  brandConfig: BrandConfig;\n}\n\nexport interface GenericMeetingPanelState {}\n"],"mappings":""}