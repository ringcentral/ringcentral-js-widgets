{"version":3,"sources":["components/PickList/PickList.spec.tsx"],"names":["wrapper","defaultOptions","id","label","name","wholeName","customOptions","map","item","key","setup","options","optionValueKey","optionLabelKey","value","required","onChange","dataSign","renderItem","renderValue","afterEach","unmount","describe","it","jest","fn","expect","find","text","toBe","not","toContain","hasClass","prop","baseButton","option","toBeCalledWith","n"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mount } from 'enzyme';\n\nimport { RcThemeProvider } from '@ringcentral/juno';\n\nimport { PickList, PickListProps } from './PickList';\n\nlet wrapper;\nconst defaultOptions = [\n  {\n    id: '101',\n    label: 'work',\n    name: 'work name',\n    wholeName: 'work name whole',\n  },\n  {\n    id: '102',\n    label: 'study',\n    name: 'studyname',\n    wholeName: 'studyname  whole',\n  },\n  {\n    id: '103',\n    label: 'have fun',\n    name: 'funname',\n    wholeName: 'funname name whole',\n  },\n];\n\nconst customOptions = defaultOptions.map((item) => ({\n  key: item.id,\n  name: item.name,\n  wholeName: item.wholeName,\n}));\n\nfunction setup({\n  options = defaultOptions,\n  optionValueKey = 'id',\n  optionLabelKey = 'label',\n  label = 'pickListTest',\n  value,\n  required = false,\n  onChange = () => null,\n  dataSign = 'pickList',\n  renderItem,\n  renderValue,\n}: Partial<PickListProps>) {\n  return mount(\n    <RcThemeProvider>\n      <PickList\n        options={options}\n        optionValueKey={optionValueKey}\n        optionLabelKey={optionLabelKey}\n        label={label}\n        value={value}\n        required={required}\n        onChange={onChange}\n        dataSign={dataSign}\n        renderItem={renderItem}\n        renderValue={renderValue}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nafterEach(async () => {\n  wrapper.unmount();\n});\n\ndescribe('<PickList />', () => {\n  it('PickList can render correctly with selection, and can be selected to change', () => {\n    const onChange = jest.fn();\n    const label = 'pickListTest2';\n    const value = '102';\n    wrapper = setup({\n      label,\n      value,\n      onChange,\n    });\n    expect(wrapper.find('label').text()).toBe(label);\n    expect(wrapper.find('label').text()).not.toContain('*');\n    expect(wrapper.find('label').hasClass('Mui-required')).toBe(false);\n    expect(wrapper.find('input').prop('value')).toBe(value);\n    const baseButton = wrapper.find('[role=\"button\"]');\n    expect(baseButton.text()).toBe(\n      defaultOptions.find((option) => option.id === value).label,\n    );\n    // baseButton.simulate('click');\n    // const menuItems = document.body.querySelectorAll<HTMLInputElement>(\n    //   '[role=\"presentation\"] li[role=\"option\"]',\n    // );\n    // expect(menuItems).toHaveLength(defaultOptions.length);\n    // menuItems.forEach((el, index) => {\n    //   expect(el.textContent).toBe(defaultOptions[index].label);\n    //   expect(el.dataset.value).toBe(defaultOptions[index].id);\n    // });\n    // const selectIndex = 2;\n    // menuItems[selectIndex].click();\n    // expect(onChange).toBeCalledWith(defaultOptions[selectIndex].id);\n  });\n\n  it('PickList can render correctly without selection, and can be selected to change.', () => {\n    const onChange = jest.fn();\n    const label = 'pickListTest2';\n    wrapper = setup({\n      label,\n      onChange,\n      required: true,\n    });\n    expect(wrapper.find('label').text()).toContain(label);\n    expect(wrapper.find('label').text()).toContain('*');\n    expect(wrapper.find('label').hasClass('Mui-required')).toBe(true);\n    expect(wrapper.find('input').prop('value')).toBe('');\n    const baseButton = wrapper.find('[role=\"button\"]');\n    expect(baseButton.text()).toBe('​');\n    // baseButton.simulate('click');\n    // const menuItems = document.body.querySelectorAll<HTMLInputElement>(\n    //   '[role=\"presentation\"] li[role=\"option\"]',\n    // );\n    // expect(menuItems).toHaveLength(defaultOptions.length);\n    // const selectIndex = 2;\n    // menuItems[selectIndex].click();\n    // expect(onChange).toBeCalledWith(defaultOptions[selectIndex].id);\n  });\n\n  it('PickList can display by using renderValue', () => {\n    const onChange = jest.fn();\n    const renderValue = jest.fn(\n      (key) => defaultOptions.find((item) => item.id === key).name,\n    );\n    const value = '102';\n    wrapper = setup({\n      onChange,\n      renderValue,\n      value,\n    });\n    expect(wrapper.find('input').prop('value')).toBe(value);\n    expect(renderValue).toBeCalledWith(value);\n    const baseButton = wrapper.find('[role=\"button\"]');\n    expect(baseButton.text()).toBe(renderValue(value));\n    // baseButton.simulate('click');\n    // const menuItems = document.body.querySelectorAll<HTMLInputElement>(\n    //   '[role=\"presentation\"] li[role=\"option\"]',\n    // );\n    // expect(menuItems).toHaveLength(defaultOptions.length);\n    // menuItems.forEach((el, index) => {\n    //   expect(el.textContent).toBe(defaultOptions[index].label);\n    //   expect(el.dataset.value).toBe(defaultOptions[index].id);\n    // });\n  });\n\n  it('PickList can display by using renderItem', () => {\n    const onChange = jest.fn();\n    const renderItem = jest.fn((item) => item.wholeName);\n    const value = '102';\n    wrapper = setup({\n      onChange,\n      renderItem,\n      value,\n    });\n    expect(wrapper.find('input').prop('value')).toBe(value);\n    const baseButton = wrapper.find('[role=\"button\"]');\n    expect(baseButton.text()).toBe(\n      defaultOptions.find((option) => option.id === value).wholeName,\n    );\n    // baseButton.simulate('click');\n    // const menuItems = document.body.querySelectorAll<HTMLInputElement>(\n    //   '[role=\"presentation\"] li[role=\"option\"]',\n    // );\n    // expect(renderItem).toBeCalledTimes(defaultOptions.length);\n    // expect(menuItems).toHaveLength(defaultOptions.length);\n    // menuItems.forEach((el, index) => {\n    //   expect(el.textContent).toBe(defaultOptions[index].wholeName);\n    //   expect(el.dataset.value).toBe(defaultOptions[index].id);\n    // });\n  });\n\n  it('PickList can using custom value, label to render.', () => {\n    const onChange = jest.fn();\n    const value = '102';\n    const optionValueKey = 'key';\n    const optionLabelKey = 'name';\n    wrapper = setup({\n      options: customOptions,\n      optionValueKey,\n      optionLabelKey,\n      onChange,\n      value,\n    });\n    expect(wrapper.find('input').prop('value')).toBe(value);\n    const baseButton = wrapper.find('[role=\"button\"]');\n    expect(baseButton.text()).toBe(\n      customOptions.find((option) => option[optionValueKey] === value)[\n        optionLabelKey\n      ],\n    );\n    // baseButton.simulate('click');\n    // const menuItems = document.body.querySelectorAll<HTMLInputElement>(\n    //   '[role=\"presentation\"] li[role=\"option\"]',\n    // );\n    // expect(menuItems).toHaveLength(customOptions.length);\n    // menuItems.forEach((el, index) => {\n    //   expect(el.textContent).toBe(customOptions[index][optionLabelKey]);\n    //   expect(el.dataset.value).toBe(customOptions[index][optionValueKey]);\n    // });\n  });\n\n  it('When PickList use custom value, label, can also use renderValue, renderItem to render correctly', () => {\n    const onChange = jest.fn();\n    const renderValue = jest.fn(\n      (n) => customOptions.find((item) => item.key === n).name,\n    );\n    const renderItem = jest.fn((item) => item.wholeName);\n    const value = '102';\n    const optionValueKey = 'key';\n    const optionLabelKey = 'name';\n    wrapper = setup({\n      options: customOptions,\n      optionValueKey,\n      optionLabelKey,\n      onChange,\n      renderValue,\n      renderItem,\n      value,\n    });\n    expect(wrapper.find('input').prop('value')).toBe(value);\n    const baseButton = wrapper.find('[role=\"button\"]');\n    expect(baseButton.text()).toBe(renderValue(value));\n    // baseButton.simulate('click');\n    // const menuItems = document.body.querySelectorAll<HTMLInputElement>(\n    //   '[role=\"presentation\"] li[role=\"option\"]',\n    // );\n    // expect(renderItem).toBeCalledTimes(customOptions.length);\n    // expect(menuItems).toHaveLength(customOptions.length);\n    // menuItems.forEach((el, index) => {\n    //   expect(el.textContent).toBe(customOptions[index].wholeName);\n    //   expect(el.dataset.value).toBe(customOptions[index][optionValueKey]);\n    // });\n  });\n});\n"],"file":"PickList.spec.js"}