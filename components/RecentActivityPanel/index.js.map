{"version":3,"sources":["components/RecentActivityPanel/index.tsx"],"names":["ToggleIcon","expanded","dynamicsFont","arrow","styles","arrowIcon","foldArrowIcon","propTypes","PropTypes","bool","isRequired","RecentActivityPanel","props","title","onPanelToggle","toggleButton","label","onClick","placement","currentContact","containerClass","container","className","header","string","object","func","defaultProps","height","offset","expandable"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,sBACjB;AACE,IAAA,SAAS,EAAE,6BACTC,yBAAaC,KADJ,EAET,6BAAWC,mBAAOC,SAAlB,sBAAgCD,mBAAOE,aAAvC,EAAuD,CAACL,QAAxD,EAFS;AADb,IADiB;AAAA,CAAnB;;AASAD,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,QAAQ,EAAEO,sBAAUC,IAAV,CAAeC;AADJ,CAAvB;AAIA;AACA;AACA;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAAA,MAC7BC,KAD6B,GACMD,KADN,CAC7BC,KAD6B;AAAA,MACtBZ,QADsB,GACMW,KADN,CACtBX,QADsB;AAAA,MACZa,aADY,GACMF,KADN,CACZE,aADY;AAErC,MAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,eAAE,gCAAC,UAAD;AAAY,MAAA,QAAQ,EAAEf;AAAtB,MADY;AAEnBgB,IAAAA,OAAO,EAAEH,aAFU;AAGnBI,IAAAA,SAAS,EAAE;AAHQ,GAArB;;AAKA,MAAI,CAACN,KAAK,CAACO,cAAX,EAA2B;AACzB,WAAO,IAAP;AACD;;AACD,MAAMC,cAAc,GAAG,6BAAWhB,mBAAOiB,SAAlB,EAA6BT,KAAK,CAACU,SAAnC,CAAvB;AACA,sBACE;AAAK,IAAA,SAAS,EAAEF;AAAhB,kBACE,gCAAC,cAAD;AACE,IAAA,OAAO,EAAE,CAACL,YAAD,CADX;AAEE,IAAA,SAAS,EAAEX,mBAAOmB,MAFpB;AAGE,IAAA,OAAO,EAAET;AAHX,KAKGD,KALH,CADF,eAQE,gCAAC,8BAAD,EAAwBD,KAAxB,CARF,CADF;AAYD,CAvBD;;AAyBAD,mBAAmB,CAACJ,SAApB,GAAgC;AAC9BM,EAAAA,KAAK,EAAEL,sBAAUgB,MAAV,CAAiBd,UADM;AAE9BS,EAAAA,cAAc,EAAEX,sBAAUiB,MAFI;AAG9BX,EAAAA,aAAa,EAAEN,sBAAUkB,IAAV,CAAehB,UAHA;AAI9BT,EAAAA,QAAQ,EAAEO,sBAAUC,IAAV,CAAeC,UAJK;AAK9BY,EAAAA,SAAS,EAAEd,sBAAUgB;AALS,CAAhC;AAQAb,mBAAmB,CAACgB,YAApB,GAAmC;AACjCR,EAAAA,cAAc,EAAE,IADiB;AAEjCG,EAAAA,SAAS,EAAE;AAFsB,CAAnC;;eAKe,4BAAW;AACxBlB,EAAAA,MAAM,EAAE;AACNwB,IAAAA,MAAM,EAAE,OADF;AAENC,IAAAA,MAAM,EAAE;AAFF,GADgB;AAKxBP,EAAAA,SAAS,EAAElB,mBAAO0B;AALM,CAAX,EAMZnB,mBANY,C","sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport { Header } from '../Header';\nimport RecentActivityView from '../RecentActivityView';\nimport expandable from './expandable';\nimport styles from './styles.scss';\n\nconst ToggleIcon = ({ expanded }) => (\n  <i\n    className={classnames(\n      dynamicsFont.arrow,\n      classnames(styles.arrowIcon, { [styles.foldArrowIcon]: !expanded }),\n    )}\n  />\n);\n\nToggleIcon.propTypes = {\n  expanded: PropTypes.bool.isRequired,\n};\n\n/**\n * RecentActivityPanel component provides a animated slide-out panel.\n */\nconst RecentActivityPanel = (props) => {\n  const { title, expanded, onPanelToggle } = props;\n  const toggleButton = {\n    label: <ToggleIcon expanded={expanded} />,\n    onClick: onPanelToggle,\n    placement: 'right',\n  };\n  if (!props.currentContact) {\n    return null;\n  }\n  const containerClass = classnames(styles.container, props.className);\n  return (\n    <div className={containerClass}>\n      <Header\n        buttons={[toggleButton]}\n        className={styles.header}\n        onClick={onPanelToggle}\n      >\n        {title}\n      </Header>\n      <RecentActivityView {...props} />\n    </div>\n  );\n};\n\nRecentActivityPanel.propTypes = {\n  title: PropTypes.string.isRequired,\n  currentContact: PropTypes.object,\n  onPanelToggle: PropTypes.func.isRequired,\n  expanded: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n};\n\nRecentActivityPanel.defaultProps = {\n  currentContact: null,\n  className: null,\n};\n\nexport default expandable({\n  styles: {\n    height: '200px',\n    offset: '27px',\n  },\n  className: styles.expandable,\n})(RecentActivityPanel);\n"],"file":"index.js"}