{"version":3,"sources":["components/RecentActivityPanel/expandable.tsx"],"names":["expandable","styles","className","WrappedComponent","Expandable","props","togglePanel","event","stopPropagation","trackClickToggle","state","expanded","setState","prevState","_styles","height","offset","PureComponent","propTypes","PropTypes","func","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,UAAT,OAAuD;AAAA,yBAAjCC,MAAiC;AAAA,MAAjCA,MAAiC,4BAAxB,EAAwB;AAAA,4BAApBC,SAAoB;AAAA,MAApBA,SAAoB,+BAAR,IAAQ;AACrD,SAAO,UAACC,gBAAD,EAAsB;AAAA,QACrBC,UADqB;AAAA;;AAAA;;AAEzB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kCAAMA,KAAN;;AADiB,cAOnBC,WAPmB,GAOL,UAACC,KAAD,EAAW;AAAA;;AACvB;AACAA,UAAAA,KAAK,CAACC,eAAN;AACA,wDAAKH,KAAL,EAAWI,gBAAX,kGAA8B,CAAC,MAAKC,KAAL,CAAWC,QAA1C;;AACA,gBAAKC,QAAL,CAAc,UAACC,SAAD;AAAA,mBAAgB;AAAEF,cAAAA,QAAQ,EAAE,CAACE,SAAS,CAACF;AAAvB,aAAhB;AAAA,WAAd;AACD,SAZkB;;AAEjB,cAAKD,KAAL,GAAa;AACXC,UAAAA,QAAQ,EAAE;AADC,SAAb;AAFiB;AAKlB;;AAPwB;AAAA;AAAA,iCAgBhB;AAAA,cACCA,QADD,GACc,KAAKD,KADnB,CACCC,QADD;;AAEP,cAAMG,OAAO,mCACRb,MADQ;AAEXc,YAAAA,MAAM,EAAEJ,QAAQ,GAAGV,MAAM,CAACc,MAAV,GAAmBd,MAAM,CAACe;AAF/B,YAAb;;AAIA,8BACE;AAAK,YAAA,KAAK,EAAEF,OAAZ;AAAqB,YAAA,SAAS,EAAEZ;AAAhC,0BACE,gCAAC,gBAAD;AACE,YAAA,aAAa,EAAE,KAAKI,WADtB;AAEE,YAAA,QAAQ,EAAEK;AAFZ,aAGM,KAAKN,KAHX,EADF,CADF;AASD;AA/BwB;;AAAA;AAAA,MACFY,oBADE;;AAkC3Bb,IAAAA,UAAU,CAACc,SAAX,GAAuB;AACrBT,MAAAA,gBAAgB,EAAEU,sBAAUC;AADP,KAAvB;AAIAhB,IAAAA,UAAU,CAACiB,YAAX,GAA0B;AACxBZ,MAAAA,gBAAgB,EAAEa;AADM,KAA1B;AAGA,WAAOlB,UAAP;AACD,GA1CD;AA2CD;;eAEcJ,U","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport PropTypes from 'prop-types';\n\nfunction expandable({ styles = {}, className = null }) {\n  return (WrappedComponent) => {\n    class Expandable extends PureComponent {\n      constructor(props) {\n        super(props);\n        this.state = {\n          expanded: false,\n        };\n      }\n\n      togglePanel = (event) => {\n        // In case it's fired twice\n        event.stopPropagation();\n        this.props.trackClickToggle?.(!this.state.expanded);\n        this.setState((prevState) => ({ expanded: !prevState.expanded }));\n      };\n\n      render() {\n        const { expanded } = this.state;\n        const _styles = {\n          ...styles,\n          height: expanded ? styles.height : styles.offset,\n        };\n        return (\n          <div style={_styles} className={className}>\n            <WrappedComponent\n              onPanelToggle={this.togglePanel}\n              expanded={expanded}\n              {...this.props}\n            />\n          </div>\n        );\n      }\n    }\n\n    Expandable.propTypes = {\n      trackClickToggle: PropTypes.func,\n    };\n\n    Expandable.defaultProps = {\n      trackClickToggle: undefined,\n    };\n    return Expandable;\n  };\n}\n\nexport default expandable;\n"],"file":"expandable.js"}