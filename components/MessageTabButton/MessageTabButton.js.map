{"version":3,"sources":["components/MessageTabButton/MessageTabButton.tsx"],"names":["tabColor","StyledTab","styled","div","$active","css","NavigationButton","active","icon","label","noticeCounts","onClick","width","fullSizeInk","notice","styles","notices","navigationButton","linearBorder","iconHolder","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAMA,QAAQ,GAAG,0BAAS,KAAT,EAAgB,UAAhB,CAAjB;;AAEO,IAAMC,SAAS,GAAGC,6BAAOC,GAAV,oBAClB;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SACAA,OAAO,QACPC,qBADO,sBAEIL,QAFJ,EAGsBA,QAHtB,CADP;AAAA,CADkB,CAAf;;;;AASP,IAAMM,gBAA0D,GAAG,SAA7DA,gBAA6D,QAQ7D;AAAA,MAPJC,MAOI,SAPJA,MAOI;AAAA,MANJC,IAMI,SANJA,IAMI;AAAA,MALJC,KAKI,SALJA,KAKI;AAAA,MAJJC,YAII,SAJJA,YAII;AAAA,MAHJC,OAGI,SAHJA,OAGI;AAAA,MAFJC,KAEI,SAFJA,KAEI;AAAA,MADJC,WACI,SADJA,WACI;AACJ,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIJ,YAAY,IAAIA,YAAY,GAAG,CAAnC,EAAsC;AACpC,QAAIA,YAAY,GAAG,EAAnB,EAAuB;AACrBI,MAAAA,MAAM,gBACJ;AAAK,qBAAU,cAAf;AAA8B,QAAA,SAAS,EAAEC,mBAAOC;AAAhD,eADF;AAKD,KAND,MAMO;AACLF,MAAAA,MAAM,gBACJ;AAAK,qBAAU,cAAf;AAA8B,QAAA,SAAS,EAAEC,mBAAOD;AAAhD,SACGJ,YADH,CADF;AAKD;AACF;;AACD,sBACE,gCAAC,SAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,SAAS,EAAE,4BACTI,mBAAOE,gBADE,EAETV,MAAM,IAAIQ,mBAAOR,MAFR,EAGTM,WAAW,GAAG,IAAH,GAAUE,mBAAOG,YAHnB,CAFb;AAOE,IAAA,OAAO,EAAEX,MAPX;AAQE,IAAA,KAAK,EAAE;AACLK,MAAAA,KAAK,EAALA;AADK;AART,kBAYE;AAAK,IAAA,SAAS,EAAEG,mBAAOI,UAAvB;AAAmC,IAAA,KAAK,EAAEV,KAA1C;AAAiD,iBAAWA;AAA5D,kBACE;AAAK,IAAA,SAAS,EAAEM,mBAAOP;AAAvB,KAA8BA,IAA9B,CADF,EAEGM,MAFH,CAZF,CADF;AAmBD,CA5CD;;AA8CAR,gBAAgB,CAACc,YAAjB,GAAgC;AAC9Bb,EAAAA,MAAM,EAAE,KADsB;AAE9BE,EAAAA,KAAK,EAAEY,SAFuB;AAG9BX,EAAAA,YAAY,EAAEW,SAHgB;AAI9BV,EAAAA,OAAO,EAAEU,SAJqB;AAK9BR,EAAAA,WAAW,EAAE;AALiB,CAAhC;eAQeP,gB","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport classnames from 'classnames';\n\nimport { css, palette2, styled } from '@ringcentral/juno';\n\nimport styles from './styles.scss';\n\ntype NavigationButtonProps = {\n  icon: React.ReactNode;\n  active?: boolean;\n  label?: string;\n  noticeCounts?: number;\n  width: number | string;\n  onClick?: (...args: any[]) => any;\n  fullSizeInk?: boolean;\n};\n\ntype StyledTabProps = { $active: boolean };\n\nconst tabColor = palette2('tab', 'selected');\n\nexport const StyledTab = styled.div<StyledTabProps>`\n  ${({ $active }) =>\n    $active &&\n    css`\n      color: ${tabColor};\n      border-bottom: 1px solid ${tabColor};\n    `};\n`;\n\nconst NavigationButton: FunctionComponent<NavigationButtonProps> = ({\n  active,\n  icon,\n  label,\n  noticeCounts,\n  onClick,\n  width,\n  fullSizeInk,\n}) => {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = (\n        <div data-sign=\"noticeCounts\" className={styles.notices}>\n          99+\n        </div>\n      );\n    } else {\n      notice = (\n        <div data-sign=\"noticeCounts\" className={styles.notice}>\n          {noticeCounts}\n        </div>\n      );\n    }\n  }\n  return (\n    <StyledTab\n      onClick={onClick}\n      className={classnames(\n        styles.navigationButton,\n        active && styles.active,\n        fullSizeInk ? null : styles.linearBorder,\n      )}\n      $active={active}\n      style={{\n        width,\n      }}\n    >\n      <div className={styles.iconHolder} title={label} data-sign={label}>\n        <div className={styles.icon}>{icon}</div>\n        {notice}\n      </div>\n    </StyledTab>\n  );\n};\n\nNavigationButton.defaultProps = {\n  active: false,\n  label: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n  fullSizeInk: true,\n};\n\nexport default NavigationButton;\n"],"file":"MessageTabButton.js"}