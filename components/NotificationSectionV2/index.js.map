{"version":3,"sources":["components/NotificationSectionV2/index.tsx"],"names":["NotificationSection","nextProps","logNotification","onCloseNotification","currentNotificationIdentify","call","result","props","formatPhone","currentLocale","showNotiLogButton","onSaveNotification","onExpandNotification","onDiscardNotification","currentSession","onReject","onHangup","shrinkNotification","telephonyStatus","status","statusI18n","isIncomingCall","telephonyStatuses","ringing","direction","callDirections","inbound","i18n","getString","styles","root","notificationModal","modalHeader","modalTitle","modalCloseBtn","notificationIsExpand","renderLogSection","Component","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport telephonyStatuses from '@ringcentral-integration/commons/enums/telephonyStatus';\n\nimport CloseIcon from '../../assets/images/CloseIcon.svg';\nimport { Button } from '../Button';\nimport LogNotification from '../LogNotificationV2';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype NotificationSectionProps = {\n  currentLocale: string;\n  formatPhone: (...args: any[]) => any;\n  logNotification?: object;\n  onCloseNotification?: (...args: any[]) => any;\n  onDiscardNotification?: (...args: any[]) => any;\n  onSaveNotification?: (...args: any[]) => any;\n  onExpandNotification?: (...args: any[]) => any;\n  showNotiLogButton?: boolean;\n  currentNotificationIdentify?: string;\n  currentSession?: object;\n  onReject: (...args: any[]) => any;\n  onHangup: (...args: any[]) => any;\n  shrinkNotification?: (...args: any[]) => any;\n};\nclass NotificationSection extends Component<NotificationSectionProps, {}> {\n  componentWillUpdate(nextProps) {\n    const {\n      logNotification,\n      onCloseNotification,\n      currentNotificationIdentify,\n    } = nextProps;\n    if (currentNotificationIdentify) {\n      const { call = {} } = logNotification;\n      const { result } = call;\n      if (result) {\n        onCloseNotification();\n      }\n    }\n  }\n  renderLogSection() {\n    const {\n      formatPhone,\n      currentLocale,\n      logNotification,\n      showNotiLogButton,\n      onCloseNotification,\n      onSaveNotification,\n      onExpandNotification,\n      onDiscardNotification,\n      currentNotificationIdentify,\n      currentSession,\n      onReject,\n      onHangup,\n      shrinkNotification,\n    } = this.props;\n    const { call } = logNotification;\n    const { result, telephonyStatus } = call;\n    const status = result || telephonyStatus;\n    let statusI18n = null;\n    const isIncomingCall =\n      status === telephonyStatuses.ringing &&\n      call.direction === callDirections.inbound;\n    if (isIncomingCall) {\n      statusI18n = i18n.getString('ringing', currentLocale);\n    } else {\n      statusI18n = i18n.getString('callConnected', currentLocale);\n    }\n    return (\n      <div className={classnames(styles.root)}>\n        <div className={styles.notificationModal}>\n          <div className={styles.modalHeader}>\n            <div className={styles.modalTitle}>{statusI18n}</div>\n            <div className={styles.modalCloseBtn}>\n              <Button dataSign=\"closeButton\" onClick={onCloseNotification}>\n                <CloseIcon />\n              </Button>\n            </div>\n          </div>\n          <LogNotification\n            showEndButton\n            showLogButton={showNotiLogButton}\n            currentLocale={currentLocale}\n            formatPhone={formatPhone}\n            currentLog={logNotification}\n            isExpand={logNotification.notificationIsExpand}\n            onSave={onSaveNotification}\n            onExpand={onExpandNotification}\n            onDiscard={onDiscardNotification}\n            onReject={() => onReject(currentNotificationIdentify)}\n            onHangup={() => onHangup(currentNotificationIdentify)}\n            currentSession={currentSession}\n            shrinkNotification={shrinkNotification}\n          />\n        </div>\n      </div>\n    );\n  }\n  render() {\n    return this.renderLogSection();\n  }\n}\nNotificationSection.defaultProps = {\n  // Notification\n  logNotification: undefined,\n  onCloseNotification: undefined,\n  onDiscardNotification: undefined,\n  onSaveNotification: undefined,\n  onExpandNotification: undefined,\n  showNotiLogButton: true,\n  currentNotificationIdentify: '',\n  currentSession: undefined,\n  shrinkNotification: undefined,\n};\nexport default NotificationSection;\n"],"file":"index.js"}