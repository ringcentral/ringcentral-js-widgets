{"version":3,"sources":["components/ContactDropdownList/ContactDropdownList.tsx"],"names":["ContactDropdownList","nextProps","visibility","items","length","scrollDirection","selectedIndex","node","scrollTop","Math","floor","props","currentLocale","className","listRef","formatContactPhone","setSelectedIndex","addToRecipients","titleEnabled","phoneTypeRenderer","phoneSourceNameRenderer","contactInfoRenderer","contactPhoneRenderer","styles","dropdownList","c","map","item","index","name","entityType","phoneType","phoneNumber","doNotCall","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\n\nimport { ContactItem } from './ContactItem';\nimport styles from './styles.scss';\n\nexport type ContactDropdownListProps = {\n  currentLocale: string;\n  scrollDirection?: string;\n  visibility: boolean;\n  className?: string;\n  items: {\n    name: string;\n    entityType: string;\n    phoneType: string;\n    phoneNumber: string;\n  }[];\n  formatContactPhone: (...args: any[]) => any;\n  addToRecipients: (...args: any[]) => any;\n  setSelectedIndex: (...args: any[]) => any;\n  selectedIndex: number;\n  titleEnabled?: boolean;\n  listRef?: (...args: any[]) => any;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  contactInfoRenderer?: (...args: any[]) => any;\n  contactPhoneRenderer?: (...args: any[]) => any;\n};\nexport class ContactDropdownList extends Component<\n  ContactDropdownListProps,\n  {}\n> {\n  // eslint-disable-next-line react/no-deprecated\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.visibility || nextProps.items.length === 0) {\n      return;\n    }\n    if (nextProps.scrollDirection === 'ArrowDown') {\n      if (nextProps.selectedIndex < nextProps.items.length) {\n        if (nextProps.selectedIndex > 4 && this.node) {\n          this.node.scrollTop += 53;\n          this.node.scrollTop = Math.floor(this.node.scrollTop / 53) * 53;\n        }\n      }\n    }\n    if (nextProps.scrollDirection === 'ArrowUp') {\n      if (nextProps.selectedIndex > -1) {\n        if (nextProps.selectedIndex < nextProps.items.length - 4 && this.node) {\n          this.node.scrollTop -= 53;\n          this.node.scrollTop = Math.floor(this.node.scrollTop / 53) * 53;\n        }\n      }\n    }\n  }\n  render() {\n    const {\n      currentLocale,\n      className,\n      listRef,\n      items,\n      selectedIndex,\n      formatContactPhone,\n      setSelectedIndex,\n      addToRecipients,\n      titleEnabled,\n      visibility,\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      contactInfoRenderer,\n      contactPhoneRenderer,\n    } = this.props;\n    if (!visibility || items.length === 0) {\n      return null;\n    }\n    return (\n      <ul\n        className={classnames(styles.dropdownList, className)}\n        ref={(c) => {\n          this.node = c;\n          if (typeof listRef === 'function') {\n            listRef(c);\n          }\n        }}\n        data-sign=\"contactDropdownList\"\n      >\n        {items.map((item, index) => (\n          <ContactItem\n            currentLocale={currentLocale}\n            active={selectedIndex === index}\n            name={item.name}\n            entityType={item.entityType}\n            phoneType={item.phoneType}\n            phoneNumber={item.phoneNumber}\n            phoneTypeRenderer={phoneTypeRenderer}\n            phoneSourceNameRenderer={phoneSourceNameRenderer}\n            formatContactPhone={formatContactPhone}\n            onHover={() => setSelectedIndex(index)}\n            onClick={() => addToRecipients(item)}\n            key={`${index}${item.phoneNumber}${item.name}${item.phoneType}`}\n            titleEnabled={titleEnabled}\n            contactInfoRenderer={contactInfoRenderer}\n            contactPhoneRenderer={contactPhoneRenderer}\n            doNotCall={item.doNotCall}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n"],"file":"ContactDropdownList.js"}