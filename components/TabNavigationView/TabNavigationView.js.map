{"version":3,"sources":["components/TabNavigationView/TabNavigationView.tsx"],"names":["TabNavigationView","navigationPosition","navBarClassName","onLoading","brandIcon","holdReady","className","tabs","goTo","tabWidth","tabHeight","currentPath","currentVirtualPath","tabNavigationViewClassName","tooltipForceHide","children","isVertical","navBar","TabNavigationButton","DropdownNavigationView","undefined","styles","root","vertical","tabContainer","main","hasMaxHeight","defaultProps"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AAoBA,IAAMA,iBAA4D,GAAG,SAA/DA,iBAA+D,OAgB/D;AAAA,MAfJC,kBAeI,QAfJA,kBAeI;AAAA,MAdJC,eAcI,QAdJA,eAcI;AAAA,MAbJC,SAaI,QAbJA,SAaI;AAAA,MAZJC,SAYI,QAZJA,SAYI;AAAA,MAXJC,SAWI,QAXJA,SAWI;AAAA,MAVJC,SAUI,QAVJA,SAUI;AAAA,MATJC,IASI,QATJA,IASI;AAAA,MARJC,IAQI,QARJA,IAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,kBAII,QAJJA,kBAII;AAAA,MAHJC,0BAGI,QAHJA,0BAGI;AAAA,MAFJC,gBAEI,QAFJA,gBAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,MAAIZ,SAAJ,EAAe;AACb,wBAAO,gCAAC,8BAAD,OAAP;AACD;;AAED,MAAMa,UAAU,GAAGf,kBAAkB,KAAK,MAA1C;;AACA,MAAMgB,MAAM,gBACV,gCAAC,yBAAD;AACE,IAAA,MAAM,EAAEC,+BADV;AAEE,IAAA,gBAAgB,EAAEJ,gBAFpB;AAGE,IAAA,mBAAmB,EAAEK,kCAHvB;AAIE,IAAA,IAAI,EAAEZ,IAJR;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,QAAQ,EAAEC,QANZ;AAOE,IAAA,SAAS,EAAEC,SAPb;AAQE,IAAA,WAAW,EAAEC,WARf;AASE,IAAA,SAAS,EAAEK,UAAU,GAAG,UAAH,GAAgBI,SATvC;AAUE,IAAA,kBAAkB,EAAER,kBAVtB;AAWE,IAAA,SAAS,EAAEV;AAXb,IADF;;AAeA,MAAIG,SAAJ,EAAe,OAAO,IAAP;AACf,sBACE;AACE,IAAA,SAAS,EAAE,4BACTgB,mBAAOC,IADE,EAEThB,SAFS,EAGTL,kBAAkB,KAAK,MAAvB,IAAiCoB,mBAAOE,QAH/B;AADb,kBAOE;AAAK,IAAA,SAAS,EAAEF,mBAAOG;AAAvB,KACGvB,kBAAkB,KAAK,KAAvB,IAAgCA,kBAAkB,KAAK,MAAvD,gBACC,kEACGgB,MADH,EAEGhB,kBAAkB,KAAK,MAAvB,GAAgCG,SAAhC,GAA4C,IAF/C,CADD,GAKG,IANN,CAPF,eAeE;AACE,iBAAU,mBADZ;AAEE,IAAA,SAAS,EAAE,4BACTiB,mBAAOI,IADE,EAETZ,0BAFS,EAGT,CAACG,UAAD,IAAeK,mBAAOK,YAHb;AAFb,KAQG,GARH,EASGX,QATH,CAfF,EA0BGd,kBAAkB,KAAK,QAAvB,gBAAkC,kEAAGgB,MAAH,CAAlC,GAAkD,IA1BrD,CADF;AA8BD,CApED;;AAsEAjB,iBAAiB,CAAC2B,YAAlB,GAAiC;AAC/BZ,EAAAA,QAAQ,EAAE,IADqB;AAE/BT,EAAAA,SAAS,EAAE,IAFoB;AAG/BL,EAAAA,kBAAkB,EAAE,KAHW;AAI/BG,EAAAA,SAAS,EAAE,IAJoB;AAK/BG,EAAAA,IAAI,EAAE,IALyB;AAM/BF,EAAAA,SAAS,EAAE,KANoB;AAO/BF,EAAAA,SAAS,EAAE;AAPoB,CAAjC;eAUeH,iB","sourcesContent":["import React, { FunctionComponent, ReactNode } from 'react';\n\nimport classnames from 'classnames';\n\nimport DropdownNavigationView from '../DropdownNavigationView';\nimport NavigationBar, { NavigationBarProps } from '../NavigationBar';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport TabNavigationButton from '../TabNavigationButton';\nimport styles from './styles.scss';\n\nexport interface TabNavigationViewProps {\n  children?: ReactNode;\n  className?: string;\n  currentPath: string;\n  currentVirtualPath?: string;\n  goTo: NavigationBarProps['goTo'];\n  navigationPosition?: 'top' | 'bottom' | 'left';\n  brandIcon?: ReactNode;\n  tabWidth?: string;\n  tabHeight?: string;\n  tabs?: NavigationBarProps['tabs'];\n  holdReady?: boolean;\n  navBarClassName?: string;\n  tabNavigationViewClassName?: string;\n  onLoading?: boolean;\n  tooltipForceHide?: boolean;\n}\n\nconst TabNavigationView: FunctionComponent<TabNavigationViewProps> = ({\n  navigationPosition,\n  navBarClassName,\n  onLoading,\n  brandIcon,\n  holdReady,\n  className,\n  tabs,\n  goTo,\n  tabWidth,\n  tabHeight,\n  currentPath,\n  currentVirtualPath,\n  tabNavigationViewClassName,\n  tooltipForceHide,\n  children,\n}) => {\n  if (onLoading) {\n    return <SpinnerOverlay />;\n  }\n\n  const isVertical = navigationPosition === 'left';\n  const navBar = (\n    <NavigationBar\n      button={TabNavigationButton}\n      tooltipForceHide={tooltipForceHide}\n      childNavigationView={DropdownNavigationView}\n      tabs={tabs}\n      goTo={goTo}\n      tabWidth={tabWidth}\n      tabHeight={tabHeight}\n      currentPath={currentPath}\n      direction={isVertical ? 'vertical' : undefined}\n      currentVirtualPath={currentVirtualPath}\n      className={navBarClassName}\n    />\n  );\n  if (holdReady) return null;\n  return (\n    <div\n      className={classnames(\n        styles.root,\n        className,\n        navigationPosition === 'left' && styles.vertical,\n      )}\n    >\n      <div className={styles.tabContainer}>\n        {navigationPosition === 'top' || navigationPosition === 'left' ? (\n          <>\n            {navBar}\n            {navigationPosition === 'left' ? brandIcon : null}\n          </>\n        ) : null}\n      </div>\n      <div\n        data-sign=\"tabNavigationView\"\n        className={classnames(\n          styles.main,\n          tabNavigationViewClassName,\n          !isVertical && styles.hasMaxHeight,\n        )}\n      >\n        {' '}\n        {children}\n      </div>\n      {navigationPosition === 'bottom' ? <>{navBar}</> : null}\n    </div>\n  );\n};\n\nTabNavigationView.defaultProps = {\n  children: null,\n  className: null,\n  navigationPosition: 'top',\n  brandIcon: null,\n  tabs: null,\n  holdReady: false,\n  onLoading: false,\n};\n\nexport default TabNavigationView;\n"],"file":"TabNavigationView.js"}