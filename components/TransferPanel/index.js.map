{"version":3,"sources":["components/TransferPanel/index.tsx"],"names":["TransferPanel","props","onButtonOutput","key","setState","isLastInputFromDialpad","state","recipient","preState","value","toNumber","onTransfer","_getTransferNumber","sessionId","onWarmTransfer","onToNumberChange","clearToNumber","setRecipient","clearRecipient","load","nextProps","session","onCallEnd","setActiveSessionId","phoneNumber","controlBusy","onBack","currentLocale","searchContact","searchContactList","formatPhone","phoneTypeRenderer","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","autoFocus","enableWarmTransfer","children","isOnTransfer","transferButton","warmTransferButton","styles","button","buttonGroupItem","disabled","undefined","TransferIcon","i18n","getString","Askfirst","root","backHeader","dialInput","padContainer","dialPad","buttonRow","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport classnames from 'classnames';\n\nimport { Askfirst } from '@ringcentral/juno/icon';\n\nimport TransferIcon from '../../assets/images/Transfer.svg';\nimport ActiveCallButton from '../ActiveCallButton';\nimport BackHeader from '../BackHeader';\nimport CircleButton from '../CircleButton';\nimport DialPad from '../DialPad';\nimport RecipientsInput from '../RecipientsInput';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype TransferPanelProps = {\n  setActiveSessionId?: (...args: any[]) => any;\n  onTransfer: (...args: any[]) => any;\n  onWarmTransfer: (...args: any[]) => any;\n  currentLocale: string;\n  onBack: (...args: any[]) => any;\n  onCallEnd: (...args: any[]) => any;\n  searchContactList?: any[];\n  searchContact: (...args: any[]) => any;\n  formatPhone: (...args: any[]) => any;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  recipientsContactInfoRenderer?: (...args: any[]) => any;\n  recipientsContactPhoneRenderer?: (...args: any[]) => any;\n  autoFocus?: boolean;\n  sessionId: string;\n  session?: object;\n  controlBusy?: boolean;\n  enableWarmTransfer?: boolean;\n};\ntype TransferPanelState = {\n  toNumber: string;\n  recipient: null;\n  isLastInputFromDialpad: boolean;\n};\nclass TransferPanel extends PureComponent<\n  TransferPanelProps,\n  TransferPanelState\n> {\n  static defaultProps = {\n    setActiveSessionId: null,\n    phoneTypeRenderer: undefined,\n    phoneSourceNameRenderer: undefined,\n    recipientsContactInfoRenderer: undefined,\n    recipientsContactPhoneRenderer: undefined,\n    autoFocus: true,\n    session: null,\n    searchContactList: [],\n    controlBusy: false,\n    enableWarmTransfer: false,\n    children: null,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      toNumber: '',\n      recipient: null,\n      isLastInputFromDialpad: false,\n    };\n  }\n  componentDidMount() {\n    this.load();\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.session && !nextProps.session) {\n      this.props.onCallEnd();\n    }\n  }\n  load() {\n    this.props.setActiveSessionId(this.props.sessionId);\n  }\n  _getTransferNumber() {\n    return (\n      (this.state.recipient && this.state.recipient.phoneNumber) ||\n      this.state.toNumber\n    );\n  }\n  onButtonOutput = (key) => {\n    this.setState({\n      isLastInputFromDialpad: true,\n    });\n    if (this.state.recipient) {\n      return;\n    }\n    this.setState((preState) => {\n      const value = preState.toNumber + key;\n      return { toNumber: value };\n    });\n  };\n  onTransfer = () => {\n    this.props.onTransfer(this._getTransferNumber(), this.props.sessionId);\n  };\n  onWarmTransfer = () => {\n    this.props.onWarmTransfer(this._getTransferNumber(), this.props.sessionId);\n  };\n  onToNumberChange = (toNumber) => {\n    this.setState({\n      isLastInputFromDialpad: false,\n      toNumber,\n    });\n  };\n  clearToNumber = () => {\n    this.setState({\n      toNumber: '',\n    });\n  };\n  setRecipient = (recipient) => {\n    this.setState({\n      recipient,\n      toNumber: '',\n    });\n  };\n  clearRecipient = () => {\n    this.setState({ recipient: null });\n  };\n  render() {\n    const {\n      controlBusy,\n      session,\n      onBack,\n      currentLocale,\n      searchContact,\n      searchContactList,\n      formatPhone,\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      recipientsContactInfoRenderer,\n      recipientsContactPhoneRenderer,\n      autoFocus,\n      enableWarmTransfer,\n      children,\n    } = this.props;\n    if (!session) {\n      return null;\n    }\n    const isOnTransfer = !!session.isOnTransfer;\n    let transferButton;\n    let warmTransferButton;\n    if (enableWarmTransfer) {\n      transferButton = (\n        <div className={classnames(styles.button, styles.buttonGroupItem)}>\n          <ActiveCallButton\n            dataSign=\"transferBtn\"\n            className={isOnTransfer ? styles.disabled : undefined}\n            onClick={this.onTransfer}\n            icon={TransferIcon}\n            disabled={isOnTransfer || controlBusy}\n            title={i18n.getString('blindTransfer', currentLocale)}\n          />\n        </div>\n      );\n      warmTransferButton = (\n        <div className={classnames(styles.button, styles.buttonGroupItem)}>\n          <ActiveCallButton\n            dataSign=\"warnTransferBtn\"\n            className={isOnTransfer ? styles.disabled : undefined}\n            onClick={this.onWarmTransfer}\n            icon={Askfirst}\n            disabled={isOnTransfer || controlBusy}\n            title={i18n.getString('warmTransfer', currentLocale)}\n          />\n        </div>\n      );\n    } else {\n      transferButton = (\n        <div className={styles.button}>\n          <CircleButton\n            dataSign=\"transferBtn\"\n            className={isOnTransfer ? styles.disabled : undefined}\n            onClick={this.onTransfer}\n            icon={TransferIcon}\n            disabled={isOnTransfer || controlBusy}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className={styles.root}>\n        <BackHeader onBackClick={onBack} className={styles.backHeader}>\n          {i18n.getString('transferTo', currentLocale)}\n        </BackHeader>\n        <RecipientsInput\n          className={styles.dialInput}\n          value={this.state.toNumber}\n          onChange={this.onToNumberChange}\n          onClean={this.clearToNumber}\n          recipient={this.state.recipient}\n          addToRecipients={this.setRecipient}\n          removeFromRecipients={this.clearRecipient}\n          searchContact={searchContact}\n          searchContactList={searchContactList}\n          formatContactPhone={formatPhone}\n          currentLocale={currentLocale}\n          phoneTypeRenderer={phoneTypeRenderer}\n          phoneSourceNameRenderer={phoneSourceNameRenderer}\n          contactInfoRenderer={recipientsContactInfoRenderer}\n          contactPhoneRenderer={recipientsContactPhoneRenderer}\n          isLastInputFromDialpad={this.state.isLastInputFromDialpad}\n          titleEnabled\n          autoFocus={autoFocus}\n        />\n        <div className={styles.padContainer}>\n          <DialPad\n            dataSign=\"transfer\"\n            className={styles.dialPad}\n            onButtonOutput={this.onButtonOutput}\n          />\n          <div className={styles.buttonRow}>\n            {warmTransferButton}\n            {transferButton}\n          </div>\n        </div>\n        {children}\n      </div>\n    );\n  }\n}\nexport default TransferPanel;\n"],"file":"index.js"}