{"version":3,"file":"WebRTCNotificationSection.interface.js","names":[],"sources":["components/WebRTCNotificationSection/WebRTCNotificationSection.interface.ts"],"sourcesContent":["import type { IContact } from '@ringcentral-integration/commons/interfaces/Contact.model';\n\nexport interface WebRTCNotificationProps {\n  formatPhone: (...args: any[]) => any;\n  currentLocale: string;\n  call: Call;\n  logName: string;\n  onCloseNotification: (...args: any[]) => any;\n  currentNotificationIdentify: string;\n  isWide: boolean;\n  onIgnore: (telephonySession: string) => any;\n  onForward: (phoneNumber: string, telephonySession: string) => any;\n  endAndAnswer: (telephonySession: string) => any;\n  holdAndAnswer: (telephonySession: string) => any;\n  toVoicemail: (telephonySession: string) => any;\n  forwardingNumbers: any[];\n  hasActiveSession: boolean;\n  answer: (telephonySession: string) => any;\n  clickForwardTrack?: () => any;\n  renderCallNotificationAvatar: (\n    contact: IContact,\n    entityType: string,\n  ) => JSX.Element;\n  subContactNameDisplay: string;\n  displayEntity: any;\n  entityType: string;\n  getAvatarUrl: (contact: IContact) => Promise<string>;\n  entityDetailLink: string;\n  openEntityDetailLinkTrack?: () => any;\n  reply?: (telephonySession: string) => any;\n  enableReply?: boolean;\n  disableLinks?: boolean;\n}\n\nexport interface Call {\n  direction?: string;\n  result?: string;\n  to?: PhoneInfo;\n  from: PhoneInfo;\n  telephonySessionId: any;\n}\n\nexport interface PhoneInfo {\n  phoneNumber: string;\n  extensionNumber?: string;\n}\n\nexport interface ForwardListProps {\n  phoneNumber: string;\n  extensionNumber?: string;\n}\n"],"mappings":""}