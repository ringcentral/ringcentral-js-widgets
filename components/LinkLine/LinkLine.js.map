{"version":3,"sources":["components/LinkLine/LinkLine.tsx"],"names":["LinkLine","onClick","className","children","hideUnderline","hrefClassName","iconClassName","tooltip","dataSign","pendoSignName","rest","e","preventDefault","styles","link","textDecoration","undefined","dynamicsFont","arrow","icon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;;;;;;;;;AAaA,IAAMA,QAA0C,GAAG,SAA7CA,QAA6C,OAW7C;AAAA,MAVJC,QAUI,QAVJA,OAUI;AAAA,MATJC,SASI,QATJA,SASI;AAAA,MARJC,QAQI,QARJA,QAQI;AAAA,gCAPJC,aAOI;AAAA,MAPJA,aAOI,mCAPY,KAOZ;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,aAKI,QALJA,aAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADDC,IACC;;AACJ,sBACE;AACE,IAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;;AACAX,MAAAA,QAAO;AACR,KAJH;AAKE,IAAA,KAAK,EAAEM,OALT;AAME,IAAA,SAAS,EAAE,4BAAWM,mBAAOC,IAAlB,EAAwBT,aAAxB,CANb;AAOE,IAAA,KAAK,EAAED,aAAa,GAAG;AAAEW,MAAAA,cAAc,EAAE;AAAlB,KAAH,GAAgC,EAPtD;AAQE,iBAAWP,QAAQ,IAAIQ,SARzB;AASE,kBAAYP,aAAa,IAAIO;AAT/B,KAUMN,IAVN,gBAYE,gCAAC,oBAAD;AACE,IAAA,SAAS,EAAER,SADb;AAEE,IAAA,IAAI,eACF;AACE,MAAA,SAAS,EAAE,4BACTe,yBAAaC,KADJ,EAETL,mBAAOM,IAFE,EAGTb,aAHS;AADb;AAHJ,KAYGH,QAZH,CAZF,CADF;AA6BD,CAzCD;;eA2CeH,Q","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport IconLine from '../IconLine';\nimport styles from './styles.scss';\n\ntype LinkLineProps = {\n  className?: string;\n  hideUnderline?: boolean;\n  hrefClassName?: string;\n  iconClassName?: string;\n  onClick: (...args: any[]) => any;\n  tooltip?: string;\n  dataSign?: string;\n  pendoSignName?: string;\n};\n\nconst LinkLine: FunctionComponent<LinkLineProps> = ({\n  onClick,\n  className,\n  children,\n  hideUnderline = false,\n  hrefClassName,\n  iconClassName,\n  tooltip,\n  dataSign,\n  pendoSignName,\n  ...rest\n}) => {\n  return (\n    <a\n      onClick={(e) => {\n        e.preventDefault();\n        onClick();\n      }}\n      title={tooltip}\n      className={classnames(styles.link, hrefClassName)}\n      style={hideUnderline ? { textDecoration: 'none' } : {}}\n      data-sign={dataSign || undefined}\n      data-pendo={pendoSignName || undefined}\n      {...rest}\n    >\n      <IconLine\n        className={className}\n        icon={\n          <span\n            className={classnames(\n              dynamicsFont.arrow,\n              styles.icon,\n              iconClassName,\n            )}\n          />\n        }\n      >\n        {children}\n      </IconLine>\n    </a>\n  );\n};\n\nexport default LinkLine;\n"],"file":"LinkLine.js"}