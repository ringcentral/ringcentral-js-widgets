{"version":3,"sources":["components/CallCtrlPanel/index.tsx"],"names":["CallCtrlPanel","props","state","isShowKeyPad","isShowMergeConfirm","hiddenKeyPad","setState","showKeyPad","onFlip","sessionId","onTransfer","onMerge","onBeforeMerge","hasConferenceCall","layout","callCtrlLayouts","normalCtrl","showMergeConfirm","afterOnMerge","hideMergeConfirm","hideMergeConfirmAlt","afterHideMergeConfirm","confirmMerge","afterConfirmMerge","nextProps","onKeyPadChange","actions","addDisabled","areaCode","avatarUrl","backButtonLabel","brand","callStatus","children","conferenceCallEquipped","conferenceCallParties","controlBusy","countryCode","currentLocale","direction","fallBackName","formatPhone","getAvatarUrl","gotoParticipantsCtrl","isOnHold","isOnMute","lastCallInfo","mergeDisabled","nameMatches","onAdd","onBackButtonClick","onHangup","onHold","onMute","onPark","onRecord","onSelectMatcherName","onStopRecord","onUnhold","onUnmute","phoneNumber","phoneSourceNameRenderer","phoneTypeRenderer","recordStatus","selectedMatcherIndex","showBackButton","showContactDisplayPlaceholder","showSpinner","sourceIcons","startTime","disableFlip","callQueueName","showPark","isOnWaitingTransfer","onCompleteTransfer","isOnTransfer","Component","defaultProps","undefined","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport ActiveCallDialPad from '../ActiveCallDialPad';\nimport ActiveCallPanel from '../ActiveCallPanel';\nimport ConfirmMergeModal from '../ConfirmMergeModal';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\n\ntype CallCtrlPanelProps = {\n  callStatus?: string;\n  sessionId?: string;\n  phoneNumber?: string;\n  nameMatches: any[];\n  fallBackName: string;\n  currentLocale: string;\n  startTime?: number;\n  isOnMute?: boolean;\n  isOnHold?: boolean;\n  recordStatus?: string;\n  onMute: (...args: any[]) => any;\n  onUnmute: (...args: any[]) => any;\n  onHold: (...args: any[]) => any;\n  onUnhold: (...args: any[]) => any;\n  onRecord?: (...args: any[]) => any;\n  onStopRecord?: (...args: any[]) => any;\n  onAdd?: (...args: any[]) => any;\n  onMerge?: (...args: any[]) => any;\n  onBeforeMerge?: (...args: any[]) => any;\n  onPark?: (...args: any[]) => any;\n  onHangup: (...args: any[]) => any;\n  onFlip?: (...args: any[]) => any;\n  onTransfer: (...args: any[]) => any;\n  disableFlip?: boolean;\n  showBackButton?: boolean;\n  backButtonLabel?: string;\n  onBackButtonClick?: (...args: any[]) => any;\n  onKeyPadChange?: (...args: any[]) => any;\n  formatPhone: (...args: any[]) => any;\n  areaCode: string;\n  countryCode: string;\n  selectedMatcherIndex: number;\n  onSelectMatcherName?: (...args: any[]) => any;\n  avatarUrl?: string;\n  brand?: string;\n  showContactDisplayPlaceholder?: boolean;\n  sourceIcons?: object;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  layout: string;\n  showSpinner?: boolean;\n  direction?: string;\n  addDisabled?: boolean;\n  mergeDisabled?: boolean;\n  conferenceCallEquipped?: boolean;\n  hasConferenceCall?: boolean;\n  lastCallInfo?: object;\n  conferenceCallParties?: any[];\n  getAvatarUrl?: (...args: any[]) => any;\n  gotoParticipantsCtrl?: (...args: any[]) => any;\n  afterHideMergeConfirm?: (...args: any[]) => any;\n  afterConfirmMerge?: (...args: any[]) => any;\n  afterOnMerge?: (...args: any[]) => any;\n  actions?: any[];\n  controlBusy?: boolean;\n  callQueueName?: string;\n  showPark?: boolean;\n  onCompleteTransfer?: (...args: any[]) => any;\n  isOnWaitingTransfer?: boolean;\n  isOnTransfer?: boolean;\n};\ntype CallCtrlPanelState = {\n  isShowKeyPad: boolean;\n  isShowMergeConfirm: boolean;\n};\nclass CallCtrlPanel extends Component<CallCtrlPanelProps, CallCtrlPanelState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowKeyPad: false,\n      isShowMergeConfirm: false,\n    };\n    this.hiddenKeyPad = () => {\n      this.setState({\n        isShowKeyPad: false,\n      });\n    };\n    this.showKeyPad = () => {\n      this.setState({\n        isShowKeyPad: true,\n      });\n    };\n    this.onFlip = () => {\n      this.props.onFlip(this.props.sessionId);\n    };\n    this.onTransfer = () => {\n      this.props.onTransfer(this.props.sessionId);\n    };\n    this.onMerge = () => {\n      const { onBeforeMerge } = this.props;\n      if (!onBeforeMerge || onBeforeMerge()) {\n        if (\n          this.props.hasConferenceCall &&\n          this.props.layout === callCtrlLayouts.normalCtrl\n        ) {\n          this.showMergeConfirm();\n        } else if (this.props.onMerge) {\n          this.props.onMerge();\n        }\n      }\n      // track user click merge\n      this.props.afterOnMerge();\n    };\n    this.showMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: true,\n      });\n    };\n    this.hideMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: false,\n      });\n    };\n    this.hideMergeConfirmAlt = () => {\n      this.hideMergeConfirm();\n      // user action track\n      this.props.afterHideMergeConfirm();\n    };\n    this.confirmMerge = () => {\n      this.setState({\n        isShowMergeConfirm: false,\n      });\n      if (this.props.onMerge) {\n        this.props.onMerge();\n      }\n      // user action track\n      this.props.afterConfirmMerge();\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.hasConferenceCall && this.state.isShowMergeConfirm) {\n      this.hideMergeConfirm();\n    }\n    if (this.props.sessionId !== nextProps.sessionId) {\n      this.hiddenKeyPad();\n      this.hideMergeConfirm();\n    }\n  }\n  render() {\n    const {\n      onKeyPadChange,\n      actions,\n      addDisabled,\n      areaCode,\n      avatarUrl,\n      backButtonLabel,\n      brand,\n      callStatus,\n      children,\n      conferenceCallEquipped,\n      conferenceCallParties,\n      controlBusy,\n      countryCode,\n      currentLocale,\n      direction,\n      fallBackName,\n      formatPhone,\n      getAvatarUrl,\n      gotoParticipantsCtrl,\n      hasConferenceCall,\n      isOnHold,\n      isOnMute,\n      lastCallInfo,\n      layout,\n      mergeDisabled,\n      nameMatches,\n      onAdd,\n      onBackButtonClick,\n      onHangup,\n      onHold,\n      onMute,\n      onPark,\n      onRecord,\n      onSelectMatcherName,\n      onStopRecord,\n      onUnhold,\n      onUnmute,\n      phoneNumber,\n      phoneSourceNameRenderer,\n      phoneTypeRenderer,\n      recordStatus,\n      selectedMatcherIndex,\n      sessionId,\n      showBackButton,\n      showContactDisplayPlaceholder,\n      showSpinner,\n      sourceIcons,\n      startTime,\n      disableFlip,\n      callQueueName,\n      showPark,\n      isOnWaitingTransfer,\n      onCompleteTransfer,\n      isOnTransfer,\n    } = this.props;\n    const { isShowKeyPad, isShowMergeConfirm } = this.state;\n    if (isShowKeyPad) {\n      return (\n        <ActiveCallDialPad\n          onChange={onKeyPadChange}\n          hiddenDialPad={this.hiddenKeyPad}\n          onHangup={onHangup}\n          currentLocale={currentLocale}\n        />\n      );\n    }\n    return (\n      <ActiveCallPanel\n        showBackButton={showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={onBackButtonClick}\n        currentLocale={currentLocale}\n        formatPhone={formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={sessionId}\n        callStatus={callStatus}\n        startTime={startTime}\n        isOnMute={isOnMute}\n        isOnHold={isOnHold}\n        isOnTransfer={isOnTransfer}\n        isOnWaitingTransfer={isOnWaitingTransfer}\n        recordStatus={recordStatus}\n        onMute={onMute}\n        onUnmute={onUnmute}\n        onHold={onHold}\n        onUnhold={onUnhold}\n        onRecord={onRecord}\n        onStopRecord={onStopRecord}\n        onShowKeyPad={this.showKeyPad}\n        onHangup={onHangup}\n        onPark={onPark}\n        onAdd={onAdd}\n        onMerge={this.onMerge}\n        onCompleteTransfer={onCompleteTransfer}\n        nameMatches={nameMatches}\n        fallBackName={fallBackName}\n        areaCode={areaCode}\n        countryCode={countryCode}\n        selectedMatcherIndex={selectedMatcherIndex}\n        onSelectMatcherName={onSelectMatcherName}\n        avatarUrl={avatarUrl}\n        brand={brand}\n        showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        onFlip={this.onFlip}\n        disableFlip={disableFlip}\n        showPark={showPark}\n        onTransfer={this.onTransfer}\n        gotoParticipantsCtrl={gotoParticipantsCtrl}\n        sourceIcons={sourceIcons}\n        phoneTypeRenderer={phoneTypeRenderer}\n        phoneSourceNameRenderer={phoneSourceNameRenderer}\n        layout={layout}\n        direction={direction}\n        addDisabled={addDisabled}\n        mergeDisabled={mergeDisabled}\n        conferenceCallEquipped={conferenceCallEquipped}\n        hasConferenceCall={hasConferenceCall}\n        conferenceCallParties={conferenceCallParties}\n        lastCallInfo={lastCallInfo}\n        getAvatarUrl={getAvatarUrl}\n        actions={actions}\n        controlBusy={controlBusy}\n        callQueueName={callQueueName}\n      >\n        {children}\n        {showSpinner ? <SpinnerOverlay /> : null}\n        {layout === callCtrlLayouts.normalCtrl ? (\n          <ConfirmMergeModal\n            currentLocale={currentLocale}\n            show={isShowMergeConfirm}\n            onMerge={this.confirmMerge}\n            onCancel={this.hideMergeConfirmAlt}\n            partyProfiles={conferenceCallParties}\n          />\n        ) : null}\n      </ActiveCallPanel>\n    );\n  }\n}\nCallCtrlPanel.defaultProps = {\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  showBackButton: false,\n  backButtonLabel: 'Active Calls',\n  onBackButtonClick: null,\n  sessionId: undefined,\n  callStatus: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  direction: null,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: undefined,\n  getAvatarUrl: () => null,\n  gotoParticipantsCtrl: (i) => i,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n  onFlip: () => null,\n  onRecord: () => null,\n  onStopRecord: () => null,\n  onPark: () => null,\n  onKeyPadChange: () => null,\n  onSelectMatcherName: () => null,\n  onCompleteTransfer: () => null,\n  actions: [],\n  recordStatus: '',\n  controlBusy: false,\n  disableFlip: false,\n  callQueueName: null,\n  showPark: false,\n  isOnWaitingTransfer: false,\n  isOnTransfer: false,\n};\nexport default CallCtrlPanel;\n"],"file":"index.js"}