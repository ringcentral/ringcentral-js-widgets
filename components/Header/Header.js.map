{"version":3,"sources":["components/Header/Header.tsx"],"names":["Header","className","onClick","buttons","children","label","styles","reduce","acc","idx","hidden","disabled","placement","props","button","rightButtons","push","leftButtons","root","length","buttonGroup","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AACA;;;;;;;;;;AAmBO,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,OAKhD;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,KAAK,GAAGD,QAAQ,gBACpB;AAAK,IAAA,SAAS,EAAEE,mBAAOD,KAAvB;AAA8B,iBAAU;AAAxC,KACGD,QADH,CADoB,GAIlB,IAJJ;;AADI,kBAOkC,qBAGpCG,aAHoC,EAIpC,UAACC,GAAD,SAAwDC,GAAxD,EAAgE;AAAA,QAAxDC,MAAwD,SAAxDA,MAAwD;AAAA,QAAhDC,QAAgD,SAAhDA,QAAgD;AAAA,QAAtCC,SAAsC,SAAtCA,SAAsC;AAAA,QAA3BP,KAA2B,SAA3BA,KAA2B;AAAA,QAAjBQ,KAAiB;;AAC9D,QAAI,CAACH,MAAL,EAAa;AACX,UAAMI,MAAM,gBACV,gCAAC,cAAD;AACE,QAAA,GAAG,EAAEL,GADP;AAEE,QAAA,SAAS,EAAE,4BAAWH,mBAAOQ,MAAlB,EAA0BH,QAAQ,IAAIL,mBAAOK,QAA7C,CAFb;AAGE,QAAA,QAAQ,EAAEA;AAHZ,SAIME,KAJN,GAMGR,KANH,CADF;;AAUA,UAAIO,SAAS,KAAK,OAAlB,EAA2B;AACzBJ,QAAAA,GAAG,CAACO,YAAJ,CAAiBC,IAAjB,CAAsBF,MAAtB;AACD,OAFD,MAEO;AACLN,QAAAA,GAAG,CAACS,WAAJ,CAAgBD,IAAhB,CAAqBF,MAArB;AACD;AACF;;AACD,WAAON,GAAP;AACD,GAvBmC,EAwBpC;AACES,IAAAA,WAAW,EAAE,EADf;AAEEF,IAAAA,YAAY,EAAE;AAFhB,GAxBoC,EA4BpCZ,OA5BoC,CAPlC;AAAA,MAOIc,WAPJ,aAOIA,WAPJ;AAAA,MAOiBF,YAPjB,aAOiBA,YAPjB;;AAqCJ,sBACE;AACE,IAAA,SAAS,EAAE,4BAAWT,mBAAOY,IAAlB,EAAwBjB,SAAxB,CADb;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,iBAAU;AAHZ,KAKGG,KALH,EAMGY,WAAW,CAACE,MAAZ,gBACC;AAAK,IAAA,SAAS,EAAE,4BAAWb,mBAAOc,WAAlB,EAA+Bd,mBAAOW,WAAtC;AAAhB,KACGA,WADH,CADD,GAIG,IAVN,EAWGF,YAAY,CAACI,MAAb,gBACC;AAAK,IAAA,SAAS,EAAE,4BAAWb,mBAAOc,WAAlB,EAA+Bd,mBAAOS,YAAtC;AAAhB,KACGA,YADH,CADD,GAIG,IAfN,CADF;AAmBD,CA7DM;;;AA+DPf,MAAM,CAACqB,YAAP,GAAsB;AACpBlB,EAAAA,OAAO,EAAE;AADW,CAAtB","sourcesContent":["import React, { FunctionComponent, ReactNode } from 'react';\n\nimport classnames from 'classnames';\nimport { addIndex, reduce } from 'ramda';\n\nimport { Button, ButtonProps } from '../Button';\nimport styles from './styles.scss';\n\nexport interface ButtonDefinition extends ButtonProps {\n  placement: 'left' | 'right';\n  hidden?: boolean;\n  label: ReactNode;\n}\n\ninterface HeaderProps {\n  className?: string;\n  onClick?(): void;\n  buttons?: ButtonDefinition[];\n}\n\ninterface RenderButtons {\n  leftButtons: ReactNode[];\n  rightButtons: ReactNode[];\n}\n\nexport const Header: FunctionComponent<HeaderProps> = ({\n  className,\n  onClick,\n  buttons,\n  children,\n}) => {\n  const label = children ? (\n    <div className={styles.label} data-sign=\"headerTitle\">\n      {children}\n    </div>\n  ) : null;\n\n  const { leftButtons, rightButtons } = addIndex<\n    ButtonDefinition,\n    RenderButtons\n  >(reduce)(\n    (acc, { hidden, disabled, placement, label, ...props }, idx) => {\n      if (!hidden) {\n        const button = (\n          <Button\n            key={idx}\n            className={classnames(styles.button, disabled && styles.disabled)}\n            disabled={disabled}\n            {...props}\n          >\n            {label}\n          </Button>\n        );\n        if (placement === 'right') {\n          acc.rightButtons.push(button);\n        } else {\n          acc.leftButtons.push(button);\n        }\n      }\n      return acc;\n    },\n    {\n      leftButtons: [],\n      rightButtons: [],\n    },\n    buttons,\n  );\n  return (\n    <header\n      className={classnames(styles.root, className)}\n      onClick={onClick}\n      data-sign=\"header\"\n    >\n      {label}\n      {leftButtons.length ? (\n        <div className={classnames(styles.buttonGroup, styles.leftButtons)}>\n          {leftButtons}\n        </div>\n      ) : null}\n      {rightButtons.length ? (\n        <div className={classnames(styles.buttonGroup, styles.rightButtons)}>\n          {rightButtons}\n        </div>\n      ) : null}\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  buttons: [],\n};\n"],"file":"Header.js"}