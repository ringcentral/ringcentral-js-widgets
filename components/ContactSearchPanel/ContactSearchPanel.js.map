{"version":3,"sources":["components/ContactSearchPanel/ContactSearchPanel.tsx"],"names":["StyledContactSearchPanel","styled","div","FullSizeWrapper","ContactSearchPanel","companyContacts","personalContacts","thirdPartyContacts","optionClickHandler","userInput","searchHandler","inputRef","setFilterString","thirdPartySourceName","currentLocale","formatPhone","TabsEnum","thirdParty","activeTab","setActiveTab","isSearching","setIsSearching","showSearchResult","setShowSearchResult","searchResult","setSearchResult","previousUserInput","optionsMap","company","personal","tabs","label","value","i18n","getString","searchContacts","res","current","focus","inThirdPartyTab","isLoading","options","console","log","length","inputValue","onSelect","e","option","optionItems","getMenuProps","getItemProps","highlightedIndex","getInputProps","getInputAriaProps","changeHighlightedIndexReason","inputAriaPropsRef","inputPropsRef","getFormattedLabel","type","phoneType","phoneNumber","formattedPhoneType","phoneTypes","extension","v","map","state","name","isPrimary","resourceType","doNotCall","entityType","restProps","selected","slice","toUpperCase","marginLeft"],"mappings":"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","sourcesContent":["import React, {\n  FunctionComponent,\n  useState,\n  useImperativeHandle,\n  useEffect,\n  useCallback,\n} from 'react';\nimport {\n  RcPaper,\n  RcTab,\n  RcTabs,\n  RcText,\n  styled,\n  RcAvatar,\n  RcSuggestionList,\n  useSuggestionList,\n  RcListItemText,\n  RcMenuItem,\n  RcLoading,\n  usePrevious,\n} from '@ringcentral/juno';\nimport { phoneTypes } from '@ringcentral-integration/commons/enums/phoneTypes';\nimport {\n  ContactSearchPanelProps,\n  IContactSearchItem,\n} from '../../modules/ContactSearchUI';\nimport { useCommunicationSetupContext } from '../../contexts';\nimport { TabsEnum, TabsEnumType } from './ContactSearchPanelEnum';\nimport { HelpTextSection } from './HelpTextSection';\nimport i18n from './i18n';\n\nconst StyledContactSearchPanel = styled.div`\n  position: relative;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const FullSizeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n`;\n\nexport const ContactSearchPanel: FunctionComponent<ContactSearchPanelProps> = ({\n  companyContacts,\n  personalContacts,\n  thirdPartyContacts = [],\n  optionClickHandler,\n  userInput,\n  searchHandler,\n  inputRef,\n  setFilterString,\n  thirdPartySourceName,\n  currentLocale,\n  formatPhone,\n}) => {\n  const [activeTab, setActiveTab] = useState<TabsEnumType>(TabsEnum.thirdParty);\n  const [isSearching, setIsSearching] = useState(false);\n  const [showSearchResult, setShowSearchResult] = useState(false);\n  const [searchResult, setSearchResult] = useState<IContactSearchItem[]>([]);\n  const previousUserInput = usePrevious(() => userInput);\n\n  const optionsMap = {\n    [TabsEnum.thirdParty]: thirdPartyContacts,\n    [TabsEnum.company]: companyContacts,\n    [TabsEnum.personal]: personalContacts,\n  };\n  const tabs = [\n    {\n      label: thirdPartySourceName,\n      value: TabsEnum.thirdParty,\n    },\n    {\n      label: i18n.getString('companyTabTitle', currentLocale),\n      value: TabsEnum.company,\n    },\n    {\n      label: i18n.getString('personalTabTitle', currentLocale),\n      value: TabsEnum.personal,\n    },\n  ];\n\n  useEffect(() => {\n    if (userInput !== previousUserInput) {\n      setFilterString(userInput);\n    }\n\n    if (userInput === '') {\n      setShowSearchResult(false);\n    }\n  }, [previousUserInput, userInput, setFilterString]);\n\n  const searchContacts = async () => {\n    setIsSearching(true);\n    const res = await searchHandler(userInput);\n    setSearchResult(res);\n    setShowSearchResult(true);\n    setIsSearching(false);\n    inputRef?.current.focus();\n  };\n\n  const inThirdPartyTab = activeTab === TabsEnum.thirdParty;\n  const isLoading = inThirdPartyTab && isSearching;\n  const options =\n    showSearchResult && inThirdPartyTab ? searchResult : optionsMap[activeTab];\n\n  console.log('list item', options.length);\n  const {\n    optionItems,\n    inputValue,\n    getMenuProps,\n    getItemProps,\n    highlightedIndex,\n    getInputProps,\n    getInputAriaProps,\n    changeHighlightedIndexReason,\n  } = useSuggestionList({\n    inputValue: userInput,\n    options,\n    inputRef,\n    onSelect: (e, option) => {\n      optionClickHandler(option);\n    },\n  });\n  const { inputAriaPropsRef, inputPropsRef } = useCommunicationSetupContext();\n  useImperativeHandle(inputPropsRef, () => getInputProps());\n  useImperativeHandle(inputAriaPropsRef, () => getInputAriaProps());\n  const getFormattedLabel = useCallback(\n    ({\n      type,\n      phoneType,\n      phoneNumber,\n    }: Pick<IContactSearchItem, 'phoneType' | 'phoneNumber' | 'type'>) => {\n      const formattedPhoneType =\n        type === TabsEnum.company || type === TabsEnum.personal\n          ? i18n.getString(phoneType, currentLocale)\n          : phoneType;\n      if (type === TabsEnum.company && phoneType === phoneTypes.extension) {\n        return `${formattedPhoneType}. ${phoneNumber}`;\n      }\n\n      return `${formatPhone(phoneNumber)} - ${formattedPhoneType}`;\n    },\n    [currentLocale, formatPhone],\n  );\n  return (\n    <StyledContactSearchPanel data-sign=\"contactSearchPanel\">\n      <RcPaper square>\n        <RcTabs\n          value={activeTab}\n          onChange={(e, v) => {\n            inputRef?.current.focus();\n            setActiveTab(v);\n          }}\n          variant=\"fullWidth\"\n          centered\n        >\n          {tabs.map(({ label, value }) => (\n            <RcTab\n              key={label}\n              data-sign={`${value}ContactSearchResult`}\n              label={<RcText variant=\"caption1\">{`${label}`}</RcText>}\n              value={value}\n            />\n          ))}\n        </RcTabs>\n      </RcPaper>\n      <FullSizeWrapper>\n        <RcLoading loading={isLoading}>\n          <HelpTextSection\n            showSearchResult={showSearchResult}\n            sourceName={thirdPartySourceName}\n            currentLocale={currentLocale}\n            inputLength={userInput.length}\n            activeTab={activeTab}\n            hasRecords={!!optionItems.length}\n            onClick={searchContacts}\n          />\n          <RcSuggestionList\n            data-sign=\"contactSearchDropdown\"\n            tabIndex={-1}\n            highlightedIndex={highlightedIndex}\n            changeHighlightedIndexReason={changeHighlightedIndexReason}\n            options={optionItems}\n            inputValue={inputValue}\n            getMenuProps={getMenuProps}\n            getItemProps={getItemProps}\n            renderOption={(\n              {\n                name,\n                phoneNumber,\n                phoneType,\n                isPrimary,\n                type,\n                resourceType,\n                doNotCall,\n                entityType,\n                ...restProps\n              },\n              state,\n            ) =>\n              isPrimary ? (\n                <RcMenuItem\n                  selected={state.selected}\n                  data-sign=\"contactSearchSelectMenuItem\"\n                  avatar={\n                    <RcAvatar color=\"interactive.b02\" size=\"xsmall\">\n                      {name.slice(0, 1).toUpperCase()}\n                    </RcAvatar>\n                  }\n                  {...restProps}\n                >\n                  <RcListItemText\n                    primary={name}\n                    secondary={getFormattedLabel({\n                      phoneType,\n                      type,\n                      phoneNumber,\n                    })}\n                  />\n                </RcMenuItem>\n              ) : (\n                <RcMenuItem\n                  selected={state.selected}\n                  data-sign=\"contactSearchSelectMenuItem\"\n                  avatar={<></>}\n                  {...restProps}\n                >\n                  <RcListItemText\n                    style={{ marginLeft: '32px' }}\n                    secondary={getFormattedLabel({\n                      phoneType,\n                      type,\n                      phoneNumber,\n                    })}\n                  />\n                </RcMenuItem>\n              )\n            }\n          />\n        </RcLoading>\n      </FullSizeWrapper>\n    </StyledContactSearchPanel>\n  );\n};\n"],"file":"ContactSearchPanel.js"}