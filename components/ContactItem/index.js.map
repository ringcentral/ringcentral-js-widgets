{"version":3,"sources":["components/ContactItem/index.tsx"],"names":["AvatarNode","name","avatarUrl","isInactive","avatarStyle","styles","inactiveAvatarNode","avatarNode","propTypes","PropTypes","string","bool","defaultProps","undefined","ContactItem","props","renderPresence","contact","presence","contactStatus","presenceNodeContainer","presenceNode","renderMiddle","currentLocale","infoWrapper","inactiveContactName","inactiveText","i18n","getString","contactName","state","loading","onItemSelected","bind","_mounted","_loadingTimeout","setTimeout","setState","getAvatarUrl","getPresence","clearTimeout","func","onSelect","root","currentSiteCode","isMultipleSiteEnabled","extensionNumber","type","profileImageUrl","displayingNumber","extension","sourceNodeRenderer","sourceNode","sourceType","contactProfile","avatarNodeContainer","sourceNodeContainer","phoneNumber","PureComponent","isRequired","shape","id","email","object"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { formatSameSiteExtension } from '@ringcentral-integration/phone-number/lib/format';\n\nimport DefaultAvatar from '../../assets/images/DefaultAvatar.svg';\nimport PlaceholderImage from '../PlaceholderImage';\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nfunction AvatarNode({ name, avatarUrl, isInactive }) {\n  const avatarStyle = isInactive\n    ? styles.inactiveAvatarNode\n    : styles.avatarNode;\n  return (\n    <PlaceholderImage\n      className={avatarStyle}\n      alt={name}\n      src={avatarUrl}\n      placeholder={<DefaultAvatar className={avatarStyle} />}\n    />\n  );\n}\n\nAvatarNode.propTypes = {\n  name: PropTypes.string,\n  avatarUrl: PropTypes.string,\n  isInactive: PropTypes.bool,\n};\nAvatarNode.defaultProps = {\n  name: undefined,\n  avatarUrl: undefined,\n  isInactive: false,\n};\n\nclass ContactItem extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.onItemSelected = this.onItemSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._loadingTimeout = setTimeout(() => {\n      if (this._mounted) {\n        this.setState({\n          loading: false,\n        });\n      }\n    }, 3);\n    setTimeout(() => {\n      if (this._mounted) {\n        this.props.getAvatarUrl(this.props.contact);\n        this.props.getPresence(this.props.contact);\n      }\n    }, 500);\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    if (this._loadingTimeout) {\n      clearTimeout(this._loadingTimeout);\n    }\n  }\n\n  onItemSelected() {\n    const func = this.props.onSelect;\n    if (func) {\n      func(this.props.contact);\n    }\n  }\n\n  renderPresence = (contact) => {\n    const { presence, contactStatus } = contact;\n    if (contactStatus === 'NotActivated') {\n      return null;\n    }\n\n    return presence ? (\n      <div className={styles.presenceNodeContainer}>\n        <PresenceStatusIcon className={styles.presenceNode} {...presence} />\n      </div>\n    ) : null;\n  };\n\n  renderMiddle = (contact, currentLocale) => {\n    const { name, contactStatus } = contact;\n    if (contactStatus === 'NotActivated') {\n      return (\n        <div className={styles.infoWrapper}>\n          <div className={styles.inactiveContactName} title={name}>\n            {name}\n          </div>\n          <div className={styles.inactiveText}>\n            {i18n.getString('notActivated', currentLocale)}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.contactName} title={name}>\n        {name}\n      </div>\n    );\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <div className={styles.root} />;\n    }\n    const { contact, currentLocale, currentSiteCode, isMultipleSiteEnabled } =\n      this.props;\n    const { name, extensionNumber, type, profileImageUrl, contactStatus } =\n      contact;\n\n    let displayingNumber = extensionNumber;\n\n    if (isMultipleSiteEnabled) {\n      displayingNumber = formatSameSiteExtension({\n        currentSiteCode,\n        extension: extensionNumber,\n      });\n    }\n\n    const { sourceNodeRenderer } = this.props;\n    const sourceNode = sourceNodeRenderer({ sourceType: type });\n    return (\n      <div\n        className={styles.root}\n        onClick={this.onItemSelected}\n        data-sign=\"contactItem\"\n      >\n        <div className={styles.contactProfile}>\n          <div className={styles.avatarNodeContainer}>\n            <AvatarNode\n              name={name}\n              avatarUrl={profileImageUrl}\n              isInactive={contactStatus === 'NotActivated'}\n            />\n          </div>\n          {sourceNode ? (\n            <div className={styles.sourceNodeContainer}>{sourceNode}</div>\n          ) : null}\n          {this.renderPresence(this.props.contact)}\n        </div>\n        {this.renderMiddle(contact, currentLocale)}\n        <div className={styles.phoneNumber} title={displayingNumber}>\n          {displayingNumber}\n        </div>\n      </div>\n    );\n  }\n}\n\nContactItem.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  currentSiteCode: PropTypes.string,\n  isMultipleSiteEnabled: PropTypes.bool,\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    extensionNumber: PropTypes.string,\n    email: PropTypes.string,\n    profileImageUrl: PropTypes.string,\n    presence: PropTypes.object,\n    contactStatus: PropTypes.string,\n  }).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n};\n\nContactItem.defaultProps = {\n  onSelect: undefined,\n  currentSiteCode: '',\n  isMultipleSiteEnabled: false,\n  sourceNodeRenderer: () => null,\n};\n\nexport default ContactItem;\n"],"file":"index.js"}