{"version":3,"file":"AudioSettingsPanel.js","names":["_VolumeInspector","require","_juno","_clsx","_interopRequireDefault","_react","_interopRequireWildcard","_PageHeader","_RingtoneSelection","_components","_i18n","_styles","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","AudioSettingsPanel","_ref","availableInputDevices","availableOutputDevices","availableRingtoneDevices","callVolume","showDangerAlert","_ref$className","className","_ref$inputDeviceDisab","inputDeviceDisabled","inputDeviceId","onBackButtonClick","onSave","_ref$outputDeviceDisa","outputDeviceDisabled","_ref$ringtoneSelectDi","ringtoneSelectDisabled","outputDeviceId","ringtoneVolume","isAGCEnabled","showAGCEnabled","hasUserMedia","ringtoneDeviceId","handleTestMicroClick","handleTestSpeakerClick","showAlert","volumeTestData","fullRingtoneList","selectedRingtoneId","isUploadRingtoneDisabled","enableCustomRingtone","uploadCustomRingtone","updateCurrentRingtone","removeCustomRingtone","useEffect","createElement","clsx","styles","root","PageHeader","PageHeaderBack","onClick","PageHeaderTitle","PageHeaderRemain","content","Section","label","dataSign","AudioDeviceSelect","availableDevices","isDisabled","deviceId","onChange","VolumeTester","disabled","audioType","TEST_TYPE","microphone","handleButtonClick","testState","RcSwitch","formControlLabelProps","labelPlacement","style","marginLeft","RcTypography","variant","checked","_","speaker","VolumeSlider","volume","RingtoneSelection","ringtoneList","exports"],"sources":["components/AudioSettingsPanelV2/AudioSettingsPanel.tsx"],"sourcesContent":["import { TEST_TYPE } from '@ringcentral-integration/commons/modules/VolumeInspector';\nimport { RcSwitch, RcTypography } from '@ringcentral/juno';\nimport clsx from 'clsx';\nimport React, { useEffect } from 'react';\nimport type { FC } from 'react';\n\nimport {\n  PageHeader,\n  PageHeaderBack,\n  PageHeaderRemain,\n  PageHeaderTitle,\n} from '../BackHeader/PageHeader';\nimport { RingtoneSelection } from '../RingtoneSelection';\n\nimport type { AudioSettingsPanelProps } from './AudioSettingsPanel.interface';\nimport {\n  VolumeTester,\n  AudioDeviceSelect,\n  Section,\n  VolumeSlider,\n} from './components';\nimport { t } from './i18n';\nimport styles from './styles.scss';\n\nexport const AudioSettingsPanel: FC<AudioSettingsPanelProps> = ({\n  availableInputDevices,\n  availableOutputDevices,\n  availableRingtoneDevices,\n  callVolume,\n  showDangerAlert,\n  className = null,\n  inputDeviceDisabled = false,\n  inputDeviceId,\n  onBackButtonClick,\n  onSave,\n  outputDeviceDisabled = false,\n  ringtoneSelectDisabled = false,\n  outputDeviceId,\n  ringtoneVolume,\n  isAGCEnabled,\n  showAGCEnabled,\n  hasUserMedia,\n  ringtoneDeviceId,\n  handleTestMicroClick,\n  handleTestSpeakerClick,\n  showAlert,\n  volumeTestData,\n  fullRingtoneList,\n  selectedRingtoneId,\n  isUploadRingtoneDisabled,\n  enableCustomRingtone,\n  uploadCustomRingtone,\n  updateCurrentRingtone,\n  removeCustomRingtone,\n}) => {\n  useEffect(() => {\n    showAlert();\n  }, []);\n\n  return (\n    <div className={clsx(styles.root, className)}>\n      <PageHeader>\n        <PageHeaderBack onClick={onBackButtonClick} />\n        <PageHeaderTitle>{t('title')}</PageHeaderTitle>\n        <PageHeaderRemain />\n      </PageHeader>\n      <div className={styles.content}>\n        <Section label={t('input')} dataSign=\"inputDeviceSection\">\n          <AudioDeviceSelect\n            dataSign=\"microphoneDeviceSelect\"\n            label={t('microphone')}\n            availableDevices={availableInputDevices}\n            isDisabled={inputDeviceDisabled}\n            deviceId={inputDeviceId}\n            onChange={(deviceId) => {\n              onSave({\n                inputDeviceId: deviceId,\n              });\n            }}\n          />\n          <VolumeTester\n            {...volumeTestData}\n            disabled={inputDeviceDisabled}\n            audioType={TEST_TYPE.microphone}\n            handleButtonClick={() => {\n              handleTestMicroClick(volumeTestData.testState);\n            }}\n          />\n          {showAGCEnabled && (\n            <RcSwitch\n              formControlLabelProps={{\n                labelPlacement: 'start',\n                style: {\n                  marginLeft: 0,\n                },\n              }}\n              disabled={!hasUserMedia}\n              className={styles.switch}\n              label={\n                <RcTypography variant=\"body2\">\n                  {t('autoAdjustMicLevel')}\n                </RcTypography>\n              }\n              checked={isAGCEnabled}\n              onChange={(_, checked) => {\n                onSave({\n                  isAGCEnabled: checked,\n                });\n              }}\n            />\n          )}\n        </Section>\n        <Section label={t('output')} dataSign=\"outputDeviceSection\">\n          <AudioDeviceSelect\n            dataSign=\"speakerDeviceSelect\"\n            availableDevices={availableOutputDevices}\n            isDisabled={outputDeviceDisabled}\n            deviceId={outputDeviceId}\n            onChange={(deviceId) => {\n              onSave({\n                outputDeviceId: deviceId,\n              });\n            }}\n            label={t('speakerSource')}\n          />\n          <VolumeTester\n            {...volumeTestData}\n            audioType={TEST_TYPE.speaker}\n            disabled={outputDeviceDisabled}\n            handleButtonClick={() => {\n              handleTestSpeakerClick(volumeTestData.testState);\n            }}\n          />\n          <VolumeSlider\n            volume={callVolume}\n            dataSign=\"speakerVolume\"\n            label={t('speakerVolume')}\n            onChange={(volume) => {\n              onSave({\n                callVolume: volume,\n              });\n            }}\n          />\n          <AudioDeviceSelect\n            dataSign=\"ringtoneDeviceSelect\"\n            isDisabled={ringtoneSelectDisabled}\n            availableDevices={availableRingtoneDevices}\n            deviceId={ringtoneDeviceId}\n            onChange={(deviceId) => {\n              onSave({\n                ringtoneDeviceId: deviceId,\n              });\n            }}\n            label={t('ringtoneSource')}\n          />\n          <RingtoneSelection\n            label={t('ringtones')}\n            ringtoneDeviceId={ringtoneDeviceId}\n            ringtoneList={fullRingtoneList}\n            isDisabled={ringtoneSelectDisabled}\n            selectedRingtoneId={selectedRingtoneId}\n            volume={ringtoneVolume}\n            isUploadRingtoneDisabled={isUploadRingtoneDisabled}\n            enableCustomRingtone={enableCustomRingtone}\n            updateCurrentRingtone={updateCurrentRingtone}\n            uploadCustomRingtone={uploadCustomRingtone}\n            removeCustomRingtone={removeCustomRingtone}\n            showAlert={showDangerAlert}\n          />\n          <VolumeSlider\n            volume={ringtoneVolume}\n            dataSign=\"ringtoneVolume\"\n            label={t('ringtoneVolume')}\n            onChange={(volume) => {\n              onSave({\n                ringtoneVolume: volume,\n              });\n            }}\n          />\n        </Section>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]}