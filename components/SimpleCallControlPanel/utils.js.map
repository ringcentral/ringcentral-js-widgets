{"version":3,"sources":["components/SimpleCallControlPanel/utils.ts"],"names":["pickEleByProps","props","list","keys","Object","result","filter","item","shouldPicked","every","key","pickFallBackInfo","call","contactName","currentLocale","direction","fallBackName","fallBackNumber","getName","target","activityMatches","SINGLE_OR_NONE_MATCH","length","i18n","getString","getNumber","numberObj","extensionNumber","phoneNumber","callDirection","inbound","from","outbound","to"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;AAEO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,EAAkB;AAAA,MAAdC,IAAc,uEAAP,EAAO;AACvD,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,KAAZ,CAAb;AACA,MAAMI,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAY,UAACC,IAAD,EAAU;AACnC,QAAMC,YAAY,GAAGL,IAAI,CAACM,KAAL,CAAW,UAACC,GAAD;AAAA,aAAST,KAAK,CAACS,GAAD,CAAL,KAAeH,IAAI,CAACG,GAAD,CAA5B;AAAA,KAAX,CAArB;AACA,WAAOF,YAAP;AACD,GAHc,CAAf;AAIA,SAAOH,MAAP;AACD,CAPM;;;;AASA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,WAAP,EAAoBC,aAApB,EAAsC;AACpE,MAAMC,SAAS,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,SAAxB;AACA,MAAIC,YAAY,GAAGH,WAAnB;AACA,MAAII,cAAc,GAAG,EAArB;;AAEA,WAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAAA,QACfC,eADe,GACKD,MADL,CACfC,eADe;AAEvB,QAAMC,oBAAoB,GAAG,CAA7B;;AACA,QAAI,CAACR,WAAL,EAAkB;AAChB,UAAIO,eAAe,IAAIA,eAAe,CAACE,MAAhB,GAAyBD,oBAAhD,EAAsE;AACpE,eAAOE,iBAAKC,SAAL,CAAe,SAAf,EAA0BV,aAA1B,CAAP;AACD;;AACD,aAAOS,iBAAKC,SAAL,CAAe,UAAf,EAA2BV,aAA3B,CAAP;AACD;;AACD,WAAOD,WAAP;AACD;;AAED,WAASY,SAAT,CAAmBC,SAAnB,EAA8B;AAAA,QACpBC,eADoB,GACaD,SADb,CACpBC,eADoB;AAAA,QACHC,WADG,GACaF,SADb,CACHE,WADG;AAE5B,WAAOA,WAAW,IAAID,eAAf,IAAkCD,SAAzC;AACD;;AAED,UAAQX,SAAR;AACE,SAAKc,2BAAcC,OAAnB;AAA4B;AAC1Bd,QAAAA,YAAY,GAAGE,OAAO,CAACN,IAAD,CAAtB;AACAK,QAAAA,cAAc,GAAGQ,SAAS,CAACb,IAAI,CAACmB,IAAN,CAA1B;AACA;AACD;;AACD,SAAKF,2BAAcG,QAAnB;AAA6B;AAC3BhB,QAAAA,YAAY,GAAGE,OAAO,CAACN,IAAD,CAAtB;AACAK,QAAAA,cAAc,GAAGQ,SAAS,CAACb,IAAI,CAACqB,EAAN,CAA1B;AACA;AACD;;AAED;AACE;AAbJ;;AAeA,SAAO;AACLjB,IAAAA,YAAY,EAAZA,YADK;AAELC,IAAAA,cAAc,EAAdA;AAFK,GAAP;AAID,CAzCM","sourcesContent":["import callDirection from '@ringcentral-integration/commons/enums/callDirections';\n\nimport i18n from './i18n';\n\nexport const pickEleByProps = (props = {}, list = []) => {\n  const keys = Object.keys(props);\n  const result = list.filter((item) => {\n    const shouldPicked = keys.every((key) => props[key] === item[key]);\n    return shouldPicked;\n  });\n  return result;\n};\n\nexport const pickFallBackInfo = (call, contactName, currentLocale) => {\n  const direction = call?.direction;\n  let fallBackName = contactName;\n  let fallBackNumber = '';\n\n  function getName(target) {\n    const { activityMatches } = target;\n    const SINGLE_OR_NONE_MATCH = 2;\n    if (!contactName) {\n      if (activityMatches && activityMatches.length < SINGLE_OR_NONE_MATCH) {\n        return i18n.getString('Unknown', currentLocale);\n      }\n      return i18n.getString('Multiple', currentLocale);\n    }\n    return contactName;\n  }\n\n  function getNumber(numberObj) {\n    const { extensionNumber, phoneNumber } = numberObj;\n    return phoneNumber || extensionNumber || numberObj;\n  }\n\n  switch (direction) {\n    case callDirection.inbound: {\n      fallBackName = getName(call);\n      fallBackNumber = getNumber(call.from);\n      break;\n    }\n    case callDirection.outbound: {\n      fallBackName = getName(call);\n      fallBackNumber = getNumber(call.to);\n      break;\n    }\n\n    default:\n      break;\n  }\n  return {\n    fallBackName,\n    fallBackNumber,\n  };\n};\n"],"file":"utils.js"}