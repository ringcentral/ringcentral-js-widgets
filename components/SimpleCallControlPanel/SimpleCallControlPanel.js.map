{"version":3,"sources":["components/SimpleCallControlPanel/SimpleCallControlPanel.tsx"],"names":["SimpleCallControlPanel","activeSession","areaCode","countryCode","nameMatches","sessionId","currentLocale","fallBackName","phoneNumber","actions","showContactDisplayPlaceholder","controlBusy","brandName","onBackButtonClick","setActiveSessionId","onMute","onUnmute","onHold","onUnhold","onHangup","onTransfer","selectedMatcherIndex","setSelectedMatcherIndex","formatPhone","onSelectMatcherName","option","findIndex","match","id","renderTime","current","i18n","getString","callCtrlLayouts","normalCtrl","startTime","isOnMute","isOnHold","defaultProps","ACTIONS_CTRL_MAP","muteCtrl","transferCtrl","holdCtrl"],"mappings":"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","sourcesContent":["import React, {\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport formatNumber from '@ringcentral-integration/commons/lib/formatNumber';\n\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport { ACTIONS_CTRL_MAP } from '../ActiveCallPad';\nimport CallCtrlPanel from '../CallCtrlPanel';\nimport i18n from './i18n';\nimport { SimpleCallControlPanelProps } from './SimpleCallControlPanel.interface';\n\nconst SimpleCallControlPanel: FunctionComponent<SimpleCallControlPanelProps> =\n  ({\n    activeSession,\n    areaCode,\n    countryCode,\n    nameMatches,\n    sessionId,\n    currentLocale,\n    fallBackName,\n    phoneNumber,\n    actions,\n    showContactDisplayPlaceholder,\n    controlBusy,\n    brandName,\n    onBackButtonClick,\n    setActiveSessionId,\n    onMute,\n    onUnmute,\n    onHold,\n    onUnhold,\n    onHangup,\n    onTransfer,\n  }) => {\n    const [selectedMatcherIndex, setSelectedMatcherIndex] = useState(0);\n    const formatPhone = useCallback(\n      (phoneNumber) =>\n        formatNumber({\n          phoneNumber,\n          areaCode,\n          countryCode,\n        }),\n      [areaCode, countryCode],\n    );\n    const onSelectMatcherName = useCallback(\n      (option) => {\n        let selectedMatcherIndex = (nameMatches ?? []).findIndex(\n          (match) => match.id === option.id,\n        );\n        if (selectedMatcherIndex < 0) {\n          selectedMatcherIndex = 0;\n        }\n        setSelectedMatcherIndex(selectedMatcherIndex);\n      },\n      [nameMatches],\n    );\n    const renderTime = useRef(0);\n    useEffect(() => {\n      if (renderTime.current > 0 && !activeSession) {\n        onBackButtonClick();\n      }\n      renderTime.current += 1;\n    });\n    useEffect(() => {\n      setActiveSessionId(sessionId);\n    }, []);\n    if (!activeSession) {\n      // or using skeleton screen here\n      return null;\n    }\n    return (\n      <CallCtrlPanel\n        sessionId={sessionId}\n        currentLocale={currentLocale}\n        fallBackName={fallBackName}\n        phoneNumber={phoneNumber}\n        onMute={onMute}\n        onUnmute={onUnmute}\n        onHold={onHold}\n        onUnhold={onUnhold}\n        onHangup={onHangup}\n        onTransfer={onTransfer}\n        showBackButton\n        backButtonLabel={i18n.getString('allCalls', currentLocale)}\n        onBackButtonClick={onBackButtonClick}\n        formatPhone={formatPhone}\n        areaCode={areaCode}\n        countryCode={countryCode}\n        selectedMatcherIndex={selectedMatcherIndex}\n        layout={callCtrlLayouts.normalCtrl}\n        startTime={activeSession.startTime}\n        actions={actions}\n        isOnMute={activeSession.isOnMute}\n        isOnHold={activeSession.isOnHold}\n        nameMatches={nameMatches}\n        onSelectMatcherName={onSelectMatcherName}\n        brand={brandName}\n        showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        controlBusy={controlBusy}\n      />\n    );\n  };\n\nSimpleCallControlPanel.defaultProps = {\n  setActiveSessionId() {},\n  currentLocale: 'en-US',\n  activeSession: null,\n  sessionId: null,\n  nameMatches: [],\n  fallBackName: '',\n  phoneNumber: '',\n  showContactDisplayPlaceholder: false,\n  controlBusy: false,\n  actions: [\n    ACTIONS_CTRL_MAP.muteCtrl,\n    ACTIONS_CTRL_MAP.transferCtrl,\n    ACTIONS_CTRL_MAP.holdCtrl,\n  ],\n};\n\nexport { SimpleCallControlPanel };\n"],"file":"SimpleCallControlPanel.js"}