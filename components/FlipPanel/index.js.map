{"version":3,"sources":["components/FlipPanel/index.tsx"],"names":["FlipPanel","props","onRadioSelect","value","setState","flipValue","onFlip","state","sessionId","flipEnabled","onComplete","flipNumbers","length","phoneNumber","isOnFlip","nextProps","session","onCallEnd","onBack","currentLocale","formatPhone","styles","root","backHeader","headerTitle","i18n","getString","flipContainer","radioGroup","buttonGroup","button","flipButton","disabled","flipIcon","FlipIcon","completeButton","EndIcon","Component","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\n\nimport EndIcon from '../../assets/images/End.svg';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport BackButton from '../BackButton';\nimport BackHeader from '../BackHeader';\nimport CircleButton from '../CircleButton';\nimport RadioButtonGroup from '../RadioBtnGroup';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype FlipPanelProps = {\n  isOnFlip?: boolean;\n  flipNumbers: any[];\n  currentLocale: string;\n  formatPhone: (...args: any[]) => any;\n  onBack: (...args: any[]) => any;\n  onFlip: (...args: any[]) => any;\n  onComplete: (...args: any[]) => any;\n  onCallEnd: (...args: any[]) => any;\n  session?: object;\n  sessionId: string;\n};\ntype FlipPanelState = {\n  flipValue: any;\n  flipEnabled: boolean;\n};\nclass FlipPanel extends Component<FlipPanelProps, FlipPanelState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipValue:\n        this.props.flipNumbers.length === 0\n          ? ''\n          : this.props.flipNumbers[0].phoneNumber,\n      flipEnabled: !this.props.isOnFlip,\n    };\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { session, onCallEnd } = this.props;\n    if (session && !nextProps.session) {\n      onCallEnd();\n    }\n  }\n  onRadioSelect = (value) => {\n    this.setState({\n      flipValue: value,\n    });\n  };\n  onFlip = () => {\n    this.props.onFlip(this.state.flipValue, this.props.sessionId);\n    this.setState({\n      flipEnabled: false,\n    });\n  };\n  onComplete = () => {\n    this.props.onComplete(this.props.sessionId);\n  };\n  render() {\n    const { isOnFlip, onBack, currentLocale, flipNumbers, formatPhone } =\n      this.props;\n    const { flipEnabled } = this.state;\n    return (\n      <div className={styles.root} data-sign=\"flipPanel\">\n        <BackHeader\n          onBackClick={isOnFlip ? null : onBack}\n          backButton={<BackButton showIcon={!isOnFlip} />}\n          className={styles.backHeader}\n        >\n          <span data-sign=\"flipTitle\" className={styles.headerTitle}>\n            {i18n.getString('flipHeader', currentLocale)}\n          </span>\n        </BackHeader>\n        <div className={styles.flipContainer}>\n          <RadioButtonGroup\n            dataSign=\"flipNumber\"\n            className={styles.radioGroup}\n            radioOptions={flipNumbers}\n            disabled={!flipEnabled}\n            formatPhone={formatPhone}\n            onRadioSelect={this.onRadioSelect}\n            currentLocale={currentLocale}\n          />\n          <div className={styles.buttonGroup}>\n            <div\n              data-sign=\"flip\"\n              className={styles.button}\n              title={i18n.getString('flip', currentLocale)}\n            >\n              <CircleButton\n                disabled={!flipEnabled}\n                className={classnames(\n                  styles.flipButton,\n                  flipEnabled ? '' : styles.disabled,\n                )}\n                iconClassName={styles.flipIcon}\n                onClick={this.onFlip}\n                icon={FlipIcon}\n                showBorder\n              />\n            </div>\n            <div\n              data-sign=\"flipComplete\"\n              className={styles.button}\n              title={i18n.getString('complete', currentLocale)}\n            >\n              <CircleButton\n                disabled={!isOnFlip}\n                className={classnames(\n                  styles.completeButton,\n                  isOnFlip ? '' : styles.disabled,\n                )}\n                onClick={this.onComplete}\n                icon={EndIcon}\n                showBorder\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nFlipPanel.defaultProps = {\n  session: null,\n  isOnFlip: false,\n};\nexport default FlipPanel;\n"],"file":"index.js"}