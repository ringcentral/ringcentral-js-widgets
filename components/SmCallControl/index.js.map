{"version":3,"sources":["components/SmCallControl/index.tsx"],"names":["SmCallControl","props","onMute","onUnmute","onHangup","onReject","isOnMute","callStatus","currentLocale","callDirection","canRejectCall","callDirections","inbound","telephonyStatuses","ringing","muteIcon","MuteIcon","UnmuteIcon","muteAction","muteTitle","endTitle","endAction","disabledCtrl","styles","smWraper","i18n","getString","button","buttonDisabled","EndIcon","hangup","defaultProps"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAYA,IAAMA,aAA4C,GAAG,SAA/CA,aAA+C,CAACC,KAAD,EAAW;AAAA,MAE5DC,MAF4D,GAU1DD,KAV0D,CAE5DC,MAF4D;AAAA,MAG5DC,QAH4D,GAU1DF,KAV0D,CAG5DE,QAH4D;AAAA,MAI5DC,QAJ4D,GAU1DH,KAV0D,CAI5DG,QAJ4D;AAAA,MAK5DC,QAL4D,GAU1DJ,KAV0D,CAK5DI,QAL4D;AAAA,MAM5DC,QAN4D,GAU1DL,KAV0D,CAM5DK,QAN4D;AAAA,MAO5DC,UAP4D,GAU1DN,KAV0D,CAO5DM,UAP4D;AAAA,MAQ5DC,aAR4D,GAU1DP,KAV0D,CAQ5DO,aAR4D;AAAA,MAS5DC,aAT4D,GAU1DR,KAV0D,CAS5DQ,aAT4D,EAW9D;;AACA,WAASC,aAAT,GAAyB;AACvB,WACEC,2BAAeC,OAAf,KAA2BH,aAA3B,IACAI,4BAAkBC,OAAlB,KAA8BP,UAFhC;AAID;;AACD,MAAMQ,QAAQ,GAAGT,QAAQ,GAAGU,gBAAH,GAAcC,kBAAvC;AACA,MAAMC,UAAU,GAAGZ,QAAQ,GAAGH,QAAH,GAAcD,MAAzC;AACA,MAAMiB,SAAS,GAAGb,QAAQ,GAAG,QAAH,GAAc,MAAxC;AACA,MAAMc,QAAQ,GAAGV,aAAa,KAAK,QAAL,GAAgB,QAA9C;AACA,MAAMW,SAAS,GAAGX,aAAa,KAAKL,QAAL,GAAgBD,QAA/C;AACA,MAAMkB,YAAY,GAAGf,UAAU,KAAKM,4BAAkBC,OAAtD;AACA,sBACE;AAAK,IAAA,SAAS,EAAES,mBAAOC;AAAvB,kBACE;AAAM,IAAA,KAAK,EAAEC,iBAAKC,SAAL,CAAeP,SAAf,EAA0BX,aAA1B;AAAb,kBACE,gCAAC,wBAAD;AACE,IAAA,QAAQ,EAAEW,SADZ;AAEE,IAAA,IAAI,EAAEJ,QAFR;AAGE,IAAA,OAAO,EAAEG,UAHX;AAIE,IAAA,SAAS,EAAE,4BACTK,mBAAOI,MADE,EAETL,YAAY,GAAGC,mBAAOK,cAAV,GAA2B,IAF9B,CAJb;AAQE,IAAA,QAAQ,EAAEN;AARZ,IADF,CADF,eAaE;AAAM,IAAA,KAAK,EAAEG,iBAAKC,SAAL,CAAeN,QAAf,EAAyBZ,aAAzB;AAAb,kBACE,gCAAC,wBAAD;AACE,IAAA,QAAQ,EAAEY,QADZ;AAEE,IAAA,UAAU,EAAE,KAFd;AAGE,IAAA,IAAI,EAAES,eAHR;AAIE,IAAA,OAAO,EAAER,SAJX;AAKE,IAAA,SAAS,EAAE,4BAAWE,mBAAOO,MAAlB,EAA0BP,mBAAOI,MAAjC;AALb,IADF,CAbF,CADF;AAyBD,CAjDD;;AAkDA3B,aAAa,CAAC+B,YAAd,GAA6B;AAC3B7B,EAAAA,MAD2B,oBAClB,CAAE,CADgB;AAE3BC,EAAAA,QAF2B,sBAEhB,CAAE,CAFc;AAG3BC,EAAAA,QAH2B,sBAGhB,CAAE,CAHc;AAI3BC,EAAAA,QAJ2B,sBAIhB,CAAE,CAJc;AAK3BC,EAAAA,QAAQ,EAAE,KALiB;AAM3BC,EAAAA,UAAU,EAAE,eANe;AAO3BC,EAAAA,aAAa,EAAE;AAPY,CAA7B;eASeR,a","sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport telephonyStatuses from '@ringcentral-integration/commons/enums/telephonyStatus';\n\nimport EndIcon from '../../assets/images/End.svg';\nimport MuteIcon from '../../assets/images/Mute.svg';\nimport UnmuteIcon from '../../assets/images/Unmute.svg';\nimport CircleButton from '../CircleButton';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype SmCallControlProps = {\n  onMute?: (...args: any[]) => any;\n  onUnmute?: (...args: any[]) => any;\n  onHangup?: (...args: any[]) => any;\n  onReject?: (...args: any[]) => any;\n  isOnMute?: boolean;\n  callStatus?: string;\n  currentLocale?: string;\n  callDirection: string;\n};\nconst SmCallControl: React.SFC<SmCallControlProps> = (props) => {\n  const {\n    onMute,\n    onUnmute,\n    onHangup,\n    onReject,\n    isOnMute,\n    callStatus,\n    currentLocale,\n    callDirection,\n  } = props;\n  // reject conditions: call direction is inbound & call status is ringing\n  function canRejectCall() {\n    return (\n      callDirections.inbound === callDirection &&\n      telephonyStatuses.ringing === callStatus\n    );\n  }\n  const muteIcon = isOnMute ? MuteIcon : UnmuteIcon;\n  const muteAction = isOnMute ? onUnmute : onMute;\n  const muteTitle = isOnMute ? 'unmute' : 'mute';\n  const endTitle = canRejectCall() ? 'reject' : 'hangup';\n  const endAction = canRejectCall() ? onReject : onHangup;\n  const disabledCtrl = callStatus === telephonyStatuses.ringing;\n  return (\n    <div className={styles.smWraper}>\n      <span title={i18n.getString(muteTitle, currentLocale)}>\n        <CircleButton\n          dataSign={muteTitle}\n          icon={muteIcon}\n          onClick={muteAction}\n          className={classnames(\n            styles.button,\n            disabledCtrl ? styles.buttonDisabled : null,\n          )}\n          disabled={disabledCtrl}\n        />\n      </span>\n      <span title={i18n.getString(endTitle, currentLocale)}>\n        <CircleButton\n          dataSign={endTitle}\n          showBorder={false}\n          icon={EndIcon}\n          onClick={endAction}\n          className={classnames(styles.hangup, styles.button)}\n        />\n      </span>\n    </div>\n  );\n};\nSmCallControl.defaultProps = {\n  onMute() {},\n  onUnmute() {},\n  onHangup() {},\n  onReject() {},\n  isOnMute: false,\n  callStatus: 'CallConnected',\n  currentLocale: 'en-US',\n};\nexport default SmCallControl;\n"],"file":"index.js"}