{"version":3,"sources":["components/IncomingCallView/IncomingCallView.tsx"],"names":["IncomingCallView","props","answer","session","id","reject","toVoiceMail","replyWithMessage","message","toggleMinimized","answerAndEnd","hangup","activeSessionId","answerAndHold","onHold","onForward","forwardNumber","state","selectedMatcherIndex","avatarUrl","hasOtherActiveCall","onSelectMatcherName","option","nameMatches","findIndex","match","setState","contact","updateSessionMatchedContact","getAvatarUrl","then","_mounted","_updateAvatarAndMatchIndex","nextProps","contactMatch","showCallQueueName","active","minimized","fallbackUserName","direction","callDirections","inbound","from","i18n","getString","currentLocale","callQueueName","phoneNumber","formatPhone","areaCode","countryCode","forwardingNumbers","brand","showContactDisplayPlaceholder","sourceIcons","searchContact","searchContactList","phoneTypeRenderer","phoneSourceNameRenderer","children","Component","propTypes","PropTypes","shape","string","startTime","number","isOnMute","bool","isOnHold","isOnRecord","to","object","any","isRequired","func","node","array","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\n\nimport IncomingCallPanel from '../IncomingCallPanel';\nimport i18n from './i18n';\n\nclass IncomingCallView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      hasOtherActiveCall: false,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        (match) => match.id === option.id,\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n  }\n\n  answer = () => this.props.answer(this.props.session.id);\n  reject = () => this.props.reject(this.props.session.id);\n  toVoiceMail = () => this.props.toVoiceMail(this.props.session.id);\n  replyWithMessage = (message) =>\n    this.props.replyWithMessage(this.props.session.id, message);\n\n  toggleMinimized = () => this.props.toggleMinimized(this.props.session.id);\n  answerAndEnd = async () => {\n    await this.props.hangup(this.props.activeSessionId);\n    await this.props.answer(this.props.session.id);\n  };\n\n  answerAndHold = async () => {\n    await this.props.onHold(this.props.activeSessionId);\n    await this.props.answer(this.props.session.id);\n  };\n\n  onForward = (forwardNumber) =>\n    this.props.onForward(this.props.session.id, forwardNumber);\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n    this.setState({\n      hasOtherActiveCall: !!nextProps.activeSessionId,\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let selectedMatcherIndex = 0;\n    let contact = props.session.contactMatch;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(\n        (match) => match.id === contact.id,\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const { session, showCallQueueName } = this.props;\n    const active = !!session.id;\n    if (!active) {\n      return null;\n    }\n    if (session.minimized) {\n      return null;\n    }\n    let fallbackUserName;\n    if (\n      session.direction === callDirections.inbound &&\n      session.from === 'anonymous'\n    ) {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    return (\n      <IncomingCallPanel\n        currentLocale={this.props.currentLocale}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        callQueueName={showCallQueueName ? session.callQueueName : null}\n        phoneNumber={this.props.phoneNumber}\n        answer={this.answer}\n        reject={this.reject}\n        replyWithMessage={this.replyWithMessage}\n        toVoiceMail={this.toVoiceMail}\n        formatPhone={this.props.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        onBackButtonClick={this.toggleMinimized}\n        forwardingNumbers={this.props.forwardingNumbers}\n        onForward={this.onForward}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        hasOtherActiveCall={this.state.hasOtherActiveCall}\n        answerAndEnd={this.answerAndEnd}\n        answerAndHold={this.answerAndHold}\n        sessionId={this.props.session.id}\n        sourceIcons={this.props.sourceIcons}\n        searchContact={this.props.searchContact}\n        searchContactList={this.props.searchContactList}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n      >\n        {this.props.children}\n      </IncomingCallPanel>\n    );\n  }\n}\n\nIncomingCallView.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnRecord: PropTypes.bool,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n    minimized: PropTypes.bool,\n    callQueueName: PropTypes.any,\n  }).isRequired,\n  showCallQueueName: PropTypes.any,\n  currentLocale: PropTypes.string.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  onForward: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  brand: PropTypes.string.isRequired,\n  activeSessionId: PropTypes.string,\n  sourceIcons: PropTypes.object,\n  hangup: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n};\n\nIncomingCallView.defaultProps = {\n  children: undefined,\n  activeSessionId: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  showCallQueueName: null,\n};\n\nexport { IncomingCallView };\n"],"file":"IncomingCallView.js"}