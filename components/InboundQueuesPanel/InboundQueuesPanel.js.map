{"version":3,"sources":["components/InboundQueuesPanel/InboundQueuesPanel.tsx"],"names":["InboundQueuesPanel","searchOption","currentLocale","inboundQueueSource","inboundQueues","submitInboundQueues","getAssignedInboundQueues","isAllAssign","isSeveralAssign","checkBoxOnChange","allCheckBoxOnChange","goBack","inboundQueuesState","setInboundQueuesState","assignedInboundQueues","assignedInboundQueuesNumber","length","allAssign","severalAssign","renderListView","option","index","gateName","gateId","checked","e","preventDefault","classes","root","styles","checkbox","label","i18n","getString","footer","selected","selectedTips","totalInboundQueuesNumber"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\n\nimport formatMessage from 'format-message';\n\nimport { RcButton, RcCheckbox, RcListItem } from '@ringcentral/juno';\n\nimport {\n  AvailableQueue,\n  EvAgentSessionUIFunctions,\n  EvAgentSessionUIProps,\n} from '../../interfaces';\nimport { SelectList } from '../SelectList';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type InboundQueuesPanelProps = { goBack: () => void } & Pick<\n  EvAgentSessionUIFunctions & EvAgentSessionUIProps,\n  | 'searchOption'\n  | 'submitInboundQueues'\n  | 'getAssignedInboundQueues'\n  | 'isSeveralAssign'\n  | 'isAllAssign'\n  | 'checkBoxOnChange'\n  | 'allCheckBoxOnChange'\n  | 'currentLocale'\n  | 'inboundQueues'\n>;\n\ntype RenderListViewProps = {\n  option: AvailableQueue;\n  index: number;\n};\n\nconst InboundQueuesPanel: FunctionComponent<InboundQueuesPanelProps> = ({\n  searchOption,\n  currentLocale,\n  inboundQueues: inboundQueueSource,\n  submitInboundQueues,\n  getAssignedInboundQueues,\n  isAllAssign,\n  isSeveralAssign,\n  checkBoxOnChange,\n  allCheckBoxOnChange,\n  goBack,\n}) => {\n  const [inboundQueuesState, setInboundQueuesState] =\n    useState(inboundQueueSource);\n\n  const assignedInboundQueues = getAssignedInboundQueues(inboundQueuesState);\n  const assignedInboundQueuesNumber = assignedInboundQueues.length;\n  const allAssign = isAllAssign(assignedInboundQueues, inboundQueuesState);\n  const severalAssign = isSeveralAssign(\n    assignedInboundQueues,\n    inboundQueuesState,\n  );\n\n  const renderListView: FunctionComponent<RenderListViewProps> = ({\n    option,\n    index,\n  }) => {\n    const { gateName, gateId, checked } = option;\n    return (\n      <RcListItem\n        key={index}\n        title={gateName}\n        button\n        singleLine\n        size=\"small\"\n        onClick={(e) => {\n          e.preventDefault();\n          checkBoxOnChange(gateId, inboundQueuesState, setInboundQueuesState);\n        }}\n      >\n        <RcCheckbox\n          formControlLabelProps={{\n            classes: {\n              root: styles.checkbox,\n              label: styles.label,\n            },\n          }}\n          label={gateName}\n          checked={checked}\n        />\n      </RcListItem>\n    );\n  };\n\n  return (\n    <div className={styles.root}>\n      <SelectList\n        title={i18n.getString('inboundQueues', currentLocale)}\n        placeholder={i18n.getString('search', currentLocale)}\n        options={inboundQueuesState}\n        searchOption={searchOption}\n        currentLocale={currentLocale}\n        renderListItem={renderListView}\n        onBackClick={() => {\n          setInboundQueuesState(inboundQueueSource);\n          goBack();\n        }}\n      />\n      <div className={styles.footer}>\n        <div className={styles.selected}>\n          <RcCheckbox\n            label={i18n.getString('selectAll', currentLocale)}\n            data-sign=\"bulkChangeCheckBox\"\n            onClick={() =>\n              allCheckBoxOnChange(\n                severalAssign,\n                inboundQueuesState,\n                setInboundQueuesState,\n              )\n            }\n            checked={allAssign}\n            indeterminate={!!assignedInboundQueuesNumber && !allAssign}\n          />\n          <div className={styles.selectedTips} data-sign=\"selectedTips\">\n            {formatMessage(i18n.getString('selectedTips', currentLocale), {\n              totalInboundQueuesNumber: inboundQueueSource.length,\n              assignedInboundQueuesNumber,\n            })}\n          </div>\n        </div>\n        <RcButton\n          data-sign=\"update\"\n          onClick={() => submitInboundQueues(assignedInboundQueues, goBack)}\n          size=\"medium\"\n          fullWidth\n        >\n          {i18n.getString('update', currentLocale)}\n        </RcButton>\n      </div>\n    </div>\n  );\n};\n\nexport { InboundQueuesPanel };\n"],"file":"InboundQueuesPanel.js"}