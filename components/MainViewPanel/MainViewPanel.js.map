{"version":3,"sources":["components/MainViewPanel/MainViewPanel.tsx"],"names":["CustomIcon","props","styles","icon","MainViewPanel","currentPath","goTo","agentStates","changeWorkingState","currentStateIndex","getStateColor","handleWithIntervalTime","stateText","time","getTimerText","disabled","children","currentLocale","isOffHookDisable","offhookState","offhook","isWide","isOffhooking","hideOffHookBtn","tabs","phoneBorderSvg","activeIcon","phoneSvg","label","i18n","getString","path","isActive","test","className","tab","TimeBorderSvg","TimeSvg","settingsBorderSvg","settingsSvg","offHookIcon","symbol","title","offHookSvgDisabled","loading","offHookSvgConnecting","offHookSvgDisconnecting","offHookSvgOff","offHookSvgOn","tabNavigationView","navigationBar","mainView","header","offHookState","enabled"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\n\nimport classNames from 'classnames';\n\nimport { TabPropTypes } from '@ringcentral-integration/widgets/components/NavigationBar';\nimport { Tooltip } from '@ringcentral-integration/widgets/components/Rcui/Tooltip';\nimport TabNavigationView from '@ringcentral-integration/widgets/components/TabNavigationView';\nimport { RcIcon, RcIconProps } from '@ringcentral/juno';\nimport {\n  Phone as phoneSvg,\n  PhoneBorder as phoneBorderSvg,\n  Settings as settingsSvg,\n  SettingsBorder as settingsBorderSvg,\n  Time as TimeSvg,\n  TimeBorder as TimeBorderSvg,\n} from '@ringcentral/juno/icon';\n\nimport offHookSvgConnecting from '../../assets/icons/icon-pvc-connecting.svg';\nimport offHookSvgDisabled from '../../assets/icons/icon-pvc-disabled.svg';\nimport offHookSvgDisconnecting from '../../assets/icons/icon-pvc-disconnecting.svg';\nimport offHookSvgOff from '../../assets/icons/icon-pvc-off.svg';\nimport offHookSvgOn from '../../assets/icons/icon-pvc-on.svg';\nimport {\n  EvMainViewUIFunctions,\n  EvMainViewUIProps,\n} from '../../interfaces/EvMainViewUI.interface';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport { WorkingStateSelect } from './WorkingStateSelect';\n\nexport type MainViewPanelProps = EvMainViewUIProps & EvMainViewUIFunctions;\n\nconst CustomIcon: FunctionComponent<RcIconProps> = (props) => {\n  return <RcIcon className={styles.icon} {...props} />;\n};\n\nconst MainViewPanel: FunctionComponent<MainViewPanelProps> = ({\n  currentPath,\n  goTo,\n  agentStates,\n  changeWorkingState,\n  currentStateIndex,\n  getStateColor,\n  handleWithIntervalTime,\n  stateText,\n  time,\n  getTimerText,\n  disabled,\n  children,\n  currentLocale,\n  isOffHookDisable,\n  offhookState,\n  offhook,\n  isWide,\n  isOffhooking,\n  hideOffHookBtn,\n}) => {\n  const tabs: TabPropTypes[] = [\n    {\n      icon: () => <CustomIcon symbol={phoneBorderSvg} />,\n      activeIcon: () => <CustomIcon symbol={phoneSvg} />,\n      label: i18n.getString('dialpadLabel', currentLocale),\n      path: '/dialer',\n      isActive: (currentPath) =>\n        currentPath === '/dialer' || /^\\/activityCallLog/.test(currentPath),\n      className: styles.tab,\n    },\n    {\n      icon: () => <CustomIcon symbol={TimeBorderSvg} />,\n      activeIcon: () => <CustomIcon symbol={TimeSvg} />,\n      label: i18n.getString('historyLabel', currentLocale),\n      path: '/history',\n      isActive: (currentPath) => /^\\/history/.test(currentPath),\n      className: styles.tab,\n    },\n    {\n      icon: () => <CustomIcon symbol={settingsBorderSvg} />,\n      activeIcon: () => <CustomIcon symbol={settingsSvg} />,\n      label: i18n.getString('settingsLabel', currentLocale),\n      path: '/settings',\n      isActive: (currentPath) => /^\\/settings/.test(currentPath),\n      className: styles.tab,\n    },\n  ];\n\n  const offHookIcon = useMemo(() => {\n    let className;\n    let symbol;\n    let title;\n    if (isOffHookDisable && !isOffhooking) {\n      className = styles.offHookIcon;\n      symbol = offHookSvgDisabled;\n      title = i18n.getString('disabled', currentLocale);\n    } else {\n      switch (offhookState) {\n        case 'connecting':\n          className = styles.loading;\n          symbol = offHookSvgConnecting;\n          title = i18n.getString('disabled', currentLocale);\n          break;\n        case 'disconnecting':\n          className = styles.loading;\n          symbol = offHookSvgDisconnecting;\n          title = i18n.getString('disabled', currentLocale);\n          break;\n        case 'disconnected':\n          className = styles.offHookIcon;\n          symbol = offHookSvgOff;\n          title = i18n.getString('turnOn', currentLocale);\n          break;\n        case 'connected':\n        default:\n          className = styles.offHookIcon;\n          symbol = offHookSvgOn;\n          title = i18n.getString('turnOff', currentLocale);\n      }\n    }\n    return (\n      <Tooltip title={title}>\n        <RcIcon className={className} symbol={symbol} />\n      </Tooltip>\n    );\n  }, [offhookState, isOffHookDisable]);\n\n  return (\n    <TabNavigationView\n      goTo={goTo}\n      currentPath={currentPath}\n      tabNavigationViewClassName={styles.tabNavigationView}\n      navBarClassName={styles.navigationBar}\n      className={styles.mainView}\n      tabs={tabs}\n    >\n      <div className={styles.header}>\n        <WorkingStateSelect\n          handleWithIntervalTime={handleWithIntervalTime}\n          getTimerText={getTimerText}\n          time={time}\n          stateText={stateText}\n          getStateColor={getStateColor}\n          currentStateIndex={currentStateIndex}\n          changeWorkingState={changeWorkingState}\n          agentStates={agentStates}\n          disabled={disabled}\n          isWide={isWide}\n          hideOffHookBtn={hideOffHookBtn}\n        />\n        {!hideOffHookBtn && (\n          <div\n            className={classNames([\n              styles.offHookState,\n              isOffHookDisable ? styles.disabled : styles.enabled,\n            ])}\n            onClick={isOffHookDisable ? null : offhook}\n          >\n            {offHookIcon}\n          </div>\n        )}\n      </div>\n      {children}\n    </TabNavigationView>\n  );\n};\n\nexport { MainViewPanel };\n"],"file":"MainViewPanel.js"}