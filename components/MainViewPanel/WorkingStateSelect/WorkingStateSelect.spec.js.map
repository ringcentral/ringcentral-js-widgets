{"version":3,"sources":["components/MainViewPanel/WorkingStateSelect/WorkingStateSelect.spec.tsx"],"names":["wrapper","agentStates","agentAuxState","agentState","rank","color","setup","getStateColor","handleWithIntervalTime","stateText","time","Date","now","currentStateIndex","getTimerText","changeWorkingState","disabled","afterEach","unmount","getAgentStateButton","RcButtonBase","find","at","button","click","simulate","text","getAgentStateList","getSelectedItem","describe","it","agentStateButton","expect","toBe","selectedItems","toHaveLength","agentStateList","length","prop","toBeTruthy","jest","useFakeTimers","fn","advanceTimersByTime","currentState","toBeCalledWith","timer","runOnlyPendingTimers","calledIntervalTime1","Number","calledIntervalTime2","calledIntervalTime3","toBeGreaterThan"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mount } from 'enzyme';\nimport { act } from 'react-dom/test-utils';\n\nimport { RcThemeProvider } from '@ringcentral/juno';\n\nimport { EvCustomAvailableAgentState } from '../../../interfaces/EvMainViewUI.interface';\nimport { WorkingStateSelect } from './WorkingStateSelect';\n\nlet wrapper;\nconst agentStates: EvCustomAvailableAgentState[] = [\n  {\n    agentAuxState: 'Available',\n    agentState: 'AVAILABLE',\n    rank: '1',\n    color: 'green',\n  },\n  {\n    agentAuxState: 'Working',\n    agentState: 'WORKING',\n    rank: '2',\n    color: 'yellow',\n  },\n  { agentAuxState: 'Away', agentState: 'AWAY', rank: '3', color: 'grey' },\n  {\n    agentAuxState: 'On Break',\n    agentState: 'ON-BREAK',\n    rank: '4',\n    color: 'grey',\n  },\n  { agentAuxState: 'Lunch', agentState: 'LUNCH', rank: '5', color: 'grey' },\n  {\n    agentAuxState: 'Allow Offhook',\n    agentState: 'AUX-UNAVAIL-OFFHOOK',\n    rank: '7',\n    color: 'red',\n  },\n  {\n    agentAuxState: 'Disconnect Offhook',\n    agentState: 'AUX-UNAVAIL-NO-OFFHOOK',\n    rank: '8',\n    color: 'red',\n  },\n  { agentAuxState: 'Napping', agentState: 'AWAY', rank: '11', color: 'grey' },\n  {\n    agentAuxState: '\"Training\"',\n    agentState: 'TRAINING',\n    rank: '13',\n    color: 'yellow',\n  },\n  {\n    agentAuxState: 'Meeting',\n    agentState: 'WORKING',\n    rank: '41',\n    color: 'yellow',\n  },\n];\n\nfunction setup({\n  getStateColor = () => '',\n  handleWithIntervalTime = () => {},\n  stateText = 'Available',\n  time = Date.now(),\n  currentStateIndex = 0,\n  getTimerText = (time) => time,\n  changeWorkingState = () => {},\n  disabled = false,\n} = {}) {\n  return mount(\n    <RcThemeProvider>\n      <WorkingStateSelect\n        agentStates={agentStates}\n        getStateColor={getStateColor}\n        handleWithIntervalTime={handleWithIntervalTime}\n        stateText={stateText}\n        time={time}\n        currentStateIndex={currentStateIndex}\n        getTimerText={getTimerText}\n        changeWorkingState={changeWorkingState}\n        disabled={disabled}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nafterEach(async () => {\n  wrapper.unmount();\n});\n\nconst getAgentStateButton = () => {\n  const RcButtonBase = wrapper.find('RcButtonBase').at(0);\n  return {\n    button: RcButtonBase,\n    click: () => RcButtonBase.simulate('click'),\n    text: RcButtonBase.find('[data-sign=\"stateName\"]').text(),\n  };\n};\n\nconst getAgentStateList = () => wrapper.find('RcMenu').at(0).find('RcMenuItem');\n\nfunction getSelectedItem(): any {\n  return getAgentStateList().find('li.Mui-selected');\n}\n\ndescribe('<WorkingStateSelect />', () => {\n  it('when no initiative agent state', () => {\n    const stateText = null;\n    const currentStateIndex = -1;\n    wrapper = setup({\n      stateText,\n      currentStateIndex,\n    });\n    const agentStateButton = getAgentStateButton();\n    expect(agentStateButton.text).toBe('');\n\n    agentStateButton.click();\n\n    const selectedItems = getSelectedItem();\n    expect(selectedItems).toHaveLength(0);\n  });\n\n  it('Can display initiative agent state', () => {\n    const currentStateIndex = 3;\n    const stateText = 'haha';\n    wrapper = setup({\n      currentStateIndex,\n      stateText,\n    });\n    const agentStateButton = getAgentStateButton();\n    expect(agentStateButton.text).toBe(stateText);\n    agentStateButton.click();\n\n    const agentStateList = getAgentStateList();\n    expect(agentStateList).toHaveLength(agentStates.length);\n\n    const selectedItems = getSelectedItem();\n    expect(selectedItems).toHaveLength(1);\n\n    expect(agentStateList.at(currentStateIndex).prop('selected')).toBeTruthy();\n  });\n\n  it('User can select from agent state list to change', async () => {\n    jest.useFakeTimers();\n    const changeWorkingState = jest.fn(() => {});\n    const currentStateIndex = 3;\n\n    wrapper = setup({\n      changeWorkingState,\n    });\n\n    act(() => jest.advanceTimersByTime(2100));\n\n    getAgentStateButton().click();\n    getAgentStateList().at(currentStateIndex).simulate('click');\n\n    const currentState = agentStates[currentStateIndex];\n    expect(changeWorkingState).toBeCalledWith(currentState);\n  });\n\n  it('Time label will update itself in every minute', async () => {\n    jest.useFakeTimers();\n    const handleWithIntervalTime = jest.fn(() => {});\n    const time = Date.now();\n\n    wrapper = setup({\n      time,\n      handleWithIntervalTime,\n    });\n\n    const timer = wrapper.find('[data-sign=\"timer\"]');\n\n    act(() => jest.runOnlyPendingTimers());\n    const calledIntervalTime1 = Number(timer.text());\n\n    act(() => jest.runOnlyPendingTimers());\n    const calledIntervalTime2 = Number(timer.text());\n\n    act(() => jest.runOnlyPendingTimers());\n    const calledIntervalTime3 = Number(timer.text());\n\n    expect(calledIntervalTime2).toBeGreaterThan(calledIntervalTime1);\n    expect(calledIntervalTime3).toBeGreaterThan(calledIntervalTime2);\n  });\n\n  it('When disabled, click WorkingStateButton should has no response', async () => {\n    jest.useFakeTimers();\n    wrapper = setup({\n      disabled: true,\n    });\n    const agentStateButton = getAgentStateButton();\n    expect(agentStateButton.button.prop('disabled')).toBe(true);\n    agentStateButton.click();\n    expect(getAgentStateList()).toHaveLength(0);\n  });\n});\n"],"file":"WorkingStateSelect.spec.js"}