{"version":3,"sources":["components/MainViewPanel/WorkingStateSelect/WorkingStateButton/WorkingStateButton.tsx"],"names":["WorkingStateButton","label","options","optionIndex","color","onChange","disabled","timerText","classes","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","menuOpened","Boolean","styles","state","fullWidth","stateDot","TOOLTIP_LONG_DELAY_TIME","stateName","timer","icon","arrowUpSvg","arrowDownSvg","style","maxHeight","paper","map","i","selected","stateListItemDot","stateItemName","agentAuxState","defaultProps"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, MouseEventHandler, useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Tooltip } from '@ringcentral-integration/widgets/components/Rcui/Tooltip';\nimport { TOOLTIP_LONG_DELAY_TIME } from '@ringcentral-integration/widgets/lib/toolTipDelayTime';\nimport { RcButtonBase, RcIcon, RcMenu, RcMenuItem } from '@ringcentral/juno';\nimport {\n  ArrowDown as arrowDownSvg,\n  ArrowUp as arrowUpSvg,\n} from '@ringcentral/juno/icon';\n\nimport { EvCustomAvailableAgentState } from '../../../../interfaces/EvMainViewUI.interface';\nimport styles from './styles.scss';\n\nexport interface WorkingStateButtonProps {\n  label: string;\n  optionIndex: number;\n  onChange(state: EvCustomAvailableAgentState): void;\n  options: EvCustomAvailableAgentState[];\n  color: string;\n  disabled: boolean;\n  timerText: string;\n  isWide: boolean;\n  classes?: {\n    paper?: string;\n  };\n}\n\nexport const WorkingStateButton: FunctionComponent<WorkingStateButtonProps> = ({\n  label,\n  options,\n  optionIndex,\n  color,\n  onChange,\n  disabled,\n  timerText,\n  classes,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick: MouseEventHandler<HTMLDivElement> = (event) => {\n    if (!disabled) {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuOpened = Boolean(anchorEl);\n\n  return (\n    <>\n      <div\n        tabIndex={0}\n        role=\"button\"\n        className={classNames(styles.state, styles[color])}\n        onClick={handleClick}\n      >\n        <RcButtonBase\n          disabled={disabled}\n          className={styles.fullWidth}\n          data-sign=\"workingStateButton\"\n        >\n          <div className={styles.stateDot} />\n          <Tooltip title={label} enterDelay={TOOLTIP_LONG_DELAY_TIME}>\n            <div className={styles.stateName} data-sign=\"stateName\">\n              {label}\n            </div>\n          </Tooltip>\n          <div className={styles.timer} data-sign=\"timer\">\n            {timerText}\n          </div>\n          <RcIcon\n            className={styles.icon}\n            symbol={menuOpened ? arrowUpSvg : arrowDownSvg}\n          />\n        </RcButtonBase>\n      </div>\n      <RcMenu\n        PaperProps={{ style: { maxHeight: 280 } }}\n        classes={{ paper: classes.paper }}\n        anchorEl={anchorEl}\n        open={menuOpened}\n        onClose={handleClose}\n      >\n        {options.map((state, i) => {\n          const selected = optionIndex === i;\n          return (\n            <RcMenuItem\n              key={i}\n              onClick={() => {\n                handleClose();\n                onChange(state);\n              }}\n              data-sign=\"workingStateItem\"\n              size=\"medium\"\n              selected={selected}\n            >\n              <div\n                className={classNames(\n                  styles.stateListItemDot,\n                  styles[state.color],\n                )}\n              />\n              <div className={styles.stateItemName}>{state.agentAuxState}</div>\n            </RcMenuItem>\n          );\n        })}\n      </RcMenu>\n    </>\n  );\n};\n\nWorkingStateButton.defaultProps = {\n  classes: {},\n};\n"],"file":"WorkingStateButton.js"}