{"version":3,"sources":["components/MainViewPanel/WorkingStateSelect/WorkingStateSelect.tsx"],"names":["WorkingStateSelect","agentStates","getStateColor","handleWithIntervalTime","stateText","time","currentStateIndex","getTimerText","changeWorkingState","disabled","isWide","hideOffHookBtn","Date","now","intervalTime","setIntervalTime","stateColor","handleTime","Number","timerId","setInterval","clearInterval","styles","selectHeader","paper","wider"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAMA;;AACA;;;;;;;;;;;;;;;;;;;;AAiBA,IAAMA,kBAA8D,GAAG,SAAjEA,kBAAiE,OAYjE;AAAA,MAXJC,WAWI,QAXJA,WAWI;AAAA,MAVJC,aAUI,QAVJA,aAUI;AAAA,MATJC,sBASI,QATJA,sBASI;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,MANJC,iBAMI,QANJA,iBAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,kBAII,QAJJA,kBAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,cACI,QADJA,cACI;;AAAA,kBACoC,qBAASC,IAAI,CAACC,GAAL,KAAaR,IAAtB,CADpC;AAAA;AAAA,MACGS,YADH;AAAA,MACiBC,eADjB;;AAEJ,MAAMC,UAAU,GAAGd,aAAa,CAACY,YAAD,CAAhC;AAEA,wBAAU,YAAM;AACd,QAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,UAAMH,YAAY,GAAGF,IAAI,CAACC,GAAL,KAAaK,MAAM,CAACb,IAAD,CAAxC;AACAF,MAAAA,sBAAsB,CAACW,YAAD,CAAtB;AACAC,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD,KAJD;;AAKA,QAAMK,OAAO,GAAGC,WAAW,CAACH,UAAD,EAAa,IAAb,CAA3B;AACAA,IAAAA,UAAU;AACV,WAAO;AAAA,aAAMI,aAAa,CAACF,OAAD,CAAnB;AAAA,KAAP;AACD,GATD,EASG,CAACd,IAAD,CATH;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEiB,mBAAOC;AAAvB,kBACE,gCAAC,sCAAD;AACE,IAAA,KAAK,EAAEnB,SADT;AAEE,IAAA,WAAW,EAAEE,iBAFf;AAGE,IAAA,QAAQ,EAAEE,kBAHZ;AAIE,IAAA,OAAO,EAAEP,WAJX;AAKE,IAAA,KAAK,EAAEe,UALT;AAME,IAAA,QAAQ,EAAEP,QANZ;AAOE,IAAA,MAAM,EAAEC,MAPV;AAQE,IAAA,SAAS,EAAEH,YAAY,CAACO,YAAD,CARzB;AASE,IAAA,OAAO,EAAE;AACPU,MAAAA,KAAK,EAAE,4BAAWF,mBAAOE,KAAlB,EAAyBb,cAAc,IAAIW,mBAAOG,KAAlD;AADA;AATX,IADF,CADF;AAiBD,CA5CD","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport {\n  EvMainViewUIFunctions,\n  EvMainViewUIProps,\n} from '../../../interfaces/EvMainViewUI.interface';\nimport styles from './styles.scss';\nimport { WorkingStateButton } from './WorkingStateButton';\n\ntype WorkingStateSelectProps = Pick<\n  EvMainViewUIProps & EvMainViewUIFunctions,\n  | 'handleWithIntervalTime'\n  | 'agentStates'\n  | 'changeWorkingState'\n  | 'getTimerText'\n  | 'currentStateIndex'\n  | 'getStateColor'\n  | 'stateText'\n  | 'time'\n  | 'disabled'\n  | 'isWide'\n  | 'hideOffHookBtn'\n>;\n\nconst WorkingStateSelect: FunctionComponent<WorkingStateSelectProps> = ({\n  agentStates,\n  getStateColor,\n  handleWithIntervalTime,\n  stateText,\n  time,\n  currentStateIndex,\n  getTimerText,\n  changeWorkingState,\n  disabled,\n  isWide,\n  hideOffHookBtn,\n}) => {\n  const [intervalTime, setIntervalTime] = useState(Date.now() - time);\n  const stateColor = getStateColor(intervalTime);\n\n  useEffect(() => {\n    const handleTime = () => {\n      const intervalTime = Date.now() - Number(time);\n      handleWithIntervalTime(intervalTime);\n      setIntervalTime(intervalTime);\n    };\n    const timerId = setInterval(handleTime, 1000);\n    handleTime();\n    return () => clearInterval(timerId);\n  }, [time]);\n\n  return (\n    <div className={styles.selectHeader}>\n      <WorkingStateButton\n        label={stateText}\n        optionIndex={currentStateIndex}\n        onChange={changeWorkingState}\n        options={agentStates}\n        color={stateColor}\n        disabled={disabled}\n        isWide={isWide}\n        timerText={getTimerText(intervalTime)}\n        classes={{\n          paper: classNames(styles.paper, hideOffHookBtn && styles.wider),\n        }}\n      />\n    </div>\n  );\n};\n\nexport { WorkingStateSelect };\n"],"file":"WorkingStateSelect.js"}