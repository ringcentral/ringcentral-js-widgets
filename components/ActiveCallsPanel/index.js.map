{"version":3,"file":"index.js","names":["_clsx","_interopRequireDefault","require","_react","_interopRequireWildcard","_ActiveCallList","_InsideModal","_LogNotification","_LogSection","_SpinnerOverlay","_i18n","_styles","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ActiveCallsPanel","_ref","activeRingCalls","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","className","currentLocale","areaCode","countryCode","showMergeCall","showCallDetail","showCallerIdName","allCalls","onCreateContact","onClickToSms","isLoggedContact","onLogCall","onViewContact","webphoneAnswer","onMergeCall","webphoneReject","webphoneHangup","webphoneResume","webphoneToVoicemail","webphoneSwitchCall","webphoneIgnore","modalConfirm","modalClose","enableContactFallback","onCallsEmpty","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","isWebRTC","getAvatarUrl","currentLog","renderEditLogSection","renderSaveLogButton","renderExtraButton","onSaveCallLog","onUpdateCallLog","onCloseLogSection","logNotification","onCloseNotification","onDiscardNotification","onSaveNotification","onExpandNotification","notificationContainerStyles","renderContactName","renderSubContactName","ringoutHangup","ringoutTransfer","ringoutReject","isOnHold","_ref$isWide","isWide","_ref$brand","brand","_ref$showContactDispl","showContactDisplayPlaceholder","_ref$outboundSmsPermi","outboundSmsPermission","_ref$internalSmsPermi","internalSmsPermission","_ref$loggingMap","loggingMap","_ref$autoLog","autoLog","_ref$showSpinner","showSpinner","_ref$isSessionAConfer","isSessionAConferenceCall","onCallItemClick","_ref$conferenceCallPa","conferenceCallParties","_ref$webphoneHold","webphoneHold","_ref$useV","useV2","_ref$updateSessionMat","updateSessionMatchedContact","_ref$showNotiLogButto","showNotiLogButton","_ref$showAvatar","showAvatar","_ref$showOtherDevice","showOtherDevice","_ref$disableLinks","disableLinks","_ref$showRingoutCallC","showRingoutCallControl","_ref$showMultipleMatc","showMultipleMatch","_ref$showSwitchCall","showSwitchCall","_ref$showTransferCall","showTransferCall","_ref$showHoldOnOtherD","showHoldOnOtherDevice","_ref$onLogBasicInfoCl","onLogBasicInfoClick","_ref$renderSmallCallC","renderSmallCallContrl","_ref$showIgnoreBtn","showIgnoreBtn","_ref$showHoldAnswerBt","showHoldAnswerBtn","_ref$useCallDetailV","useCallDetailV2","_ref$newCallIcon","newCallIcon","_ref$clickSwitchTrack","clickSwitchTrack","onSwitchCall","formatPhone","hasCalls","length","useEffect","renderLogSection","createElement","title","show","showLog","onClose","clickOutToClose","maskStyle","styles","isInnerMask","notificationIsExpand","showSaveLogBtn","showNotification","showTitle","containerStyles","clsx","notificationContainer","modalStyles","notificationModal","contentStyle","notificationContent","showLogButton","isExpand","onSave","onExpand","onDiscard","onStay","getCallList","calls","arguments","undefined","showMergeCallBtn","root","noCalls","i18n","getString","SpinnerOverlay","spinner","exports","_default"],"sources":["components/ActiveCallsPanel/index.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React, { useEffect } from 'react';\n\nimport type { Call } from '../ActiveCallItemV2';\nimport ActiveCallList from '../ActiveCallList';\nimport InsideModal from '../InsideModal';\nimport LogNotification from '../LogNotification';\nimport LogSection from '../LogSection';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype ActiveCallsPanelProps = {\n  currentLocale: string;\n  className?: string;\n  activeRingCalls: any[];\n  activeOnHoldCalls: any[];\n  activeCurrentCalls: any[];\n  otherDeviceCalls: any[];\n  areaCode: string;\n  countryCode: string;\n  brand?: string;\n  showContactDisplayPlaceholder?: boolean;\n  formatPhone: (...args: any[]) => any;\n  onClickToSms?: (...args: any[]) => any;\n  onCreateContact?: (...args: any[]) => any;\n  outboundSmsPermission?: boolean;\n  internalSmsPermission?: boolean;\n  isLoggedContact?: (...args: any[]) => any;\n  onLogCall?: (...args: any[]) => any;\n  onMergeCall?: (webphoneSessionId: string, telephonySessionId: string) => any;\n  webphoneAnswer?: (...args: any[]) => any;\n  webphoneReject?: (...args: any[]) => any;\n  webphoneHangup?: (...args: any[]) => any;\n  webphoneResume?: (...args: any[]) => any;\n  webphoneToVoicemail?: (...args: any[]) => any;\n  webphoneSwitchCall?: (...args: any[]) => any;\n  webphoneIgnore?: (...args: any[]) => any;\n  modalConfirm?: (...args: any[]) => any;\n  modalClose?: (...args: any[]) => any;\n  autoLog?: boolean;\n  onViewContact?: (...args: any[]) => any;\n  enableContactFallback?: boolean;\n  loggingMap?: object;\n  onCallsEmpty?: (...args: any[]) => any;\n  sourceIcons?: object;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  isWebRTC: boolean;\n  showSpinner?: boolean;\n  isSessionAConferenceCall?: (...args: any[]) => any;\n  onCallItemClick?: (...args: any[]) => any;\n  getAvatarUrl?: (...args: any[]) => any;\n  conferenceCallParties?: object[];\n  webphoneHold?: (...args: any[]) => any;\n  useV2?: boolean;\n  updateSessionMatchedContact?: (...args: any[]) => any;\n  isOnHold: (...args: any[]) => any;\n  currentLog?: any;\n  renderEditLogSection?: (...args: any[]) => any;\n  renderSaveLogButton?: (...args: any[]) => any;\n  renderExtraButton?: (...args: any[]) => any;\n  onSaveCallLog?: (...args: any[]) => any;\n  onUpdateCallLog?: (...args: any[]) => any;\n  onCloseLogSection?: (...args: any[]) => any;\n  logNotification?: any;\n  onCloseNotification?: (...args: any[]) => any;\n  onDiscardNotification?: (...args: any[]) => any;\n  onSaveNotification?: (...args: any[]) => any;\n  onExpandNotification?: (...args: any[]) => any;\n  showNotiLogButton?: boolean;\n  notificationContainerStyles?: string;\n  showAvatar?: boolean;\n  renderContactName?: (...args: any[]) => any;\n  renderSubContactName?: (...args: any[]) => any;\n  showOtherDevice?: boolean;\n  ringoutHangup?: (...args: any[]) => any;\n  ringoutTransfer?: (...args: any[]) => any;\n  ringoutReject?: (...args: any[]) => any;\n  disableLinks?: boolean;\n  showRingoutCallControl?: boolean;\n  showMultipleMatch?: boolean;\n  showSwitchCall?: boolean;\n  showTransferCall?: boolean;\n  showHoldOnOtherDevice?: boolean;\n  onLogBasicInfoClick?: (...args: any[]) => any;\n  renderSmallCallContrl?: (...args: any[]) => any;\n  showCallDetail?: boolean;\n  showIgnoreBtn?: boolean;\n  showHoldAnswerBtn?: boolean;\n  useCallDetailV2?: boolean;\n  newCallIcon?: boolean;\n  clickSwitchTrack?: (...args: any[]) => any;\n  onSwitchCall?: (call: Call) => any;\n  isWide?: boolean;\n  allCalls: any[];\n  showMergeCall?: boolean;\n  showCallerIdName?: boolean;\n};\n\nexport const ActiveCallsPanel: React.FC<ActiveCallsPanelProps> = ({\n  activeRingCalls,\n  activeOnHoldCalls,\n  activeCurrentCalls,\n  otherDeviceCalls,\n  className,\n  currentLocale,\n  areaCode,\n  countryCode,\n  showMergeCall,\n  showCallDetail,\n  showCallerIdName,\n  allCalls,\n  onCreateContact,\n  onClickToSms,\n  isLoggedContact,\n  onLogCall,\n  onViewContact,\n  webphoneAnswer,\n  onMergeCall,\n  webphoneReject,\n  webphoneHangup,\n  webphoneResume,\n  webphoneToVoicemail,\n  webphoneSwitchCall,\n  webphoneIgnore,\n  modalConfirm,\n  modalClose,\n  enableContactFallback,\n  onCallsEmpty,\n  sourceIcons,\n  phoneTypeRenderer,\n  phoneSourceNameRenderer,\n  isWebRTC,\n  getAvatarUrl,\n  currentLog,\n  renderEditLogSection,\n  renderSaveLogButton,\n  renderExtraButton,\n  onSaveCallLog,\n  onUpdateCallLog,\n  onCloseLogSection,\n  logNotification,\n  onCloseNotification,\n  onDiscardNotification,\n  onSaveNotification,\n  onExpandNotification,\n  notificationContainerStyles,\n  renderContactName,\n  renderSubContactName,\n  ringoutHangup,\n  ringoutTransfer,\n  ringoutReject,\n  isOnHold,\n  isWide = true,\n  brand = 'RingCentral',\n  showContactDisplayPlaceholder = true,\n  outboundSmsPermission = true,\n  internalSmsPermission = true,\n  loggingMap = {},\n  autoLog = false,\n  showSpinner = false,\n  isSessionAConferenceCall = () => false,\n  onCallItemClick,\n  conferenceCallParties = [],\n  webphoneHold = (i: any) => i,\n  useV2 = false,\n  updateSessionMatchedContact = (i: any) => i,\n  showNotiLogButton = true,\n  showAvatar = true,\n  showOtherDevice = true,\n  disableLinks = false,\n  showRingoutCallControl = false,\n  showMultipleMatch = true,\n  showSwitchCall = false,\n  showTransferCall = true,\n  showHoldOnOtherDevice = false,\n  onLogBasicInfoClick = () => {\n    //\n  },\n  renderSmallCallContrl = () => {\n    //\n  },\n  showIgnoreBtn = false,\n  showHoldAnswerBtn = false,\n  useCallDetailV2 = false,\n  newCallIcon = false,\n  clickSwitchTrack = () => {\n    //\n  },\n  onSwitchCall,\n  formatPhone,\n}) => {\n  const hasCalls =\n    activeRingCalls.length > 0 ||\n    activeOnHoldCalls.length > 0 ||\n    activeCurrentCalls.length > 0 ||\n    otherDeviceCalls.length > 0;\n\n  useEffect(() => {\n    if (!hasCalls) {\n      onCallsEmpty?.();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasCalls]);\n\n  const renderLogSection = () => {\n    if (!currentLog) return null;\n\n    return (\n      <div>\n        <InsideModal\n          title={currentLog.title}\n          show={currentLog.showLog}\n          onClose={onCloseLogSection}\n          clickOutToClose={false}\n          maskStyle={styles.maskStyle}\n        >\n          <LogSection\n            currentLocale={currentLocale!}\n            currentLog={currentLog}\n            formatPhone={formatPhone}\n            isInnerMask={\n              logNotification && logNotification.notificationIsExpand\n            }\n            // save call log\n            renderEditLogSection={renderEditLogSection}\n            showSaveLogBtn\n            onUpdateCallLog={onUpdateCallLog}\n            onSaveCallLog={onSaveCallLog}\n            renderSaveLogButton={renderSaveLogButton}\n            // active call ctrl\n            onLogBasicInfoClick={onLogBasicInfoClick}\n            renderSmallCallContrl={renderSmallCallContrl}\n          />\n        </InsideModal>\n        {logNotification ? (\n          <InsideModal\n            show={logNotification.showNotification}\n            showTitle={false}\n            containerStyles={clsx(\n              styles.notificationContainer,\n              notificationContainerStyles,\n            )}\n            modalStyles={styles.notificationModal}\n            contentStyle={styles.notificationContent}\n            onClose={onCloseNotification}\n          >\n            <LogNotification\n              showLogButton={showNotiLogButton}\n              currentLocale={currentLocale}\n              formatPhone={formatPhone}\n              currentLog={logNotification}\n              isExpand={logNotification.notificationIsExpand}\n              onSave={onSaveNotification}\n              onExpand={onExpandNotification}\n              onDiscard={onDiscardNotification}\n              onStay={onCloseNotification}\n            />\n          </InsideModal>\n        ) : null}\n      </div>\n    );\n  };\n\n  const getCallList = (\n    calls: any,\n    title: any,\n    showCallDetail = false,\n    allCalls: any,\n    showMergeCallBtn?: boolean,\n  ) => {\n    return (\n      <ActiveCallList\n        title={title}\n        calls={calls}\n        currentLocale={currentLocale}\n        areaCode={areaCode}\n        countryCode={countryCode}\n        showCallerIdName={showCallerIdName}\n        brand={brand}\n        showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        formatPhone={formatPhone}\n        onClickToSms={onClickToSms}\n        onCreateContact={onCreateContact}\n        onViewContact={onViewContact}\n        outboundSmsPermission={outboundSmsPermission}\n        internalSmsPermission={internalSmsPermission}\n        isLoggedContact={isLoggedContact}\n        onLogCall={onLogCall}\n        autoLog={autoLog}\n        loggingMap={loggingMap}\n        showMergeCall={showMergeCall && showMergeCallBtn}\n        onMergeCall={onMergeCall}\n        webphoneAnswer={webphoneAnswer}\n        webphoneReject={webphoneReject}\n        webphoneHangup={webphoneHangup}\n        webphoneResume={webphoneResume}\n        webphoneSwitchCall={webphoneSwitchCall}\n        webphoneIgnore={webphoneIgnore}\n        modalConfirm={modalConfirm}\n        modalClose={modalClose}\n        webphoneToVoicemail={webphoneToVoicemail}\n        renderExtraButton={renderExtraButton}\n        renderContactName={renderContactName}\n        renderSubContactName={renderSubContactName}\n        enableContactFallback={enableContactFallback}\n        sourceIcons={sourceIcons}\n        phoneTypeRenderer={phoneTypeRenderer}\n        phoneSourceNameRenderer={phoneSourceNameRenderer}\n        isSessionAConferenceCall={isSessionAConferenceCall}\n        useV2={useV2}\n        // TODO: Maybe we should make all the call item consistent\n        onCallItemClick={onCallItemClick}\n        showAvatar={showAvatar}\n        getAvatarUrl={getAvatarUrl}\n        conferenceCallParties={conferenceCallParties}\n        webphoneHold={webphoneHold}\n        showCallDetail={showCallDetail}\n        updateSessionMatchedContact={updateSessionMatchedContact}\n        ringoutHangup={ringoutHangup}\n        ringoutTransfer={ringoutTransfer}\n        ringoutReject={ringoutReject}\n        disableLinks={disableLinks}\n        showRingoutCallControl={showRingoutCallControl}\n        showMultipleMatch={showMultipleMatch}\n        showSwitchCall={showSwitchCall}\n        showTransferCall={showTransferCall}\n        showHoldOnOtherDevice={showHoldOnOtherDevice}\n        isOnHold={isOnHold}\n        showIgnoreBtn={showIgnoreBtn}\n        showHoldAnswerBtn={showHoldAnswerBtn}\n        useCallDetailV2={useCallDetailV2}\n        newCallIcon={newCallIcon}\n        clickSwitchTrack={clickSwitchTrack}\n        onSwitchCall={onSwitchCall}\n        isWide={isWide}\n        allCalls={allCalls}\n      />\n    );\n  };\n\n  if (!hasCalls) {\n    return (\n      <div data-sign=\"activeCalls\" className={clsx(styles.root, className)}>\n        <p className={styles.noCalls}>\n          {i18n.getString('noActiveCalls', currentLocale)}\n        </p>\n        {renderLogSection()}\n        {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n      </div>\n    );\n  }\n\n  return (\n    <div data-sign=\"activeCalls\" className={styles.root}>\n      <div className={clsx(styles.root, className)}>\n        {getCallList(\n          activeRingCalls,\n          i18n.getString('ringCall', currentLocale),\n          showCallDetail,\n          allCalls,\n        )}\n        {getCallList(\n          activeCurrentCalls,\n          i18n.getString('currentCall', currentLocale),\n          showCallDetail,\n          allCalls,\n        )}\n        {getCallList(\n          activeOnHoldCalls,\n          i18n.getString('onHoldCall', currentLocale),\n          showCallDetail,\n          allCalls,\n          true,\n        )}\n        {showOtherDevice\n          ? getCallList(\n              otherDeviceCalls,\n              i18n.getString('otherDeviceCall', currentLocale),\n              true,\n              allCalls,\n            )\n          : null}\n      </div>\n      {renderLogSection()}\n      {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n    </div>\n  );\n};\n\nexport default ActiveCallsPanel;\n"],"mappings":"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","ignoreList":[]}