{"version":3,"sources":["components/Button/Button.tsx"],"names":["Button","className","disabled","children","tooltip","dataSign","onClick","tabIndex","isMounted","isWaiting","setIsWaiting","disableButton","styles","root","e","current","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAWO,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,OAQhD;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,SAAS,GAAG,iCAAlB;;AADI,kBAE8B,qBAAS,KAAT,CAF9B;AAAA;AAAA,MAEGC,SAFH;AAAA,MAEcC,YAFd;;AAGJ,MAAMC,aAAa,GAAGT,QAAQ,IAAIO,SAAlC;AACA,sBACE;AACE,iBAAWJ,QADb;AAEE,IAAA,SAAS,EAAE,4BACTO,mBAAOC,IADE,EAETF,aAAa,IAAIC,mBAAOV,QAFf,EAGTD,SAHS,CAFb;AAOE,IAAA,IAAI,EAAC,QAPP;AAQE,IAAA,QAAQ,EAAEM,QARZ;AASE,IAAA,OAAO;AAAA,0EAAE,iBAAOO,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH,OAAOR,OAAP,KAAmB,UAAnB,IAAiC,CAACK,aAD/B;AAAA;AAAA;AAAA;;AAELD,gBAAAA,YAAY,CAAC,IAAD,CAAZ;AAFK;AAAA,uBAGCJ,OAAO,CAACQ,CAAD,CAHR;;AAAA;AAIL,oBAAIN,SAAS,CAACO,OAAd,EAAuB;AACrBL,kBAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OATT;AAkBE,IAAA,KAAK,EAAEN;AAlBT,KAoBGD,QApBH,CADF;AAwBD,CApCM;;;AAsCPH,MAAM,CAACgB,YAAP,GAAsB;AACpBT,EAAAA,QAAQ,EAAE,CADU;AAEpBL,EAAAA,QAAQ,EAAE;AAFU,CAAtB","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\n\nimport classnames from 'classnames';\n\nimport { useIsMounted } from '../../react-hooks/useIsMounted';\nimport styles from './styles.scss';\n\nexport interface ButtonProps {\n  className?: string;\n  tooltip?: string;\n  disabled?: boolean;\n  onClick?(e?: React.MouseEvent): void | Promise<any>;\n  dataSign?: string;\n  tabIndex?: number;\n}\n\nexport const Button: FunctionComponent<ButtonProps> = ({\n  className,\n  disabled,\n  children,\n  tooltip,\n  dataSign,\n  onClick,\n  tabIndex,\n}) => {\n  const isMounted = useIsMounted();\n  const [isWaiting, setIsWaiting] = useState(false);\n  const disableButton = disabled || isWaiting;\n  return (\n    <div\n      data-sign={dataSign}\n      className={classnames(\n        styles.root,\n        disableButton && styles.disabled,\n        className,\n      )}\n      role=\"button\"\n      tabIndex={tabIndex}\n      onClick={async (e) => {\n        if (typeof onClick === 'function' && !disableButton) {\n          setIsWaiting(true);\n          await onClick(e);\n          if (isMounted.current) {\n            setIsWaiting(false);\n          }\n        }\n      }}\n      title={tooltip}\n    >\n      {children}\n    </div>\n  );\n};\n\nButton.defaultProps = {\n  tabIndex: 0,\n  disabled: false,\n};\n"],"file":"Button.js"}