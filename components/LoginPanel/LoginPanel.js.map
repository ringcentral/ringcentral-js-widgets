{"version":3,"sources":["components/LoginPanel/LoginPanel.tsx"],"names":["LoginPanel","className","onLoginButtonClick","currentLocale","disabled","version","showSpinner","children","showSignUp","onSignUpButtonClick","customStyles","size","onLoading","onLoadingComplete","versionDisplay","styles","versionContainer","i18n","getString","signUpButton","root","loginButton"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AACA;;;;;;;;AAiBO,IAAMA,UAA8C,GAAG,SAAjDA,UAAiD,OAcxD;AAAA,MAbJC,SAaI,QAbJA,SAaI;AAAA,MAZJC,kBAYI,QAZJA,kBAYI;AAAA,MAXJC,aAWI,QAXJA,aAWI;AAAA,MAVJC,QAUI,QAVJA,QAUI;AAAA,MATJC,OASI,QATJA,OASI;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,mBAKI,QALJA,mBAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,uBAHJC,IAGI;AAAA,MAHJA,IAGI,0BAHG,QAGH;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,iBACI,QADJA,iBACI;AACJ,wBAAU,YAAM;AACd,QAAIP,WAAJ,EAAiB;AACfM,MAAAA,SAAS;AACV,KAFD,MAEO;AACLC,MAAAA,iBAAiB;AAClB;;AAED,WAAO,YAAM;AACXA,MAAAA,iBAAiB;AAClB,KAFD,CAPc,CAUd;AACD,GAXD,EAWG,CAACP,WAAD,CAXH;AAaA,MAAMQ,cAAc,GAAGT,OAAO,gBAC5B;AAAK,IAAA,SAAS,EAAEU,mBAAOC;AAAvB,KACGC,iBAAKC,SAAL,CAAe,SAAf,EAA0Bf,aAA1B,CADH,OAC8CE,OAD9C,CAD4B,GAI1B,IAJJ;AAMA,MAAMc,YAAY,GAAGX,UAAU,gBAC7B,gCAAC,cAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,SAAS,EAAEO,mBAAOI,YAFpB;AAGE,IAAA,OAAO,EAAEV,mBAHX;AAIE,IAAA,IAAI,EAAEE;AAJR,KAMGM,iBAAKC,SAAL,CAAe,cAAf,EAA+Bf,aAA/B,CANH,CAD6B,GAS3B,IATJ;AAWA,sBACE;AAAK,IAAA,SAAS,EAAE,4BAAWY,mBAAOK,IAAlB,EAAwBnB,SAAxB;AAAhB,kBACE,gCAAC,cAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,iBAAU,aAFZ;AAGE,IAAA,SAAS,EAAE,4BAAWc,mBAAOM,WAAlB,EAA+BX,YAA/B,CAHb;AAIE,IAAA,OAAO,EAAER,kBAJX;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAME,IAAA,IAAI,EAAEO;AANR,KAQGM,iBAAKC,SAAL,CAAe,aAAf,EAA8Bf,aAA9B,CARH,CADF,EAWGgB,YAXH,EAYGL,cAZH,EAaGP,QAbH,CADF;AAiBD,CA9DM","sourcesContent":["import React, { FunctionComponent, useEffect } from 'react';\n\nimport classNames from 'classnames';\n\nimport { RcButton, RcButtonSize } from '@ringcentral/juno';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport interface LoginPanelProps {\n  className?: string;\n  onLoginButtonClick: () => void;\n  currentLocale: string;\n  disabled?: boolean;\n  version?: string;\n  showSpinner?: boolean;\n  showSignUp?: boolean;\n  onSignUpButtonClick?: () => void;\n  customStyles?: string;\n  size?: RcButtonSize;\n  onLoading: Function;\n  onLoadingComplete: Function;\n}\n\nexport const LoginPanel: FunctionComponent<LoginPanelProps> = ({\n  className,\n  onLoginButtonClick,\n  currentLocale,\n  disabled,\n  version,\n  showSpinner,\n  children,\n  showSignUp,\n  onSignUpButtonClick,\n  customStyles,\n  size = 'medium',\n  onLoading,\n  onLoadingComplete,\n}) => {\n  useEffect(() => {\n    if (showSpinner) {\n      onLoading();\n    } else {\n      onLoadingComplete();\n    }\n\n    return () => {\n      onLoadingComplete();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showSpinner]);\n\n  const versionDisplay = version ? (\n    <div className={styles.versionContainer}>\n      {i18n.getString('version', currentLocale)} {version}\n    </div>\n  ) : null;\n\n  const signUpButton = showSignUp ? (\n    <RcButton\n      variant=\"contained\"\n      className={styles.signUpButton}\n      onClick={onSignUpButtonClick}\n      size={size}\n    >\n      {i18n.getString('signupButton', currentLocale)}\n    </RcButton>\n  ) : null;\n\n  return (\n    <div className={classNames(styles.root, className)}>\n      <RcButton\n        variant=\"contained\"\n        data-sign=\"loginButton\"\n        className={classNames(styles.loginButton, customStyles)}\n        onClick={onLoginButtonClick}\n        disabled={disabled}\n        size={size}\n      >\n        {i18n.getString('loginButton', currentLocale)}\n      </RcButton>\n      {signUpButton}\n      {versionDisplay}\n      {children}\n    </div>\n  );\n};\n"],"file":"LoginPanel.js"}