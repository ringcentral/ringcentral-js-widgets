{"version":3,"sources":["components/ContactsView/index.tsx"],"names":["AddContact","className","onClick","styles","iconContainer","iconNode","propTypes","PropTypes","string","func","isRequired","defaultProps","undefined","RefreshContacts","onRefresh","refreshing","currentLocale","icon","iconWrapClass","refreshingIcon","refreshIcon","i18n","getString","bool","ContactsView","props","calculateContentSize","contentWrapper","current","getBoundingClientRect","rect","contentHeight","bottom","top","contentWidth","right","left","onSearchInputChange","ev","setState","searchString","target","value","lastInputTimestamp","Date","now","state","searchSource","search","onSourceSelect","contactList","resetScrollTop","onResize","_mounted","unfold","React","createRef","onUnfoldChange","onVisitPage","window","addEventListener","nextProps","nextState","searchStringProp","isNotEditing","contactSourceNames","removeEventListener","onSearchContact","contactGroups","isSearching","showSpinner","getAvatarUrl","getPresence","onItemSelect","Filter","contactSourceFilterRenderer","sourceNodeRenderer","bottomNotice","bottomNoticeHeight","children","currentSiteCode","isMultipleSiteEnabled","showRefresh","refreshButton","actionButton","root","actionBar","searchInput","withRefresh","content","spinner","Component","arrayOf","shape","id","caption","contacts","ContactItem","contact","number","node","ContactSourceFilter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { contains } from 'ramda';\n\nimport debounce from '@ringcentral-integration/commons/lib/debounce';\n\nimport AddContactIcon from '../../assets/images/ContactAdd.svg';\nimport RefreshingIcon from '../../assets/images/OvalLoading.svg';\nimport RefreshContactIcon from '../../assets/images/RetryIcon.svg';\nimport ContactItem from '../ContactItem';\nimport ContactList from '../ContactList';\nimport { ContactSourceFilter } from '../ContactSourceFilter';\nimport Panel from '../Panel';\nimport { SearchInput } from '../SearchInput';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst AddContact = ({ className, onClick }) => {\n  return (\n    <div className={className} onClick={onClick}>\n      <div className={styles.iconContainer}>\n        <AddContactIcon className={styles.iconNode} />\n      </div>\n    </div>\n  );\n};\nAddContact.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\nAddContact.defaultProps = {\n  className: undefined,\n};\n\nconst RefreshContacts = ({\n  className,\n  onRefresh,\n  refreshing,\n  currentLocale,\n}) => {\n  let icon = null;\n  let iconWrapClass = null;\n  if (refreshing) {\n    iconWrapClass = styles.refreshingIcon;\n    icon = (\n      <RefreshingIcon className={styles.iconNode} width={12} height={12} />\n    );\n  } else {\n    iconWrapClass = styles.refreshIcon;\n    icon = (\n      <RefreshContactIcon className={styles.iconNode} width={12} height={12} />\n    );\n  }\n  return (\n    <div\n      className={classnames(iconWrapClass, className)}\n      onClick={onRefresh}\n      title={i18n.getString('refresh', currentLocale)}\n    >\n      <div className={styles.iconContainer}>{icon}</div>\n    </div>\n  );\n};\nRefreshContacts.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  refreshing: PropTypes.bool.isRequired,\n};\nRefreshContacts.defaultProps = {\n  className: undefined,\n};\n\nclass ContactsView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: props.searchString,\n      lastInputTimestamp: 0,\n      unfold: false,\n      contentHeight: 0,\n      contentWidth: 0,\n      refreshing: false,\n    };\n    this.contactList = React.createRef();\n    this.contentWrapper = React.createRef();\n    this.onUnfoldChange = (unfold) => {\n      this.setState({\n        unfold,\n      });\n    };\n  }\n\n  calculateContentSize = () => {\n    if (\n      this.contentWrapper &&\n      this.contentWrapper.current &&\n      this.contentWrapper.current.getBoundingClientRect\n    ) {\n      const rect = this.contentWrapper.current.getBoundingClientRect();\n      return {\n        contentHeight: rect.bottom - rect.top,\n        contentWidth: rect.right - rect.left,\n      };\n    }\n    return {\n      contentHeight: 0,\n      contentWidth: 0,\n    };\n  };\n\n  componentDidMount() {\n    this._mounted = true;\n    const { onVisitPage } = this.props;\n    if (typeof onVisitPage === 'function') {\n      onVisitPage();\n    }\n    this.setState({\n      ...this.calculateContentSize(),\n    });\n    window.addEventListener('resize', this.onResize);\n  }\n\n  UNSAFE_componentWillUpdate(nextProps, nextState) {\n    const { lastInputTimestamp } = this.state;\n    const { searchString: searchStringProp } = this.props;\n    // sync search string from other app instance\n    const isNotEditing = Date.now() - lastInputTimestamp > 2000;\n    if (isNotEditing && nextProps.searchString !== searchStringProp) {\n      nextState.searchString = nextProps.searchString;\n    }\n    // default to the first contact source when current selected contact source is removed\n    if (!contains(nextProps.searchSource, nextProps.contactSourceNames)) {\n      const { searchString } = this.state;\n      this.search({\n        searchSource: nextProps.contactSourceNames[0],\n        searchString,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onSearchInputChange = (ev) => {\n    this.setState(\n      {\n        searchString: ev.target.value,\n        lastInputTimestamp: Date.now(),\n      },\n      () => {\n        const { searchString } = this.state;\n        const { searchSource } = this.props;\n        this.search({\n          searchString,\n          searchSource,\n        });\n      },\n    );\n  };\n\n  onSourceSelect = (searchSource) => {\n    if (\n      this.contactList &&\n      this.contactList.current &&\n      this.contactList.current.resetScrollTop\n    ) {\n      this.contactList.current.resetScrollTop();\n    }\n    const { searchString } = this.state;\n    this.search({\n      searchSource,\n      searchString,\n    });\n  };\n\n  onResize = debounce(() => {\n    if (this._mounted) {\n      this.setState({\n        ...this.calculateContentSize(),\n      });\n    }\n  }, 300);\n\n  onRefresh = async () => {\n    const { onRefresh } = this.props;\n    if (typeof onRefresh === 'function') {\n      this.setState({ refreshing: true }, async () => {\n        await onRefresh();\n        this.setState({ refreshing: false });\n      });\n    }\n  };\n\n  search({ searchSource, searchString }) {\n    const { onSearchContact } = this.props;\n    if (typeof onSearchContact === 'function') {\n      onSearchContact({\n        searchSource,\n        searchString,\n      });\n    }\n  }\n\n  render() {\n    const {\n      currentLocale,\n      contactGroups,\n      contactSourceNames,\n      searchSource,\n      isSearching,\n      showSpinner,\n      getAvatarUrl,\n      getPresence,\n      onItemSelect,\n      contactSourceFilterRenderer: Filter,\n      sourceNodeRenderer,\n      onRefresh,\n      bottomNotice,\n      bottomNoticeHeight,\n      children,\n      currentSiteCode,\n      isMultipleSiteEnabled,\n    } = this.props;\n    const { refreshing, searchString, unfold, contentWidth, contentHeight } =\n      this.state;\n\n    const showRefresh = typeof onRefresh === 'function';\n    const refreshButton = showRefresh ? (\n      <RefreshContacts\n        className={styles.actionButton}\n        refreshing={refreshing}\n        currentLocale={currentLocale}\n        onRefresh={this.onRefresh}\n      />\n    ) : null;\n    return (\n      <div className={styles.root}>\n        <div className={styles.actionBar}>\n          <SearchInput\n            dataSign=\"contactsSearchInput\"\n            className={classnames(\n              styles.searchInput,\n              showRefresh ? styles.withRefresh : '',\n            )}\n            value={searchString || ''}\n            onChange={this.onSearchInputChange}\n            placeholder={i18n.getString('searchPlaceholder', currentLocale)}\n          />\n          {refreshButton}\n          <Filter\n            className={styles.actionButton}\n            currentLocale={currentLocale}\n            contactSourceNames={contactSourceNames}\n            onSourceSelect={this.onSourceSelect}\n            selectedSourceName={searchSource}\n            unfold={unfold}\n            onUnfoldChange={this.onUnfoldChange}\n          />\n        </div>\n        <Panel className={styles.content}>\n          <div className={styles.contentWrapper} ref={this.contentWrapper}>\n            <ContactList\n              ref={this.contactList}\n              currentLocale={currentLocale}\n              contactGroups={contactGroups}\n              getAvatarUrl={getAvatarUrl}\n              getPresence={getPresence}\n              onItemSelect={onItemSelect}\n              currentSiteCode={currentSiteCode}\n              isMultipleSiteEnabled={isMultipleSiteEnabled}\n              sourceNodeRenderer={sourceNodeRenderer}\n              isSearching={isSearching}\n              bottomNotice={bottomNotice}\n              bottomNoticeHeight={bottomNoticeHeight}\n              width={contentWidth}\n              height={contentHeight}\n            />\n          </div>\n        </Panel>\n        {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n        {children}\n      </div>\n    );\n  }\n}\n\nContactsView.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      caption: PropTypes.string.isRequired,\n      contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n    }),\n  ).isRequired,\n  contactSourceNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool.isRequired,\n  currentSiteCode: PropTypes.string,\n  isMultipleSiteEnabled: PropTypes.bool,\n  searchSource: PropTypes.string,\n  searchString: PropTypes.string,\n  isSearching: PropTypes.bool,\n  onItemSelect: PropTypes.func,\n  onSearchContact: PropTypes.func,\n  contactSourceFilterRenderer: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  onVisitPage: PropTypes.func,\n  onRefresh: PropTypes.func,\n  bottomNotice: PropTypes.func,\n  bottomNoticeHeight: PropTypes.number,\n  children: PropTypes.node,\n};\n\nContactsView.defaultProps = {\n  searchSource: undefined,\n  searchString: undefined,\n  isSearching: false,\n  onItemSelect: undefined,\n  onSearchContact: undefined,\n  contactSourceFilterRenderer: ContactSourceFilter,\n  sourceNodeRenderer: undefined,\n  onVisitPage: undefined,\n  children: undefined,\n  onRefresh: undefined,\n  bottomNotice: undefined,\n  bottomNoticeHeight: 0,\n  currentSiteCode: '',\n  isMultipleSiteEnabled: false,\n};\n\nexport default ContactsView;\n"],"file":"index.js"}