{"version":3,"sources":["components/SaveLogButton/SaveLogButton.tsx"],"names":["SaveLogButton","onSaveCallLog","currentLocale","currentLog","loading","isWide","disabled","currentLogCall","buttonDisabled","buttonContent","getContent","Check","i18n","getString","content","styles","button","classic","call","defaultProps"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;;;AAUA,IAAMA,aAA4C,GAAG,SAA/CA,aAA+C,OAO/C;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,aAKI,QALJA,aAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,QACI,QADJA,QACI;;AAAA,yBACsC,uCACxCH,UAAU,CAACI,cAD6B,CADtC;AAAA,MACIC,cADJ,oBACIA,cADJ;AAAA,MACoBC,aADpB,oBACoBA,aADpB;;AAIJ,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,aAAD;AAAA,wBACjB,8CACGA,aAAa,KAAK,OAAlB,iBACC,gCAAC,YAAD;AAAQ,MAAA,KAAK,EAAC,iBAAd;AAAgC,MAAA,MAAM,EAAEE,WAAxC;AAA+C,MAAA,IAAI,EAAC;AAApD,MAFJ,EAIGF,aAAa,KAAK,QAAlB,iBAA8B,gCAAC,wBAAD;AAAoB,MAAA,IAAI,EAAE;AAA1B,MAJjC,EAKGA,aAAa,KAAK,MAAlB,IAA4BG,iBAAKC,SAAL,CAAe,MAAf,EAAuBX,aAAvB,CAL/B,CADiB;AAAA,GAAnB;;AASA,MAAMY,OAAO,GAAGJ,UAAU,CAACD,aAAD,CAA1B;AACA,sBACE,gCAAC,cAAD;AACE,IAAA,SAAS,EAAE,4BAAWM,mBAAOC,MAAlB,EAA0B,CAACX,MAAD,IAAWU,mBAAOE,OAA5C,CADb;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,QAAQ,EAAET,cAAc,IAAIJ,OAAlB,IAA6BE,QAJzC;AAKE,iBAAU,UALZ;AAME,kBAAYG,aANd;AAOE,IAAA,OAAO,EAAE;AAAA,aAAMR,aAAa,CAACE,UAAU,CAACe,IAAZ,CAAnB;AAAA;AAPX,KASGJ,OATH,CADF;AAaD,CAlCD;;AAmCAd,aAAa,CAACmB,YAAd,GAA6B;AAC3BhB,EAAAA,UAAU,EAAE,IADe;AAE3BD,EAAAA,aAAa,EAAE,IAFY;AAG3BD,EAAAA,aAH2B,2BAGX,CAAE,CAHS;AAI3BG,EAAAA,OAAO,EAAE,KAJkB;AAK3BC,EAAAA,MAAM,EAAE,IALmB;AAM3BC,EAAAA,QAAQ,EAAE;AANiB,CAA7B;eAQeN,a","sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\n\nimport { RcButton, RcCircularProgress, RcIcon } from '@ringcentral/juno';\nimport { Check } from '@ringcentral/juno/icon';\n\nimport { getButtonStatus } from './getButtonStatus';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype SaveLogButtonProps = {\n  currentLog?: object;\n  currentLocale?: string;\n  onSaveCallLog?: (...args: any[]) => any;\n  loading?: boolean;\n  isWide?: boolean;\n  disabled?: boolean;\n};\nconst SaveLogButton: React.SFC<SaveLogButtonProps> = ({\n  onSaveCallLog,\n  currentLocale,\n  currentLog,\n  loading,\n  isWide,\n  disabled,\n}) => {\n  const { buttonDisabled, buttonContent } = getButtonStatus(\n    currentLog.currentLogCall,\n  );\n  const getContent = (buttonContent) => (\n    <span>\n      {buttonContent === 'saved' && (\n        <RcIcon color=\"interactive.f01\" symbol={Check} size=\"small\" />\n      )}\n      {buttonContent === 'saving' && <RcCircularProgress size={20} />}\n      {buttonContent === 'save' && i18n.getString('save', currentLocale)}\n    </span>\n  );\n  const content = getContent(buttonContent);\n  return (\n    <RcButton\n      className={classnames(styles.button, !isWide && styles.classic)}\n      variant=\"text\"\n      size=\"medium\"\n      disabled={buttonDisabled || loading || disabled}\n      data-sign=\"saveCall\"\n      data-state={buttonContent}\n      onClick={() => onSaveCallLog(currentLog.call)}\n    >\n      {content}\n    </RcButton>\n  );\n};\nSaveLogButton.defaultProps = {\n  currentLog: null,\n  currentLocale: null,\n  onSaveCallLog() {},\n  loading: false,\n  isWide: true,\n  disabled: false,\n};\nexport default SaveLogButton;\n"],"file":"SaveLogButton.js"}