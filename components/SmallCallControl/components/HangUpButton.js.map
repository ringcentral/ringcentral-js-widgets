{"version":3,"sources":["components/SmallCallControl/components/HangUpButton.tsx"],"names":["HangUpButton","currentLocale","onReject","onHangup","isInComingCall","size","disableHangup","className","dataSign","endTitle","HandUp","i18n","getString","styles","hangup","defaultProps"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;;;AAKA;;AACA;;AACA;;;;AAUO,IAAMA,YAAkD,GAAG,SAArDA,YAAqD,OAS5D;AAAA,MARJC,aAQI,QARJA,aAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,QACI,QADJA,QACI;;AAAA,8BACiB,oCAAyB;AAC5CJ,IAAAA,cAAc,EAAdA;AAD4C,GAAzB,CADjB;AAAA,MACIK,QADJ,yBACIA,QADJ;;AAKJ,sBACE,gCAAC,wBAAD;AACE,IAAA,MAAM,EAAEC,kBADV;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,iBAAU,SAHZ;AAIE,IAAA,KAAK,EAAEC,iBAAKC,SAAL,CAAeH,QAAf,EAAyBR,aAAzB,CAJT;AAKE,IAAA,KAAK,EAAC,YALR;AAME,IAAA,OAAO,EAAEG,cAAc,GAAGF,QAAH,GAAcC,QANvC;AAOE,IAAA,QAAQ,EAAEG,aAPZ;AAQE,IAAA,IAAI,EAAED,IARR;AASE,IAAA,SAAS,EAAE,4BAAWQ,mBAAOC,MAAlB,EAA0BP,SAA1B,CATb;AAUE,IAAA,aAAa,MAVf;AAWE,iBAAWC;AAXb,IADF;AAeD,CA7BM;;;AA+BPR,YAAY,CAACe,YAAb,GAA4B;AAC1Bb,EAAAA,QAD0B,sBACf,CAAE,CADa;AAE1BC,EAAAA,QAF0B,sBAEf,CAAE,CAFa;AAG1BG,EAAAA,aAAa,EAAE,KAHW;AAI1BF,EAAAA,cAAc,EAAE,KAJU;AAK1BH,EAAAA,aAAa,EAAE,OALW;AAM1BO,EAAAA,QAAQ,EAAE;AANgB,CAA5B","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport classnames from 'classnames';\n\nimport { RcIconButton } from '@ringcentral/juno';\nimport { HandUp } from '@ringcentral/juno/icon';\n\nimport { getCircleIconButtonTitle } from '../help';\nimport i18n from '../i18n';\nimport styles from '../styles.scss';\nimport { CallButtonsProps } from './CallButtons.interface';\n\nexport type HangUpButtonProps = CallButtonsProps & {\n  onReject?(): void | Promise<void>;\n  onHangup?(): void | Promise<void>;\n  disableHangup?: boolean;\n  isInComingCall?: boolean;\n};\n\nexport const HangUpButton: FunctionComponent<HangUpButtonProps> = ({\n  currentLocale,\n  onReject,\n  onHangup,\n  isInComingCall,\n  size,\n  disableHangup,\n  className,\n  dataSign,\n}) => {\n  const { endTitle } = getCircleIconButtonTitle({\n    isInComingCall,\n  });\n\n  return (\n    <RcIconButton\n      symbol={HandUp}\n      variant=\"contained\"\n      data-icon=\"hand-up\"\n      title={i18n.getString(endTitle, currentLocale)}\n      color=\"danger.b03\"\n      onClick={isInComingCall ? onReject : onHangup}\n      disabled={disableHangup}\n      size={size}\n      className={classnames(styles.hangup, className)}\n      disableRipple\n      data-sign={dataSign}\n    />\n  );\n};\n\nHangUpButton.defaultProps = {\n  onReject() {},\n  onHangup() {},\n  disableHangup: false,\n  isInComingCall: false,\n  currentLocale: 'en-US',\n  dataSign: 'hangup',\n};\n"],"file":"HangUpButton.js"}