{"version":3,"sources":["components/SessionUpdatePanel/SessionUpdatePanel.ut.tsx"],"names":["wrapper","defaultSkillProfileList","profileId","profileName","isDefault","profileDesc","defaultLoginTypeList","label","id","setup","currentLocale","goToSettingsPageWhetherSessionChanged","onSaveUpdate","selectedSkillProfileId","skillProfileList","setSkillProfileId","loginTypeList","loginType","setLoginType","autoAnswer","setAutoAnswer","extensionNumber","setExtensionNumber","inboundQueuesFieldText","isExtensionNumber","searchOption","inboundQueues","submitInboundQueues","getAssignedInboundQueues","isAllAssign","isSeveralAssign","checkBoxOnChange","allCheckBoxOnChange","showInboundQueues","showSkillProfile","showAutoAnswer","UTRenderUpdateSessionBtns","expect","find","exists","toBeTruthy"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mount } from 'enzyme';\n\nimport { StepFunction } from '@ringcentral-integration/test-utils';\nimport { RcThemeProvider } from '@ringcentral/juno';\n\nimport {\n  SessionUpdatePanel,\n  SessionUpdatePanelProps,\n} from './SessionUpdatePanel';\n\nlet wrapper;\nconst defaultSkillProfileList = [\n  {\n    profileId: '1001',\n    profileName: 'Work',\n    isDefault: '1',\n    profileDesc: 'like to work',\n  },\n  {\n    profileId: '1002',\n    profileName: 'eat',\n    isDefault: '1',\n    profileDesc: 'fat man',\n  },\n  {\n    profileId: '1003',\n    profileName: 'play',\n    isDefault: '1',\n    profileDesc: 'like to work',\n  },\n];\nconst defaultLoginTypeList = [\n  {\n    label: 'externalPhone',\n    id: '101',\n  },\n  {\n    label: 'externalPhone2',\n    id: '102',\n  },\n];\n\nfunction setup({\n  currentLocale = 'en-US',\n  goToSettingsPageWhetherSessionChanged = () => {},\n  onSaveUpdate = () => {},\n  selectedSkillProfileId = '1002',\n  skillProfileList = defaultSkillProfileList,\n  setSkillProfileId = () => {},\n  loginTypeList = defaultLoginTypeList,\n  loginType = '102',\n  setLoginType = () => {},\n  autoAnswer = true,\n  setAutoAnswer = () => {},\n  extensionNumber = '',\n  setExtensionNumber = () => {},\n  inboundQueuesFieldText = '',\n  isExtensionNumber = false,\n  searchOption,\n  inboundQueues = [],\n  submitInboundQueues,\n  getAssignedInboundQueues = () => [],\n  isAllAssign = () => true,\n  isSeveralAssign = () => false,\n  checkBoxOnChange,\n  allCheckBoxOnChange,\n  showInboundQueues = true,\n  showSkillProfile = true,\n  showAutoAnswer = true,\n}: Partial<SessionUpdatePanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <SessionUpdatePanel\n        currentLocale={currentLocale}\n        goToSettingsPageWhetherSessionChanged={\n          goToSettingsPageWhetherSessionChanged\n        }\n        onSaveUpdate={onSaveUpdate}\n        selectedSkillProfileId={selectedSkillProfileId}\n        skillProfileList={skillProfileList}\n        setSkillProfileId={setSkillProfileId}\n        loginTypeList={loginTypeList}\n        loginType={loginType}\n        setLoginType={setLoginType}\n        autoAnswer={autoAnswer}\n        setAutoAnswer={setAutoAnswer}\n        extensionNumber={extensionNumber}\n        setExtensionNumber={setExtensionNumber}\n        inboundQueuesFieldText={inboundQueuesFieldText}\n        isExtensionNumber={isExtensionNumber}\n        searchOption={searchOption}\n        inboundQueues={inboundQueues}\n        submitInboundQueues={submitInboundQueues}\n        getAssignedInboundQueues={getAssignedInboundQueues}\n        isAllAssign={isAllAssign}\n        isSeveralAssign={isSeveralAssign}\n        checkBoxOnChange={checkBoxOnChange}\n        allCheckBoxOnChange={allCheckBoxOnChange}\n        showInboundQueues={showInboundQueues}\n        showSkillProfile={showSkillProfile}\n        showAutoAnswer={showAutoAnswer}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nexport const UTRenderUpdateSessionBtns: StepFunction = () => {\n  wrapper = setup({});\n  expect(wrapper.find('[data-sign=\"saveUpdate\"]').exists()).toBeTruthy();\n  expect(wrapper.find('[data-sign=\"cancel\"]').exists()).toBeTruthy();\n};\n"],"file":"SessionUpdatePanel.ut.js"}