{"version":3,"sources":["components/AlertDisplay/AlertDisplay.tsx"],"names":["AlertDisplay","RendererMessage","component","className","messages","dismiss","currentLocale","brand","getRenderer","styles","root","map","message","Renderer","animation","duration","id","level","defaultProps","undefined","Message"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAIA;;AACA;;;;AAsBA,IAAMA,YAAkD,GAAG,SAArDA,YAAqD,OAQrD;AAAA,MAPOC,eAOP,QAPJC,SAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,WACI,QADJA,WACI;AACJ,sBACE;AAAK,IAAA,SAAS,EAAE,4BAAWC,mBAAOC,IAAlB,EAAwBP,SAAxB;AAAhB,KACGC,QAAQ,CAACO,GAAT,CAAa,UAACC,OAAD,EAAa;AACzB,QAAMC,QAAQ,GAAGL,WAAW,CAACI,OAAD,CAA5B;AACA,QAAI,CAACC,QAAL,EAAe,OAAO,IAAP;AACf,wBACE,gCAAC,eAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACE,SADrB;AAEE,MAAA,QAAQ,EAAEF,OAAO,CAACG,QAFpB;AAGE,MAAA,GAAG,EAAEH,OAAO,CAACI,EAHf;AAIE,MAAA,KAAK,EAAEJ,OAAO,CAACK,KAJjB;AAKE,MAAA,OAAO,eACL,gCAAC,QAAD;AACE,QAAA,OAAO,EAAEL,OADX;AAEE,QAAA,aAAa,EAAEN,aAFjB;AAGE,QAAA,KAAK,EAAEC;AAHT,QANJ;AAYE,MAAA,SAAS,EAAE,qBAAM;AACfF,QAAAA,OAAO,CAACO,OAAO,CAACI,EAAT,CAAP;AACD;AAdH,MADF;AAkBD,GArBA,CADH,CADF;AA0BD,CAnCD;;AAqCAhB,YAAY,CAACkB,YAAb,GAA4B;AAC1BV,EAAAA,WAAW,EAAE;AAAA,WAAMW,SAAN;AAAA,GADa;AAE1BjB,EAAAA,SAAS,EAAEkB,mBAFe;AAG1Bb,EAAAA,KAAK,EAAE;AAHmB,CAA5B;eAMeP,Y","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport classnames from 'classnames';\n\nimport { AlertLevelType } from '@ringcentral-integration/commons/modules/Alert/alertLevels';\n\nimport Message from '../Message';\nimport styles from './styles.scss';\n\nexport type AlertDisplayProps = {\n  className?: string;\n  messages?: {\n    id: string;\n    level: AlertLevelType;\n    message: string;\n    payload?: any;\n    animation?: string;\n    duration?: string;\n    // ttl: number;\n    // timestamp: number;\n  }[];\n  getRenderer?: (...args: any[]) => any;\n  dismiss: (...args: any[]) => any;\n  currentLocale: string;\n  brand?: string;\n  component?: (...args: any[]) => any;\n  // animation?: string;\n  // duration?: number;\n};\nconst AlertDisplay: FunctionComponent<AlertDisplayProps> = ({\n  component: RendererMessage,\n  className,\n  messages,\n  dismiss,\n  currentLocale,\n  brand,\n  getRenderer,\n}) => {\n  return (\n    <div className={classnames(styles.root, className)}>\n      {messages.map((message) => {\n        const Renderer = getRenderer(message);\n        if (!Renderer) return null;\n        return (\n          <RendererMessage\n            animation={message.animation}\n            duration={message.duration}\n            key={message.id}\n            level={message.level}\n            message={\n              <Renderer\n                message={message}\n                currentLocale={currentLocale}\n                brand={brand}\n              />\n            }\n            onDismiss={() => {\n              dismiss(message.id);\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nAlertDisplay.defaultProps = {\n  getRenderer: () => undefined,\n  component: Message,\n  brand: 'RingCentral',\n};\n\nexport default AlertDisplay;\n"],"file":"AlertDisplay.js"}