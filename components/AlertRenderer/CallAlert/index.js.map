{"version":3,"sources":["components/AlertRenderer/CallAlert/index.tsx"],"names":["CallAlert","message","id","payload","brand","onAreaCodeLinkClick","currentLocale","callErrors","noAreaCode","areaCode","i18n","getString","areaCodeLink","styles","link","e","preventDefault","alertId","noInternational","name","defaultProps","undefined","handleMessage","emergencyNumber","noToNumber","connectFailed","internalError","notAnExtension","networkError","noRingoutEnable"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;;;AAYO,IAAMA,SAAoC,GAAG,SAAvCA,SAAuC,OAK9C;AAAA,0BAJJC,OAII;AAAA,MAJOC,EAIP,gBAJOA,EAIP;AAAA,MAJWD,OAIX,gBAJWA,OAIX;AAAA,MAJoBE,OAIpB,gBAJoBA,OAIpB;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADJC,aACI,QADJA,aACI;;AACJ,MAAIL,OAAO,KAAKM,uBAAWC,UAA3B,EAAuC;AACrC,QAAMC,QAAQ,GAAGC,iBAAKC,SAAL,CAAe,UAAf,EAA2BL,aAA3B,CAAjB;;AACA,QAAMM,YAAY,GAAGP,mBAAmB,gBACtC;AACE,MAAA,SAAS,EAAEQ,mBAAOC,IADpB;AAEE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdA,QAAAA,CAAC,CAACC,cAAF;AACAX,QAAAA,mBAAmB,CAAC;AAAEY,UAAAA,OAAO,EAAEf;AAAX,SAAD,CAAnB;AACD,OALH;AAME,mBAAU;AANZ,OAQGO,QARH,CADsC,GAYtCA,QAZF;AAcA,wBACE,gCAAC,4BAAD;AACE,MAAA,OAAO,EAAEC,iBAAKC,SAAL,CAAeV,OAAf,EAAwBK,aAAxB,CADX;AAEE,MAAA,MAAM,EAAE;AAAEM,QAAAA,YAAY,EAAZA;AAAF;AAFV,MADF;AAMD;;AACD,MAAIX,OAAO,KAAKM,uBAAWW,eAA3B,EAA4C;AAC1C,wBACE,gCAAC,4BAAD;AACE,MAAA,OAAO,EAAER,iBAAKC,SAAL,CAAeV,OAAf,EAAwBK,aAAxB,CADX;AAEE,MAAA,MAAM,EAAE;AAAEF,QAAAA,KAAK,EAAEA,KAAK,CAACe;AAAf;AAFV,MADF;AAMD;;AACD,sBAAO,8CAAOT,iBAAKC,SAAL,CAAeV,OAAf,EAAwBK,aAAxB,CAAP,CAAP;AACD,CAtCM;;;AAuCPN,SAAS,CAACoB,YAAV,GAAyB;AACvBf,EAAAA,mBAAmB,EAAEgB;AADE,CAAzB;;AAGArB,SAAS,CAACsB,aAAV,GAA0B;AAAA,MAAGrB,OAAH,SAAGA,OAAH;AAAA,SACxBA,OAAO,KAAKM,uBAAWgB,eAAvB,IACAtB,OAAO,KAAKM,uBAAWiB,UADvB,IAEAvB,OAAO,KAAKM,uBAAWC,UAFvB,IAGAP,OAAO,KAAKM,uBAAWkB,aAHvB,IAIAxB,OAAO,KAAKM,uBAAWmB,aAJvB,IAKAzB,OAAO,KAAKM,uBAAWoB,cALvB,IAMA1B,OAAO,KAAKM,uBAAWqB,YANvB,IAOA3B,OAAO,KAAKM,uBAAWW,eAPvB,IAQAjB,OAAO,KAAKM,uBAAWsB,eATC;AAAA,CAA1B;;eAUe7B,S","sourcesContent":["import React from 'react';\n\nimport callErrors from '@ringcentral-integration/commons/modules/Call/callErrors';\n\nimport FormattedMessage from '../../FormattedMessage';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype CallAlertProps = {\n  onAreaCodeLinkClick?: (...args: any[]) => any;\n  message: {\n    id: string;\n    message: string;\n    payload?: object;\n  };\n  brand: object;\n  currentLocale: string;\n};\nexport const CallAlert: React.SFC<CallAlertProps> = ({\n  message: { id, message, payload },\n  brand,\n  onAreaCodeLinkClick,\n  currentLocale,\n}) => {\n  if (message === callErrors.noAreaCode) {\n    const areaCode = i18n.getString('areaCode', currentLocale);\n    const areaCodeLink = onAreaCodeLinkClick ? (\n      <a\n        className={styles.link}\n        onClick={(e) => {\n          e.preventDefault();\n          onAreaCodeLinkClick({ alertId: id });\n        }}\n        data-sign=\"setAreaCode\"\n      >\n        {areaCode}\n      </a>\n    ) : (\n      areaCode\n    );\n    return (\n      <FormattedMessage\n        message={i18n.getString(message, currentLocale)}\n        values={{ areaCodeLink }}\n      />\n    );\n  }\n  if (message === callErrors.noInternational) {\n    return (\n      <FormattedMessage\n        message={i18n.getString(message, currentLocale)}\n        values={{ brand: brand.name }}\n      />\n    );\n  }\n  return <span>{i18n.getString(message, currentLocale)}</span>;\n};\nCallAlert.defaultProps = {\n  onAreaCodeLinkClick: undefined,\n};\nCallAlert.handleMessage = ({ message }) =>\n  message === callErrors.emergencyNumber ||\n  message === callErrors.noToNumber ||\n  message === callErrors.noAreaCode ||\n  message === callErrors.connectFailed ||\n  message === callErrors.internalError ||\n  message === callErrors.notAnExtension ||\n  message === callErrors.networkError ||\n  message === callErrors.noInternational ||\n  message === callErrors.noRingoutEnable;\nexport default CallAlert;\n"],"file":"index.js"}