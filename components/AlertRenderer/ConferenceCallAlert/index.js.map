{"version":3,"sources":["components/AlertRenderer/ConferenceCallAlert/index.tsx"],"names":["ConferenceAlert","props","msg","i18n","getString","message","currentLocale","handleMessage","conferenceCallErrors","bringInFailed","makeConferenceFailed","terminateConferenceFailed","removeFromConferenceFailed","callIsRecording"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;;;AAQA,IAAMA,eAAgD,GAAG,SAAnDA,eAAmD,CAACC,KAAD,EAAW;AAClE,MAAMC,GAAG,GAAGC,iBAAKC,SAAL,CAAeH,KAAK,CAACI,OAAN,CAAcA,OAA7B,EAAsCJ,KAAK,CAACK,aAA5C,CAAZ;;AACA,sBAAO,8CAAOJ,GAAP,CAAP;AACD,CAHD;;AAIAF,eAAe,CAACO,aAAhB,GAAgC;AAAA,MAAGF,OAAH,QAAGA,OAAH;AAAA,SAC9B,qBAASA,OAAT,EAAkB,CAChBG,iCAAqBC,aADL,EAEhBD,iCAAqBE,oBAFL,EAGhBF,iCAAqBG,yBAHL,EAIhBH,iCAAqBI,0BAJL,EAKhBJ,iCAAqBK,eALL,CAAlB,CAD8B;AAAA,CAAhC;;eAQeb,e","sourcesContent":["import React from 'react';\n\nimport { contains } from 'ramda';\n\nimport conferenceCallErrors from '@ringcentral-integration/commons/modules/ConferenceCall/conferenceCallErrors';\n\nimport i18n from './i18n';\n\ntype ConferenceAlertProps = {\n  currentLocale: string;\n  message: {\n    message: string;\n  };\n};\nconst ConferenceAlert: React.SFC<ConferenceAlertProps> = (props) => {\n  const msg = i18n.getString(props.message.message, props.currentLocale);\n  return <span>{msg}</span>;\n};\nConferenceAlert.handleMessage = ({ message }) =>\n  contains(message, [\n    conferenceCallErrors.bringInFailed,\n    conferenceCallErrors.makeConferenceFailed,\n    conferenceCallErrors.terminateConferenceFailed,\n    conferenceCallErrors.removeFromConferenceFailed,\n    conferenceCallErrors.callIsRecording,\n  ]);\nexport default ConferenceAlert;\n"],"file":"index.js"}