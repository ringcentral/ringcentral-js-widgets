{"version":3,"file":"index.js","names":["_react","_interopRequireDefault","require","_webphoneErrors","_webphoneMessages","_FormattedMessage","_i18n","obj","__esModule","webphoneMessageList","webphoneErrors","connectFailed","toVoiceMailError","connected","muteError","holdError","flipError","recordError","pauseRecordError","recordDisabled","transferError","noOutboundCallWithoutDL","checkDLError","browserNotSupported","sipProvisionError","webphoneCountOverLimit","webphoneForbidden","requestTimeout","serverTimeout","internalServerError","unknownError","provisionUpdate","serverConnecting","webphoneMessages","parked","WebphoneAlert","props","message","view","createElement","i18n","getString","currentLocale","_props$message$payloa","payload","errorCode","values","_props$message$payloa2","statusCode","_props$message$payloa3","isConnecting","brandName","brand","name","_props$message$payloa4","parkedNumber","handleMessage","_ref","filter","err","length","_default","exports"],"sources":["components/AlertRenderer/WebphoneAlert/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport webphoneErrors from '@ringcentral-integration/commons/modules/Webphone/webphoneErrors';\nimport webphoneMessages from '@ringcentral-integration/commons/modules/Webphone/webphoneMessages';\n\nimport FormattedMessage from '../../FormattedMessage';\nimport i18n from './i18n';\n\nconst webphoneMessageList = [\n  webphoneErrors.connectFailed,\n  webphoneErrors.toVoiceMailError,\n  webphoneErrors.connected,\n  webphoneErrors.muteError,\n  webphoneErrors.holdError,\n  webphoneErrors.flipError,\n  webphoneErrors.recordError,\n  webphoneErrors.pauseRecordError,\n  webphoneErrors.recordDisabled,\n  webphoneErrors.transferError,\n  webphoneErrors.noOutboundCallWithoutDL,\n  webphoneErrors.checkDLError,\n  webphoneErrors.browserNotSupported,\n  webphoneErrors.sipProvisionError,\n  webphoneErrors.webphoneCountOverLimit,\n  webphoneErrors.webphoneForbidden,\n  webphoneErrors.requestTimeout,\n  webphoneErrors.serverTimeout,\n  webphoneErrors.internalServerError,\n  webphoneErrors.unknownError,\n  webphoneErrors.provisionUpdate,\n  webphoneErrors.serverConnecting,\n  webphoneMessages.parked,\n];\ntype WebphoneAlertProps = {\n  currentLocale: string;\n  brand: object;\n  message: {\n    message: string;\n  };\n};\nconst WebphoneAlert: React.SFC<WebphoneAlertProps> = (props) => {\n  const { message } = props.message;\n  let view = <span>{i18n.getString(message, props.currentLocale)}</span>;\n  // Handle call record error\n  if (message === webphoneErrors.recordError) {\n    // @ts-expect-error TS(2339): Property 'payload' does not exist on type '{ messa... Remove this comment to see the full error message\n    const { payload: { errorCode } = {} } = props.message;\n    view = (\n      <FormattedMessage\n        message={i18n.getString(message, props.currentLocale)}\n        values={{ errorCode }}\n      />\n    );\n  } else if (\n    message === webphoneErrors.sipProvisionError ||\n    message === webphoneErrors.webphoneForbidden ||\n    message === webphoneErrors.requestTimeout ||\n    message === webphoneErrors.serverTimeout ||\n    message === webphoneErrors.internalServerError ||\n    message === webphoneErrors.unknownError\n  ) {\n    // @ts-expect-error TS(2339): Property 'payload' does not exist on type '{ messa... Remove this comment to see the full error message\n    const { payload: { statusCode, isConnecting = false } = {} } =\n      props.message;\n    // sipProvisionError does not have statusCode\n    if (statusCode && isConnecting) {\n      view = (\n        <FormattedMessage\n          message={i18n.getString(\n            'registeringWithStatusCode',\n            props.currentLocale,\n          )}\n          // @ts-expect-error TS(2339): Property 'name' does not exist on type 'object'.\n          values={{ errorCode: statusCode, brandName: props.brand.name }}\n        />\n      );\n    } else if (statusCode) {\n      view = (\n        <FormattedMessage\n          message={i18n.getString('failWithStatusCode', props.currentLocale)}\n          // @ts-expect-error TS(2339): Property 'name' does not exist on type 'object'.\n          values={{ errorCode: statusCode, brandName: props.brand.name }}\n        />\n      );\n    } else if (isConnecting) {\n      view = (\n        <FormattedMessage\n          message={i18n.getString(\n            'registeringWithoutStatusCode',\n            props.currentLocale,\n          )}\n          // @ts-expect-error TS(2339): Property 'name' does not exist on type 'object'.\n          values={{ brandName: props.brand.name }}\n        />\n      );\n    } else {\n      view = (\n        <FormattedMessage\n          message={i18n.getString('failWithoutStatusCode', props.currentLocale)}\n          // @ts-expect-error TS(2339): Property 'name' does not exist on type 'object'.\n          values={{ brandName: props.brand.name }}\n        />\n      );\n    }\n  } else if (message === webphoneErrors.checkDLError) {\n    view = (\n      <FormattedMessage\n        message={i18n.getString(message, props.currentLocale)}\n        // @ts-expect-error TS(2339): Property 'name' does not exist on type 'object'.\n        values={{ brandName: props.brand.name }}\n      />\n    );\n  } else if (message === webphoneMessages.parked) {\n    // @ts-expect-error TS(2339): Property 'payload' does not exist on type '{ messa... Remove this comment to see the full error message\n    const { payload: { parkedNumber } = {} } = props.message;\n    view = (\n      <FormattedMessage\n        message={i18n.getString(message, props.currentLocale)}\n        values={{ parkedNumber }}\n      />\n    );\n  }\n  return view;\n};\n// @ts-expect-error TS(2339): Property 'handleMessage' does not exist on type 'S... Remove this comment to see the full error message\nWebphoneAlert.handleMessage = ({ message }: any) =>\n  webphoneMessageList.filter((err) => err === message).length > 0;\nexport default WebphoneAlert;\n"],"mappings":"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"}