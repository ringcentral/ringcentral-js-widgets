{"version":3,"sources":["components/AlertRenderer/MeetingAlert/index.tsx"],"names":["MeetingAlert","message","payload","currentLocale","application","msg","meetingStatus","insufficientPermissions","i18n","getString","permissionName","defaultProps","undefined","handleMessage","emptyTopic","noPassword","scheduledSuccess","updatedSuccess","meetingIsDeleted","internalError"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;;;AAYA,IAAMA,YAA0C,GAAG,SAA7CA,YAA6C,OAI7C;AAAA,0BAHJC,OAGI;AAAA,MAHOA,OAGP,gBAHOA,OAGP;AAAA,MAHgBC,OAGhB,gBAHgBA,OAGhB;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,WACI,QADJA,WACI;AACJ,MAAIC,GAAJ;;AACA,UAAQJ,OAAR;AACE,SAAKK,0BAAcC,uBAAnB;AACEF,MAAAA,GAAG,gBACD,gCAAC,4BAAD;AACE,QAAA,OAAO,EAAEG,iBAAKC,SAAL,CAAeR,OAAf,EAAwBE,aAAxB,CADX;AAEE,QAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAXA,WADM;AAENM,UAAAA,cAAc,EAAER,OAAO,CAACQ;AAFlB;AAFV,QADF;AASA;;AACF;AACEL,MAAAA,GAAG,GAAGG,iBAAKC,SAAL,CAAeR,OAAf,EAAwBE,aAAxB,CAAN;AACA;AAdJ;;AAgBA,sBAAO;AAAM,iBAAU;AAAhB,KAAiCE,GAAjC,CAAP;AACD,CAvBD;;AAwBAL,YAAY,CAACW,YAAb,GAA4B;AAC1BP,EAAAA,WAAW,EAAEQ;AADa,CAA5B;;AAGAZ,YAAY,CAACa,aAAb,GAA6B;AAAA,MAAGZ,OAAH,SAAGA,OAAH;AAAA,SAC3BA,OAAO,KAAKK,0BAAcQ,UAA1B,IACAb,OAAO,KAAKK,0BAAcS,UAD1B,IAEAd,OAAO,KAAKK,0BAAcC,uBAF1B,IAGAN,OAAO,KAAKK,0BAAcU,gBAH1B,IAIAf,OAAO,KAAKK,0BAAcW,cAJ1B,IAKAhB,OAAO,KAAKK,0BAAcY,gBAL1B,IAMAjB,OAAO,KAAKK,0BAAca,aAPC;AAAA,CAA7B;;eAQenB,Y","sourcesContent":["import React from 'react';\n\nimport meetingStatus from '@ringcentral-integration/commons/modules/Meeting/meetingStatus';\n\nimport FormattedMessage from '../../FormattedMessage';\nimport i18n from './i18n';\n\ntype MeetingAlertProps = {\n  currentLocale: string;\n  message: {\n    message: string;\n    payload?: {\n      permissionName?: string;\n    };\n  };\n  application?: string;\n};\nconst MeetingAlert: React.SFC<MeetingAlertProps> = ({\n  message: { message, payload },\n  currentLocale,\n  application,\n}) => {\n  let msg;\n  switch (message) {\n    case meetingStatus.insufficientPermissions:\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{\n            application,\n            permissionName: payload.permissionName,\n          }}\n        />\n      );\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return <span data-sign=\"meeting-alert\">{msg}</span>;\n};\nMeetingAlert.defaultProps = {\n  application: undefined,\n};\nMeetingAlert.handleMessage = ({ message }) =>\n  message === meetingStatus.emptyTopic ||\n  message === meetingStatus.noPassword ||\n  message === meetingStatus.insufficientPermissions ||\n  message === meetingStatus.scheduledSuccess ||\n  message === meetingStatus.updatedSuccess ||\n  message === meetingStatus.meetingIsDeleted ||\n  message === meetingStatus.internalError;\nexport default MeetingAlert;\n"],"file":"index.js"}