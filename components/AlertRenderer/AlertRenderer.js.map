{"version":3,"sources":["components/AlertRenderer/AlertRenderer.tsx"],"names":["AlertRenderer","alert","brand","rateLimiter","softphone","routerInteraction","callLogSection","regionSettingsUrl","callingSettingsUrl","onRegionSettingsLinkClick","alertId","push","dismiss","closeLogSection","onCallingSettingsLinkClick","message","AuthAlert","handleMessage","CallAlert","props","CallingSettingsAlert","name","brandConfig","callWithSoftphone","jupiterAppName","RegionSettingsAlert","MessageSenderAlert","MessageStoreAlert","RateExceededAlert","timestamp","throttleDuration","ConnectivityAlert","WebphoneAlert","MeetingAlert","appName","PermissionsAlert","ConferenceAlert","ConferenceCallAlert","AudioSettingsAlert","CallLogAlert","CallControlAlert","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport AudioSettingsAlert from './AudioSettingsAlert';\nimport AuthAlert from './AuthAlert';\nimport CallAlert from './CallAlert';\nimport CallControlAlert from './CallControlAlert';\nimport { CallingSettingsAlert } from './CallingSettingsAlert';\nimport CallLogAlert from './CallLogAlert';\nimport ConferenceAlert from './ConferenceAlert';\nimport ConferenceCallAlert from './ConferenceCallAlert';\nimport ConnectivityAlert from './ConnectivityAlert';\nimport MeetingAlert from './MeetingAlert';\nimport MessageSenderAlert from './MessageSenderAlert';\nimport MessageStoreAlert from './MessageStoreAlert';\nimport { PermissionsAlert } from './PermissionsAlert';\nimport RateExceededAlert from './RateExceededAlert';\nimport { RegionSettingsAlert } from './RegionSettingsAlert';\nimport WebphoneAlert from './WebphoneAlert';\n\nexport const AlertRenderer = ({\n  alert,\n  brand,\n  rateLimiter,\n  softphone,\n  /** router interaction when need push `regionSettingsUrl` or `callingSettingsUrl` */\n  routerInteraction,\n  callLogSection,\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n}) => {\n  // TODO: refactor this like modalUI.registerRenderer.\n  const onRegionSettingsLinkClick = ({ alertId = 'default' } = {}) => {\n    routerInteraction.push(regionSettingsUrl);\n    if (alertId) {\n      alert.dismiss(alertId);\n    }\n    if (callLogSection) {\n      callLogSection.closeLogSection();\n    }\n  };\n  const onCallingSettingsLinkClick = () => {\n    routerInteraction.push(callingSettingsUrl);\n  };\n  return (message) => {\n    if (AuthAlert.handleMessage(message)) {\n      return AuthAlert;\n    }\n    if (CallAlert.handleMessage(message)) {\n      return (props) => (\n        <CallAlert\n          {...props}\n          brand={brand}\n          onAreaCodeLinkClick={onRegionSettingsLinkClick}\n        />\n      );\n    }\n    if (CallingSettingsAlert.handleMessage(message)) {\n      return (props) => (\n        <CallingSettingsAlert\n          {...props}\n          brandName={brand.name}\n          softphoneAppName={brand.brandConfig.callWithSoftphone?.name}\n          jupiterAppName={softphone?.jupiterAppName}\n          onCallingSettingsLinkClick={onCallingSettingsLinkClick}\n        />\n      );\n    }\n\n    if (RegionSettingsAlert.handleMessage(message)) {\n      return (props) => (\n        <RegionSettingsAlert\n          {...props}\n          onRegionSettingsLinkClick={onRegionSettingsLinkClick}\n        />\n      );\n    }\n    if (MessageSenderAlert.handleMessage(message)) {\n      return (props) => (\n        <MessageSenderAlert\n          {...props}\n          brand={brand.name}\n          onAreaCodeLink={onRegionSettingsLinkClick}\n        />\n      );\n    }\n\n    if (MessageStoreAlert.handleMessage(message)) {\n      return MessageStoreAlert;\n    }\n\n    if (RateExceededAlert.handleMessage(message) && rateLimiter?.timestamp) {\n      return (props) => (\n        <RateExceededAlert\n          {...props}\n          timestamp={rateLimiter.timestamp}\n          duration={rateLimiter.throttleDuration}\n        />\n      );\n    }\n\n    if (ConnectivityAlert.handleMessage(message)) {\n      return ConnectivityAlert;\n    }\n\n    if (WebphoneAlert.handleMessage(message)) {\n      return (props) => <WebphoneAlert {...props} brand={brand} />;\n    }\n    if (MeetingAlert.handleMessage(message)) {\n      return (props) => <MeetingAlert {...props} application={brand.appName} />;\n    }\n    if (PermissionsAlert.handleMessage(message)) {\n      return (props) => (\n        <PermissionsAlert\n          {...props}\n          brand={brand.name}\n          application={brand.appName}\n        />\n      );\n    }\n\n    if (ConferenceAlert.handleMessage(message)) {\n      return ConferenceAlert;\n    }\n\n    if (ConferenceCallAlert.handleMessage(message)) {\n      return ConferenceCallAlert;\n    }\n\n    if (AudioSettingsAlert.handleMessage(message)) {\n      return (props) => (\n        <AudioSettingsAlert {...props} application={brand.appName} />\n      );\n    }\n\n    if (CallLogAlert.handleMessage(message)) {\n      return (props) => <CallLogAlert {...props} />;\n    }\n    if (CallControlAlert.handleMessage(message)) {\n      return (props) => <CallControlAlert {...props} />;\n    }\n\n    return undefined;\n  };\n};\n"],"file":"AlertRenderer.js"}