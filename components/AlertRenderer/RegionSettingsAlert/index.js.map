{"version":3,"sources":["components/AlertRenderer/RegionSettingsAlert/index.tsx"],"names":["RegionSettingsAlert","message","id","currentLocale","onRegionSettingsLinkClick","msg","regionSettingsMessages","dialingPlansChanged","regionSettings","i18n","getString","regionSettingsLink","styles","link","e","preventDefault","alertId","defaultProps","undefined","handleMessage","saveSuccess","areaCodeInvalid"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;;;AAUO,IAAMA,mBAAwD,GAAG,SAA3DA,mBAA2D,OAIlE;AAAA,0BAHJC,OAGI;AAAA,MAHOC,EAGP,gBAHOA,EAGP;AAAA,MAHWD,OAGX,gBAHWA,OAGX;AAAA,MAFJE,aAEI,QAFJA,aAEI;AAAA,MADJC,yBACI,QADJA,yBACI;AACJ,MAAIC,GAAJ;;AACA,UAAQJ,OAAR;AACE,SAAKK,+CAAuBC,mBAA5B;AACE;AACE,YAAMC,cAAc,GAAGC,iBAAKC,SAAL,CAAe,gBAAf,EAAiCP,aAAjC,CAAvB;;AACA,YAAMQ,kBAAkB,GAAGP,yBAAyB,gBAClD;AACE,UAAA,SAAS,EAAEQ,mBAAOC,IADpB;AAEE,UAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdA,YAAAA,CAAC,CAACC,cAAF;AACAX,YAAAA,yBAAyB,CAAC;AAAEY,cAAAA,OAAO,EAAEd;AAAX,aAAD,CAAzB;AACD;AALH,WAOGM,cAPH,CADkD,GAWlDA,cAXF;AAaAH,QAAAA,GAAG,gBACD,gCAAC,4BAAD;AACE,UAAA,OAAO,EAAEI,iBAAKC,SAAL,CAAeT,OAAf,EAAwBE,aAAxB,CADX;AAEE,UAAA,MAAM,EAAE;AAAEQ,YAAAA,kBAAkB,EAAlBA;AAAF;AAFV,UADF;AAMD;AACD;;AACF;AACEN,MAAAA,GAAG,GAAGI,iBAAKC,SAAL,CAAeT,OAAf,EAAwBE,aAAxB,CAAN;AACA;AA3BJ;;AA6BA,sBAAO,6CAAME,GAAN,CAAP;AACD,CApCM;;;AAqCPL,mBAAmB,CAACiB,YAApB,GAAmC;AACjCb,EAAAA,yBAAyB,EAAEc;AADM,CAAnC;;AAGAlB,mBAAmB,CAACmB,aAApB,GAAoC;AAAA,MAAGlB,OAAH,SAAGA,OAAH;AAAA,SAClCA,OAAO,KAAKK,+CAAuBc,WAAnC,IACAnB,OAAO,KAAKK,+CAAuBC,mBADnC,IAEAN,OAAO,KAAKK,+CAAuBe,eAHD;AAAA,CAApC;;eAIerB,mB","sourcesContent":["import React from 'react';\n\nimport { regionSettingsMessages } from '@ringcentral-integration/commons/modules/RegionSettings/regionSettingsMessages';\n\nimport FormattedMessage from '../../FormattedMessage';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype RegionSettingsAlertProps = {\n  message: {\n    id: string;\n    message: string;\n  };\n  currentLocale: string;\n  onRegionSettingsLinkClick?: (...args: any[]) => any;\n};\nexport const RegionSettingsAlert: React.SFC<RegionSettingsAlertProps> = ({\n  message: { id, message },\n  currentLocale,\n  onRegionSettingsLinkClick,\n}) => {\n  let msg;\n  switch (message) {\n    case regionSettingsMessages.dialingPlansChanged:\n      {\n        const regionSettings = i18n.getString('regionSettings', currentLocale);\n        const regionSettingsLink = onRegionSettingsLinkClick ? (\n          <a\n            className={styles.link}\n            onClick={(e) => {\n              e.preventDefault();\n              onRegionSettingsLinkClick({ alertId: id });\n            }}\n          >\n            {regionSettings}\n          </a>\n        ) : (\n          regionSettings\n        );\n        msg = (\n          <FormattedMessage\n            message={i18n.getString(message, currentLocale)}\n            values={{ regionSettingsLink }}\n          />\n        );\n      }\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return <div>{msg}</div>;\n};\nRegionSettingsAlert.defaultProps = {\n  onRegionSettingsLinkClick: undefined,\n};\nRegionSettingsAlert.handleMessage = ({ message }) =>\n  message === regionSettingsMessages.saveSuccess ||\n  message === regionSettingsMessages.dialingPlansChanged ||\n  message === regionSettingsMessages.areaCodeInvalid;\nexport default RegionSettingsAlert;\n"],"file":"index.js"}