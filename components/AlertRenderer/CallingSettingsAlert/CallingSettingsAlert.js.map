{"version":3,"file":"CallingSettingsAlert.js","names":["_react","_interopRequireDefault","require","_CallingSettings","_FormattedMessage","_i18n","obj","__esModule","CallingSettingsAlert","_ref","message","currentLocale","brandName","jupiterAppName","softphoneAppName","onCallingSettingsLinkClick","callingSettingsMessages","saveSuccess","saveSuccessWithSoftphone","webphonePermissionRemoved","emergencyCallingNotAvailable","disableEmergencyInJapan","saveSuccessWithJupiter","appName","createElement","i18n","getString","values","brand","permissionChanged","phoneNumberChanged","link","onClick","e","preventDefault","exports","handleMessage","_ref2"],"sources":["components/AlertRenderer/CallingSettingsAlert/CallingSettingsAlert.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { AlertItem } from '@ringcentral-integration/commons/modules/Alert';\nimport { callingSettingsMessages } from '@ringcentral-integration/commons/modules/CallingSettings';\n\nimport FormattedMessage from '../../FormattedMessage';\nimport type { HandleMessage } from '../HandleMessage.interface';\nimport i18n from './i18n';\n\nexport interface CallingSettingsAlertProps {\n  message: AlertItem;\n  currentLocale: string;\n  brandName: string;\n  jupiterAppName: string;\n  softphoneAppName: string;\n  onCallingSettingsLinkClick: () => void;\n}\n\nexport const CallingSettingsAlert: React.FC<CallingSettingsAlertProps> &\n  HandleMessage = ({\n  message: { message },\n  currentLocale,\n  brandName,\n  jupiterAppName,\n  softphoneAppName,\n  onCallingSettingsLinkClick,\n}) => {\n  switch (message) {\n    case callingSettingsMessages.saveSuccess:\n    case callingSettingsMessages.saveSuccessWithSoftphone:\n    case callingSettingsMessages.webphonePermissionRemoved:\n    case callingSettingsMessages.emergencyCallingNotAvailable:\n    case callingSettingsMessages.disableEmergencyInJapan:\n    case callingSettingsMessages.saveSuccessWithJupiter: {\n      let appName = brandName;\n      if (message === callingSettingsMessages.saveSuccessWithJupiter) {\n        appName = jupiterAppName;\n      } else if (message === callingSettingsMessages.saveSuccessWithSoftphone) {\n        appName = softphoneAppName;\n      }\n      return (\n        <FormattedMessage\n          message={i18n.getString(message)}\n          values={{ brand: appName }}\n        />\n      );\n    }\n    case callingSettingsMessages.permissionChanged:\n    case callingSettingsMessages.phoneNumberChanged: {\n      const link = onCallingSettingsLinkClick ? (\n        <a\n          onClick={(e) => {\n            e.preventDefault();\n            onCallingSettingsLinkClick();\n          }}\n        >\n          {i18n.getString('link', currentLocale)}\n        </a>\n      ) : (\n        i18n.getString('link', currentLocale)\n      );\n      return (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          // @ts-expect-error TS(2322): Type 'string | Element' is not assignable to type ... Remove this comment to see the full error message\n          values={{ link }}\n        />\n      );\n    }\n    default:\n      return null;\n  }\n};\n\nCallingSettingsAlert.handleMessage = ({ message }) =>\n  message === callingSettingsMessages.saveSuccess ||\n  message === callingSettingsMessages.saveSuccessWithSoftphone ||\n  message === callingSettingsMessages.permissionChanged ||\n  message === callingSettingsMessages.webphonePermissionRemoved ||\n  message === callingSettingsMessages.phoneNumberChanged ||\n  message === callingSettingsMessages.emergencyCallingNotAvailable ||\n  message === callingSettingsMessages.saveSuccessWithJupiter ||\n  message === callingSettingsMessages.disableEmergencyInJapan;\n"],"mappings":"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"}