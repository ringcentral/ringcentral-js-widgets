{"version":3,"sources":["components/AlertRenderer/CallingSettingsAlert/index.js"],"names":["CallingSettingsAlert","message","currentLocale","brandCode","brandName","shortBrandName","fullBrandName","onCallingSettingsLinkClick","callingSettingsMessages","saveSuccess","saveSuccessWithSoftphone","webphonePermissionRemoved","emergencyCallingNotAvailable","saveSuccessWithJupiter","appName","i18n","getString","brand","permissionChanged","phoneNumberChanged","link","e","preventDefault","propTypes","PropTypes","shape","string","isRequired","func","defaultProps","undefined","handleMessage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport callingSettingsMessages from '@ringcentral-integration/commons/modules/CallingSettings/callingSettingsMessages';\nimport {\n  getJupiterAppName,\n  getSoftphoneAppName,\n} from '../../CallingSettingsPanel';\nimport FormattedMessage from '../../FormattedMessage';\n\nimport i18n from './i18n';\n\nconst CallingSettingsAlert = ({\n  message: { message },\n  currentLocale,\n  brandCode,\n  brandName,\n  shortBrandName,\n  fullBrandName,\n  onCallingSettingsLinkClick,\n}) => {\n  switch (message) {\n    case callingSettingsMessages.saveSuccess:\n    case callingSettingsMessages.saveSuccessWithSoftphone:\n    case callingSettingsMessages.webphonePermissionRemoved:\n    case callingSettingsMessages.emergencyCallingNotAvailable:\n    case callingSettingsMessages.saveSuccessWithJupiter: {\n      let appName = brandName;\n      if (message === callingSettingsMessages.saveSuccessWithJupiter) {\n        appName = getJupiterAppName({\n          brandCode,\n          brandName,\n          currentLocale,\n          shortBrandName,\n          fullBrandName,\n        });\n      } else if (message === callingSettingsMessages.saveSuccessWithSoftphone) {\n        appName = getSoftphoneAppName({\n          brandCode,\n          brandName,\n          currentLocale,\n          shortBrandName,\n          fullBrandName,\n        });\n      }\n      return (\n        <FormattedMessage\n          message={i18n.getString(message)}\n          values={{ brand: appName }}\n        />\n      );\n    }\n    case callingSettingsMessages.permissionChanged:\n    case callingSettingsMessages.phoneNumberChanged: {\n      const link = onCallingSettingsLinkClick ? (\n        <a\n          onClick={(e) => {\n            e.preventDefault();\n            onCallingSettingsLinkClick();\n          }}\n        >\n          {i18n.getString('link', currentLocale)}\n        </a>\n      ) : (\n        i18n.getString('link', currentLocale)\n      );\n      return (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{ link }}\n        />\n      );\n    }\n    default:\n      return null;\n  }\n};\nCallingSettingsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  brandCode: PropTypes.string.isRequired,\n  brandName: PropTypes.string.isRequired,\n  shortBrandName: PropTypes.string,\n  fullBrandName: PropTypes.string,\n  onCallingSettingsLinkClick: PropTypes.func,\n};\nCallingSettingsAlert.defaultProps = {\n  onCallingSettingsLinkClick: undefined,\n};\nCallingSettingsAlert.handleMessage = ({ message }) =>\n  message === callingSettingsMessages.saveSuccess ||\n  message === callingSettingsMessages.saveSuccessWithSoftphone ||\n  message === callingSettingsMessages.permissionChanged ||\n  message === callingSettingsMessages.webphonePermissionRemoved ||\n  message === callingSettingsMessages.phoneNumberChanged ||\n  message === callingSettingsMessages.emergencyCallingNotAvailable ||\n  message === callingSettingsMessages.saveSuccessWithJupiter;\n\nexport default CallingSettingsAlert;\n"],"file":"index.js"}