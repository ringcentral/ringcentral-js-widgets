{"version":3,"sources":["components/PresenceDropdown/usePresenceItems.tsx"],"names":["usePresenceItems","onChange","currentLocale","userStatus","dndStatus","items","type","presenceStatus","available","selected","DndStatus","doNotAcceptAnyCalls","busy","offline","selectedItem","elements","map","item","key","takeAllCalls"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAGA;;;;;;AASO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,OAKF;AAAA,MAJ5BC,QAI4B,QAJ5BA,QAI4B;AAAA,MAH5BC,aAG4B,QAH5BA,aAG4B;AAAA,MAF5BC,UAE4B,QAF5BA,UAE4B;AAAA,MAD5BC,SAC4B,QAD5BA,SAC4B;AAC5B,MAAMC,KAA0B,GAAG,CACjC;AACEC,IAAAA,IAAI,EAAE,WADR;AAEEH,IAAAA,UAAU,EAAEI,+BAAeC,SAF7B;AAGEC,IAAAA,QAAQ,EACNN,UAAU,KAAKI,+BAAeC,SAA9B,IACAJ,SAAS,KAAKM,sBAAUC;AAL5B,GADiC,EAQjC;AACEL,IAAAA,IAAI,EAAE,MADR;AAEEH,IAAAA,UAAU,EAAEI,+BAAeK,IAF7B;AAGEH,IAAAA,QAAQ,EACNN,UAAU,KAAKI,+BAAeK,IAA9B,IACAR,SAAS,KAAKM,sBAAUC;AAL5B,GARiC,EAejC;AACEL,IAAAA,IAAI,EAAE,KADR;AAEEH,IAAAA,UAAU,EAAEI,+BAAeK,IAF7B;AAGER,IAAAA,SAAS,EAAEM,sBAAUC,mBAHvB;AAIEF,IAAAA,QAAQ,EAAEL,SAAS,KAAKM,sBAAUC;AAJpC,GAfiC,EAqBjC;AACEL,IAAAA,IAAI,EAAE,SADR;AAEEH,IAAAA,UAAU,EAAEI,+BAAeM,OAF7B;AAGEJ,IAAAA,QAAQ,EACNN,UAAU,KAAKI,+BAAeM,OAA9B,IACAT,SAAS,KAAKM,sBAAUC;AAL5B,GArBiC,CAAnC;AA6BA,MAAIG,YAAJ;AAEA,MAAMC,QAAQ,GAAGV,KAAK,CAACW,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP,EAAe;AACxC,QAAID,IAAI,CAACR,QAAT,EAAmB;AACjBK,MAAAA,YAAY,GAAGG,IAAf;AACD;;AACD,wBACE,gCAAC,0BAAD;AACE,MAAA,GAAG,EAAEC,GADP;AAEE,MAAA,SAAS,EAAER,sBAAUS,YAFvB;AAGE,MAAA,aAAa,EAAEjB,aAHjB;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMD,QAAQ,CAACgB,IAAI,CAACX,IAAN,CAAd;AAAA;AAJX,OAKMW,IALN,EADF;AASD,GAbgB,CAAjB;AAeA,SAAO;AACLH,IAAAA,YAAY,EAAZA,YADK;AAELC,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID,CAxDM","sourcesContent":["import React from 'react';\n\nimport { presenceStatus } from '@ringcentral-integration/commons/enums/presenceStatus.enum';\nimport DndStatus from '@ringcentral-integration/commons/modules/Presence/dndStatus';\nimport { RcPresenceType } from '@ringcentral/juno';\n\nimport { PresenceItem, PresenceItemProps } from '../PresenceItem';\n\ntype UsePresenceItemsParams = {\n  onChange: (type: RcPresenceType) => void;\n  currentLocale: string;\n  userStatus: unknown;\n  dndStatus: unknown;\n};\n\nexport const usePresenceItems = ({\n  onChange,\n  currentLocale,\n  userStatus,\n  dndStatus,\n}: UsePresenceItemsParams) => {\n  const items: PresenceItemProps[] = [\n    {\n      type: 'available',\n      userStatus: presenceStatus.available,\n      selected:\n        userStatus === presenceStatus.available &&\n        dndStatus !== DndStatus.doNotAcceptAnyCalls,\n    },\n    {\n      type: 'busy',\n      userStatus: presenceStatus.busy,\n      selected:\n        userStatus === presenceStatus.busy &&\n        dndStatus !== DndStatus.doNotAcceptAnyCalls,\n    },\n    {\n      type: 'DND',\n      userStatus: presenceStatus.busy,\n      dndStatus: DndStatus.doNotAcceptAnyCalls,\n      selected: dndStatus === DndStatus.doNotAcceptAnyCalls,\n    },\n    {\n      type: 'offline',\n      userStatus: presenceStatus.offline,\n      selected:\n        userStatus === presenceStatus.offline &&\n        dndStatus !== DndStatus.doNotAcceptAnyCalls,\n    },\n  ];\n  let selectedItem: PresenceItemProps | undefined;\n\n  const elements = items.map((item, key) => {\n    if (item.selected) {\n      selectedItem = item;\n    }\n    return (\n      <PresenceItem\n        key={key}\n        dndStatus={DndStatus.takeAllCalls}\n        currentLocale={currentLocale}\n        onClick={() => onChange(item.type)}\n        {...item}\n      />\n    );\n  });\n\n  return {\n    selectedItem,\n    elements,\n  };\n};\n"],"file":"usePresenceItems.js"}