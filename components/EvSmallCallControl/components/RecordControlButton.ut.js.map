{"version":3,"sources":["components/EvSmallCallControl/components/RecordControlButton.ut.tsx"],"names":["setup","currentLocale","isRecording","onRecord","onStopRecord","disablePauseRecord","onPauseRecord","CheckPauseRecordingTooltip","container","node","querySelector","expect","toBeTruthy","title","toBe"],"mappings":";;;;;;;;;AAAA;;AAGA;;AACA;;AAEA;;;;AAEA,SAASA,KAAT,OAOsC;AAAA,gCANpCC,aAMoC;AAAA,MANpCA,aAMoC,mCANpB,OAMoB;AAAA,8BALpCC,WAKoC;AAAA,MALpCA,WAKoC,iCALtB,IAKsB;AAAA,2BAJpCC,QAIoC;AAAA,MAJpCA,QAIoC,8BAJzB,YAAM,CAAE,CAIiB;AAAA,+BAHpCC,YAGoC;AAAA,MAHpCA,YAGoC,kCAHrB,YAAM,CAAE,CAGa;AAAA,mCAFpCC,kBAEoC;AAAA,MAFpCA,kBAEoC,sCAFf,IAEe;AAAA,gCADpCC,aACoC;AAAA,MADpCA,aACoC,mCADpB,YAAM,CAAE,CACY;AACpC,SAAO,kCACL,gCAAC,qBAAD,qBACE,gCAAC,qBAAD;AACE,IAAA,aAAa,EAAEL,aADjB;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,kBAAkB,EAAEC,kBALtB;AAME,IAAA,aAAa,EAAEC;AANjB,IADF,CADK,CAAP;AAYD;;AAEM,IAAMC,0BAA6C,GAAG,SAAhDA,0BAAgD,GAAM;AAAA,eAC3CP,KAAK,CAAC;AAAEK,IAAAA,kBAAkB,EAAE;AAAtB,GAAD,CADsC;AAAA,MACzDG,SADyD,UACzDA,SADyD;;AAEjE,MAAMC,IAAI,GAAGD,SAAS,CAACE,aAAV,CACX,8BADW,CAAb;AAGAC,EAAAA,MAAM,CAACF,IAAD,CAAN,CAAaG,UAAb;AACAD,EAAAA,MAAM,CAACF,IAAI,CAACI,KAAN,CAAN,CAAmBC,IAAnB,CAAwB,iBAAxB;AACD,CAPM","sourcesContent":["import React from 'react';\n\nimport { StepFunction } from '@ringcentral-integration/test-utils';\nimport { RcThemeProvider } from '@ringcentral/juno';\nimport { render } from '@testing-library/react';\n\nimport { RecordControlButton, RecordControlButtonProps } from '.';\n\nfunction setup({\n  currentLocale = 'en-US',\n  isRecording = true,\n  onRecord = () => {},\n  onStopRecord = () => {},\n  disablePauseRecord = true,\n  onPauseRecord = () => {},\n}: Partial<RecordControlButtonProps>) {\n  return render(\n    <RcThemeProvider>\n      <RecordControlButton\n        currentLocale={currentLocale}\n        isRecording={isRecording}\n        onRecord={onRecord}\n        onStopRecord={onStopRecord}\n        disablePauseRecord={disablePauseRecord}\n        onPauseRecord={onPauseRecord}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nexport const CheckPauseRecordingTooltip: StepFunction<any> = () => {\n  const { container } = setup({ disablePauseRecord: false });\n  const node = container.querySelector<HTMLButtonElement>(\n    '[data-sign=\"PauseRecording\"]',\n  );\n  expect(node).toBeTruthy;\n  expect(node.title).toBe('Pause recording');\n};\n"],"file":"RecordControlButton.ut.js"}