{"version":3,"sources":["components/SearchPanel/SearchPanel.tsx"],"names":["SearchPanel","placeholder","options","searchOption","currentLocale","renderListItem","renderList","classes","filter","setFilter","SelectListContext","scrollElmRef","filteredOptions","option","styles","root","searchInput","i18n","getString","startAdornment","Search","event","target","value","searchResults","searchResult","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;AAKA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAiBO,IAAMA,WAAgD,GAAG,SAAnDA,WAAmD,OAQ1D;AAAA,MAPJC,WAOI,QAPJA,WAOI;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,OACI,QADJA,OACI;;AAAA,kBACwB,qBAAS,EAAT,CADxB;AAAA;AAAA,MACGC,MADH;AAAA,MACWC,SADX;;AAAA,oBAEqB,uBAAWC,2BAAX,CAFrB;AAAA,MAEIC,YAFJ,eAEIA,YAFJ;;AAIJ,MAAMC,eAAe,GAAGJ,MAAM,GAC1BN,OAAO,CAACM,MAAR,CAAe,UAACK,MAAD;AAAA,WAAYV,YAAY,CAACU,MAAD,EAASL,MAAT,CAAxB;AAAA,GAAf,CAD0B,GAE1BN,OAFJ;AAGA,sBACE;AAAK,IAAA,SAAS,EAAE,4BAAWY,mBAAOC,IAAlB,EAAwBR,OAAO,CAACQ,IAAhC;AAAhB,kBACE;AAAK,IAAA,SAAS,EAAE,4BAAWD,mBAAOE,WAAlB,EAA+BT,OAAO,CAACS,WAAvC;AAAhB,KACG,CAACR,MAAD;AAAA;AAAa;AACZ;AAAM,IAAA,SAAS,EAAE,4BAAWM,mBAAOb,WAAlB,EAA+BM,OAAO,CAACN,WAAvC;AAAjB,KACGA,WAAW,IAAIgB,iBAAKC,SAAL,CAAe,QAAf,EAAyBd,aAAzB,CADlB,CAFJ,eAME,gCAAC,sBAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,MAAM,EAAC,OAJT;AAKE,IAAA,KAAK,EAAEI,MALT;AAME,IAAA,UAAU,EAAE;AACVW,MAAAA,cAAc,eACZ,gCAAC,YAAD;AAAQ,QAAA,MAAM,EAAEC,kBAAhB;AAAwB,QAAA,IAAI,EAAC,OAA7B;AAAqC,QAAA,KAAK,EAAC;AAA3C;AAFQ,KANd;AAWE,iBAAU,WAXZ;AAYE,IAAA,QAAQ,EAAE,kBACRC,KADQ,EAEL;AACH,UAAIA,KAAK,CAACC,MAAV,EAAkB;AAChBb,QAAAA,SAAS,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,EAAvB,CAAT;AACD;AACF;AAlBH,IANF,CADF,eA4BE;AACE,IAAA,SAAS,EAAE,4BAAWT,mBAAOU,aAAlB,EAAiCjB,OAAO,CAACiB,aAAzC,CADb;AAEE,IAAA,GAAG,EAAEb;AAFP,KAIGL,UAAU,GACTA,UAAU,EADD,gBAGT,gCAAC,0BAAD;AACE,IAAA,OAAO,EAAEJ,OADX;AAEE,IAAA,eAAe,EAAEU,eAFnB;AAGE,IAAA,MAAM,EAAEJ,MAHV;AAIE,IAAA,aAAa,EAAEJ,aAJjB;AAKE,IAAA,cAAc,EAAEC,cALlB;AAME,IAAA,OAAO,EAAEE,OAAO,CAACkB;AANnB,IAPJ,CA5BF,CADF;AAgDD,CA/DM;;;AAiEPzB,WAAW,CAAC0B,YAAZ,GAA2B;AACzBnB,EAAAA,OAAO,EAAE;AADgB,CAA3B","sourcesContent":["import React, { FunctionComponent, useContext, useState } from 'react';\n\nimport classNames from 'classnames';\n\nimport { RcIcon, RcTextField } from '@ringcentral/juno';\nimport { Search } from '@ringcentral/juno/icon';\n\nimport { SelectListContext } from '../../contexts';\nimport i18n from './i18n';\nimport { SearchResult, SearchResultProps } from './SearchResult';\nimport styles from './styles.scss';\n\ninterface SearchPanelClasses {\n  root?: string;\n  searchInput?: string;\n  searchResults?: string;\n  placeholder?: string;\n  searchResult?: SearchResultProps['classes'];\n}\n\nexport type SearchPanelProps = {\n  placeholder?: string;\n  classes?: SearchPanelClasses;\n  searchOption(option: object, filter: string): boolean;\n  renderList?(): React.ReactNode;\n} & Omit<SearchResultProps, 'classes' | 'filter' | 'filteredOptions'>;\n\nexport const SearchPanel: FunctionComponent<SearchPanelProps> = ({\n  placeholder,\n  options,\n  searchOption,\n  currentLocale,\n  renderListItem,\n  renderList,\n  classes,\n}) => {\n  const [filter, setFilter] = useState('');\n  const { scrollElmRef } = useContext(SelectListContext);\n\n  const filteredOptions = filter\n    ? options.filter((option) => searchOption(option, filter))\n    : options;\n  return (\n    <div className={classNames(styles.root, classes.root)}>\n      <div className={classNames(styles.searchInput, classes.searchInput)}>\n        {!filter && ( // IE polyfill\n          <span className={classNames(styles.placeholder, classes.placeholder)}>\n            {placeholder || i18n.getString('search', currentLocale)}\n          </span>\n        )}\n        <RcTextField\n          size=\"small\"\n          fullWidth\n          variant=\"outline\"\n          radius=\"round\"\n          value={filter}\n          InputProps={{\n            startAdornment: (\n              <RcIcon symbol={Search} size=\"small\" color=\"neutral.f04\" />\n            ),\n          }}\n          data-sign=\"searchBar\"\n          onChange={(\n            event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n          ) => {\n            if (event.target) {\n              setFilter(event.target.value || '');\n            }\n          }}\n        />\n      </div>\n      <div\n        className={classNames(styles.searchResults, classes.searchResults)}\n        ref={scrollElmRef}\n      >\n        {renderList ? (\n          renderList()\n        ) : (\n          <SearchResult\n            options={options}\n            filteredOptions={filteredOptions}\n            filter={filter}\n            currentLocale={currentLocale}\n            renderListItem={renderListItem}\n            classes={classes.searchResult}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nSearchPanel.defaultProps = {\n  classes: {},\n};\n"],"file":"SearchPanel.js"}