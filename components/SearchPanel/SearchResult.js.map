{"version":3,"sources":["components/SearchPanel/SearchResult.tsx"],"names":["SearchResult","options","filteredOptions","filter","currentLocale","renderListItem","classes","tipWhenNoOptions","noResultMessage","i18n","getString","length","root","map","option","index","noResult","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AAIA;;;;AAkBO,IAAMA,YAAkD,GAAG,SAArDA,YAAqD,OAQ5D;AAAA,MAPJC,OAOI,QAPJA,OAOI;AAAA,MANJC,eAMI,QANJA,eAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,gBACI,QADJA,gBACI;;AACJ,MAAMC,eAAe,GAAGC,iBAAKC,SAAL,CAAe,kBAAf,EAAmCN,aAAnC,CAAxB;;AACA,sBACE,kEACGH,OAAO,CAACU,MAAR,gBACC;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACM,IAAxB;AAA8B,iBAAU;AAAxC,KACGV,eAAe,CAACS,MAAhB,GAAyB,CAAzB,gBACC,gCAAC,YAAD,QACGT,eAAe,CAACW,GAAhB,CAAoB,UAACC,MAAD,EAASC,KAAT;AAAA,WACnBV,cAAc,CAAC;AAAES,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,KAAK,EAALA;AAAV,KAAD,CADK;AAAA,GAApB,CADH,CADD,gBAOC;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU;AAAxB,eACMR,eADN,gBAC0BL,MAD1B,QARJ,CADD,GAeCI,gBAAgB,IAAI,IAhBxB,CADF;AAqBD,CA/BM;;;AAiCPP,YAAY,CAACiB,YAAb,GAA4B;AAC1BZ,EAAAA,cAD0B,4BACT,CAAE,CADO;AAE1BC,EAAAA,OAAO,EAAE,EAFiB;AAG1BC,EAAAA,gBAAgB,EAAE;AAHQ,CAA5B","sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport { RcList } from '@ringcentral/juno';\n\nimport i18n from './i18n';\n\nexport interface SearchResultProps {\n  filter: string;\n  filteredOptions: object[];\n  options: object[];\n  renderListItem?(params: {\n    option: object;\n    index: number;\n  }): React.ReactNode | void;\n  currentLocale: string;\n  tipWhenNoOptions?: string;\n  classes?: {\n    root?: string;\n    noResult?: string;\n  };\n}\n\nexport const SearchResult: FunctionComponent<SearchResultProps> = ({\n  options,\n  filteredOptions,\n  filter,\n  currentLocale,\n  renderListItem,\n  classes,\n  tipWhenNoOptions,\n}) => {\n  const noResultMessage = i18n.getString('noResultFoundFor', currentLocale);\n  return (\n    <>\n      {options.length ? (\n        <div className={classes.root} data-sign=\"searchResult\">\n          {filteredOptions.length > 0 ? (\n            <RcList>\n              {filteredOptions.map((option, index) =>\n                renderListItem({ option, index }),\n              )}\n            </RcList>\n          ) : (\n            <div className={classes.noResult}>\n              {`${noResultMessage} \"${filter}\"`}\n            </div>\n          )}\n        </div>\n      ) : (\n        tipWhenNoOptions || null\n      )}\n    </>\n  );\n};\n\nSearchResult.defaultProps = {\n  renderListItem() {},\n  classes: {},\n  tipWhenNoOptions: '',\n};\n"],"file":"SearchResult.js"}