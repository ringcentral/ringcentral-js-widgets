{"version":3,"sources":["components/CallHistoryPanel/CallHistoryActions/MenuButton.tsx"],"names":["MenuButton","icon","label","disabled","subMenu","dataSign","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","renderMenuItem","action","menuIcon","map","Boolean"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYO,IAAMA,UAA8C,gBAAG,iBAC5D,gBAAkD;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAChB,qBAAS,IAAT,CADgB;AAAA;AAAA,MACzCC,QADyC;AAAA,MAC/BC,WAD+B;;AAGhD,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgB;AAClCF,IAAAA,WAAW,CAACE,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAMK,cAAc,GAAG,SAAjBA,cAAiB,QAOA;AAAA,QANrBX,IAMqB,SANrBA,IAMqB;AAAA,QALrBC,KAKqB,SALrBA,KAKqB;AAAA,QAJrBC,QAIqB,SAJrBA,QAIqB;AAAA,QAHrBU,MAGqB,SAHrBA,MAGqB;AAAA,QAFrBT,OAEqB,SAFrBA,OAEqB;AAAA,QADrBC,QACqB,SADrBA,QACqB;;AACrB,QAAMS,QAAQ,GAAGb,IAAI,iBAAI,gCAAC,YAAD;AAAQ,MAAA,MAAM,EAAEA,IAAhB;AAAsB,MAAA,IAAI,EAAC;AAA3B,MAAzB;;AAEA,QAAIY,MAAJ,EAAY;AACV,0BACE,gCAAC,oBAAD;AACE,QAAA,OAAO,EAAEA,MADX;AAEE,QAAA,IAAI,EAAEC,QAFR;AAGE,QAAA,GAAG,EAAEZ,KAHP;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,qBAAWE;AALb,SAOGH,KAPH,CADF;AAWD;;AAED,QAAIE,OAAJ,EAAa;AACX,0BACE,gCAAC,kBAAD;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,IAAI,EAAEY,QAFR;AAGE,QAAA,GAAG,EAAEZ,KAHP;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,qBAAWE;AALb,SAOGD,OAAO,CAACW,GAAR,CAAYH,cAAZ,CAPH,CADF;AAWD;AACF,GArCD;;AAuCA,sBACE,+EACE,gCAAC,wBAAD;AACE,IAAA,OAAO,EAAEJ,WADX;AAEE,IAAA,MAAM,EAAEP,IAFV;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,QAAQ,EAAEE,QALZ;AAME,iBAAWE;AANb,IADF,eASE,gCAAC,YAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,WAAW,MAFb;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAEU,OAAO,CAACV,QAAD,CAJf;AAKE,IAAA,OAAO,EAAEK;AALX,KAOGP,OAAO,CAACW,GAAR,CAAYH,cAAZ,CAPH,CATF,CADF;AAqBD,CAxE2D,CAAvD","sourcesContent":["import React, { FunctionComponent, memo, useState } from 'react';\n\nimport {\n  RcIcon,\n  RcIconButton,\n  RcMenu,\n  RcMenuItem,\n  RcSubMenu,\n} from '@ringcentral/juno';\n\nimport { CallLogMenuItem } from '../CallHistoryPanel.interface';\n\nexport const MenuButton: FunctionComponent<CallLogMenuItem> = memo(\n  ({ icon, label, disabled, subMenu, dataSign }) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event: any) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const renderMenuItem = ({\n      icon,\n      label,\n      disabled,\n      action,\n      subMenu,\n      dataSign,\n    }: CallLogMenuItem) => {\n      const menuIcon = icon && <RcIcon symbol={icon} size=\"small\" />;\n\n      if (action) {\n        return (\n          <RcMenuItem\n            onClick={action}\n            icon={menuIcon}\n            key={label}\n            disabled={disabled}\n            data-sign={dataSign}\n          >\n            {label}\n          </RcMenuItem>\n        );\n      }\n\n      if (subMenu) {\n        return (\n          <RcSubMenu\n            title={label}\n            icon={menuIcon}\n            key={label}\n            disabled={disabled}\n            data-sign={dataSign}\n          >\n            {subMenu.map(renderMenuItem)}\n          </RcSubMenu>\n        );\n      }\n    };\n\n    return (\n      <>\n        <RcIconButton\n          onClick={handleClick}\n          symbol={icon}\n          size=\"medium\"\n          variant=\"plain\"\n          disabled={disabled}\n          data-sign={dataSign}\n        />\n        <RcMenu\n          anchorEl={anchorEl}\n          keepMounted\n          autoClose\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {subMenu.map(renderMenuItem)}\n        </RcMenu>\n      </>\n    );\n  },\n);\n"],"file":"MenuButton.js"}