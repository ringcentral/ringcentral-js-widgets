{"version":3,"sources":["components/CallHistoryPanel/CallHistoryPanel.tsx"],"names":["DATE_ITEM_HEIGHT","CALL_ITEM_HEIGHT","ROOT_NODE","id","height","isSticky","formatCallDate","timestamp","now","today","clone","startOf","yesterday","subtract","mTimestamp","isSame","format","formatCallTime","DateText","styled","div","StyledCallHistoryPanel","CallHistoryPanel","calls","currentLocale","getActionMenu","isWide","listScrollTop","changeListScrollTop","listRef","current","setScrollTop","tree","_tree","root","name","depth","children","forEach","call","startTime","callDate","callTime","callWithFormattedDate","includes","push","Object","keys","getChildren","node","map","childId","childNode","rowRenderer","style","i18n","getString","length","window","innerWidth","innerHeight","scrollTop","styles","empty","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react';\n\nimport moment from 'moment';\n\nimport { palette2, styled, typography } from '@ringcentral/juno';\n\nimport { CallHistoryItem } from './CallHistoryItem';\nimport { CallLog, CallLogMenu, CallsTree } from './CallHistoryPanel.interface';\nimport i18n from './i18n';\nimport { StickyVirtualizedList } from './StickyVirtualizedList';\nimport { RowRendererProps } from './StickyVirtualizedList/StickyVirtualizedList.interface';\nimport styles from './styles.scss';\n\nexport type CallHistoryPanelProps = {\n  calls: CallLog[];\n  currentLocale: string;\n  getActionMenu?: (call: CallLog) => CallLogMenu;\n  isWide?: boolean;\n  listScrollTop?: number;\n  changeListScrollTop?: (scrollTop: number) => void;\n};\n\nconst DATE_ITEM_HEIGHT = 32;\nconst CALL_ITEM_HEIGHT = 64; // ./CallHistoryItem/styles.scss .item\n\nconst ROOT_NODE = {\n  id: 'root',\n  height: DATE_ITEM_HEIGHT,\n  isSticky: true,\n};\n\nfunction formatCallDate(timestamp: number) {\n  const now = moment();\n  const today = now.clone().startOf('day');\n  const yesterday = now.clone().subtract(1, 'days').startOf('day');\n\n  const mTimestamp = moment(timestamp);\n  if (mTimestamp.isSame(today, 'd')) {\n    return 'today';\n  }\n  if (mTimestamp.isSame(yesterday, 'd')) {\n    return 'yesterday';\n  }\n  return mTimestamp.format('MM/DD/YYYY');\n}\n\nfunction formatCallTime(timestamp: number) {\n  return moment(timestamp).format('h:mm A');\n}\n\nconst DateText = styled.div`\n  ${typography('caption1')};\n\n  color: ${palette2('neutral', 'f06')};\n  text-align: center;\n  display: block;\n  height: ${DATE_ITEM_HEIGHT}px;\n  line-height: ${DATE_ITEM_HEIGHT}px;\n  background: ${palette2('neutral', 'b01')};\n  box-sizing: border-box;\n  border-bottom: 1px solid ${palette2('neutral', 'l02')};\n  position: sticky;\n  top: 0;\n  z-index: 2 !important;\n`;\n\nconst StyledCallHistoryPanel = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-top: 1px solid ${palette2('neutral', 'l02')};\n  background-color: ${palette2('neutral', 'b01')};\n  height: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const CallHistoryPanel: FunctionComponent<CallHistoryPanelProps> = ({\n  calls,\n  currentLocale,\n  getActionMenu,\n  isWide = true,\n  listScrollTop = 0,\n  changeListScrollTop = () => {},\n}) => {\n  const listRef = useRef(null);\n\n  useEffect(() => {\n    listRef.current?.setScrollTop(listScrollTop);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const tree = useMemo(() => {\n    const _tree: CallsTree = {\n      root: {\n        name: 'root',\n        depth: 0,\n        children: [],\n      },\n    };\n    calls.forEach((call: CallLog) => {\n      const { id, startTime } = call;\n\n      const callDate = formatCallDate(startTime);\n      const callTime = formatCallTime(startTime);\n      const callWithFormattedDate = {\n        ...call,\n        callDate,\n        callTime,\n      };\n\n      if (!_tree.root.children.includes(callDate)) {\n        _tree.root.children.push(callDate);\n      }\n\n      if (!Object.keys(_tree).includes(callDate)) {\n        _tree[callDate] = {\n          name: callDate,\n          children: [id],\n          depth: 1,\n        };\n      } else {\n        _tree[callDate].children.push(id);\n      }\n\n      _tree[id] = {\n        name: id,\n        depth: 2,\n        call: callWithFormattedDate,\n      };\n    });\n\n    return _tree;\n  }, [calls]);\n\n  const getChildren = useCallback(\n    (id: string) => {\n      const node = tree[id];\n\n      if (node.children) {\n        return node.children.map((childId: string) => {\n          const childNode = tree[childId];\n\n          let height = CALL_ITEM_HEIGHT;\n          if (childNode.depth === 1) {\n            height = DATE_ITEM_HEIGHT;\n          }\n\n          return {\n            id: childId,\n            height,\n            isSticky: childNode.depth === 1,\n          };\n        });\n      }\n    },\n    [tree],\n  );\n\n  const rowRenderer = useCallback(\n    ({ id, style }: RowRendererProps) => {\n      const node = tree[id];\n      if (node.children) {\n        return (\n          <DateText data-sign=\"dateText\" style={style} key={node.name}>\n            {i18n.getString(node.name, currentLocale)}\n          </DateText>\n        );\n      }\n      return (\n        <div data-sign=\"historyItem\" style={style} key={node.call.id}>\n          <CallHistoryItem\n            call={node.call}\n            actionMenu={getActionMenu(node.call)}\n            isWide={isWide}\n          />\n        </div>\n      );\n    },\n    [tree, getActionMenu, isWide, currentLocale],\n  );\n\n  return (\n    <StyledCallHistoryPanel>\n      {tree.root.children.length ? (\n        <StickyVirtualizedList\n          overscanRowCount={20}\n          root={ROOT_NODE}\n          getChildren={getChildren}\n          rowRenderer={rowRenderer}\n          defaultRowHeight={64}\n          width={window.innerWidth}\n          height={window.innerHeight}\n          onScroll={({ scrollTop }) => {\n            changeListScrollTop(scrollTop);\n          }}\n          ref={listRef}\n        />\n      ) : (\n        <div className={styles.empty}>\n          {i18n.getString('empty', currentLocale)}\n        </div>\n      )}\n    </StyledCallHistoryPanel>\n  );\n};\n\nCallHistoryPanel.defaultProps = {\n  calls: [],\n  getActionMenu: () => [],\n};\n"],"file":"CallHistoryPanel.js"}