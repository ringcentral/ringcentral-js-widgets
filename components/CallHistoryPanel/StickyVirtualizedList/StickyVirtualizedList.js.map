{"version":3,"file":"StickyVirtualizedList.js","names":["_react","_interopRequireDefault","require","_StickyVirtualizedList","e","__esModule","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_objectWithoutProperties","i","_objectWithoutPropertiesLoose","n","indexOf","propertyIsEnumerable","call","hasOwnProperty","_classCallCheck","a","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_get","Reflect","get","bind","p","_superPropBase","_getPrototypeOf","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","_isNativeReflectConstruct","s","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","StickyVirtualizedList","_React$PureComponent","_super","props","_this","nodes","getChildrenCache","rowRenderCache","rowRenderRange","structureChanged","elem","pendingScrollTop","treeToRender","onScroll","state","scrollTop","currNodePos","scrollTick","undefined","flattenTree","node","_this2","isFirstChild","isLastChild","parentIndex","context","totalHeight","index","height","defaultRowHeight","parentInfo","id","_node$isSticky","isSticky","_node$stickyTop","stickyTop","_node$zIndex","zIndex","rest","nodeInfo","top","depth","children","getChildren","isModelImmutable","oldChildren","every","child","getBranchChildrenIds","Array","isArray","_this3","arr","UNSAFE_componentWillMount","refreshCachedMetadata","storeRenderTree","treeDataUpdated","newProps","root","UNSAFE_componentWillReceiveProps","scrollIndex","scrollIndexIntoView","UNSAFE_componentWillUpdate","newState","getNodeIndex","nodeId","findIndex","getPreviousNodeId","getNextNodeId","isNodeVisible","includeObscured","isIndexVisible","inView","getParentPath","includes","isIndexInViewport","path","ancestor","isNodeInViewport","getNodeTop","getIndexTop","getScrollTop","setScrollTop","isNaN","setScrollTopAndClosestNode","scrollReasons","requested","scrollNodeIntoView","alignToTop","componentDidUpdate","prevProps","prevState","scrollReason","onRowsRendered","range","visibleStartInfo","visibleStart","visibleEndInfo","visibleEnd","overscanStartIndex","start","overscanStopIndex","end","startIndex","stopIndex","startNode","endNode","recomputeTree","forceUpdate","renderParentTree","getRenderRowRange","indexesToRender","Set","add","renderRoot","createElement","className","style","width","position","renderChildWithChildren","renderParentContainer","parent","renderChildren","getChildContainerStyle","concat","renderNode","getClientNodeStyle","getClientLeafNodeStyle","_this4","has","wrapAllLeafNodes","renderedRow","rowRenderer","overscanRowCount","nodeIndex","topDownOrder","currNode","reverse","forwardSearch","searchPos","backwardSearch","Math","min","max","_this5","scrollHeight","offsetHeight","pos","setState","_ref","target","scrollLeft","render","_this6","overflow","ref","React","PureComponent","exports","defaultProps"],"sources":["components/CallHistoryPanel/StickyVirtualizedList/StickyVirtualizedList.tsx"],"sourcesContent":["/* eslint-disable*/\n// Original Library: react-virtualized-sticky-tree\n// Ref: https://github.com/marchaos/react-virtualized-sticky-tree\nimport React, { CSSProperties } from 'react';\n\nimport {\n  Node,\n  scrollReasons,\n  ScrollReasons,\n  StickyVirtualizedListProps,\n  StickyVirtualizedListState,\n} from './StickyVirtualizedList.interface';\n\nexport class StickyVirtualizedList extends React.PureComponent<\n  StickyVirtualizedListProps,\n  StickyVirtualizedListState\n> {\n  static defaultProps = {\n    overscanRowCount: 10,\n    renderRoot: false,\n    wrapAllLeafNodes: false,\n    isModelImmutable: false,\n  };\n\n  nodes: Node[];\n\n  getChildrenCache: {\n    [key: string]: Node[];\n  };\n\n  rowRenderCache: {\n    [key: string]: JSX.Element;\n  };\n\n  rowRenderRange: {\n    start: number;\n    end: number;\n    visibleStart: number;\n    visibleEnd: number;\n  };\n  // @ts-expect-error TS(2564): Property 'structureChanged' has no initializer and... Remove this comment to see the full error message\n  structureChanged: boolean;\n  // @ts-expect-error TS(2564): Property 'elem' has no initializer and is not defi... Remove this comment to see the full error message\n  elem: HTMLElement;\n  // @ts-expect-error TS(2564): Property 'pendingScrollTop' has no initializer and... Remove this comment to see the full error message\n  pendingScrollTop: number;\n  // @ts-expect-error TS(2564): Property 'treeToRender' has no initializer and is ... Remove this comment to see the full error message\n  treeToRender: JSX.Element;\n\n  constructor(props: StickyVirtualizedListProps) {\n    super(props);\n    this.onScroll = this.onScroll.bind(this);\n\n    this.state = {\n      scrollTop: 0,\n      currNodePos: 0,\n      scrollTick: false,\n    };\n\n    this.nodes = [];\n    this.getChildrenCache = {};\n    this.rowRenderCache = {};\n    // @ts-expect-error TS(2322): Type 'undefined' is not assignable to type '{ star... Remove this comment to see the full error message\n    this.rowRenderRange = undefined;\n  }\n\n  flattenTree(\n    node: Node,\n    props = this.props,\n    nodes: Node[] = [],\n    isFirstChild = false,\n    isLastChild = false,\n    // @ts-expect-error TS(2322): Type 'undefined' is not assignable to type 'number... Remove this comment to see the full error message\n    parentIndex: number = undefined,\n    context = { totalHeight: 0 },\n  ) {\n    const index = nodes.length;\n    const height =\n      node.height !== undefined ? node.height : props.defaultRowHeight;\n\n    const parentInfo = nodes[parentIndex];\n\n    const { id, isSticky = false, stickyTop = 0, zIndex = 0, ...rest } = node;\n\n    const nodeInfo = {\n      id,\n      isSticky,\n      stickyTop,\n      zIndex,\n      ...rest,\n      top: context.totalHeight,\n      parentIndex,\n      parentInfo,\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      depth: parentIndex !== undefined ? parentInfo.depth + 1 : 0,\n      height,\n      index,\n      isFirstChild,\n      isLastChild,\n    };\n\n    // @ts-expect-error TS(2345): Argument of type '{ top: number; parentIndex: numb... Remove this comment to see the full error message\n    nodes.push(nodeInfo);\n\n    if (parentIndex !== undefined) {\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      parentInfo.children.push(index);\n    }\n\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    context.totalHeight += height;\n\n    // @ts-expect-error TS(2345): Argument of type '{ top: number; parentIndex: numb... Remove this comment to see the full error message\n    const children = props.getChildren(node.id, nodeInfo);\n\n    if (props.isModelImmutable) {\n      // If children is undefined, then it is probably a leaf node, so we will have to render this since we don't know if the node\n      // itself has changed.\n      const oldChildren = this.getChildrenCache[node.id];\n      if (children === undefined || oldChildren !== children) {\n        delete this.rowRenderCache[node.id];\n        this.getChildrenCache[node.id] = children;\n\n        // Check for structure changes...\n        if (\n          children &&\n          oldChildren &&\n          (children.length !== oldChildren.length ||\n            !children.every((child, i) => child.id === oldChildren[i].id))\n        ) {\n          this.structureChanged = true;\n          // We need to update the entire branch if the structure has changed.\n          this.getBranchChildrenIds(children).forEach(\n            (id) => delete this.rowRenderCache[id],\n          );\n        }\n      }\n    } else {\n      this.structureChanged = true;\n    }\n\n    if (Array.isArray(children)) {\n      nodeInfo.children = [];\n      for (let i = 0; i < children.length; i++) {\n        // Need to reset parentIndex here as we are recursive.\n        const child = children[i];\n        this.flattenTree(\n          child,\n          props,\n          nodes,\n          i === 0,\n          i === children.length - 1,\n          index,\n          context,\n        );\n      }\n    }\n\n    nodeInfo.totalHeight = context.totalHeight - nodeInfo.top;\n\n    return nodes;\n  }\n\n  getBranchChildrenIds(children: Node[], arr: string[] = []) {\n    if (!children) {\n      return arr;\n    }\n    children.forEach((child) => {\n      arr.push(child.id);\n      this.getBranchChildrenIds(this.getChildrenCache[child.id], arr);\n    });\n    return arr;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  UNSAFE_componentWillMount() {\n    this.refreshCachedMetadata(this.props);\n    this.storeRenderTree(this.props, this.state);\n  }\n\n  treeDataUpdated(newProps: StickyVirtualizedListProps) {\n    return (\n      newProps.root !== this.props.root ||\n      newProps.getChildren !== this.props.getChildren ||\n      newProps.defaultRowHeight !== this.props.defaultRowHeight\n    );\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  UNSAFE_componentWillReceiveProps(newProps: StickyVirtualizedListProps) {\n    // These two properties will change when the structure changes, so we need to re-build the tree when this happens.\n    if (this.treeDataUpdated(newProps)) {\n      this.refreshCachedMetadata(newProps);\n    }\n\n    if (newProps.scrollIndex !== undefined && newProps.scrollIndex >= 0) {\n      this.scrollIndexIntoView(newProps.scrollIndex);\n    }\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  UNSAFE_componentWillUpdate(\n    newProps: StickyVirtualizedListProps,\n    newState: StickyVirtualizedListState,\n  ) {\n    if (\n      newState.scrollTick === this.state.scrollTick ||\n      newState.currNodePos !== this.state.currNodePos\n    ) {\n      this.storeRenderTree(newProps, newState);\n    }\n  }\n\n  /**\n   * Returns the index of the node in a flat list tree (post-order traversal).\n   *\n   * @param nodeId The node index to get the index for.\n   * @returns {number}\n   */\n  getNodeIndex(nodeId: string) {\n    return this.nodes.findIndex((node) => node.id === nodeId);\n  }\n\n  /**\n   * Returns the node that appears higher than this node (either a parent, sibling or child of the sibling above).\n   * @param nodeId The node to get the previous node of.\n   * @returns {*}\n   */\n  getPreviousNodeId(nodeId: string) {\n    const index = this.getNodeIndex(nodeId);\n    if (index !== -1) {\n      const node = this.nodes[index - 1];\n      if (node) {\n        return node.id;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the node that appears lower than this node (sibling or sibling of the node's parent).\n   * @param nodeId The node to get the next node of.\n   * @returns {*}\n   */\n  getNextNodeId(nodeId: string) {\n    const index = this.getNodeIndex(nodeId);\n    if (index !== -1) {\n      const node = this.nodes[index + 1];\n      if (node) {\n        return node.id;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns true if the node is completely visible and is not obscured.\n   * This will return false when the node is partially obscured.\n   *\n   * @param nodeId The id of the node to check\n   * @param includeObscured if true, this method will return true for partially visible nodes.\n   * @returns {boolean}\n   */\n  isNodeVisible(nodeId: string, includeObscured = false) {\n    return this.isIndexVisible(this.getNodeIndex(nodeId), includeObscured);\n  }\n\n  /**\n   * Returns true if the node is completely visible and is not obscured, unless includeObscured is specified.\n   * This will return false when the node is partially obscured, unless includeObscured is set to true.\n   *\n   * @param index The index of the node to check, generally retrieved via getNodeIndex()\n   * @param includeObscured if true, this method will return true for partially visible nodes.\n   * @returns {boolean}\n   */\n  isIndexVisible(index: number, includeObscured = false) {\n    let inView;\n    const node = this.nodes[index];\n\n    if (!node) {\n      return false;\n    }\n\n    if (\n      (node.isSticky && index === this.state.currNodePos) ||\n      this.getParentPath(this.state.currNodePos).includes(this.nodes[index])\n    ) {\n      return true;\n    }\n\n    if (!includeObscured) {\n      inView = this.isIndexInViewport(index);\n    } else {\n      inView =\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this.elem.scrollTop <= node.top + node.height - node.stickyTop &&\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this.elem.scrollTop + this.props.height >= node.top;\n    }\n    if (inView) {\n      const path = this.getParentPath(index, false);\n      // If this node is in view, new need to check to see if it is obscured by a sticky parent.\n      // Note that this does not handle weird scenarios where the node's parent has a sticky top which is less than other ancestors.\n      // Or any z-index weirdness.\n      for (let i = 0; i < path.length; i++) {\n        const ancestor = path[i];\n        // If the ancestor is sticky and the node is in view, then it must be stuck to the top\n        if (ancestor.isSticky) {\n          if (\n            !includeObscured &&\n            // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n            ancestor.stickyTop + ancestor.height >\n              // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n              node.top - this.elem.scrollTop\n          ) {\n            return false;\n          }\n          if (\n            includeObscured &&\n            // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n            ancestor.stickyTop + ancestor.height >\n              // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n              node.top + node.height - this.elem.scrollTop\n          ) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isNodeInViewport(nodeId: string) {\n    return this.isIndexInViewport(this.getNodeIndex(nodeId));\n  }\n\n  isIndexInViewport(index: number) {\n    let node = this.nodes[index];\n    if (!node || !this.elem) {\n      return false;\n    }\n    return (\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      this.elem.scrollTop <= node.top - node.stickyTop &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      this.elem.scrollTop + this.props.height >= node.top + node.height\n    );\n  }\n\n  getNodeTop(nodeId: string) {\n    return this.getIndexTop(this.getNodeIndex(nodeId));\n  }\n\n  getIndexTop(index: number) {\n    const node = this.nodes[index];\n    return node ? node.top : -1;\n  }\n\n  getScrollTop() {\n    return this.elem ? this.elem.scrollTop : -1;\n  }\n\n  setScrollTop(scrollTop: number) {\n    if (!isNaN(scrollTop)) {\n      this.setScrollTopAndClosestNode(\n        scrollTop,\n        this.state.currNodePos,\n        scrollReasons.requested,\n      );\n    }\n  }\n\n  scrollNodeIntoView(nodeId: string, alignToTop = true) {\n    this.scrollIndexIntoView(this.getNodeIndex(nodeId), alignToTop);\n  }\n\n  scrollIndexIntoView(index: number, alignToTop = true) {\n    let node = this.nodes[index];\n    if (node !== undefined) {\n      let scrollTop;\n      if (alignToTop) {\n        if (node.isSticky) {\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          scrollTop = node.top - node.stickyTop;\n        } else {\n          const path = this.getParentPath(index, false);\n          for (let i = 0; i < path.length; i++) {\n            const ancestor = path[i];\n            if (ancestor.isSticky) {\n              // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n              scrollTop = node.top - ancestor.stickyTop - ancestor.height;\n              break;\n            }\n          }\n          if (scrollTop === undefined) {\n            // Fallback if nothing is sticky.\n            scrollTop = node.top;\n          }\n        }\n      } else {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        scrollTop = node.top - this.props.height + node.height;\n      }\n      // @ts-expect-error TS(2345): Argument of type 'number | undefined' is not assig... Remove this comment to see the full error message\n      this.setScrollTop(scrollTop);\n    }\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  componentDidUpdate(\n    prevProps: StickyVirtualizedListProps,\n    prevState: StickyVirtualizedListState,\n  ) {\n    if (this.state.scrollReason === scrollReasons.requested) {\n      if (\n        this.state.scrollTop >= 0 &&\n        this.state.scrollTop !== this.elem.scrollTop\n      ) {\n        this.elem.scrollTop = this.state.scrollTop;\n      }\n    }\n\n    if (\n      this.props.onRowsRendered !== undefined &&\n      (prevState.currNodePos !== this.state.currNodePos ||\n        this.treeDataUpdated(prevProps))\n    ) {\n      const range = this.rowRenderRange;\n      const visibleStartInfo = this.nodes[range.visibleStart];\n      const visibleEndInfo = this.nodes[range.visibleEnd];\n\n      this.props.onRowsRendered({\n        overscanStartIndex: range.start,\n        overscanStopIndex: range.end,\n        startIndex: range.visibleStart,\n        stopIndex: range.visibleEnd,\n        startNode: visibleStartInfo && visibleStartInfo.id,\n        endNode: visibleEndInfo && visibleEndInfo.id,\n        nodes: this.nodes,\n      });\n    }\n  }\n\n  refreshCachedMetadata(props: StickyVirtualizedListProps) {\n    this.structureChanged = false;\n    this.nodes = this.flattenTree(props.root, props);\n\n    if (this.structureChanged) {\n      // Need to re-render as the curr node may not be in view\n      if (this.elem) {\n        // We need to find the the closest node to where we are scrolled to since the structure of the\n        // the tree probably has changed.\n        this.setScrollTopAndClosestNode(\n          this.pendingScrollTop || this.elem.scrollTop,\n          0,\n          scrollReasons.requested,\n        );\n      }\n    }\n  }\n\n  recomputeTree() {\n    if (this.props.root !== undefined && this.props.getChildren !== undefined) {\n      this.refreshCachedMetadata(this.props);\n      this.forceUpdate();\n    }\n  }\n\n  storeRenderTree(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n  ) {\n    this.treeToRender = this.renderParentTree(props, state);\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  forceUpdate() {\n    this.getChildrenCache = {};\n    this.rowRenderCache = {};\n    this.storeRenderTree(this.props, this.state);\n    super.forceUpdate();\n  }\n\n  renderParentTree(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n  ) {\n    this.rowRenderRange = this.getRenderRowRange(props, state);\n    const path = this.getParentPath(this.rowRenderRange.start);\n\n    // Parent nodes to the current range.\n    const indexesToRender: Set<number> = new Set();\n    for (let i = 0; i < path.length; i++) {\n      // @ts-expect-error TS(2345): Argument of type 'number | undefined' is not assig... Remove this comment to see the full error message\n      indexesToRender.add(path[i].index);\n    }\n\n    // The rest of the nodes within the range.\n    for (let i = this.rowRenderRange.start; i <= this.rowRenderRange.end; i++) {\n      // @ts-expect-error TS(2345): Argument of type 'number | undefined' is not assig... Remove this comment to see the full error message\n      indexesToRender.add(this.nodes[i].index);\n    }\n\n    if (this.props.renderRoot) {\n      return (\n        <div\n          className=\"rv-sticky-node-list\"\n          style={{ width: '100%', position: 'absolute', top: 0 }}\n        >\n          {this.renderChildWithChildren(\n            props,\n            state,\n            this.nodes[0],\n            0,\n            indexesToRender,\n          )}\n        </div>\n      );\n    }\n    return this.renderParentContainer(\n      props,\n      state,\n      this.nodes[0],\n      indexesToRender,\n    );\n  }\n\n  renderParentContainer(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n    parent: Node,\n    indexesToRender: Set<number>,\n  ) {\n    return (\n      <div\n        className=\"rv-sticky-node-list\"\n        style={{\n          position: 'absolute',\n          width: '100%',\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          height: parent.totalHeight - parent.height,\n        }}\n      >\n        {this.renderChildren(props, state, parent, indexesToRender)}\n      </div>\n    );\n  }\n\n  getChildContainerStyle(child: Node, top: number) {\n    return {\n      position: 'absolute',\n      top,\n      height: child.totalHeight,\n      width: '100%',\n    } as CSSProperties;\n  }\n\n  renderChildWithChildren(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n    child: Node,\n    top: number,\n    indexesToRender: Set<number>,\n  ) {\n    return (\n      <div\n        key={`rv-node-${child.id}`}\n        className=\"rv-sticky-parent-node\"\n        style={this.getChildContainerStyle(child, top)}\n      >\n        {this.renderNode(props, state, child, this.getClientNodeStyle(child))}\n        {this.renderParentContainer(props, state, child, indexesToRender)}\n      </div>\n    );\n  }\n\n  getClientNodeStyle(node: Node) {\n    const style: CSSProperties = { height: node.height };\n    if (node.isSticky) {\n      style.position = 'sticky';\n      style.top = node.stickyTop;\n      style.zIndex = node.zIndex;\n    }\n\n    return style;\n  }\n\n  getClientLeafNodeStyle(node: Node, top: number) {\n    return {\n      position: 'absolute',\n      top,\n      height: node.height,\n      width: '100%',\n    } as CSSProperties;\n  }\n\n  renderChildren(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n    parent: Node,\n    indexesToRender: Set<number>,\n  ) {\n    const nodes: JSX.Element[] = [];\n    let top = 0;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    parent.children.forEach((index) => {\n      const child = this.nodes[index];\n\n      if (indexesToRender.has(index)) {\n        if (child.children && child.children.length > 0) {\n          nodes.push(\n            this.renderChildWithChildren(\n              props,\n              state,\n              child,\n              top,\n              indexesToRender,\n            ),\n          );\n        } else {\n          // Sticky nodes will need a container so that their top is correct. The sticky node itself will have a top\n          // of the offset where it should stick, which would conflict with the absolute position of the node.\n          if (child.isSticky || props.wrapAllLeafNodes) {\n            nodes.push(\n              <div\n                className=\"rv-sticky-leaf-node\"\n                key={`rv-node-${child.id}`}\n                style={this.getChildContainerStyle(child, top)}\n              >\n                {this.renderNode(\n                  props,\n                  state,\n                  child,\n                  this.getClientNodeStyle(child),\n                )}\n              </div>,\n            );\n          } else {\n            nodes.push(\n              this.renderNode(\n                props,\n                state,\n                child,\n                this.getClientLeafNodeStyle(child, top),\n              ),\n            );\n          }\n        }\n      }\n      // Needs to be on the outside so that we add the the top even if\n      // this node is not visible\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      top += child.totalHeight;\n    });\n    return nodes;\n  }\n\n  renderNode(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n    nodeInfo: Node,\n    style?: CSSProperties,\n  ) {\n    // If they have not mutated their getChildren, then no need to call them again for the same structure.\n    if (props.isModelImmutable && this.rowRenderCache[nodeInfo.id]) {\n      return this.rowRenderCache[nodeInfo.id];\n    }\n\n    // @ts-expect-error TS(2322): Type 'CSSProperties | undefined' is not assignable... Remove this comment to see the full error message\n    const renderedRow = props.rowRenderer({ id: nodeInfo.id, nodeInfo, style });\n\n    if (props.isModelImmutable) {\n      this.rowRenderCache[nodeInfo.id] = renderedRow;\n    }\n\n    return renderedRow;\n  }\n\n  /**\n   * Determines the start and end number of the range to be rendered.\n   * @returns {{start: number, end: number}} Indexes within nodes\n   */\n  getRenderRowRange(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n  ) {\n    // Needs to be at least 1\n    const overscanRowCount =\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      props.overscanRowCount > 0 ? props.overscanRowCount : 1;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    let start = state.currNodePos - overscanRowCount;\n    if (start < 0) {\n      start = 0;\n    }\n    let visibleEnd = state.currNodePos + 1;\n\n    while (\n      this.nodes[visibleEnd] &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      this.nodes[visibleEnd].top < state.scrollTop + props.height\n    ) {\n      visibleEnd++;\n    }\n\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    let end = visibleEnd + overscanRowCount;\n    if (end > this.nodes.length - 1) {\n      end = this.nodes.length - 1;\n    }\n\n    return { start, end, visibleStart: state.currNodePos, visibleEnd };\n  }\n\n  getParentPath(nodeIndex: number, topDownOrder = true) {\n    let currNode = this.nodes[nodeIndex];\n    const path = [];\n    while (currNode) {\n      // @ts-expect-error TS(2538): Type 'undefined' cannot be used as an index type.\n      currNode = this.nodes[currNode.parentIndex];\n      if (currNode) {\n        path.push(currNode);\n      }\n    }\n    return topDownOrder ? path.reverse() : path;\n  }\n\n  forwardSearch(scrollTop: number, searchPos: number) {\n    const nodes = this.nodes;\n    for (let i = searchPos; i < nodes.length; i++) {\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      if (nodes[i].top >= scrollTop) {\n        return i;\n      }\n    }\n    return nodes.length - 1;\n  }\n\n  backwardSearch(scrollTop: number, searchPos: number) {\n    const nodes = this.nodes;\n    for (\n      let i = Math.min(searchPos, Math.max(nodes.length - 1, 0));\n      i >= 0;\n      i--\n    ) {\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      if (nodes[i].top <= scrollTop) {\n        return i;\n      }\n    }\n    return 0;\n  }\n\n  setScrollTopAndClosestNode(\n    scrollTop: number,\n    currNodePos: number,\n    scrollReason: ScrollReasons,\n  ) {\n    if (scrollTop === this.state.scrollTop) {\n      return;\n    }\n\n    if (scrollTop >= this.elem.scrollHeight - this.elem.offsetHeight) {\n      scrollTop = this.elem.scrollHeight - this.elem.offsetHeight;\n    }\n\n    let pos;\n    if (scrollTop > this.state.scrollTop || currNodePos === 0) {\n      pos = this.forwardSearch(scrollTop, currNodePos);\n    }\n    if (scrollTop < this.state.scrollTop && pos === undefined) {\n      pos = this.backwardSearch(scrollTop, currNodePos);\n    }\n\n    this.pendingScrollTop = scrollTop;\n    this.setState(\n      { currNodePos: pos ? pos : 0, scrollTop, scrollReason },\n      () => {\n        // @ts-expect-error TS(2322): Type 'undefined' is not assignable to type 'number... Remove this comment to see the full error message\n        this.pendingScrollTop = undefined;\n      },\n    );\n  }\n\n  onScroll(e: React.UIEvent<HTMLElement>) {\n    const { scrollTop, scrollLeft } = e.target as HTMLElement;\n\n    const scrollReason = this.state.scrollReason || scrollReasons.requested;\n\n    this.setScrollTopAndClosestNode(\n      scrollTop,\n      this.state.currNodePos,\n      scrollReason,\n    );\n\n    if (this.props.onScroll !== undefined) {\n      this.props.onScroll({ scrollTop, scrollLeft, scrollReason });\n    }\n\n    this.setState({\n      scrollTick: !this.state.scrollTick,\n      scrollReason: undefined,\n    });\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  render() {\n    let style = { overflow: 'auto', position: 'relative' } as CSSProperties;\n    if (this.props.width) {\n      style.width = this.props.width;\n    }\n    if (this.props.height) {\n      style.height = this.props.height;\n    }\n\n    return (\n      <div\n        // @ts-expect-error TS(2322): Type 'HTMLDivElement | null' is not assignable to ... Remove this comment to see the full error message\n        ref={(elem) => (this.elem = elem)}\n        className=\"rv-sticky-tree\"\n        style={style}\n        onScroll={this.onScroll}\n      >\n        {this.treeToRender}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}