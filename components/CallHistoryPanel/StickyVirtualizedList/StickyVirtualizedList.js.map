{"version":3,"file":"StickyVirtualizedList.js","names":["_react","_interopRequireDefault","require","_StickyVirtualizedList","obj","__esModule","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","Number","_get","Reflect","get","bind","property","receiver","base","_superPropBase","desc","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","StickyVirtualizedList","_React$PureComponent","_super","_this","nodes","getChildrenCache","rowRenderCache","rowRenderRange","structureChanged","elem","pendingScrollTop","treeToRender","onScroll","state","scrollTop","currNodePos","scrollTick","flattenTree","node","_this2","isFirstChild","isLastChild","parentIndex","context","totalHeight","index","height","defaultRowHeight","parentInfo","id","_node$isSticky","isSticky","_node$stickyTop","stickyTop","_node$zIndex","zIndex","rest","nodeInfo","top","depth","children","getChildren","isModelImmutable","oldChildren","every","child","getBranchChildrenIds","Array","isArray","_this3","arr","UNSAFE_componentWillMount","refreshCachedMetadata","storeRenderTree","treeDataUpdated","newProps","root","UNSAFE_componentWillReceiveProps","scrollIndex","scrollIndexIntoView","UNSAFE_componentWillUpdate","newState","getNodeIndex","nodeId","findIndex","getPreviousNodeId","getNextNodeId","isNodeVisible","includeObscured","isIndexVisible","inView","getParentPath","includes","isIndexInViewport","path","ancestor","isNodeInViewport","getNodeTop","getIndexTop","getScrollTop","setScrollTop","isNaN","setScrollTopAndClosestNode","scrollReasons","requested","scrollNodeIntoView","alignToTop","componentDidUpdate","prevProps","prevState","scrollReason","onRowsRendered","range","visibleStartInfo","visibleStart","visibleEndInfo","visibleEnd","overscanStartIndex","start","overscanStopIndex","end","startIndex","stopIndex","startNode","endNode","recomputeTree","forceUpdate","renderParentTree","getRenderRowRange","indexesToRender","Set","add","renderRoot","createElement","className","style","width","position","renderChildWithChildren","renderParentContainer","parent","renderChildren","getChildContainerStyle","concat","renderNode","getClientNodeStyle","getClientLeafNodeStyle","_this4","has","wrapAllLeafNodes","renderedRow","rowRenderer","overscanRowCount","nodeIndex","topDownOrder","currNode","reverse","forwardSearch","searchPos","backwardSearch","Math","min","max","_this5","scrollHeight","offsetHeight","pos","setState","_ref","scrollLeft","render","_this6","overflow","ref","React","PureComponent","exports","defaultProps"],"sources":["components/CallHistoryPanel/StickyVirtualizedList/StickyVirtualizedList.tsx"],"sourcesContent":["/* eslint-disable*/\n// Original Library: react-virtualized-sticky-tree\n// Ref: https://github.com/marchaos/react-virtualized-sticky-tree\nimport React, { CSSProperties } from 'react';\n\nimport {\n  Node,\n  scrollReasons,\n  ScrollReasons,\n  StickyVirtualizedListProps,\n  StickyVirtualizedListState,\n} from './StickyVirtualizedList.interface';\n\nexport class StickyVirtualizedList extends React.PureComponent<\n  StickyVirtualizedListProps,\n  StickyVirtualizedListState\n> {\n  static defaultProps = {\n    overscanRowCount: 10,\n    renderRoot: false,\n    wrapAllLeafNodes: false,\n    isModelImmutable: false,\n  };\n\n  nodes: Node[];\n\n  getChildrenCache: {\n    [key: string]: Node[];\n  };\n\n  rowRenderCache: {\n    [key: string]: JSX.Element;\n  };\n\n  rowRenderRange: {\n    start: number;\n    end: number;\n    visibleStart: number;\n    visibleEnd: number;\n  };\n  // @ts-expect-error TS(2564): Property 'structureChanged' has no initializer and... Remove this comment to see the full error message\n  structureChanged: boolean;\n  // @ts-expect-error TS(2564): Property 'elem' has no initializer and is not defi... Remove this comment to see the full error message\n  elem: HTMLElement;\n  // @ts-expect-error TS(2564): Property 'pendingScrollTop' has no initializer and... Remove this comment to see the full error message\n  pendingScrollTop: number;\n  // @ts-expect-error TS(2564): Property 'treeToRender' has no initializer and is ... Remove this comment to see the full error message\n  treeToRender: JSX.Element;\n\n  constructor(props: StickyVirtualizedListProps) {\n    super(props);\n    this.onScroll = this.onScroll.bind(this);\n\n    this.state = {\n      scrollTop: 0,\n      currNodePos: 0,\n      scrollTick: false,\n    };\n\n    this.nodes = [];\n    this.getChildrenCache = {};\n    this.rowRenderCache = {};\n    // @ts-expect-error TS(2322): Type 'undefined' is not assignable to type '{ star... Remove this comment to see the full error message\n    this.rowRenderRange = undefined;\n  }\n\n  flattenTree(\n    node: Node,\n    props = this.props,\n    nodes: Node[] = [],\n    isFirstChild = false,\n    isLastChild = false,\n    // @ts-expect-error TS(2322): Type 'undefined' is not assignable to type 'number... Remove this comment to see the full error message\n    parentIndex: number = undefined,\n    context = { totalHeight: 0 },\n  ) {\n    const index = nodes.length;\n    const height =\n      node.height !== undefined ? node.height : props.defaultRowHeight;\n\n    const parentInfo = nodes[parentIndex];\n\n    const { id, isSticky = false, stickyTop = 0, zIndex = 0, ...rest } = node;\n\n    const nodeInfo = {\n      id,\n      isSticky,\n      stickyTop,\n      zIndex,\n      ...rest,\n      top: context.totalHeight,\n      parentIndex,\n      parentInfo,\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      depth: parentIndex !== undefined ? parentInfo.depth + 1 : 0,\n      height,\n      index,\n      isFirstChild,\n      isLastChild,\n    };\n\n    // @ts-expect-error TS(2345): Argument of type '{ top: number; parentIndex: numb... Remove this comment to see the full error message\n    nodes.push(nodeInfo);\n\n    if (parentIndex !== undefined) {\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      parentInfo.children.push(index);\n    }\n\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    context.totalHeight += height;\n\n    // @ts-expect-error TS(2345): Argument of type '{ top: number; parentIndex: numb... Remove this comment to see the full error message\n    const children = props.getChildren(node.id, nodeInfo);\n\n    if (props.isModelImmutable) {\n      // If children is undefined, then it is probably a leaf node, so we will have to render this since we don't know if the node\n      // itself has changed.\n      const oldChildren = this.getChildrenCache[node.id];\n      if (children === undefined || oldChildren !== children) {\n        delete this.rowRenderCache[node.id];\n        this.getChildrenCache[node.id] = children;\n\n        // Check for structure changes...\n        if (\n          children &&\n          oldChildren &&\n          (children.length !== oldChildren.length ||\n            !children.every((child, i) => child.id === oldChildren[i].id))\n        ) {\n          this.structureChanged = true;\n          // We need to update the entire branch if the structure has changed.\n          this.getBranchChildrenIds(children).forEach(\n            (id) => delete this.rowRenderCache[id],\n          );\n        }\n      }\n    } else {\n      this.structureChanged = true;\n    }\n\n    if (Array.isArray(children)) {\n      nodeInfo.children = [];\n      for (let i = 0; i < children.length; i++) {\n        // Need to reset parentIndex here as we are recursive.\n        const child = children[i];\n        this.flattenTree(\n          child,\n          props,\n          nodes,\n          i === 0,\n          i === children.length - 1,\n          index,\n          context,\n        );\n      }\n    }\n\n    nodeInfo.totalHeight = context.totalHeight - nodeInfo.top;\n\n    return nodes;\n  }\n\n  getBranchChildrenIds(children: Node[], arr: string[] = []) {\n    if (!children) {\n      return arr;\n    }\n    children.forEach((child) => {\n      arr.push(child.id);\n      this.getBranchChildrenIds(this.getChildrenCache[child.id], arr);\n    });\n    return arr;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  UNSAFE_componentWillMount() {\n    this.refreshCachedMetadata(this.props);\n    this.storeRenderTree(this.props, this.state);\n  }\n\n  treeDataUpdated(newProps: StickyVirtualizedListProps) {\n    return (\n      newProps.root !== this.props.root ||\n      newProps.getChildren !== this.props.getChildren ||\n      newProps.defaultRowHeight !== this.props.defaultRowHeight\n    );\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  UNSAFE_componentWillReceiveProps(newProps: StickyVirtualizedListProps) {\n    // These two properties will change when the structure changes, so we need to re-build the tree when this happens.\n    if (this.treeDataUpdated(newProps)) {\n      this.refreshCachedMetadata(newProps);\n    }\n\n    if (newProps.scrollIndex !== undefined && newProps.scrollIndex >= 0) {\n      this.scrollIndexIntoView(newProps.scrollIndex);\n    }\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  UNSAFE_componentWillUpdate(\n    newProps: StickyVirtualizedListProps,\n    newState: StickyVirtualizedListState,\n  ) {\n    if (\n      newState.scrollTick === this.state.scrollTick ||\n      newState.currNodePos !== this.state.currNodePos\n    ) {\n      this.storeRenderTree(newProps, newState);\n    }\n  }\n\n  /**\n   * Returns the index of the node in a flat list tree (post-order traversal).\n   *\n   * @param nodeId The node index to get the index for.\n   * @returns {number}\n   */\n  getNodeIndex(nodeId: string) {\n    return this.nodes.findIndex((node) => node.id === nodeId);\n  }\n\n  /**\n   * Returns the node that appears higher than this node (either a parent, sibling or child of the sibling above).\n   * @param nodeId The node to get the previous node of.\n   * @returns {*}\n   */\n  getPreviousNodeId(nodeId: string) {\n    const index = this.getNodeIndex(nodeId);\n    if (index !== -1) {\n      const node = this.nodes[index - 1];\n      if (node) {\n        return node.id;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the node that appears lower than this node (sibling or sibling of the node's parent).\n   * @param nodeId The node to get the next node of.\n   * @returns {*}\n   */\n  getNextNodeId(nodeId: string) {\n    const index = this.getNodeIndex(nodeId);\n    if (index !== -1) {\n      const node = this.nodes[index + 1];\n      if (node) {\n        return node.id;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns true if the node is completely visible and is not obscured.\n   * This will return false when the node is partially obscured.\n   *\n   * @param nodeId The id of the node to check\n   * @param includeObscured if true, this method will return true for partially visible nodes.\n   * @returns {boolean}\n   */\n  isNodeVisible(nodeId: string, includeObscured = false) {\n    return this.isIndexVisible(this.getNodeIndex(nodeId), includeObscured);\n  }\n\n  /**\n   * Returns true if the node is completely visible and is not obscured, unless includeObscured is specified.\n   * This will return false when the node is partially obscured, unless includeObscured is set to true.\n   *\n   * @param index The index of the node to check, generally retrieved via getNodeIndex()\n   * @param includeObscured if true, this method will return true for partially visible nodes.\n   * @returns {boolean}\n   */\n  isIndexVisible(index: number, includeObscured = false) {\n    let inView;\n    const node = this.nodes[index];\n\n    if (!node) {\n      return false;\n    }\n\n    if (\n      (node.isSticky && index === this.state.currNodePos) ||\n      this.getParentPath(this.state.currNodePos).includes(this.nodes[index])\n    ) {\n      return true;\n    }\n\n    if (!includeObscured) {\n      inView = this.isIndexInViewport(index);\n    } else {\n      inView =\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this.elem.scrollTop <= node.top + node.height - node.stickyTop &&\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this.elem.scrollTop + this.props.height >= node.top;\n    }\n    if (inView) {\n      const path = this.getParentPath(index, false);\n      // If this node is in view, new need to check to see if it is obscured by a sticky parent.\n      // Note that this does not handle weird scenarios where the node's parent has a sticky top which is less than other ancestors.\n      // Or any z-index weirdness.\n      for (let i = 0; i < path.length; i++) {\n        const ancestor = path[i];\n        // If the ancestor is sticky and the node is in view, then it must be stuck to the top\n        if (ancestor.isSticky) {\n          if (\n            !includeObscured &&\n            // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n            ancestor.stickyTop + ancestor.height >\n              // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n              node.top - this.elem.scrollTop\n          ) {\n            return false;\n          }\n          if (\n            includeObscured &&\n            // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n            ancestor.stickyTop + ancestor.height >\n              // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n              node.top + node.height - this.elem.scrollTop\n          ) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isNodeInViewport(nodeId: string) {\n    return this.isIndexInViewport(this.getNodeIndex(nodeId));\n  }\n\n  isIndexInViewport(index: number) {\n    let node = this.nodes[index];\n    if (!node || !this.elem) {\n      return false;\n    }\n    return (\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      this.elem.scrollTop <= node.top - node.stickyTop &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      this.elem.scrollTop + this.props.height >= node.top + node.height\n    );\n  }\n\n  getNodeTop(nodeId: string) {\n    return this.getIndexTop(this.getNodeIndex(nodeId));\n  }\n\n  getIndexTop(index: number) {\n    const node = this.nodes[index];\n    return node ? node.top : -1;\n  }\n\n  getScrollTop() {\n    return this.elem ? this.elem.scrollTop : -1;\n  }\n\n  setScrollTop(scrollTop: number) {\n    if (!isNaN(scrollTop)) {\n      this.setScrollTopAndClosestNode(\n        scrollTop,\n        this.state.currNodePos,\n        scrollReasons.requested,\n      );\n    }\n  }\n\n  scrollNodeIntoView(nodeId: string, alignToTop = true) {\n    this.scrollIndexIntoView(this.getNodeIndex(nodeId), alignToTop);\n  }\n\n  scrollIndexIntoView(index: number, alignToTop = true) {\n    let node = this.nodes[index];\n    if (node !== undefined) {\n      let scrollTop;\n      if (alignToTop) {\n        if (node.isSticky) {\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          scrollTop = node.top - node.stickyTop;\n        } else {\n          const path = this.getParentPath(index, false);\n          for (let i = 0; i < path.length; i++) {\n            const ancestor = path[i];\n            if (ancestor.isSticky) {\n              // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n              scrollTop = node.top - ancestor.stickyTop - ancestor.height;\n              break;\n            }\n          }\n          if (scrollTop === undefined) {\n            // Fallback if nothing is sticky.\n            scrollTop = node.top;\n          }\n        }\n      } else {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        scrollTop = node.top - this.props.height + node.height;\n      }\n      // @ts-expect-error TS(2345): Argument of type 'number | undefined' is not assig... Remove this comment to see the full error message\n      this.setScrollTop(scrollTop);\n    }\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  componentDidUpdate(\n    prevProps: StickyVirtualizedListProps,\n    prevState: StickyVirtualizedListState,\n  ) {\n    if (this.state.scrollReason === scrollReasons.requested) {\n      if (\n        this.state.scrollTop >= 0 &&\n        this.state.scrollTop !== this.elem.scrollTop\n      ) {\n        this.elem.scrollTop = this.state.scrollTop;\n      }\n    }\n\n    if (\n      this.props.onRowsRendered !== undefined &&\n      (prevState.currNodePos !== this.state.currNodePos ||\n        this.treeDataUpdated(prevProps))\n    ) {\n      const range = this.rowRenderRange;\n      const visibleStartInfo = this.nodes[range.visibleStart];\n      const visibleEndInfo = this.nodes[range.visibleEnd];\n\n      this.props.onRowsRendered({\n        overscanStartIndex: range.start,\n        overscanStopIndex: range.end,\n        startIndex: range.visibleStart,\n        stopIndex: range.visibleEnd,\n        startNode: visibleStartInfo && visibleStartInfo.id,\n        endNode: visibleEndInfo && visibleEndInfo.id,\n        nodes: this.nodes,\n      });\n    }\n  }\n\n  refreshCachedMetadata(props: StickyVirtualizedListProps) {\n    this.structureChanged = false;\n    this.nodes = this.flattenTree(props.root, props);\n\n    if (this.structureChanged) {\n      // Need to re-render as the curr node may not be in view\n      if (this.elem) {\n        // We need to find the the closest node to where we are scrolled to since the structure of the\n        // the tree probably has changed.\n        this.setScrollTopAndClosestNode(\n          this.pendingScrollTop || this.elem.scrollTop,\n          0,\n          scrollReasons.requested,\n        );\n      }\n    }\n  }\n\n  recomputeTree() {\n    if (this.props.root !== undefined && this.props.getChildren !== undefined) {\n      this.refreshCachedMetadata(this.props);\n      this.forceUpdate();\n    }\n  }\n\n  storeRenderTree(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n  ) {\n    this.treeToRender = this.renderParentTree(props, state);\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  forceUpdate() {\n    this.getChildrenCache = {};\n    this.rowRenderCache = {};\n    this.storeRenderTree(this.props, this.state);\n    super.forceUpdate();\n  }\n\n  renderParentTree(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n  ) {\n    this.rowRenderRange = this.getRenderRowRange(props, state);\n    const path = this.getParentPath(this.rowRenderRange.start);\n\n    // Parent nodes to the current range.\n    const indexesToRender: Set<number> = new Set();\n    for (let i = 0; i < path.length; i++) {\n      // @ts-expect-error TS(2345): Argument of type 'number | undefined' is not assig... Remove this comment to see the full error message\n      indexesToRender.add(path[i].index);\n    }\n\n    // The rest of the nodes within the range.\n    for (let i = this.rowRenderRange.start; i <= this.rowRenderRange.end; i++) {\n      // @ts-expect-error TS(2345): Argument of type 'number | undefined' is not assig... Remove this comment to see the full error message\n      indexesToRender.add(this.nodes[i].index);\n    }\n\n    if (this.props.renderRoot) {\n      return (\n        <div\n          className=\"rv-sticky-node-list\"\n          style={{ width: '100%', position: 'absolute', top: 0 }}\n        >\n          {this.renderChildWithChildren(\n            props,\n            state,\n            this.nodes[0],\n            0,\n            indexesToRender,\n          )}\n        </div>\n      );\n    }\n    return this.renderParentContainer(\n      props,\n      state,\n      this.nodes[0],\n      indexesToRender,\n    );\n  }\n\n  renderParentContainer(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n    parent: Node,\n    indexesToRender: Set<number>,\n  ) {\n    return (\n      <div\n        className=\"rv-sticky-node-list\"\n        style={{\n          position: 'absolute',\n          width: '100%',\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          height: parent.totalHeight - parent.height,\n        }}\n      >\n        {this.renderChildren(props, state, parent, indexesToRender)}\n      </div>\n    );\n  }\n\n  getChildContainerStyle(child: Node, top: number) {\n    return {\n      position: 'absolute',\n      top,\n      height: child.totalHeight,\n      width: '100%',\n    } as CSSProperties;\n  }\n\n  renderChildWithChildren(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n    child: Node,\n    top: number,\n    indexesToRender: Set<number>,\n  ) {\n    return (\n      <div\n        key={`rv-node-${child.id}`}\n        className=\"rv-sticky-parent-node\"\n        style={this.getChildContainerStyle(child, top)}\n      >\n        {this.renderNode(props, state, child, this.getClientNodeStyle(child))}\n        {this.renderParentContainer(props, state, child, indexesToRender)}\n      </div>\n    );\n  }\n\n  getClientNodeStyle(node: Node) {\n    const style: CSSProperties = { height: node.height };\n    if (node.isSticky) {\n      style.position = 'sticky';\n      style.top = node.stickyTop;\n      style.zIndex = node.zIndex;\n    }\n\n    return style;\n  }\n\n  getClientLeafNodeStyle(node: Node, top: number) {\n    return {\n      position: 'absolute',\n      top,\n      height: node.height,\n      width: '100%',\n    } as CSSProperties;\n  }\n\n  renderChildren(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n    parent: Node,\n    indexesToRender: Set<number>,\n  ) {\n    const nodes: JSX.Element[] = [];\n    let top = 0;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    parent.children.forEach((index) => {\n      const child = this.nodes[index];\n\n      if (indexesToRender.has(index)) {\n        if (child.children && child.children.length > 0) {\n          nodes.push(\n            this.renderChildWithChildren(\n              props,\n              state,\n              child,\n              top,\n              indexesToRender,\n            ),\n          );\n        } else {\n          // Sticky nodes will need a container so that their top is correct. The sticky node itself will have a top\n          // of the offset where it should stick, which would conflict with the absolute position of the node.\n          if (child.isSticky || props.wrapAllLeafNodes) {\n            nodes.push(\n              <div\n                className=\"rv-sticky-leaf-node\"\n                key={`rv-node-${child.id}`}\n                style={this.getChildContainerStyle(child, top)}\n              >\n                {this.renderNode(\n                  props,\n                  state,\n                  child,\n                  this.getClientNodeStyle(child),\n                )}\n              </div>,\n            );\n          } else {\n            nodes.push(\n              this.renderNode(\n                props,\n                state,\n                child,\n                this.getClientLeafNodeStyle(child, top),\n              ),\n            );\n          }\n        }\n      }\n      // Needs to be on the outside so that we add the the top even if\n      // this node is not visible\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      top += child.totalHeight;\n    });\n    return nodes;\n  }\n\n  renderNode(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n    nodeInfo: Node,\n    style?: CSSProperties,\n  ) {\n    // If they have not mutated their getChildren, then no need to call them again for the same structure.\n    if (props.isModelImmutable && this.rowRenderCache[nodeInfo.id]) {\n      return this.rowRenderCache[nodeInfo.id];\n    }\n\n    // @ts-expect-error TS(2322): Type 'CSSProperties | undefined' is not assignable... Remove this comment to see the full error message\n    const renderedRow = props.rowRenderer({ id: nodeInfo.id, nodeInfo, style });\n\n    if (props.isModelImmutable) {\n      this.rowRenderCache[nodeInfo.id] = renderedRow;\n    }\n\n    return renderedRow;\n  }\n\n  /**\n   * Determines the start and end number of the range to be rendered.\n   * @returns {{start: number, end: number}} Indexes within nodes\n   */\n  getRenderRowRange(\n    props: StickyVirtualizedListProps,\n    state: StickyVirtualizedListState,\n  ) {\n    // Needs to be at least 1\n    const overscanRowCount =\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      props.overscanRowCount > 0 ? props.overscanRowCount : 1;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    let start = state.currNodePos - overscanRowCount;\n    if (start < 0) {\n      start = 0;\n    }\n    let visibleEnd = state.currNodePos + 1;\n\n    while (\n      this.nodes[visibleEnd] &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      this.nodes[visibleEnd].top < state.scrollTop + props.height\n    ) {\n      visibleEnd++;\n    }\n\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    let end = visibleEnd + overscanRowCount;\n    if (end > this.nodes.length - 1) {\n      end = this.nodes.length - 1;\n    }\n\n    return { start, end, visibleStart: state.currNodePos, visibleEnd };\n  }\n\n  getParentPath(nodeIndex: number, topDownOrder = true) {\n    let currNode = this.nodes[nodeIndex];\n    const path = [];\n    while (currNode) {\n      // @ts-expect-error TS(2538): Type 'undefined' cannot be used as an index type.\n      currNode = this.nodes[currNode.parentIndex];\n      if (currNode) {\n        path.push(currNode);\n      }\n    }\n    return topDownOrder ? path.reverse() : path;\n  }\n\n  forwardSearch(scrollTop: number, searchPos: number) {\n    const nodes = this.nodes;\n    for (let i = searchPos; i < nodes.length; i++) {\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      if (nodes[i].top >= scrollTop) {\n        return i;\n      }\n    }\n    return nodes.length - 1;\n  }\n\n  backwardSearch(scrollTop: number, searchPos: number) {\n    const nodes = this.nodes;\n    for (\n      let i = Math.min(searchPos, Math.max(nodes.length - 1, 0));\n      i >= 0;\n      i--\n    ) {\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      if (nodes[i].top <= scrollTop) {\n        return i;\n      }\n    }\n    return 0;\n  }\n\n  setScrollTopAndClosestNode(\n    scrollTop: number,\n    currNodePos: number,\n    scrollReason: ScrollReasons,\n  ) {\n    if (scrollTop === this.state.scrollTop) {\n      return;\n    }\n\n    if (scrollTop >= this.elem.scrollHeight - this.elem.offsetHeight) {\n      scrollTop = this.elem.scrollHeight - this.elem.offsetHeight;\n    }\n\n    let pos;\n    if (scrollTop > this.state.scrollTop || currNodePos === 0) {\n      pos = this.forwardSearch(scrollTop, currNodePos);\n    }\n    if (scrollTop < this.state.scrollTop && pos === undefined) {\n      pos = this.backwardSearch(scrollTop, currNodePos);\n    }\n\n    this.pendingScrollTop = scrollTop;\n    this.setState(\n      { currNodePos: pos ? pos : 0, scrollTop, scrollReason },\n      () => {\n        // @ts-expect-error TS(2322): Type 'undefined' is not assignable to type 'number... Remove this comment to see the full error message\n        this.pendingScrollTop = undefined;\n      },\n    );\n  }\n\n  onScroll(e: React.UIEvent<HTMLElement>) {\n    const { scrollTop, scrollLeft } = e.target as HTMLElement;\n\n    const scrollReason = this.state.scrollReason || scrollReasons.requested;\n\n    this.setScrollTopAndClosestNode(\n      scrollTop,\n      this.state.currNodePos,\n      scrollReason,\n    );\n\n    if (this.props.onScroll !== undefined) {\n      this.props.onScroll({ scrollTop, scrollLeft, scrollReason });\n    }\n\n    this.setState({\n      scrollTick: !this.state.scrollTick,\n      scrollReason: undefined,\n    });\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  render() {\n    let style = { overflow: 'auto', position: 'relative' } as CSSProperties;\n    if (this.props.width) {\n      style.width = this.props.width;\n    }\n    if (this.props.height) {\n      style.height = this.props.height;\n    }\n\n    return (\n      <div\n        // @ts-expect-error TS(2322): Type 'HTMLDivElement | null' is not assignable to ... Remove this comment to see the full error message\n        ref={(elem) => (this.elem = elem)}\n        className=\"rv-sticky-tree\"\n        style={style}\n        onScroll={this.onScroll}\n      >\n        {this.treeToRender}\n      </div>\n    );\n  }\n}\n"],"mappings":"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"}