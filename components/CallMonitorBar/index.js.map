{"version":3,"sources":["components/CallMonitorBar/index.tsx"],"names":["CallInfoBar","label","onClick","currentLocale","shouldDisplayViewCallsBtn","useV2","buttonText","styles","callInfoBarV2","bar","currentCallInfo","viewCallsBtn","i18n","getString","propTypes","PropTypes","string","func","bool","defaultProps","undefined","CallMonitorBar","props","state","hoverBar","showBtn","currentCalls","length","setState","hideBtn","ringingCalls","onHoldCalls","otherDeviceCalls","onCurrentCallBtnClick","onViewCallBtnClick","shouldDisplayCurrentCallBtn","shouldHideRingingCallStatus","clickHeaderTrack","numberOfIncomingCalls","numberOfOnHoldCalls","numberOfOtherDeviceCalls","box","numberOf","duration","startTime","currentCallBtn","Component","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport formatMessage from 'format-message';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '../Button';\nimport CarrouselBar from '../CarrouselBar';\nimport DurationCounter from '../DurationCounter';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport function CallInfoBar({\n  label,\n  onClick,\n  currentLocale,\n  shouldDisplayViewCallsBtn,\n  useV2,\n}) {\n  const buttonText = useV2 ? 'view' : 'viewCalls';\n  return (\n    <div className={useV2 ? styles.callInfoBarV2 : styles.bar}>\n      <div className={styles.currentCallInfo} title={label} onClick={onClick}>\n        {label}\n      </div>\n      {shouldDisplayViewCallsBtn ? (\n        <Button\n          className={styles.viewCallsBtn}\n          tooltip={i18n.getString(buttonText, currentLocale)}\n          onClick={onClick}\n        >\n          {i18n.getString(buttonText, currentLocale)}\n        </Button>\n      ) : null}\n    </div>\n  );\n}\nCallInfoBar.propTypes = {\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n  currentLocale: PropTypes.string,\n  shouldDisplayViewCallsBtn: PropTypes.bool,\n  useV2: PropTypes.bool,\n};\nCallInfoBar.defaultProps = {\n  label: '',\n  onClick: undefined,\n  currentLocale: '',\n  shouldDisplayViewCallsBtn: false,\n  useV2: false,\n};\n\nclass CallMonitorBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverBar: false,\n    };\n    this.showBtn = () => {\n      if (this.props.currentCalls.length > 0) {\n        this.setState({\n          hoverBar: true,\n        });\n      }\n    };\n    this.hideBtn = () => {\n      this.setState({\n        hoverBar: false,\n      });\n    };\n  }\n\n  render() {\n    const {\n      ringingCalls,\n      onHoldCalls,\n      currentCalls,\n      otherDeviceCalls,\n      currentLocale,\n      onCurrentCallBtnClick,\n      onViewCallBtnClick,\n      shouldDisplayCurrentCallBtn,\n      shouldDisplayViewCallsBtn,\n      shouldHideRingingCallStatus,\n      clickHeaderTrack,\n      useV2,\n    } = this.props;\n\n    const numberOfIncomingCalls = ringingCalls.length;\n    const numberOfOnHoldCalls = onHoldCalls.length;\n    const numberOfOtherDeviceCalls = otherDeviceCalls.length;\n\n    return (\n      <div\n        className={styles.bar}\n        onMouseOver={this.showBtn}\n        onMouseLeave={this.hideBtn}\n        onClick={clickHeaderTrack}\n      >\n        <div className={styles.box}>\n          <CarrouselBar hoverBar={this.state.hoverBar}>\n            {numberOfOnHoldCalls > 0 ? (\n              <CallInfoBar\n                label={\n                  numberOfOnHoldCalls === 1\n                    ? formatMessage(\n                        i18n.getString('callOnHold', currentLocale),\n                        { numberOf: numberOfOnHoldCalls },\n                      )\n                    : formatMessage(\n                        i18n.getString('callsOnHold', currentLocale),\n                        { numberOf: numberOfOnHoldCalls },\n                      )\n                }\n                currentLocale={currentLocale}\n                onClick={onViewCallBtnClick}\n                shouldDisplayViewCallsBtn={shouldDisplayViewCallsBtn}\n                useV2={useV2}\n              />\n            ) : null}\n            {!shouldHideRingingCallStatus && numberOfIncomingCalls > 0 ? (\n              <CallInfoBar\n                label={\n                  numberOfIncomingCalls === 1\n                    ? formatMessage(\n                        i18n.getString('incomingCall', currentLocale),\n                        { numberOf: numberOfIncomingCalls },\n                      )\n                    : formatMessage(\n                        i18n.getString('incomingCalls', currentLocale),\n                        { numberOf: numberOfIncomingCalls },\n                      )\n                }\n                currentLocale={currentLocale}\n                onClick={onViewCallBtnClick}\n                shouldDisplayViewCallsBtn={shouldDisplayViewCallsBtn}\n                useV2={useV2}\n              />\n            ) : null}\n            {numberOfOtherDeviceCalls > 0 ? (\n              <CallInfoBar\n                label={\n                  numberOfOtherDeviceCalls === 1\n                    ? formatMessage(\n                        i18n.getString('otherDeviceCall', currentLocale),\n                        { numberOf: numberOfOtherDeviceCalls },\n                      )\n                    : formatMessage(\n                        i18n.getString('otherDeviceCalls', currentLocale),\n                        { numberOf: numberOfOtherDeviceCalls },\n                      )\n                }\n                currentLocale={currentLocale}\n                onClick={onViewCallBtnClick}\n                shouldDisplayViewCallsBtn={shouldDisplayViewCallsBtn}\n                useV2={useV2}\n              />\n            ) : null}\n            {currentCalls.length > 0 ? (\n              <div className={useV2 ? styles.callInfoBarV2 : styles.bar}>\n                <div\n                  data-sign=\"callDuration\"\n                  className={styles.duration}\n                  onClick={onCurrentCallBtnClick}\n                >\n                  <DurationCounter startTime={currentCalls[0].startTime} />\n                </div>\n                {shouldDisplayCurrentCallBtn && onCurrentCallBtnClick ? (\n                  <Button\n                    dataSign=\"currentCallButton\"\n                    className={styles.currentCallBtn}\n                    onClick={onCurrentCallBtnClick}\n                  >\n                    {i18n.getString('currentCall', currentLocale)}\n                  </Button>\n                ) : null}\n              </div>\n            ) : null}\n          </CarrouselBar>\n        </div>\n      </div>\n    );\n  }\n}\nCallMonitorBar.propTypes = {\n  ringingCalls: PropTypes.array,\n  currentCalls: PropTypes.array,\n  onHoldCalls: PropTypes.array,\n  otherDeviceCalls: PropTypes.array,\n  currentLocale: PropTypes.string.isRequired,\n  onCurrentCallBtnClick: PropTypes.func,\n  onViewCallBtnClick: PropTypes.func,\n  shouldDisplayCurrentCallBtn: PropTypes.bool,\n  shouldDisplayViewCallsBtn: PropTypes.bool,\n  shouldHideRingingCallStatus: PropTypes.bool,\n  clickHeaderTrack: PropTypes.func,\n  useV2: PropTypes.bool,\n};\nCallMonitorBar.defaultProps = {\n  ringingCalls: [],\n  currentCalls: [],\n  onHoldCalls: [],\n  otherDeviceCalls: [],\n  onCurrentCallBtnClick: undefined,\n  onViewCallBtnClick: undefined,\n  shouldDisplayCurrentCallBtn: false,\n  shouldDisplayViewCallsBtn: false,\n  shouldHideRingingCallStatus: false,\n  clickHeaderTrack() {},\n  useV2: false,\n};\n\nexport default CallMonitorBar;\n"],"file":"index.js"}