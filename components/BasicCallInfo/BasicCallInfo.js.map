{"version":3,"sources":["components/BasicCallInfo/BasicCallInfo.tsx"],"names":["BasicCallInfo","subject","isInbound","isRinging","followInfos","callInfos","panelClass","classes","panel","status","callControlRef","onCopySuccess","currentLocale","open","setOpen","panelHeight","setPanelHeight","toggleOpen","current","clientHeight","styles","container","rightIcon","chevronRight","bottom","panelContainer","height","chevronLeftSvg","infoMain","infoList","defaultProps"],"mappings":"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","sourcesContent":["import { RcIconButton } from '@ringcentral/juno';\nimport chevronLeftSvg from '@ringcentral/juno/icon/ChevronLeft';\nimport chevronRight from '@ringcentral/juno/icon/ChevronRight';\nimport classNames from 'classnames';\nimport React, {\n  FunctionComponent,\n  MutableRefObject,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { AnimationPanel } from '../AnimationPanel';\nimport { ShinyBar, ShinyBarProps } from '../LogBasicInfoV2/ShinyBar';\nimport { BasicCallInfoMain, BasicCallInfoMainProps } from './BasicCallInfoMain';\nimport { CallInfoProps } from './CallInfo';\nimport { CallInfoList } from './CallInfoList';\nimport styles from './styles.scss';\n\nexport type BasicCallInfoProps = {\n  currentLocale: string;\n  isRinging: boolean;\n  callInfos?: CallInfoProps[];\n  callControlRef?: MutableRefObject<HTMLElement>;\n  classes?: { panel?: string };\n  onCopySuccess?: (name: string) => void;\n} & Pick<ShinyBarProps, 'status'> &\n  Pick<BasicCallInfoMainProps, 'isInbound' | 'subject' | 'followInfos'>;\n\nexport const BasicCallInfo: FunctionComponent<BasicCallInfoProps> = ({\n  subject,\n  isInbound,\n  isRinging,\n  followInfos,\n  callInfos,\n  classes: { panel: panelClass },\n  status,\n  callControlRef,\n  onCopySuccess,\n  currentLocale,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [panelHeight, setPanelHeight] = useState('100%');\n  const toggleOpen = () => setOpen(!open);\n\n  useEffect(() => {\n    if (callControlRef?.current) {\n      setPanelHeight(`calc(100% - ${callControlRef.current.clientHeight}px)`);\n    }\n  }, [callControlRef, status]);\n\n  // when ringing state change, close that info view\n  useEffect(() => {\n    if (open && !isRinging) {\n      toggleOpen();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRinging]);\n\n  return (\n    <>\n      <div data-sign=\"basicCallInfo\" className={styles.container}>\n        <BasicCallInfoMain\n          subject={subject}\n          isInbound={isInbound}\n          followInfos={followInfos}\n        >\n          <div className={styles.rightIcon}>\n            <RcIconButton\n              variant=\"round\"\n              size=\"small\"\n              color=\"neutral.b04\"\n              symbol={chevronRight}\n              data-sign=\"detailButton\"\n              onClick={toggleOpen}\n            />\n          </div>\n        </BasicCallInfoMain>\n        <ShinyBar\n          isRinging={isRinging}\n          className={styles.bottom}\n          status={status}\n        />\n      </div>\n\n      <AnimationPanel\n        open={open}\n        className={classNames(styles.panelContainer, panelClass)}\n        style={{\n          height: panelHeight,\n        }}\n      >\n        <div className={styles.panel}>\n          <header>\n            <RcIconButton\n              variant=\"round\"\n              size=\"small\"\n              color=\"neutral.f04\"\n              symbol={chevronLeftSvg}\n              data-sign=\"backButton\"\n              onClick={toggleOpen}\n            />\n          </header>\n          <main>\n            <BasicCallInfoMain\n              subject={subject}\n              isInbound={isInbound}\n              followInfos={followInfos}\n              className={open && styles.infoMain}\n            />\n            <CallInfoList\n              callInfos={callInfos}\n              className={styles.infoList}\n              onCopySuccess={onCopySuccess}\n              currentLocale={currentLocale}\n            />\n          </main>\n        </div>\n      </AnimationPanel>\n    </>\n  );\n};\nBasicCallInfo.defaultProps = {\n  classes: {},\n};\n"],"file":"BasicCallInfo.js"}