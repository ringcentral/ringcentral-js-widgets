{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_classnames","_interopRequireDefault","_propTypes","_ramda","_rcTooltip","_Info","_BackHeader","_Button","_DropdownSelect","_IconLine","_InputField","_Panel","_SaveButton","_i18n","_styles","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","TooltipCom","Tooltip","AudioSettingsPanel","_Component","_super","_this","inputTooltipContainner","outputTooltipContainner","_isFirefox","onSave","_this$state","state","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","inputDeviceId","outputDeviceId","onReset","_this$props","setState","onDialButtonVolumeChange","onDialButtonMutedChange","onRingtoneVolumeChange","onRingtoneMutedChange","onCallVolumeChange","onOutputDeviceIdChange","device","deviceId","onInputDeviceIdChange","renderDeviceOption","index","_this$props2","availableInputDevices","availableOutputDevices","currentLocale","noLabel","i18n","getString","kind","label","concat","renderOutputDevice","_this$props3","find","indexOf","renderInputDevice","_this$props4","navigator","userAgent","UNSAFE_componentWillReceiveProps","newProps","_this2","all","componentDidMount","userMedia","checkUserMedia","renderDeviceValue","isNoLabel","render","_this3","_this$props5","onBackButtonClick","className","supportDevices","isWebRTC","outputDeviceDisabled","inputDeviceDisabled","_this$state2","hasChanges","permission","createElement","noBorder","icon","Button","dataSign","onClick","outputDeviceDropdown","styles","select","disabled","onChange","options","dropdownAlign","renderFunction","valueFunction","renderValue","titleEnabled","tooltipContainer","ref","outputDevice","noHeightInputField","fakeDropdownContainer","inputTooltip","placement","trigger","align","offset","overlay","arrowContent","getTooltipContainer","width","height","infoIcon","inputDevice","classnames","root","onBackClick","content","Component","devicePropType","PropTypes","string","isRequired","propTypes","number","bool","func","arrayOf","shape","defaultProps","_default","exports"],"sources":["components/AudioSettingsPanel/index.tsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { all, find } from 'ramda';\n// @ts-expect-error TS(7016): Could not find a declaration file for module 'rc-t... Remove this comment to see the full error message\nimport Tooltip from 'rc-tooltip';\n\nimport InfoIcon from '../../assets/images/Info.svg';\nimport BackHeader from '../BackHeader';\nimport { Button } from '../Button';\nimport Select from '../DropdownSelect';\nimport IconLine from '../IconLine';\nimport InputField from '../InputField';\nimport Panel from '../Panel';\nimport SaveButton from '../SaveButton';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst TooltipCom = typeof Tooltip === 'function' ? Tooltip : Tooltip.default;\n\nclass AudioSettingsPanel extends Component {\n  inputTooltipContainner: any;\n  outputTooltipContainner: any;\n  _isFirefox = false;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      dialButtonVolume: props.dialButtonVolume,\n      dialButtonMuted: props.dialButtonMuted,\n      ringtoneVolume: props.ringtoneVolume,\n      ringtoneMuted: props.ringtoneMuted,\n      callVolume: props.callVolume,\n      inputDeviceId: props.inputDeviceId,\n      outputDeviceId: props.outputDeviceId,\n    };\n\n    this._isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  // eslint-disable-next-line react/no-deprecated\n  UNSAFE_componentWillReceiveProps(newProps: any) {\n    // @ts-expect-error TS(2339): Property 'dialButtonVolume' does not exist on type... Remove this comment to see the full error message\n    if (newProps.dialButtonVolume !== this.props.dialButtonVolume) {\n      this.setState({\n        dialButtonVolume: newProps.dialButtonVolume,\n      });\n    }\n    // @ts-expect-error TS(2339): Property 'dialButtonMuted' does not exist on type ... Remove this comment to see the full error message\n    if (newProps.dialButtonMuted !== this.props.dialButtonMuted) {\n      this.setState({\n        dialButtonMuted: newProps.dialButtonMuted,\n      });\n    }\n    // @ts-expect-error TS(2339): Property 'ringtoneVolume' does not exist on type '... Remove this comment to see the full error message\n    if (newProps.ringtoneVolume !== this.props.ringtoneVolume) {\n      this.setState({\n        ringtoneVolume: newProps.ringtoneVolume,\n      });\n    }\n    // @ts-expect-error TS(2339): Property 'ringtoneMuted' does not exist on type 'R... Remove this comment to see the full error message\n    if (newProps.ringtoneMuted !== this.props.ringtoneMuted) {\n      this.setState({\n        ringtoneMuted: newProps.ringtoneMuted,\n      });\n    }\n    // @ts-expect-error TS(2339): Property 'callVolume' does not exist on type 'Read... Remove this comment to see the full error message\n    if (newProps.callVolume !== this.props.callVolume) {\n      this.setState({\n        callVolume: newProps.callVolume,\n      });\n    }\n    if (\n      // @ts-expect-error TS(2339): Property 'inputDeviceId' does not exist on type 'R... Remove this comment to see the full error message\n      newProps.inputDeviceId !== this.props.inputDeviceId ||\n      all(\n        // @ts-expect-error TS(2571): Object is of type 'unknown'.\n        (device) => device.deviceId !== this.state.inputDeviceId,\n        newProps.availableInputDevices,\n      )\n    ) {\n      this.setState({\n        inputDeviceId: newProps.inputDeviceId,\n      });\n    }\n    if (\n      // @ts-expect-error TS(2339): Property 'outputDeviceId' does not exist on type '... Remove this comment to see the full error message\n      newProps.outputDeviceId !== this.props.outputDeviceId ||\n      all(\n        // @ts-expect-error TS(2571): Object is of type 'unknown'.\n        (device) => device.deviceId !== this.state.outputDeviceId,\n        newProps.availableOutputDevices,\n      )\n    ) {\n      this.setState({\n        outputDeviceId: newProps.outputDeviceId,\n      });\n    }\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  componentDidMount() {\n    // @ts-expect-error TS(2339): Property 'userMedia' does not exist on type 'Reado... Remove this comment to see the full error message\n    if (!this.props.userMedia) {\n      return;\n    }\n    if (\n      // @ts-expect-error TS(2339): Property 'availableInputDevices' does not exist on... Remove this comment to see the full error message\n      this.props.availableInputDevices.length > 0 &&\n      // @ts-expect-error TS(2339): Property 'availableInputDevices' does not exist on... Remove this comment to see the full error message\n      this.props.availableInputDevices[0].label === ''\n    ) {\n      // @ts-expect-error TS(2339): Property 'checkUserMedia' does not exist on type '... Remove this comment to see the full error message\n      this.props.checkUserMedia();\n    }\n  }\n\n  onSave = () => {\n    // @ts-expect-error TS(2339): Property 'onSave' does not exist on type 'Readonly... Remove this comment to see the full error message\n    if (typeof this.props.onSave === 'function') {\n      const {\n        // @ts-expect-error TS(2339): Property 'dialButtonVolume' does not exist on type... Remove this comment to see the full error message\n        dialButtonVolume,\n        // @ts-expect-error TS(2339): Property 'dialButtonMuted' does not exist on type ... Remove this comment to see the full error message\n        dialButtonMuted,\n        // @ts-expect-error TS(2339): Property 'ringtoneVolume' does not exist on type '... Remove this comment to see the full error message\n        ringtoneVolume,\n        // @ts-expect-error TS(2339): Property 'ringtoneMuted' does not exist on type 'R... Remove this comment to see the full error message\n        ringtoneMuted,\n        // @ts-expect-error TS(2339): Property 'callVolume' does not exist on type 'Read... Remove this comment to see the full error message\n        callVolume,\n        // @ts-expect-error TS(2339): Property 'inputDeviceId' does not exist on type 'R... Remove this comment to see the full error message\n        inputDeviceId,\n        // @ts-expect-error TS(2339): Property 'outputDeviceId' does not exist on type '... Remove this comment to see the full error message\n        outputDeviceId,\n      } = this.state;\n      // @ts-expect-error TS(2339): Property 'onSave' does not exist on type 'Readonly... Remove this comment to see the full error message\n      this.props.onSave({\n        dialButtonVolume,\n        dialButtonMuted,\n        ringtoneVolume,\n        ringtoneMuted,\n        callVolume,\n        inputDeviceId,\n        outputDeviceId,\n      });\n    }\n  };\n\n  onReset = () => {\n    const {\n      // @ts-expect-error TS(2339): Property 'dialButtonVolume' does not exist on type... Remove this comment to see the full error message\n      dialButtonVolume,\n      // @ts-expect-error TS(2339): Property 'dialButtonMuted' does not exist on type ... Remove this comment to see the full error message\n      dialButtonMuted,\n      // @ts-expect-error TS(2339): Property 'ringtoneVolume' does not exist on type '... Remove this comment to see the full error message\n      ringtoneVolume,\n      // @ts-expect-error TS(2339): Property 'ringtoneMuted' does not exist on type 'R... Remove this comment to see the full error message\n      ringtoneMuted,\n      // @ts-expect-error TS(2339): Property 'callVolume' does not exist on type 'Read... Remove this comment to see the full error message\n      callVolume,\n      // @ts-expect-error TS(2339): Property 'inputDeviceId' does not exist on type 'R... Remove this comment to see the full error message\n      inputDeviceId,\n      // @ts-expect-error TS(2339): Property 'outputDeviceId' does not exist on type '... Remove this comment to see the full error message\n      outputDeviceId,\n    } = this.props;\n    this.setState({\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      inputDeviceId,\n      outputDeviceId,\n    });\n  };\n\n  onDialButtonVolumeChange = (dialButtonVolume: any) => {\n    this.setState({\n      dialButtonVolume,\n    });\n  };\n\n  onDialButtonMutedChange = (dialButtonMuted: any) => {\n    this.setState({\n      dialButtonMuted,\n    });\n  };\n\n  onRingtoneVolumeChange = (ringtoneVolume: any) => {\n    this.setState({\n      ringtoneVolume,\n    });\n  };\n\n  onRingtoneMutedChange = (ringtoneMuted: any) => {\n    this.setState({\n      ringtoneMuted,\n    });\n  };\n\n  onCallVolumeChange = (callVolume: any) => {\n    this.setState({\n      callVolume,\n    });\n  };\n\n  onOutputDeviceIdChange = (device: any) => {\n    this.setState({\n      outputDeviceId: device.deviceId,\n    });\n  };\n\n  onInputDeviceIdChange = (device: any) => {\n    this.setState({\n      inputDeviceId: device.deviceId,\n    });\n  };\n\n  renderDeviceOption = (device: any, index: any) => {\n    // @ts-expect-error TS(2339): Property 'availableInputDevices' does not exist on... Remove this comment to see the full error message\n    const { availableInputDevices, availableOutputDevices, currentLocale } =\n      this.props;\n    const noLabel = i18n.getString('noLabel', currentLocale);\n    if (device.kind === 'audioinput' && availableInputDevices.length > 1) {\n      return device.label || `${noLabel} ${index + 1}`;\n    }\n    if (device.kind === 'audiooutput' && availableOutputDevices.length > 1) {\n      return device.label || `${noLabel} ${index + 1}`;\n    }\n    return device.label || noLabel;\n  };\n\n  renderDeviceValue(device: any) {\n    return device.deviceId;\n  }\n\n  renderOutputDevice = (value: any) => {\n    // @ts-expect-error TS(2339): Property 'availableOutputDevices' does not exist o... Remove this comment to see the full error message\n    const { availableOutputDevices, currentLocale } = this.props;\n    if (value === null) {\n      return i18n.getString('noDevice', currentLocale);\n    }\n    const device = find(\n      // @ts-expect-error TS(2571): Object is of type 'unknown'.\n      (device) => device.deviceId === value,\n      availableOutputDevices,\n    );\n    let noLabel = i18n.getString('noLabel', currentLocale);\n    if (availableOutputDevices.length > 1) {\n      const index = availableOutputDevices.indexOf(device);\n      if (index >= 0) {\n        noLabel = `${noLabel} ${index + 1}`;\n      }\n    }\n    // @ts-expect-error TS(2571): Object is of type 'unknown'.\n    return (device && device.label) || noLabel;\n  };\n\n  renderInputDevice = (value: any) => {\n    // @ts-expect-error TS(2339): Property 'availableInputDevices' does not exist on... Remove this comment to see the full error message\n    const { availableInputDevices, currentLocale } = this.props;\n    if (value === null) {\n      return i18n.getString('noDevice', currentLocale);\n    }\n    const device = find(\n      // @ts-expect-error TS(2571): Object is of type 'unknown'.\n      (device) => device.deviceId === value,\n      availableInputDevices,\n    );\n    let noLabel = i18n.getString('noLabel', currentLocale);\n    if (availableInputDevices.length > 1) {\n      const index = availableInputDevices.indexOf(device);\n      if (index >= 0) {\n        noLabel = `${noLabel} ${index + 1}`;\n      }\n    }\n    // @ts-expect-error TS(2571): Object is of type 'unknown'.\n    return (device && device.label) || noLabel;\n  };\n\n  isNoLabel() {\n    // @ts-expect-error TS(2339): Property 'availableInputDevices' does not exist on... Remove this comment to see the full error message\n    const { availableInputDevices } = this.props;\n\n    let noLabel = false;\n\n    if (availableInputDevices && availableInputDevices.length) {\n      noLabel = availableInputDevices[0].label === '';\n    } else {\n      noLabel = this._isFirefox;\n    }\n\n    return noLabel;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  render() {\n    const {\n      // @ts-expect-error TS(2339): Property 'currentLocale' does not exist on type 'R... Remove this comment to see the full error message\n      currentLocale,\n      // @ts-expect-error TS(2339): Property 'onBackButtonClick' does not exist on typ... Remove this comment to see the full error message\n      onBackButtonClick,\n      // @ts-expect-error TS(2339): Property 'className' does not exist on type 'Reado... Remove this comment to see the full error message\n      className,\n      // @ts-expect-error TS(2339): Property 'availableOutputDevices' does not exist o... Remove this comment to see the full error message\n      availableOutputDevices,\n      // @ts-expect-error TS(2339): Property 'availableInputDevices' does not exist on... Remove this comment to see the full error message\n      availableInputDevices,\n      // @ts-expect-error TS(2339): Property 'supportDevices' does not exist on type '... Remove this comment to see the full error message\n      supportDevices,\n      // @ts-expect-error TS(2339): Property 'userMedia' does not exist on type 'Reado... Remove this comment to see the full error message\n      userMedia,\n      // @ts-expect-error TS(2339): Property 'isWebRTC' does not exist on type 'Readon... Remove this comment to see the full error message\n      isWebRTC,\n      // @ts-expect-error TS(2339): Property 'checkUserMedia' does not exist on type '... Remove this comment to see the full error message\n      checkUserMedia,\n      // @ts-expect-error TS(2339): Property 'outputDeviceDisabled' does not exist on ... Remove this comment to see the full error message\n      outputDeviceDisabled,\n      // @ts-expect-error TS(2339): Property 'inputDeviceDisabled' does not exist on t... Remove this comment to see the full error message\n      inputDeviceDisabled,\n    } = this.props;\n    const {\n      // @ts-expect-error TS(2339): Property 'dialButtonVolume' does not exist on type... Remove this comment to see the full error message\n      dialButtonVolume,\n      // @ts-expect-error TS(2339): Property 'dialButtonMuted' does not exist on type ... Remove this comment to see the full error message\n      dialButtonMuted,\n      // @ts-expect-error TS(2339): Property 'ringtoneVolume' does not exist on type '... Remove this comment to see the full error message\n      ringtoneVolume,\n      // @ts-expect-error TS(2339): Property 'ringtoneMuted' does not exist on type 'R... Remove this comment to see the full error message\n      ringtoneMuted,\n      // @ts-expect-error TS(2339): Property 'callVolume' does not exist on type 'Read... Remove this comment to see the full error message\n      callVolume,\n      // @ts-expect-error TS(2339): Property 'outputDeviceId' does not exist on type '... Remove this comment to see the full error message\n      outputDeviceId,\n      // @ts-expect-error TS(2339): Property 'inputDeviceId' does not exist on type 'R... Remove this comment to see the full error message\n      inputDeviceId,\n    } = this.state;\n    const hasChanges =\n      // @ts-expect-error TS(2339): Property 'dialButtonVolume' does not exist on type... Remove this comment to see the full error message\n      this.props.dialButtonVolume !== dialButtonVolume ||\n      // @ts-expect-error TS(2339): Property 'dialButtonMuted' does not exist on type ... Remove this comment to see the full error message\n      this.props.dialButtonMuted !== dialButtonMuted ||\n      // @ts-expect-error TS(2339): Property 'ringtoneVolume' does not exist on type '... Remove this comment to see the full error message\n      this.props.ringtoneVolume !== ringtoneVolume ||\n      // @ts-expect-error TS(2339): Property 'ringtoneMuted' does not exist on type 'R... Remove this comment to see the full error message\n      this.props.ringtoneMuted !== ringtoneMuted ||\n      // @ts-expect-error TS(2339): Property 'callVolume' does not exist on type 'Read... Remove this comment to see the full error message\n      this.props.callVolume !== callVolume ||\n      // @ts-expect-error TS(2339): Property 'inputDeviceId' does not exist on type 'R... Remove this comment to see the full error message\n      this.props.inputDeviceId !== inputDeviceId ||\n      // @ts-expect-error TS(2339): Property 'outputDeviceId' does not exist on type '... Remove this comment to see the full error message\n      this.props.outputDeviceId !== outputDeviceId;\n\n    // TODO: improve UI\n    const permission = !userMedia ? (\n      <IconLine\n        noBorder\n        icon={\n          <Button dataSign=\"checkMicPermission\" onClick={checkUserMedia}>\n            {i18n.getString('checkMicPermission')}\n          </Button>\n        }\n      >\n        {i18n.getString('micNoPermissionMessage')}\n      </IconLine>\n    ) : null;\n\n    // const webphoneVolume = isWebRTC ?\n    //   (\n    //     <div>\n    //       <InputField\n    //         label={i18n.getString('ringtoneVolume', currentLocale)}\n    //     >\n    //         {`${ringtoneVolume * 100}%`}\n    //       </InputField>\n    //       <InputField\n    //         label={i18n.getString('callVolume', currentLocale)}\n    //     >\n    //         {`${callVolume * 100}%`}\n    //       </InputField>\n    //     </div>\n    //   ) : null;\n\n    const outputDeviceDropdown = supportDevices ? (\n      <InputField\n        label={<span>{i18n.getString('outputDevice', currentLocale)}</span>}\n        // @ts-expect-error TS(2322): Type '{ children: Element[]; label: Element; noBor... Remove this comment to see the full error message\n        noBorder\n      >\n        <Select\n          className={styles.select}\n          disabled={outputDeviceDisabled}\n          value={availableOutputDevices.length ? outputDeviceId : null}\n          onChange={this.onOutputDeviceIdChange}\n          options={availableOutputDevices}\n          dropdownAlign=\"left\"\n          renderFunction={this.renderDeviceOption}\n          valueFunction={this.renderDeviceValue}\n          renderValue={this.renderOutputDevice}\n          titleEnabled\n        />\n        <div\n          className={styles.tooltipContainer}\n          ref={(tooltipContainer) => {\n            this.outputTooltipContainner = tooltipContainer;\n          }}\n        />\n      </InputField>\n    ) : null;\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices\n    // Prior to Firefox 63, enumerateDevices() only returned input devices. Starting with Firefox 63, output devices are also included if the `media.setsinkid.enabled` preference is enabled.\n    // disabledFrom version 63: this feature is behind the `media.setsinkid.enabled` preferences (needs to be set to true). To change preferences in Firefox, visit about:config.\n    const outputDevice =\n      this._isFirefox && !availableOutputDevices?.length ? (\n        <InputField\n          className={styles.noHeightInputField}\n          label={<span>{i18n.getString('outputDevice', currentLocale)}</span>}\n          // @ts-expect-error TS(2322): Type '{ children: Element; className: string; labe... Remove this comment to see the full error message\n          noBorder\n        >\n          <div className={styles.fakeDropdownContainer}>\n            {i18n.getString('defaultOutputDevice', currentLocale)}\n          </div>\n        </InputField>\n      ) : (\n        outputDeviceDropdown\n      );\n\n    const inputTooltip = this.isNoLabel() ? (\n      <TooltipCom\n        placement=\"bottom\"\n        trigger=\"click\"\n        align={{\n          offset: [0, 47],\n        }}\n        overlay={i18n.getString('noLabelTip', currentLocale)}\n        arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n        getTooltipContainer={() => this.inputTooltipContainner}\n      >\n        <InfoIcon width={14} height={14} className={styles.infoIcon} />\n      </TooltipCom>\n    ) : null;\n    const inputDevice = supportDevices ? (\n      <InputField\n        label={\n          <span>\n            {i18n.getString('inputDevice', currentLocale)}\n            {inputTooltip}\n          </span>\n        }\n        // @ts-expect-error TS(2322): Type '{ children: Element[]; label: Element; noBor... Remove this comment to see the full error message\n        noBorder\n      >\n        <Select\n          className={styles.select}\n          disabled={inputDeviceDisabled}\n          value={availableInputDevices.length ? inputDeviceId : null}\n          onChange={this.onInputDeviceIdChange}\n          options={availableInputDevices}\n          dropdownAlign=\"left\"\n          renderFunction={this.renderDeviceOption}\n          valueFunction={this.renderDeviceValue}\n          renderValue={this.renderInputDevice}\n          titleEnabled\n        />\n        <div\n          className={styles.tooltipContainer}\n          ref={(tooltipContainer) => {\n            this.inputTooltipContainner = tooltipContainer;\n          }}\n        />\n      </InputField>\n    ) : null;\n\n    return (\n      <div className={classnames(styles.root, className)}>\n        <BackHeader onBackClick={onBackButtonClick}>\n          {i18n.getString('title', currentLocale)}\n        </BackHeader>\n        <Panel className={styles.content}>\n          {\n            // <InputField\n            //   label={i18n.getString('dialButtonVolume', currentLocale)}\n            // >\n            //   {`${dialButtonVolume * 100}%`}\n            // </InputField>\n            // webphoneVolume\n          }\n          {outputDevice}\n          {inputDevice}\n          {permission}\n          <SaveButton\n            currentLocale={currentLocale}\n            onClick={this.onSave}\n            disabled={!hasChanges}\n          />\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst devicePropType = {\n  deviceId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\n// @ts-expect-error TS(2339): Property 'propTypes' does not exist on type 'typeo... Remove this comment to see the full error message\nAudioSettingsPanel.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  dialButtonVolume: PropTypes.number.isRequired,\n  ringtoneVolume: PropTypes.number.isRequired,\n  ringtoneMuted: PropTypes.bool.isRequired,\n  callVolume: PropTypes.number.isRequired,\n  dialButtonMuted: PropTypes.bool.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  availableInputDevices: PropTypes.arrayOf(PropTypes.shape(devicePropType))\n    .isRequired,\n  inputDeviceId: PropTypes.string.isRequired,\n  availableOutputDevices: PropTypes.arrayOf(PropTypes.shape(devicePropType))\n    .isRequired,\n  outputDeviceId: PropTypes.string.isRequired,\n  supportDevices: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  userMedia: PropTypes.bool.isRequired,\n  isWebRTC: PropTypes.bool.isRequired,\n  checkUserMedia: PropTypes.func.isRequired,\n  outputDeviceDisabled: PropTypes.bool,\n  inputDeviceDisabled: PropTypes.bool,\n};\n\n// @ts-expect-error TS(2339): Property 'defaultProps' does not exist on type 'ty... Remove this comment to see the full error message\nAudioSettingsPanel.defaultProps = {\n  className: null,\n  outputDeviceDisabled: false,\n  inputDeviceDisabled: false,\n};\n\nexport default AudioSettingsPanel;\n"],"mappings":"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"}