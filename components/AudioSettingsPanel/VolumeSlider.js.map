{"version":3,"file":"VolumeSlider.js","names":["_juno","require","_junoIcon","_react","_interopRequireDefault","e","__esModule","_templateObject3","data","_taggedTemplateLiteral","_templateObject2","_templateObject","t","slice","Object","freeze","defineProperties","raw","value","Container","styled","div","VolumeIconContainer","PaddedSlider","RcSlider","toPercentValue","Math","floor","toValue","percent","VolumeSlider","_ref","className","volume","_ref$minVolume","minVolume","_ref$maxVolume","maxVolume","onChange","createElement","RcIcon","symbol","AudioSp","min","max","step","_","Audio","exports"],"sources":["components/AudioSettingsPanel/VolumeSlider.tsx"],"sourcesContent":["import { RcIcon, RcSlider, styled } from '@ringcentral/juno';\nimport { Audio, AudioSp } from '@ringcentral/juno-icon';\nimport React, { FC } from 'react';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst VolumeIconContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst PaddedSlider = styled(RcSlider)`\n  margin: 0 16px;\n`;\nfunction toPercentValue(value: number) {\n  return Math.floor(value * 100);\n}\nfunction toValue(percent: number) {\n  return percent / 100;\n}\nexport const VolumeSlider: FC<{\n  className?: string;\n  volume: number;\n  minVolume?: number;\n  maxVolume?: number;\n  onChange: (volume: number) => void;\n}> = ({ className, volume, minVolume = 0, maxVolume = 1, onChange }) => {\n  return (\n    <Container className={className}>\n      <VolumeIconContainer>\n        <RcIcon symbol={AudioSp} />\n      </VolumeIconContainer>\n      <PaddedSlider\n        min={toPercentValue(minVolume)}\n        max={toPercentValue(maxVolume)}\n        value={toPercentValue(volume)}\n        step={10}\n        // cast value to number as we are not using ranged slider\n        onChange={(_, value) => onChange(toValue(value as number))}\n      />\n      <VolumeIconContainer>\n        <RcIcon symbol={Audio} />\n      </VolumeIconContainer>\n    </Container>\n  );\n};\n"],"mappings":"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","ignoreList":[]}