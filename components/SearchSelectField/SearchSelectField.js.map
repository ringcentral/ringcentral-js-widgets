{"version":3,"sources":["components/SearchSelectField/SearchSelectField.tsx"],"names":["SearchSelectField","listRenderer","input","InputProps","title","open","onBackClick","currentLocale","rest","currentOpen","setCurrentOpen","toggleOpen","i18n","getString","styles","selectListBasic","searchInput","noResult","placeholder","fillRight","backHeader","options","type","filter","scrollCheck","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAIA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBO,IAAMA,iBAA4D,GAAG,SAA/DA,iBAA+D,OAStE;AAAA,MARJC,YAQI,QARJA,YAQI;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,YAGI,QAHJA,WAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADDC,IACC;;AAAA,kBACkC,qBAASH,IAAT,CADlC;AAAA;AAAA,MACGI,WADH;AAAA,MACgBC,cADhB;;AAEJ,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMD,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,GAAnB;;AAEA,sBACE,kEACGP,KAAK,iBACJ,gCAAC,kCAAD,eACMC,UADN;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMO,UAAU,EAAhB;AAAA;AAHX,KAFJ,eAQE,gCAAC,0CAAD,eACMH,IADN;AAEE,IAAA,KAAK,EAAEJ,KAFT;AAGE,IAAA,WAAW,EAAE,uBAAM;AACjBO,MAAAA,UAAU;;AACVL,MAAAA,YAAW;AACZ,KANH;AAOE,IAAA,WAAW,EAAEM,iBAAKC,SAAL,CAAe,QAAf,EAAyBN,aAAzB,CAPf;AAQE,IAAA,aAAa,EAAEA,aARjB;AASE,IAAA,IAAI,EAAEE,WATR;AAUE,IAAA,wBAAwB,EAAEK,mBAAOC,eAVnC;AAWE,IAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAEF,mBAAOE,WADb;AAEPC,MAAAA,QAAQ,EAAEH,mBAAOG,QAFV;AAGPC,MAAAA,WAAW,EAAEJ,mBAAOI;AAHb,KAXX;AAgBE,IAAA,SAAS,eAAE;AAAK,MAAA,SAAS,EAAEJ,mBAAOK;AAAvB,MAhBb;AAiBE,IAAA,mBAAmB,EAAEL,mBAAOM,UAjB9B;AAkBE,IAAA,cAAc,EAAE,wBAACC,OAAD,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,WAA/B,EAA+C;AAC7D,0BACE,gCAAC,YAAD,QAASvB,YAAY,CAACoB,OAAD,EAAUG,WAAV,EAAuBb,UAAvB,CAArB,CADF;AAGD;AAtBH,KARF,CADF;AAmCD,CAhDM;;;AAkDPX,iBAAiB,CAACyB,YAAlB,GAAiC;AAC/BvB,EAAAA,KAAK,EAAE,KADwB;AAE/BC,EAAAA,UAAU,EAAE,EAFmB;AAG/BG,EAAAA,WAAW,EAAE,uBAAM,CAAE;AAHU,CAAjC","sourcesContent":["import React, { FunctionComponent, ReactNode, useState } from 'react';\n\nimport {\n  SelectListTextField,\n  SelectListTextFieldProps,\n} from '@ringcentral-integration/widgets/components/CallLogFields';\nimport { SelectListBasicWithScrollCheck } from '@ringcentral-integration/widgets/components/SelectList';\nimport { SelectListBasicProps } from '@ringcentral-integration/widgets/components/SelectListBasic';\nimport { RcList } from '@ringcentral/juno';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type SearchSelectFieldProps = {\n  input?: boolean;\n  InputProps?: Omit<SelectListTextFieldProps, 'onClick' | 'label'>;\n  listRenderer: (\n    options: any[],\n    scrollCheck: any,\n    toggleOpen: () => void,\n  ) => ReactNode;\n} & Omit<\n  SelectListBasicProps,\n  | 'selectListBasicClassName'\n  | 'backHeaderClassName'\n  | 'listContainerClassName'\n  | 'renderListView'\n>;\n\nexport const SearchSelectField: FunctionComponent<SearchSelectFieldProps> = ({\n  listRenderer,\n  input,\n  InputProps,\n  title,\n  open,\n  onBackClick,\n  currentLocale,\n  ...rest\n}) => {\n  const [currentOpen, setCurrentOpen] = useState(open);\n  const toggleOpen = () => setCurrentOpen(!currentOpen);\n\n  return (\n    <>\n      {input && (\n        <SelectListTextField\n          {...InputProps}\n          label={title}\n          onClick={() => toggleOpen()}\n        />\n      )}\n      <SelectListBasicWithScrollCheck\n        {...rest}\n        title={title}\n        onBackClick={() => {\n          toggleOpen();\n          onBackClick();\n        }}\n        placeholder={i18n.getString('search', currentLocale)}\n        currentLocale={currentLocale}\n        open={currentOpen}\n        selectListBasicClassName={styles.selectListBasic}\n        classes={{\n          searchInput: styles.searchInput,\n          noResult: styles.noResult,\n          placeholder: styles.placeholder,\n        }}\n        rightIcon={<div className={styles.fillRight} />}\n        backHeaderClassName={styles.backHeader}\n        renderListView={(options: any[], type, filter, scrollCheck) => {\n          return (\n            <RcList>{listRenderer(options, scrollCheck, toggleOpen)}</RcList>\n          );\n        }}\n      />\n    </>\n  );\n};\n\nSearchSelectField.defaultProps = {\n  input: false,\n  InputProps: {},\n  onBackClick: () => {},\n};\n"],"file":"SearchSelectField.js"}