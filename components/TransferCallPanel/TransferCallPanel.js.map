{"version":3,"sources":["components/TransferCallPanel/TransferCallPanel.tsx"],"names":["TransferCallPanel","currentLocale","goBack","clickCallRecipient","transferring","clickTransferTypeFiled","setStayOnCall","isStayOnCall","transferOptions","selectedTransferType","textFields","transferCallDisabled","transferCall","setCancelTemplate","cancelTransfer","cancelTransferPage","isWide","i18n","getString","endAdornment","disabled","dialerSvg","styles","wrapper","container","type","map","index","label","value","placeholder","readonly","router","root","nonePointerEvent","undefined","readOnly","classes","stayOnCall","buttons","cancelButton"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useCallback, useEffect } from 'react';\n\nimport { CustomArrowButton } from '@ringcentral-integration/widgets/components/Rcui/CustomArrowButton';\nimport {\n  RcButton,\n  RcCheckbox,\n  RcIconButton,\n  RcSnackbarAction,\n  RcTextField,\n} from '@ringcentral/juno';\nimport { Dialer as dialerSvg } from '@ringcentral/juno/icon';\n\nimport {\n  EvTransferCallUIFunctions,\n  EvTransferCallUIProps,\n} from '../../interfaces';\nimport { PickList } from '../PickList';\nimport { BackHeader } from '../SelectList';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type TransferCallPanelProps = Pick<\n  EvTransferCallUIProps & EvTransferCallUIFunctions,\n  | 'currentLocale'\n  | 'goBack'\n  | 'clickCallRecipient'\n  | 'transferring'\n  | 'clickTransferTypeFiled'\n  | 'setStayOnCall'\n  | 'isStayOnCall'\n  | 'transferOptions'\n  | 'selectedTransferType'\n  | 'textFields'\n  | 'transferCallDisabled'\n  | 'transferCall'\n  | 'setCancelTemplate'\n  | 'cancelTransfer'\n  | 'cancelTransferPage'\n  | 'isWide'\n>;\n\nconst TransferCallPanel: FunctionComponent<TransferCallPanelProps> = ({\n  currentLocale,\n  goBack,\n  clickCallRecipient,\n  transferring,\n  clickTransferTypeFiled,\n  setStayOnCall,\n  isStayOnCall,\n  transferOptions,\n  selectedTransferType,\n  textFields,\n  transferCallDisabled,\n  transferCall,\n  setCancelTemplate,\n  cancelTransfer,\n  cancelTransferPage,\n  isWide,\n}) => {\n  useEffect(() => {\n    setCancelTemplate(\n      <RcSnackbarAction onClick={() => cancelTransfer()}>\n        {i18n.getString('cancel', currentLocale)}\n      </RcSnackbarAction>,\n    );\n  }, []);\n\n  const endAdornment = useCallback(\n    (disabled) =>\n      selectedTransferType === 'manualEntry' ? (\n        <RcIconButton\n          size=\"medium\"\n          color=\"interactive.f01\"\n          variant=\"plain\"\n          symbol={dialerSvg}\n        />\n      ) : (\n        <CustomArrowButton disabled={disabled} />\n      ),\n    [selectedTransferType],\n  );\n\n  return (\n    <>\n      <BackHeader\n        currentLocale={currentLocale}\n        title={i18n.getString('transfer', currentLocale)}\n        onBackClick={goBack}\n      />\n      <div className={styles.wrapper}>\n        <div className={styles.container}>\n          <PickList\n            data-sign=\"transferType\"\n            options={transferOptions}\n            label={i18n.getString('transferType', currentLocale)}\n            optionValueKey=\"type\"\n            value={selectedTransferType}\n            onChange={(type) => {\n              clickTransferTypeFiled(type);\n            }}\n          />\n          {textFields?.map(\n            (\n              { label, value, placeholder, disabled, readonly, router },\n              index,\n            ) => (\n              <RcTextField\n                key={index}\n                gutterBottom\n                data-sign={`callRecipient${index}`}\n                disabled={disabled}\n                label={label}\n                value={value}\n                fullWidth\n                clearBtn={false}\n                placeholder={placeholder}\n                classes={{\n                  root: readonly ? styles.nonePointerEvent : undefined,\n                }}\n                InputProps={\n                  !readonly\n                    ? {\n                        readOnly: true,\n                        endAdornment: endAdornment(disabled),\n                      }\n                    : undefined\n                }\n                onClick={() => clickCallRecipient(router)}\n              />\n            ),\n          )}\n          <RcCheckbox\n            data-sign=\"stayOnCall\"\n            label={i18n.getString('stayOnCall', currentLocale)}\n            checked={isStayOnCall}\n            onClick={() => setStayOnCall(isStayOnCall)}\n            formControlLabelProps={{\n              classes: { root: styles.stayOnCall },\n            }}\n          />\n        </div>\n        <div className={styles.buttons}>\n          <RcButton\n            data-sign=\"cancel\"\n            classes={{\n              root: styles.cancelButton,\n            }}\n            fullWidth={!isWide}\n            size=\"medium\"\n            onClick={cancelTransferPage}\n            variant=\"outlined\"\n          >\n            {i18n.getString('cancel', currentLocale)}\n          </RcButton>\n          <RcButton\n            data-sign=\"transferCall\"\n            disabled={transferCallDisabled}\n            loading={transferring}\n            fullWidth={!isWide}\n            size=\"medium\"\n            onClick={transferCall}\n          >\n            {i18n.getString('Transfer', currentLocale)}\n          </RcButton>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport { TransferCallPanel };\n"],"file":"TransferCallPanel.js"}