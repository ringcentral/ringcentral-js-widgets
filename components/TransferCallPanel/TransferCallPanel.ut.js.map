{"version":3,"sources":["components/TransferCallPanel/TransferCallPanel.ut.tsx"],"names":["currentLocale","defaultTransferOptions","type","transferTypes","phoneBook","label","i18n","getString","textFields","placeholder","value","disabled","router","manualEntry","internal","defaultTextFields","setup","goBack","clickCallRecipient","transferring","clickTransferTypeFiled","setStayOnCall","isStayOnCall","transferOptions","selectedTransferType","transferCallDisabled","transferCall","setCancelTemplate","cancelTransfer","cancelTransferPage","getTransferCallButton","wrapper","find","at","UTCheckTransferCallRenderCases","title","UTCheckTransferCallRender","jest","fn","option","forEach","textField","index","expect","prop","toBe","transferTypePickList","unmount","UTCheckBackButton","simulate","toBeCalled","UTUserClickCallRecipientCases","UTUserClickCallRecipient","selectIndex","callRecipient","toBeCalledWith","UTSetStayOnCallCases","UTSetStayOnCall","checkbox","UTTransferCallButtonDisabled","transferCallButton","not","UTWhenCallTransfering","length"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mount } from 'enzyme';\n\nimport { StepFunction } from '@ringcentral-integration/test-utils';\nimport { RcThemeProvider } from '@ringcentral/juno';\n\nimport { transferTypes } from '../../enums/transferTypes';\nimport { EvTransferOption } from '../../interfaces';\nimport i18n from './i18n';\nimport { TransferCallPanel, TransferCallPanelProps } from './TransferCallPanel';\n\nconst currentLocale = 'en-US';\nconst defaultTransferOptions: EvTransferOption[] = [\n  {\n    type: transferTypes.phoneBook,\n    label: i18n.getString(transferTypes.phoneBook, currentLocale),\n    textFields: [\n      {\n        label: i18n.getString('callRecipientName', currentLocale),\n        placeholder: i18n.getString(\n          'callRecipientNamePlaceholder',\n          currentLocale,\n        ),\n        value: '',\n        disabled: false,\n        router: `/activityCallLog/123456789/transferCall/phoneBook`,\n      },\n      {\n        label: i18n.getString('callRecipientNumber', currentLocale),\n        placeholder: i18n.getString(\n          'callRecipientNumberPlaceholder',\n          currentLocale,\n        ),\n        value: '',\n        disabled: true,\n      },\n    ],\n  },\n  {\n    type: transferTypes.manualEntry,\n    label: i18n.getString(transferTypes.manualEntry, currentLocale),\n    textFields: [\n      {\n        label: i18n.getString('phoneNumber', currentLocale),\n        placeholder: i18n.getString(\n          'enterThePhoneNumberPlaceholder',\n          currentLocale,\n        ),\n        router: `/activityCallLog/123456789/transferCall/manualEntry`,\n        value: '',\n        disabled: false,\n      },\n    ],\n  },\n  {\n    type: transferTypes.internal,\n    label: i18n.getString(transferTypes.internal, currentLocale),\n    textFields: [\n      {\n        label: i18n.getString('callRecipientName', currentLocale),\n        placeholder: i18n.getString(\n          'callRecipientNamePlaceholder',\n          currentLocale,\n        ),\n        router: `/activityCallLog/123456789/transferCall/internal`,\n        value: '',\n        disabled: false,\n      },\n    ],\n  },\n];\nconst defaultTextFields = defaultTransferOptions[0].textFields;\n\nfunction setup({\n  currentLocale = 'en-US',\n  goBack = () => {},\n  clickCallRecipient = () => {},\n  transferring = false,\n  clickTransferTypeFiled = () => {},\n  setStayOnCall = () => {},\n  isStayOnCall = false,\n  transferOptions = defaultTransferOptions,\n  selectedTransferType = transferTypes.phoneBook,\n  textFields = defaultTextFields,\n  transferCallDisabled = false,\n  transferCall = () => {},\n  setCancelTemplate = () => {},\n  cancelTransfer = () => {},\n  cancelTransferPage = () => {},\n}: Partial<TransferCallPanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <TransferCallPanel\n        currentLocale={currentLocale}\n        goBack={goBack}\n        clickCallRecipient={clickCallRecipient}\n        transferring={transferring}\n        clickTransferTypeFiled={clickTransferTypeFiled}\n        setStayOnCall={setStayOnCall}\n        isStayOnCall={isStayOnCall}\n        transferOptions={transferOptions}\n        selectedTransferType={selectedTransferType}\n        textFields={textFields}\n        transferCallDisabled={transferCallDisabled}\n        transferCall={transferCall}\n        setCancelTemplate={setCancelTemplate}\n        cancelTransfer={cancelTransfer}\n        cancelTransferPage={cancelTransferPage}\n      />\n    </RcThemeProvider>,\n  );\n}\n\nconst getTransferCallButton = (wrapper) =>\n  wrapper.find('RcButton[data-sign=\"transferCall\"]').at(0).find('button');\n\nexport const UTCheckTransferCallRenderCases = [\n  {\n    title:\n      'Can display transferType, callRecipient correctly, and can click to change TransferType',\n    selectedTransferType: transferTypes.internal,\n    transferOptions: defaultTransferOptions,\n  },\n  {\n    title:\n      'Can display transferType, callRecipient correctly, and can click to change TransferType',\n    selectedTransferType: transferTypes.phoneBook,\n    transferOptions: defaultTransferOptions,\n  },\n  {\n    title:\n      'Can display transferType, callRecipient correctly, and can click to change TransferType',\n    selectedTransferType: transferTypes.manualEntry,\n    transferOptions: defaultTransferOptions,\n  },\n];\n\nexport const UTCheckTransferCallRender: StepFunction<any> = ({\n  selectedTransferType,\n  transferOptions,\n}) => {\n  const clickTransferTypeFiled = jest.fn(() => {});\n  const wrapper = setup({\n    transferOptions,\n    selectedTransferType,\n    clickTransferTypeFiled,\n  });\n  const { textFields = [] } =\n    transferOptions.find((option) => option.type === selectedTransferType) ||\n    {};\n  textFields.forEach((textField, index) => {\n    expect(\n      wrapper\n        .find(`RcTextField[data-sign=\"callRecipient${index}\"]`)\n        .prop('value'),\n    ).toBe(textField.value);\n  });\n  const transferTypePickList = wrapper.find(\n    'PickList[data-sign=\"transferType\"]',\n  );\n  expect(transferTypePickList.prop('value')).toBe(selectedTransferType);\n  wrapper.unmount();\n};\n\nexport const UTCheckBackButton: StepFunction = () => {\n  const goBack = jest.fn(() => {});\n  const wrapper = setup({ goBack });\n  wrapper\n    .find('[data-sign=\"backButton\"]')\n    .at(0)\n    .find('button')\n    .simulate('click');\n  expect(goBack).toBeCalled();\n};\n\nexport const UTUserClickCallRecipientCases = [\n  {\n    title: 'User can click callRecipient field to change callRecipient',\n    selectedTransferType: transferTypes.internal,\n  },\n  {\n    title: 'User can click callRecipient field to change callRecipient',\n    selectedTransferType: transferTypes.phoneBook,\n  },\n  {\n    title: 'User can click callRecipient field to change callRecipient',\n    selectedTransferType: transferTypes.manualEntry,\n  },\n];\n\nexport const UTUserClickCallRecipient: StepFunction<any> = () => {\n  const clickCallRecipient = jest.fn();\n\n  const textFields = defaultTextFields;\n  const selectIndex = 0;\n\n  const wrapper = setup({ clickCallRecipient, textFields });\n  const callRecipient = wrapper.find(\n    `RcTextField[data-sign=\"callRecipient${selectIndex}\"]`,\n  );\n\n  callRecipient.find('input').at(0).simulate('click');\n\n  expect(clickCallRecipient).toBeCalledWith(\n    defaultTextFields[selectIndex].router,\n  );\n};\n\nexport const UTSetStayOnCallCases = [\n  {\n    title:\n      'When StayOnCall, click the StayOnCall, setStayOnCall will be called',\n    isStayOnCall: true,\n  },\n  {\n    title:\n      'When not StayOnCall, click the StayOnCall, setStayOnCall will be called',\n    isStayOnCall: false,\n  },\n];\n\nexport const UTSetStayOnCall: StepFunction<any> = ({ isStayOnCall }) => {\n  const setStayOnCall = jest.fn(() => {});\n  const wrapper = setup({\n    setStayOnCall,\n    isStayOnCall,\n  });\n  const checkbox = wrapper\n    .find('span[data-sign=\"stayOnCall\"]')\n    .at(0)\n    .find('input[type=\"checkbox\"]')\n    .at(0);\n  expect(checkbox.prop('checked')).toBe(isStayOnCall);\n  checkbox.simulate('click');\n  expect(setStayOnCall).toBeCalledWith(isStayOnCall);\n  wrapper.unmount();\n};\n\nexport const UTTransferCallButtonDisabled: StepFunction = () => {\n  const transferCall = jest.fn(() => {});\n  const wrapper = setup({\n    transferCallDisabled: true,\n    transferCall,\n  });\n  const transferCallButton = getTransferCallButton(wrapper);\n  expect(transferCallButton.prop('disabled')).toBe(true);\n  transferCallButton.simulate('click');\n  expect(transferCall).not.toBeCalled();\n};\n\nexport const UTWhenCallTransfering: StepFunction = () => {\n  const transferring = true;\n  const wrapper = setup({\n    transferring,\n  });\n  expect(getTransferCallButton(wrapper).find('RcCircularProgress').length).toBe(\n    1,\n  );\n};\n"],"file":"TransferCallPanel.ut.js"}