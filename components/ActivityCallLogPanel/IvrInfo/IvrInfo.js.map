{"version":3,"sources":["components/ActivityCallLogPanel/IvrInfo/IvrInfo.tsx"],"names":["IvrInfo","isCallEnd","ivrAlertData","agentScriptData","expanded","setExpanded","styles","ivrPanel","remain","container","root","panelRoot","endCall","summaryRoot","summaryAgentScriptIconPaddingRight","content","summaryContent","summaryAgentScriptIconWidth","size","ArrowDown2","ivrMainSubject","subject","length","count","detailsRoot","map","i","body","bodyRender","item"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;;;;;;;;;;;;;;;;;;;AAMO,IAAMA,OAAwC,GAAG,SAA3CA,OAA2C,OAIlD;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,eACI,QADJA,eACI;;AAAA,kBAC4B,qBAAS,KAAT,CAD5B;AAAA;AAAA,MACGC,QADH;AAAA,MACaC,WADb;;AAGJ,wBAAU,YAAM;AACd,QAAIJ,SAAJ,EAAe;AACbI,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAJD,EAIG,CAACJ,SAAD,CAJH;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEK,mBAAOC;AAAvB,kBACE;AAAG,IAAA,SAAS,EAAED,mBAAOE;AAArB,IADF,eAEE;AAAK,IAAA,SAAS,EAAEF,mBAAOG;AAAvB,kBACE,gCAAC,sBAAD;AACE,IAAA,QAAQ,EAAE;AAAA,aAAMJ,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA,KADZ;AAEE,IAAA,QAAQ,EAAEA,QAFZ;AAGE,IAAA,OAAO,EAAE;AACPM,MAAAA,IAAI,EAAE,4BAAWJ,mBAAOK,SAAlB,EAA6BV,SAAS,IAAIK,mBAAOM,OAAjD,CADC;AAEPR,MAAAA,QAAQ,EAAEE,mBAAOF;AAFV;AAHX,kBAQE,gCAAC,oCAAD;AACE,IAAA,OAAO,EAAE;AACPM,MAAAA,IAAI,EAAE,4BACJJ,mBAAOO,WADH,EAEJV,eAAe,IAAIG,mBAAOQ,kCAFtB,CADC;AAKPC,MAAAA,OAAO,EAAE,4BACPT,mBAAOU,cADA,EAEPb,eAAe,IAAIG,mBAAOW,2BAFnB;AALF,KADX;AAWE,IAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAE;AADS,KAXnB;AAcE,IAAA,UAAU,EAAEC;AAdd,kBAgBE;AACE,IAAA,SAAS,EAAE,4BACTb,mBAAOc,cADE,EAETjB,eAAe,IAAIG,mBAAOW,2BAFjB;AADb,KAMGf,YAAY,CAAC,CAAD,CAAZ,CAAgBmB,OAAhB,IAA2B,EAN9B,CAhBF,EAwBGnB,YAAY,CAACoB,MAAb,GAAsB,CAAtB,gBACC;AAAM,IAAA,SAAS,EAAEhB,mBAAOiB;AAAxB,WAAkCrB,YAAY,CAACoB,MAAb,GAAsB,CAAxD,CADD,GAEG,IA1BN,CARF,eAoCE,gCAAC,oCAAD;AACE,IAAA,OAAO,EAAE;AACPZ,MAAAA,IAAI,EAAEJ,mBAAOkB;AADN;AADX,KAKGtB,YAAY,CAACuB,GAAb,CAAiB,iBAA8BC,CAA9B,EAAoC;AAAA,8BAAjCL,OAAiC;AAAA,QAAjCA,OAAiC,8BAAvB,EAAuB;AAAA,2BAAnBM,IAAmB;AAAA,QAAnBA,IAAmB,2BAAZ,EAAY;;AACpD,QAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,UAAID,IAAI,CAACL,MAAL,GAAc,CAAlB,EAAqB;AACnB,4BAAO;AAAK,UAAA,SAAS,EAAEhB,mBAAOqB;AAAvB,WAA8BA,IAA9B,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KALD;;AAOA,wBACE;AAAK,MAAA,SAAS,EAAErB,mBAAOuB,IAAvB;AAA6B,MAAA,GAAG,EAAEH;AAAlC,OACGA,CAAC,KAAK,CAAN,IAAWL,OAAO,CAACC,MAAR,GAAiB,CAA5B,iBACC;AAAK,MAAA,SAAS,EAAEhB,mBAAOe;AAAvB,OAAiCA,OAAjC,CAFJ,EAIGO,UAAU,EAJb,CADF;AAQD,GAhBA,CALH,CApCF,CADF,CAFF,CADF;AAmED,CAhFM","sourcesContent":["import { RcAccordion } from '@ringcentral/juno/components/Accordion';\nimport { RcAccordionDetails } from '@ringcentral/juno/components/Accordion/AccordionDetails';\nimport { RcAccordionSummary } from '@ringcentral/juno/components/Accordion/AccordionSummary';\nimport { ArrowDown2 } from '@ringcentral/juno/icon';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, useEffect, useState } from 'react';\n\nimport {\n  EvActivityCallUIFunctions,\n  EvActivityCallUIProps,\n} from '../../../interfaces';\nimport styles from './styles.scss';\n\nexport type IvrInfoProps = { isCallEnd: boolean } & Pick<\n  EvActivityCallUIProps & EvActivityCallUIFunctions,\n  'ivrAlertData' | 'agentScriptData'\n>;\nexport const IvrInfo: FunctionComponent<IvrInfoProps> = ({\n  isCallEnd,\n  ivrAlertData,\n  agentScriptData,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isCallEnd) {\n      setExpanded(false);\n    }\n  }, [isCallEnd]);\n\n  return (\n    <div className={styles.ivrPanel}>\n      <i className={styles.remain} />\n      <div className={styles.container}>\n        <RcAccordion\n          onChange={() => setExpanded(!expanded)}\n          expanded={expanded}\n          classes={{\n            root: classNames(styles.panelRoot, isCallEnd && styles.endCall),\n            expanded: styles.expanded,\n          }}\n        >\n          <RcAccordionSummary\n            classes={{\n              root: classNames(\n                styles.summaryRoot,\n                agentScriptData && styles.summaryAgentScriptIconPaddingRight,\n              ),\n              content: classNames(\n                styles.summaryContent,\n                agentScriptData && styles.summaryAgentScriptIconWidth,\n              ),\n            }}\n            IconButtonProps={{\n              size: 'small',\n            }}\n            expandIcon={ArrowDown2}\n          >\n            <span\n              className={classNames(\n                styles.ivrMainSubject,\n                agentScriptData && styles.summaryAgentScriptIconWidth,\n              )}\n            >\n              {ivrAlertData[0].subject || ''}\n            </span>\n            {ivrAlertData.length > 1 ? (\n              <span className={styles.count}> +{ivrAlertData.length - 1}</span>\n            ) : null}\n          </RcAccordionSummary>\n          <RcAccordionDetails\n            classes={{\n              root: styles.detailsRoot,\n            }}\n          >\n            {ivrAlertData.map(({ subject = '', body = '' }, i) => {\n              const bodyRender = () => {\n                if (body.length > 0) {\n                  return <div className={styles.body}>{body}</div>;\n                }\n                return null;\n              };\n\n              return (\n                <div className={styles.item} key={i}>\n                  {i !== 0 && subject.length > 0 && (\n                    <div className={styles.subject}>{subject}</div>\n                  )}\n                  {bodyRender()}\n                </div>\n              );\n            })}\n          </RcAccordionDetails>\n        </RcAccordion>\n      </div>\n    </div>\n  );\n};\n"],"file":"IvrInfo.js"}