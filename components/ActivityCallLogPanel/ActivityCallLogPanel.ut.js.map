{"version":3,"file":"ActivityCallLogPanel.ut.js","names":["_ActivityCallLogPage","require","_utils","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","UTActivityCallLogPanel","_ref","regeneratorRuntime","mark","_callee","props","context","id","wrapper","index","getSelectList","openField","addMenuIcon","menuItems","wrap","_callee$","_context","prev","next","getCurrentRouteId","phone","routerInteraction","currentPath","moduleUIPageMount","ActivityCallLogPage","menuType","find","at","simulate","concat","entityName","unmount","stop","_x","_x2","exports"],"sources":["components/ActivityCallLogPanel/ActivityCallLogPanel.ut.tsx"],"sourcesContent":["import type { StepFunction } from '@ringcentral-integration/test-utils';\n\nimport { ActivityCallLogPage } from '../../containers/ActivityCallLogPage';\nimport { getCurrentRouteId, moduleUIPageMount } from '../../test/utils';\n\nexport const UTActivityCallLogPanel: StepFunction<any, any> = async (\n  props,\n  context,\n) => {\n  const id = getCurrentRouteId(context.phone.routerInteraction.currentPath);\n\n  const wrapper = moduleUIPageMount(ActivityCallLogPage, { id });\n\n  let index = 0;\n\n  if (props.menuType === 'whatid') {\n    index = 1;\n  }\n\n  const getSelectList = () => {\n    return wrapper\n      .find('EditLogSection')\n      .find('CallLogFields')\n      .find('FieldItem')\n      .find('SelectList')\n      .at(index);\n  };\n\n  const openField = getSelectList()\n    .find('[data-sign=\"select-list-open\"]')\n    .at(0);\n\n  openField.simulate('click');\n\n  const addMenuIcon = getSelectList()\n    .find('RcIconButton[data-sign=\"addEntityMenu\"]')\n    .find('button');\n\n  addMenuIcon.simulate('click');\n\n  const menuItems = getSelectList().find('RcMenuItem');\n\n  menuItems.find(`[title=\"New ${props.entityName}\"]`).simulate('click');\n  wrapper.unmount();\n};\n"],"mappings":"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","ignoreList":[]}