{"version":3,"sources":["components/DialerPanelV2/DialerPanel.tsx"],"names":["DialerPanelContainer","styled","div","fullSizeStyle","BodyBottom","flexCenterStyle","DialerWrapper","DialerPanel","props","currentLocale","onToNumberChange","toNumber","fromNumber","fromNumbers","changeFromNumber","formatPhone","isWebphoneMode","showSpinner","recipients","setRecipient","clearRecipient","autoFocus","showFromField","disableFromField","children","showAnonymous","dialButtonMuted","dialButtonVolume","onCallButtonClick","callButtonDisabled","withTabs","value","RcDialerPadSounds","v","Phone","Empty","defaultProps","className","dialButtonsClassName","phoneNumber","inConference","isLastInputFromDialpad"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport {\n  styled,\n  palette2,\n  RcDialPad,\n  RcIconButton,\n  spacing,\n  flexCenterStyle,\n  RcDialerPadSounds,\n} from '@ringcentral/juno';\nimport Phone from '@ringcentral/juno/icon/Phone';\nimport { Recipient } from '../RecipientsInputV2/RecipientsInputV2.interface';\nimport { SpinnerOverlay } from '../SpinnerOverlay';\nimport { CommunicationSetupPanel } from '../CommunicationSetupPanel';\nimport { fullSizeStyle } from '../../lib/commonStyles';\n\nexport interface DialerPanelProps {\n  currentLocale: string;\n  className?: string;\n  dialButtonsClassName?: string;\n  onCallButtonClick: (...args: any[]) => any;\n  callButtonDisabled?: boolean;\n  isWebphoneMode?: boolean;\n  toNumber?: string;\n  onToNumberChange?: (...args: any[]) => any;\n  fromNumber?: string;\n  fromNumbers?: {\n    phoneNumber: string;\n    usageType?: string;\n  }[];\n  changeFromNumber?: (...args: any[]) => any;\n  formatPhone?: (...args: any[]) => any;\n  showSpinner?: boolean;\n  dialButtonVolume?: number;\n  dialButtonMuted?: boolean;\n  searchContact: (...args: any[]) => any;\n  searchContactList: {\n    name: string;\n    entityType: string;\n    phoneType: string;\n    phoneNumber: string;\n  }[];\n  recipient?: Recipient;\n  recipients: Recipient[];\n  clearToNumber: (...args: any[]) => any;\n  setRecipient: (...args: any[]) => any;\n  clearRecipient: (...args: any[]) => any;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  recipientsContactInfoRenderer?: (...args: any[]) => any;\n  recipientsContactPhoneRenderer?: (...args: any[]) => any;\n  autoFocus?: boolean;\n  showFromField?: boolean;\n  disableFromField?: boolean;\n  withTabs?: boolean;\n  inConference?: boolean;\n  isLastInputFromDialpad?: boolean;\n  useV2?: boolean;\n  showAnonymous?: boolean;\n}\nconst DialerPanelContainer = styled.div`\n  ${fullSizeStyle};\n  box-sizing: border-box;\n  background: ${palette2('neutral', 'f01')};\n`;\n\nconst BodyBottom = styled.div`\n  ${flexCenterStyle};\n  margin-bottom: ${spacing(7)};\n`;\n\n// TODO: check withTabs\nconst DialerWrapper = styled.div<{ withTabs: boolean }>`\n  flex: 1 1 auto;\n  margin: ${spacing(2, 11)};\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const DialerPanel: FunctionComponent<DialerPanelProps> = (props) => {\n  const {\n    currentLocale,\n    onToNumberChange,\n    toNumber,\n    fromNumber,\n    fromNumbers,\n    changeFromNumber,\n    formatPhone,\n    isWebphoneMode,\n    showSpinner,\n    recipients,\n    setRecipient,\n    clearRecipient,\n    autoFocus,\n    showFromField = true,\n    disableFromField = false,\n    children,\n    showAnonymous,\n    dialButtonMuted,\n    dialButtonVolume,\n    onCallButtonClick,\n    callButtonDisabled,\n    withTabs,\n  } = props;\n\n  // TODO: when have tag should check if need disable dial button\n  // const hasTags = recipients.length > 0;\n\n  return (\n    <DialerPanelContainer>\n      <CommunicationSetupPanel\n        // To field\n        recipients={recipients}\n        toNumber={toNumber}\n        onToNumberChange={onToNumberChange}\n        setRecipient={setRecipient}\n        clearRecipient={clearRecipient}\n        autoFocus={autoFocus}\n        // From field\n        showAnonymous={showAnonymous}\n        fromNumber={fromNumber}\n        fromNumbers={fromNumbers}\n        changeFromNumber={changeFromNumber}\n        formatPhone={formatPhone}\n        showFromField={showFromField && isWebphoneMode}\n        disableFromField={disableFromField}\n        // Common\n        currentLocale={currentLocale}\n      >\n        <DialerWrapper withTabs={withTabs}>\n          <RcDialPad\n            onChange={(value) => {\n              onToNumberChange(toNumber + value, true);\n            }}\n            sounds={RcDialerPadSounds}\n            getDialPadButtonProps={(v) => ({ 'data-test-id': `${v}` })}\n            volume={dialButtonVolume}\n            muted={dialButtonMuted}\n          />\n        </DialerWrapper>\n        <BodyBottom>\n          <RcIconButton\n            data-sign=\"callButton\"\n            color=\"success.b03\"\n            symbol={Phone}\n            size=\"large\"\n            variant=\"contained\"\n            elevation=\"0\"\n            activeElevation=\"0\"\n            onClick={onCallButtonClick}\n            disabled={callButtonDisabled}\n          />\n        </BodyBottom>\n        {showSpinner ? <SpinnerOverlay /> : null}\n        {children}\n      </CommunicationSetupPanel>\n    </DialerPanelContainer>\n  );\n};\n\nconst Empty: FunctionComponent = () => null;\n\nDialerPanel.defaultProps = {\n  className: null,\n  dialButtonsClassName: null,\n  fromNumber: null,\n  callButtonDisabled: false,\n  toNumber: '',\n  fromNumbers: [],\n  isWebphoneMode: false,\n  changeFromNumber: Empty,\n  onToNumberChange: Empty,\n  formatPhone: (phoneNumber) => phoneNumber,\n  showSpinner: false,\n  dialButtonVolume: 1,\n  dialButtonMuted: false,\n  recipients: [],\n  autoFocus: false,\n  showFromField: true,\n  disableFromField: false,\n  withTabs: false,\n  inConference: false,\n  isLastInputFromDialpad: false,\n  showAnonymous: true,\n};\n"],"file":"DialerPanel.js"}