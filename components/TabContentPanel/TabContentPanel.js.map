{"version":3,"sources":["components/TabContentPanel/TabContentPanel.tsx"],"names":["TabContentPanel","showTabs","navClassName","tabContentClassName","tabs","goTo","tooltipForceHide","children","renderChildren","formattedTabs","map","tab","icon","label","isActive","dataSign","path","styles","root","MessageTabButton","tabBar","content","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;;;;;AAgBA,IAAMA,eAA+C,GAAG,SAAlDA,eAAkD,OAQlD;AAAA;;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,YAMI,QANJA,YAMI;AAAA,MALJC,mBAKI,QALJA,mBAKI;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,gBAEI,QAFJA,gBAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClC,aAAOA,QAAQ,CAAC;AAAEN,QAAAA,QAAQ,EAARA;AAAF,OAAD,CAAf;AACD;;AACD,WAAOM,QAAP;AACD,GALD;;AAOA,MAAI,CAACN,QAAL,EAAe;AACb,WAAOO,cAAc,EAArB;AACD;;AAED,MAAMC,aAAa,GAAGL,IAAI,CAACM,GAAL,CAAS,UAACC,GAAD;AAAA,WAAU;AACvCC,MAAAA,IAAI,eACF,gCAAC,kBAAD;AACE,QAAA,KAAK,EAAED,GAAG,CAACE,KADb;AAEE,QAAA,QAAQ,EAAEF,GAAG,CAACG,QAFhB;AAGE,qBAAWH,GAAG,CAACI;AAHjB,QAFqC;AAQvCF,MAAAA,KAAK,EAAEF,GAAG,CAACE,KAR4B;AASvCG,MAAAA,IAAI,EAAEL,GAAG,CAACK,IAT6B;AAUvCF,MAAAA,QAAQ,EAAEH,GAAG,CAACG;AAVyB,KAAV;AAAA,GAAT,CAAtB;AAaA,sBACE;AAAK,IAAA,SAAS,EAAEG,mBAAOC;AAAvB,kBACE,gCAAC,yBAAD;AACE,IAAA,MAAM,EAAEC,kCADV;AAEE,IAAA,SAAS,EAAE,6EACRF,mBAAOG,MADC,EACQ,IADR,gCAERlB,YAFQ,EAEO,CAAC,CAACA,YAFT,gBAFb;AAME,IAAA,WAAW,EAAC,EANd;AAOE,IAAA,IAAI,EAAEG,IAPR;AAQE,IAAA,IAAI,EAAEI,aARR;AASE,IAAA,WAAW,EAAE,KATf;AAUE,IAAA,gBAAgB,EAAEH;AAVpB,IADF,eAaE;AACE,IAAA,SAAS,EAAE,+EACRW,mBAAOI,OADC,EACS,IADT,iCAERlB,mBAFQ,EAEc,CAAC,CAACA,mBAFhB;AADb,KAMGK,cAAc,EANjB,CAbF,CADF;AAwBD,CAzDD;;AA2DAR,eAAe,CAACsB,YAAhB,GAA+B;AAC7BrB,EAAAA,QAAQ,EAAE,KADmB;AAE7BC,EAAAA,YAAY,EAAE,IAFe;AAG7BC,EAAAA,mBAAmB,EAAE;AAHQ,CAA/B;eAMeH,e","sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\n\nimport { MessageTabButton } from '../MessageTabButton';\nimport NavigationBar from '../NavigationBar';\nimport styles from './styles.scss';\nimport { TabTitle } from './TabTitle';\n\ntype TabContentPanelProps = {\n  showTabs?: boolean;\n  tabs: {\n    path: string;\n    label: string;\n    isActive: (...args: any[]) => any;\n    dataSign: string;\n  }[];\n  goTo: (...args: any[]) => any;\n  navClassName?: string;\n  tabContentClassName?: string;\n  tooltipForceHide?: boolean;\n};\n\nconst TabContentPanel: React.FC<TabContentPanelProps> = ({\n  showTabs,\n  navClassName,\n  tabContentClassName,\n  tabs,\n  goTo,\n  tooltipForceHide,\n  children,\n}) => {\n  const renderChildren = () => {\n    if (typeof children === 'function') {\n      return children({ showTabs });\n    }\n    return children;\n  };\n\n  if (!showTabs) {\n    return renderChildren();\n  }\n\n  const formattedTabs = tabs.map((tab) => ({\n    icon: (\n      <TabTitle\n        label={tab.label}\n        isActive={tab.isActive}\n        data-sign={tab.dataSign}\n      />\n    ),\n    label: tab.label,\n    path: tab.path,\n    isActive: tab.isActive,\n  }));\n\n  return (\n    <div className={styles.root}>\n      <NavigationBar\n        button={MessageTabButton}\n        className={classnames({\n          [styles.tabBar]: true,\n          [navClassName]: !!navClassName,\n        })}\n        currentPath=\"\"\n        goTo={goTo}\n        tabs={formattedTabs}\n        fullSizeInk={false}\n        tooltipForceHide={tooltipForceHide}\n      />\n      <div\n        className={classnames({\n          [styles.content]: true,\n          [tabContentClassName]: !!tabContentClassName,\n        })}\n      >\n        {renderChildren()}\n      </div>\n    </div>\n  );\n};\n\nTabContentPanel.defaultProps = {\n  showTabs: false,\n  navClassName: null,\n  tabContentClassName: null,\n};\n\nexport default TabContentPanel;\n"],"file":"TabContentPanel.js"}