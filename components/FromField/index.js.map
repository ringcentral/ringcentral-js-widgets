{"version":3,"file":"index.js","names":["_clsx","_interopRequireDefault","require","_propTypes","_react","_interopRequireWildcard","_DropdownSelect","_i18n","_styles","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","PhoneNumber","_ref","formatPhone","usageType","currentLocale","phoneNumber","usageTypeDom","createElement","className","styles","i18n","getString","propTypes","PropTypes","func","isRequired","string","defaultProps","FromField","memo","_ref2","fromNumber","fromNumbers","onChange","hidden","disabled","showAnonymous","options","push","clsx","root","iconClassName","selectIcon","value","label","concat","renderValue","valueFunction","option","renderFunction","arrayOf","shape","bool","undefined","_default","exports"],"sources":["components/FromField/index.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\nimport DropdownSelect from '../DropdownSelect';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst PhoneNumber = ({\n  formatPhone,\n  usageType,\n  currentLocale,\n  phoneNumber,\n}: any) => {\n  const usageTypeDom = usageType ? (\n    <span className={styles.usageType}>\n      {i18n.getString(usageType, currentLocale)}\n    </span>\n  ) : null;\n  return (\n    <span className={styles.phoneNumber}>\n      {usageTypeDom}\n      <span data-sign=\"phoneNumber\">{formatPhone(phoneNumber)}</span>\n    </span>\n  );\n};\n\nPhoneNumber.propTypes = {\n  formatPhone: PropTypes.func.isRequired,\n  phoneNumber: PropTypes.string,\n  usageType: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nPhoneNumber.defaultProps = {\n  phoneNumber: null,\n  usageType: null,\n};\n\ninterface FromFieldIns {\n  fromNumber: string;\n  formatPhone: (...args: any[]) => any;\n  fromNumbers: any[];\n  onChange: (...args: any[]) => any;\n  currentLocale: string;\n  hidden: boolean;\n  showAnonymous: boolean;\n  className?: string;\n  disabled?: boolean;\n}\n\n// phone number formatting becomes expensive when there are lots of numbers\n// memo makes this a pure component to reduce rendering cost\nconst FromField = memo(function FromField({\n  className,\n  fromNumber,\n  fromNumbers,\n  onChange,\n  formatPhone,\n  hidden,\n  disabled,\n  showAnonymous,\n  currentLocale,\n}: FromFieldIns) {\n  if (hidden) {\n    return null;\n  }\n  const options = [...fromNumbers];\n  if (showAnonymous) {\n    options.push({\n      phoneNumber: 'anonymous',\n    });\n  }\n  return (\n    <DropdownSelect\n      className={clsx(styles.root, className)}\n      iconClassName={styles.selectIcon}\n      value={fromNumber}\n      label={`${i18n.getString('from', currentLocale)}:`}\n      onChange={onChange}\n      options={options}\n      disabled={disabled}\n      renderValue={(value) => {\n        if (value === 'anonymous') {\n          return <span>{i18n.getString('Blocked', currentLocale)}</span>;\n        }\n        return (\n          <PhoneNumber\n            formatPhone={formatPhone}\n            phoneNumber={value}\n            currentLocale={currentLocale}\n          />\n        );\n      }}\n      valueFunction={(option) => option.phoneNumber}\n      renderFunction={(option) => {\n        if (option.phoneNumber === 'anonymous') {\n          return <span>{i18n.getString('Blocked', currentLocale)}</span>;\n        }\n        return (\n          <PhoneNumber\n            formatPhone={formatPhone}\n            phoneNumber={option.phoneNumber}\n            usageType={option.usageType}\n            currentLocale={currentLocale}\n          />\n        );\n      }}\n    />\n  );\n});\n\n// @ts-expect-error TS(2339): Property 'propTypes' does not exist on type 'Named... Remove this comment to see the full error message\nFromField.propTypes = {\n  fromNumber: PropTypes.string,\n  formatPhone: PropTypes.func.isRequired,\n  fromNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      usageType: PropTypes.string,\n    }),\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  hidden: PropTypes.bool.isRequired,\n  showAnonymous: PropTypes.bool,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\n// @ts-expect-error TS(2339): Property 'defaultProps' does not exist on type 'Na... Remove this comment to see the full error message\nFromField.defaultProps = {\n  fromNumber: null,\n  className: undefined,\n  showAnonymous: true,\n  disabled: false,\n};\n\nexport default FromField;\n"],"mappings":"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","ignoreList":[]}