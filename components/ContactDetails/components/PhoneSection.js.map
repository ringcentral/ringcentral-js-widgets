{"version":3,"file":"PhoneSection.js","names":["_phoneTypeHelper","require","_clsx","_interopRequireDefault","_ramda","_react","_DynamicsFont","_i18n","_styles","e","__esModule","PhoneList","_ref","label","children","createElement","className","styles","item","content","PhoneListItem","_ref2","contact","currentLocale","disableLinks","formatNumber","isCallButtonDisabled","isMultipleSiteEnabled","canCallButtonShow","canTextButtonShow","onClickToDial","onClickToSMS","phoneNumber","rawPhoneNumber","phoneType","formattedNumber","displayedPhoneNumber","usedPhoneNumber","clearBoth","clsx","text","number","title","menu","type","disabled","concat","i18n","getString","onClick","dynamicsFont","call","composeText","PhoneSection","_ref3","phoneNumbers","length","sortedPhoneNumbers","sortByPhoneTypes","filterByPhoneTypes","phoneMap","reduce","acc","lastType","map","push","section","contacts","key","_ref4","keys","exports"],"sources":["components/ContactDetails/components/PhoneSection.tsx"],"sourcesContent":["import type { PhoneType } from '@ringcentral-integration/commons/enums/phoneTypes';\nimport type { ContactModel } from '@ringcentral-integration/commons/interfaces/Contact.model';\nimport {\n  filterByPhoneTypes,\n  sortByPhoneTypes,\n} from '@ringcentral-integration/commons/lib/phoneTypeHelper';\nimport clsx from 'clsx';\nimport { keys, map, reduce } from 'ramda';\nimport type { FunctionComponent } from 'react';\nimport React from 'react';\n\nimport dynamicsFont from '../../../assets/DynamicsFont/DynamicsFont.scss';\nimport type {\n  clickToDial,\n  clickToSMS,\n  formatNumber,\n} from '../ContactDetails.interface';\nimport i18n from '../i18n';\nimport styles from '../styles.scss';\n\n/**\n * TODO\n * 1. Refactor phone type and phoneTypeOrder into modules\n * 2. RawNumberDisplay\n */\n\ninterface PhoneListProps {\n  label: string;\n}\n\nconst PhoneList: FunctionComponent<PhoneListProps> = ({ label, children }) => {\n  return (\n    <div className={styles.item}>\n      <div className={styles.label}>\n        <span>{label}</span>\n      </div>\n      <ul className={styles.content}>{children}</ul>\n    </div>\n  );\n};\n\ninterface PhoneListItemProps extends formatNumber, clickToSMS, clickToDial {\n  currentLocale: string;\n  contact: ContactModel;\n  disableLinks: boolean;\n  isCallButtonDisabled: boolean;\n  isMultipleSiteEnabled: boolean;\n  phoneNumber: string;\n  rawPhoneNumber: string;\n  phoneType: PhoneType;\n}\n\nconst PhoneListItem: FunctionComponent<PhoneListItemProps> = ({\n  contact,\n  currentLocale,\n  disableLinks,\n  formatNumber,\n  isCallButtonDisabled,\n  isMultipleSiteEnabled,\n  canCallButtonShow,\n  canTextButtonShow,\n  onClickToDial,\n  onClickToSMS,\n  phoneNumber,\n  rawPhoneNumber,\n  phoneType,\n}) => {\n  const formattedNumber = formatNumber(phoneNumber);\n  // User will see, for example: (650) 123-4567\n  const displayedPhoneNumber = rawPhoneNumber || formattedNumber;\n  // User will use, for example: +16501234567\n  // In multi-site feature, \"user will see\" and \"user will use\" are the same\n  const usedPhoneNumber =\n    isMultipleSiteEnabled && phoneType === 'extension'\n      ? formattedNumber\n      : phoneNumber;\n\n  return (\n    <li className={styles.clearBoth}>\n      <div className={clsx(styles.text, styles.number)}>\n        <span\n          data-sign=\"contactNumber\"\n          aria-label={phoneType}\n          title={usedPhoneNumber}\n        >\n          {displayedPhoneNumber}\n        </span>\n      </div>\n      <div className={styles.menu}>\n        {canCallButtonShow(phoneType) ? (\n          <button\n            type=\"button\"\n            data-sign=\"call\"\n            className={clsx(isCallButtonDisabled && styles.disabled)}\n            title={`${i18n.getString(\n              'call',\n              currentLocale,\n            )} ${usedPhoneNumber}`}\n            disabled={isCallButtonDisabled}\n            onClick={() => onClickToDial(contact, usedPhoneNumber)}\n          >\n            <i className={dynamicsFont.call} />\n          </button>\n        ) : null}\n        {canTextButtonShow(phoneType) ? (\n          <button\n            type=\"button\"\n            className={clsx(disableLinks && styles.disabled)}\n            data-sign=\"text\"\n            title={`${i18n.getString(\n              'text',\n              currentLocale,\n            )} ${usedPhoneNumber}`}\n            disabled={disableLinks}\n            onClick={() => onClickToSMS(contact, usedPhoneNumber)}\n          >\n            <i className={dynamicsFont.composeText} />\n          </button>\n        ) : null}\n      </div>\n    </li>\n  );\n};\n\nexport interface PhoneSectionProps\n  extends formatNumber,\n    clickToSMS,\n    clickToDial {\n  currentLocale: string;\n  contact: ContactModel;\n  disableLinks: boolean;\n  isCallButtonDisabled: boolean;\n  isMultipleSiteEnabled: boolean;\n}\n\nexport const PhoneSection: FunctionComponent<PhoneSectionProps> = ({\n  contact,\n  currentLocale,\n  disableLinks,\n  isCallButtonDisabled,\n  isMultipleSiteEnabled,\n  formatNumber,\n  canCallButtonShow,\n  canTextButtonShow,\n  onClickToDial,\n  onClickToSMS,\n}) => {\n  if (contact && contact.phoneNumbers && contact.phoneNumbers.length) {\n    const sortedPhoneNumbers = sortByPhoneTypes(\n      filterByPhoneTypes(contact.phoneNumbers),\n    );\n    const phoneMap = reduce(\n      (acc, item) => {\n        if (item.phoneType !== acc.lastType) {\n          // @ts-expect-error TS(2322): Type '\"business\" | \"extension\" | \"home\" | \"mobile\"... Remove this comment to see the full error message\n          acc.lastType = item.phoneType;\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          acc.map[item.phoneType] = [];\n        }\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        acc.map[item.phoneType].push(item);\n        return acc;\n      },\n      {\n        map: {},\n        lastType: null,\n      },\n      sortedPhoneNumbers,\n    ).map;\n    return (\n      <section\n        className={clsx(styles.section, styles.contacts)}\n        aria-label=\"phone\"\n      >\n        {map(\n          (phoneType) => (\n            <PhoneList\n              key={phoneType}\n              label={i18n.getString(phoneType, currentLocale)}\n            >\n              {map(\n                ({ phoneNumber, rawPhoneNumber }) => (\n                  <PhoneListItem\n                    key={phoneNumber}\n                    phoneNumber={phoneNumber}\n                    rawPhoneNumber={rawPhoneNumber}\n                    phoneType={phoneType}\n                    contact={contact}\n                    canCallButtonShow={canCallButtonShow}\n                    canTextButtonShow={canTextButtonShow}\n                    formatNumber={formatNumber}\n                    currentLocale={currentLocale}\n                    isCallButtonDisabled={isCallButtonDisabled}\n                    isMultipleSiteEnabled={isMultipleSiteEnabled}\n                    disableLinks={disableLinks}\n                    onClickToDial={onClickToDial}\n                    onClickToSMS={onClickToSMS}\n                  />\n                ),\n                phoneMap[phoneType],\n              )}\n            </PhoneList>\n          ),\n          keys(phoneMap),\n        )}\n      </section>\n    );\n  }\n  return null;\n};\n"],"mappings":"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","ignoreList":[]}