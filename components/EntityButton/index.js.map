{"version":3,"sources":["components/EntityButton/index.tsx"],"names":["EntityButton","className","onViewEntity","onCreateEntity","hasEntity","isCreating","disableLinks","viewEntityTitle","createEntityTitle","spinner","styles","spinnerContainer","icon","dynamicsFont","record","addEntity","onClick","title","entity","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;;;AAYA,IAAMA,YAA0C,GAAG,SAA7CA,YAA6C,OAS7C;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,YAOI,QAPJA,YAOI;AAAA,MANJC,cAMI,QANJA,cAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJC,iBACI,QADJA,iBACI;AACJ;AACA,MAAMC,OAAO,GAAGJ,UAAU,gBACxB;AAAK,IAAA,SAAS,EAAEK,mBAAOC;AAAvB,kBACE,gCAAC,mBAAD;AAAS,IAAA,SAAS,EAAE;AAApB,IADF,CADwB,GAItB,IAJJ;AAKA,MAAMC,IAAI,GAAGR,SAAS,GAAGS,yBAAaC,MAAhB,GAAyBD,yBAAaE,SAA5D;AACA,MAAMC,OAAO,GAAGZ,SAAS,GAAGF,YAAH,GAAkBC,cAA3C;AACA,MAAMc,KAAK,GAAGb,SAAS,GAAGG,eAAH,GAAqBC,iBAA5C;AACA,sBACE,gCAAC,cAAD;AACE,IAAA,SAAS,EAAE,4BAAWE,mBAAOQ,MAAlB,EAA0BjB,SAA1B,CADb;AAEE,IAAA,OAAO,EAAEe,OAFX;AAGE,IAAA,QAAQ,EAAEV,YAHZ;AAIE,IAAA,QAAQ,EAAEW;AAJZ,kBAME;AAAM,IAAA,SAAS,EAAEL,IAAjB;AAAuB,IAAA,KAAK,EAAEK;AAA9B,IANF,EAOGR,OAPH,CADF;AAWD,CA9BD;;AA+BAT,YAAY,CAACmB,YAAb,GAA4B;AAC1BlB,EAAAA,SAAS,EAAEmB,SADe;AAE1BlB,EAAAA,YAAY,EAAEkB,SAFY;AAG1BhB,EAAAA,SAAS,EAAE,KAHe;AAI1BD,EAAAA,cAAc,EAAEiB,SAJU;AAK1Bf,EAAAA,UAAU,EAAE,KALc;AAM1BC,EAAAA,YAAY,EAAE,KANY;AAO1BC,EAAAA,eAAe,EAAEa,SAPS;AAQ1BZ,EAAAA,iBAAiB,EAAEY;AARO,CAA5B;eAUepB,Y","sourcesContent":["import React from 'react';\n\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport { Button } from '../Button';\nimport Spinner from '../Spinner';\nimport styles from './styles.scss';\n\ntype EntityButtonProps = {\n  className?: string;\n  onViewEntity?: (...args: any[]) => any;\n  onCreateEntity?: (...args: any[]) => any;\n  hasEntity?: boolean;\n  isCreating?: boolean;\n  disableLinks?: boolean;\n  viewEntityTitle?: string;\n  createEntityTitle?: string;\n};\nconst EntityButton: React.SFC<EntityButtonProps> = ({\n  className,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  isCreating,\n  disableLinks,\n  viewEntityTitle,\n  createEntityTitle,\n}) => {\n  // console.debug('isCreating', isCreating);\n  const spinner = isCreating ? (\n    <div className={styles.spinnerContainer}>\n      <Spinner ringWidth={2} />\n    </div>\n  ) : null;\n  const icon = hasEntity ? dynamicsFont.record : dynamicsFont.addEntity;\n  const onClick = hasEntity ? onViewEntity : onCreateEntity;\n  const title = hasEntity ? viewEntityTitle : createEntityTitle;\n  return (\n    <Button\n      className={classnames(styles.entity, className)}\n      onClick={onClick}\n      disabled={disableLinks}\n      dataSign={title}\n    >\n      <span className={icon} title={title} />\n      {spinner}\n    </Button>\n  );\n};\nEntityButton.defaultProps = {\n  className: undefined,\n  onViewEntity: undefined,\n  hasEntity: false,\n  onCreateEntity: undefined,\n  isCreating: false,\n  disableLinks: false,\n  viewEntityTitle: undefined,\n  createEntityTitle: undefined,\n};\nexport default EntityButton;\n"],"file":"index.js"}