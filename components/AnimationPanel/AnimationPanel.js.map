{"version":3,"sources":["components/AnimationPanel/AnimationPanel.tsx"],"names":["AnimationPanel","children","className","open","style","styles","root","active"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;;;AAMO,IAAMA,cAAsD,GAAG,SAAzDA,cAAyD,OAKhE;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADJC,KACI,QADJA,KACI;AACJ,sBACE;AACE,IAAA,SAAS,EAAE,4BACTC,mBAAOC,IADE,EAETH,IAAI,GAAGE,mBAAOE,MAAV,GAAmB,IAFd,EAGTL,SAHS,CADb;AAME,IAAA,KAAK,EAAEE;AANT,KAQGH,QARH,CADF;AAYD,CAlBM","sourcesContent":["import React, { FunctionComponent, HTMLAttributes } from 'react';\n\nimport classNames from 'classnames';\n\nimport styles from './styles.scss';\n\ntype AnimationPanelProps = {\n  open: boolean;\n  className?: string;\n} & Pick<HTMLAttributes<HTMLDivElement>, 'style'>;\nexport const AnimationPanel: FunctionComponent<AnimationPanelProps> = ({\n  children,\n  className,\n  open,\n  style,\n}) => {\n  return (\n    <div\n      className={classNames(\n        styles.root,\n        open ? styles.active : null,\n        className,\n      )}\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n"],"file":"AnimationPanel.js"}