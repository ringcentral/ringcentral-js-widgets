{"version":3,"sources":["components/RecipientsInputV2/RecipientsInputV2.tsx"],"names":["isSplitterKey","e","key","keyCode","RecipientsInputV2","ref","className","enableTitle","recipients","multiple","useRCUI","value","removeFromRecipients","recipientsClassName","placeholder","currentLocale","onInputChange","onInputClear","label","i18n","getString","searchContactList","formatContactPhone","phoneTypeRenderer","phoneSourceNameRenderer","contactInfoRenderer","contactPhoneRenderer","addToRecipients","isLastInputFromDialpad","thisEl","listEl","inputEl","stateValue","setStateValue","selectedIndex","setSelectedIndex","isInputFocused","setIsInputFocused","lastInputTimestamp","focus","current","blur","handler","target","contains","window","addEventListener","removeEventListener","Date","now","toNumberInput","length","newValue","setScrollPosition","styles","container","rcuiStyle","prevIndex","scrollUp","scrollDown","preventDefault","selectedContact","name","replace","phoneNumber","rightPanel","contact","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport React, {\n  useRef,\n  useImperativeHandle,\n  useState,\n  forwardRef,\n  useEffect,\n  KeyboardEvent,\n} from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport { DropdownList } from './DropdownList';\nimport {\n  RecipientsInputV2Handles,\n  RecipientsInputV2Props,\n} from './RecipientsInputV2.interface';\nimport { SelectedRecipients } from './SelectedRecipients';\nimport { PhoneNumberInput } from './PhoneNumberInput';\nimport i18n from '../RecipientsInput/i18n';\n\n/**\n * Specs:\n * 1. When dialer buttons are pressed, the cursor should be moved to the end of the string,\n *    and the focus set to the input field. RCINT-7706\n * 2. Simplify recipient/recipients property\n */\n\nfunction isSplitterKey(e: KeyboardEvent): boolean {\n  if (\n    e.key === ',' ||\n    e.key === ';' ||\n    e.key === 'Enter' ||\n    (e.key === 'Unidentified' && // for Safari (FF cannot rely on keyCode...)\n      (e.keyCode === 186 || // semicolon\n      e.keyCode === 188 || // comma\n        e.keyCode === 13)) // enter\n  ) {\n    return true;\n  }\n  return false;\n}\nexport const RecipientsInputV2 = forwardRef<\n  RecipientsInputV2Handles,\n  RecipientsInputV2Props\n>(\n  (\n    {\n      className,\n      enableTitle,\n      recipients,\n      multiple,\n      useRCUI,\n      value,\n      removeFromRecipients,\n      recipientsClassName,\n      placeholder,\n      currentLocale,\n      onInputChange,\n      onInputClear,\n      label = `${i18n.getString('to', currentLocale)}:`,\n      searchContactList,\n      formatContactPhone,\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      contactInfoRenderer,\n      contactPhoneRenderer,\n      addToRecipients,\n      isLastInputFromDialpad,\n    },\n    ref,\n  ) => {\n    const thisEl = useRef(null);\n    const listEl = useRef(null);\n    const inputEl = useRef(null);\n    const [stateValue, setStateValue] = useState(value);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [isInputFocused, setIsInputFocused] = useState(false);\n    const lastInputTimestamp = useRef(0);\n    useImperativeHandle(ref, () => ({\n      focus() {\n        setIsInputFocused(true);\n        if (inputEl.current) {\n          inputEl.current.focus();\n        }\n      },\n      blur() {\n        setIsInputFocused(false);\n        if (inputEl.current) {\n          inputEl.current.blur();\n        }\n      },\n    }));\n    useEffect(() => {\n      const handler = ({ target }) => {\n        if (thisEl.current && !thisEl.current.contains(target)) {\n          if (inputEl.current) {\n            inputEl.current.blur();\n          }\n          setIsInputFocused(false);\n        }\n      };\n      window.addEventListener('click', handler);\n      return () => {\n        window.removeEventListener('click', handler);\n      };\n    }, []); // pass [] so this only runs on mount and unmount\n\n    useEffect(() => {\n      if (\n        value !== stateValue &&\n        Date.now() - lastInputTimestamp.current > 300\n      ) {\n        setStateValue(value);\n      }\n    }, [value, stateValue]);\n\n    const toNumberInput =\n      !multiple && recipients.length ? null : (\n        <PhoneNumberInput\n          ref={inputEl}\n          placeholder={placeholder}\n          value={stateValue}\n          currentLocale={currentLocale}\n          onChange={(newValue) => {\n            lastInputTimestamp.current = Date.now();\n            setStateValue(newValue);\n            setSelectedIndex(0);\n            onInputChange(newValue);\n            if (listEl.current) {\n              listEl.current.setScrollPosition(0);\n            }\n          }}\n          onClear={() => {\n            setStateValue('');\n            onInputClear();\n          }}\n          onFocus={() => {\n            setIsInputFocused(true);\n          }}\n        />\n      );\n    return (\n      <div\n        className={classnames(\n          styles.container,\n          useRCUI ? styles.rcuiStyle : null,\n          className,\n        )}\n        ref={thisEl}\n        onKeyDown={(e) => {\n          if (isInputFocused && stateValue.length >= 3) {\n            if (e.key === 'ArrowUp') {\n              if (selectedIndex > 0) {\n                setSelectedIndex((prevIndex) => prevIndex - 1);\n                if (selectedIndex - 1 < searchContactList.length - 4) {\n                  listEl.current.scrollUp();\n                }\n              }\n            } else if (e.key === 'ArrowDown') {\n              if (selectedIndex < searchContactList.length - 1) {\n                setSelectedIndex((prevIndex) => prevIndex + 1);\n                if (selectedIndex + 1 > 4) {\n                  listEl.current.scrollDown();\n                }\n              }\n            }\n          }\n\n          if (isSplitterKey(e)) {\n            e.preventDefault();\n            if (stateValue.length === 0) {\n              return;\n            }\n            const selectedContact = searchContactList[selectedIndex];\n            if (selectedContact && e.key === 'Enter') {\n              addToRecipients({\n                ...selectedContact,\n              });\n            } else {\n              addToRecipients({\n                name: stateValue.replace(',', ''),\n                phoneNumber: stateValue.replace(',', ''),\n              });\n            }\n          }\n        }}\n      >\n        <span className={styles.label}>{label}</span>\n        <div\n          className={classnames(useRCUI && styles.rcuiStyle, styles.rightPanel)}\n        >\n          <SelectedRecipients\n            recipients={recipients}\n            onRemove={removeFromRecipients}\n            className={recipientsClassName}\n          />\n          {toNumberInput}\n        </div>\n        <DropdownList\n          currentLocale={currentLocale}\n          ref={listEl}\n          selectedIndex={selectedIndex}\n          setSelectedIndex={setSelectedIndex}\n          addToRecipients={(contact) => {\n            setStateValue('');\n            onInputChange('');\n            addToRecipients(contact);\n          }}\n          recipientOptions={searchContactList}\n          formatContactPhone={formatContactPhone}\n          visibility={isInputFocused && !isLastInputFromDialpad}\n          enableTitle={enableTitle}\n          phoneTypeRenderer={phoneTypeRenderer}\n          phoneSourceNameRenderer={phoneSourceNameRenderer}\n          recipientInfoRenderer={contactInfoRenderer}\n          recipientPhoneRenderer={contactPhoneRenderer}\n        />\n      </div>\n    );\n  },\n);\n\nRecipientsInputV2.defaultProps = {\n  enableTitle: false,\n  multiple: false,\n  useRCUI: false,\n  isLastInputFromDialpad: false,\n};\n"],"file":"RecipientsInputV2.js"}