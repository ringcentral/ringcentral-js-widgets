{"version":3,"sources":["components/DatePicker/index.tsx"],"names":["DatePicker","props","_handleDocumentClick","e","mounted","date","contains","target","open","setState","onClickFunc","querySelector","openState","state","window","addEventListener","removeEventListener","collapseDatePicker","Moment","locale","currentLocale","dueDate","Date","toISOString","showDate","format","styles","datePicker","datePickerClassName","ref","currentStartTime","setFullYear","getFullYear","getMonth","getDate","onChange","dateText","dateTextClassName","label","Component","defaultProps","undefined"],"mappings":"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","sourcesContent":["import 'react-widgets/dist/css/react-widgets.css';\n\nimport React, { Component } from 'react';\n\nimport classnames from 'classnames';\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\n\nimport styles from './styles.scss';\n\ntype DatePickerProps = {\n  currentLocale?: string;\n  label?: string;\n  date?: any;\n  onChange?: (...args: any[]) => any;\n  datePickerClassName?: string;\n  dateTextClassName?: string;\n};\ntype DatePickerState = {\n  open: boolean;\n};\nclass DatePicker extends Component<DatePickerProps, DatePickerState> {\n  constructor(props) {\n    super(props);\n    Moment.locale(this.props.currentLocale);\n    momentLocalizer();\n    this.state = {\n      open: false,\n    };\n  }\n  componentDidMount() {\n    this.mounted = true;\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener('click', this._handleDocumentClick, false);\n  }\n  _handleDocumentClick = (e) => {\n    if (!this.mounted) {\n      return;\n    }\n    if (this.date && this.date.contains(e.target)) {\n      return;\n    }\n    const open = false;\n    this.setState({\n      open,\n    });\n  };\n  onClickFunc = () => {\n    const open = !!this.date.querySelector('.rw-open');\n    const openState = !open ? 'date' : false;\n    if (!this.state.open) {\n      window.addEventListener('click', this._handleDocumentClick, false);\n    } else {\n      window.removeEventListener('click', this._handleDocumentClick, false);\n    }\n    this.setState({\n      open: openState,\n    });\n  };\n  collapseDatePicker = () => {\n    this.setState({\n      open: false,\n    });\n  };\n  render() {\n    const { currentLocale } = this.props;\n    const dueDate = new Date().toISOString();\n    const showDate = this.props.date\n      ? Moment(this.props.date).format('MM/DD/YY')\n      : '';\n    return (\n      <div\n        className={classnames(\n          styles.datePicker,\n          this.props.datePickerClassName,\n        )}\n        ref={(ref) => {\n          this.date = ref;\n        }}\n      >\n        <DateTimePicker\n          className=\"dateTimePicker\"\n          culture={currentLocale}\n          time={false}\n          open={this.state.open}\n          value={this.props.date}\n          onChange={(currentStartTime) => {\n            if (currentStartTime) {\n              const date = new Date(dueDate);\n              date.setFullYear(\n                currentStartTime.getFullYear(),\n                currentStartTime.getMonth(),\n                currentStartTime.getDate(),\n              );\n              this.props.onChange(date);\n            }\n            this.collapseDatePicker();\n          }}\n          format=\"MM/DD/YY\"\n          min={new Date()}\n          onToggle={() => {}}\n        />\n        <div\n          onClick={() => this.onClickFunc()}\n          className={classnames(styles.dateText, this.props.dateTextClassName)}\n        >\n          {`${this.props.label}: ${showDate}`}\n        </div>\n      </div>\n    );\n  }\n}\nDatePicker.defaultProps = {\n  currentLocale: 'en-US',\n  label: '',\n  date: null,\n  onChange: undefined,\n  datePickerClassName: '',\n  dateTextClassName: '',\n};\nexport default DatePicker;\n"],"file":"index.js"}