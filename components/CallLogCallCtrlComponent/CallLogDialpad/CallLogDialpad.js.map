{"version":3,"file":"CallLogDialpad.js","names":["_react","_interopRequireDefault","require","_classnames4","_CloseDialpad","_audios","_DialPad","_styles","obj","__esModule","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","Array","from","test","len","length","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","err","isArray","cleanRegex","filter","replace","MAX_PASTE_LENGTH","CallLogDialpad","_ref","onChange","onClose","className","isWide","_React$useState","React","useState","_React$useState2","setValue","audioRef","useRef","useEffect","document","createElement","current","remove","playAudio","canPlayType","audios","paused","pause","src","currentTime","play","onButtonOutput","sendDTMFKeys","keys","split","forEach","index","setTimeout","onInputChange","e","currentTarget","onKeyDown","onPaste","item","clipboardData","items","getAsString","data","filteredValue","classnames","styles","root","classic","closeBtn","onClick","dialInput","autoFocus","keypadContainer","dataSign","dialPad","exports"],"sources":["components/CallLogCallCtrlComponent/CallLogDialpad/CallLogDialpad.tsx"],"sourcesContent":["import type { FunctionComponent } from 'react';\nimport React from 'react';\n\nimport classnames from 'classnames';\n\nimport CloseDialpadIcon from '../../../assets/images/CloseDialpad.svg';\nimport { audios } from '../../DialButton/audios';\nimport DialPad from '../../DialPad';\nimport type {\n  CallLogDialpadProps,\n  DtmfValue,\n} from './CallLogDialpad.interface';\nimport styles from './styles.scss';\n\nconst cleanRegex = /[^\\d*#]/g;\nconst filter = (value: any) => value.replace(cleanRegex, '');\n\nconst MAX_PASTE_LENGTH = 15;\n\nconst CallLogDialpad: FunctionComponent<CallLogDialpadProps> = ({\n  onChange,\n  onClose,\n  className,\n  isWide,\n}) => {\n  const [value, setValue] = React.useState('');\n  const audioRef = React.useRef<HTMLAudioElement>(null);\n  React.useEffect(() => {\n    if (typeof document !== 'undefined' && document.createElement) {\n      // @ts-expect-error TS(2540): Cannot assign to 'current' because it is a read-on... Remove this comment to see the full error message\n      audioRef.current = document.createElement('audio');\n    }\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.remove();\n        // @ts-expect-error TS(2540): Cannot assign to 'current' because it is a read-on... Remove this comment to see the full error message\n        audioRef.current = null;\n      }\n    };\n  }, []);\n\n  const playAudio = (value: DtmfValue) => {\n    if (\n      audioRef.current &&\n      audioRef.current.canPlayType('audio/ogg') !== '' &&\n      audios[value]\n    ) {\n      if (!audioRef.current.paused) {\n        audioRef.current.pause();\n      }\n      audioRef.current.src = audios[value];\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    }\n  };\n\n  const onButtonOutput = (key: DtmfValue) => {\n    setValue(value + key);\n    onChange(key);\n  };\n\n  const sendDTMFKeys = (keys: DtmfValue) => {\n    // @ts-expect-error TS(2367): This condition will always return 'false' since th... Remove this comment to see the full error message\n    if (keys === '') {\n      return;\n    }\n    onChange(keys);\n    keys.split('').forEach((key, index) => {\n      setTimeout(() => {\n        // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n        playAudio(key);\n      }, 100 * index);\n    });\n  };\n\n  const onInputChange = (e: any) => {\n    const value = filter(e.currentTarget.value);\n    setValue(value);\n  };\n\n  const onKeyDown = (e: any) => {\n    const value = filter(e.key);\n    sendDTMFKeys(value);\n  };\n\n  const onPaste = (e: any) => {\n    const item = e.clipboardData.items[0];\n    item.getAsString((data: any) => {\n      const filteredValue = filter(data.replace(/<[^>]*>/g, '')); // remove HTML tag in firefox\n      let keys = filteredValue;\n      if (filteredValue.length > MAX_PASTE_LENGTH) {\n        keys = filteredValue.slice(0, MAX_PASTE_LENGTH);\n      }\n      sendDTMFKeys(keys);\n      if (filteredValue.length > MAX_PASTE_LENGTH) {\n        setValue(value.replace(filteredValue, keys));\n      }\n    });\n  };\n  return (\n    <div\n      data-sign=\"callLogDialPad\"\n      className={classnames(styles.root, className, {\n        [styles.classic]: !isWide,\n      })}\n    >\n      <div className={styles.closeBtn} onClick={onClose}>\n        <CloseDialpadIcon />\n      </div>\n      <div\n        className={classnames(styles.dialInput, { [styles.classic]: !isWide })}\n      >\n        <input\n          data-sign=\"input\"\n          className={styles.input}\n          value={value}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n          onPaste={onPaste}\n          autoFocus // eslint-disable-line\n        />\n      </div>\n      <div\n        className={classnames(styles.keypadContainer, {\n          [styles.classic]: !isWide,\n        })}\n      >\n        <DialPad\n          dataSign=\"keypad\"\n          className={styles.dialPad}\n          onButtonOutput={onButtonOutput}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { CallLogDialpad };\n"],"mappings":"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"}