{"version":3,"file":"CallLogDialpad.js","names":["_juno","require","_clsx4","_interopRequireDefault","_react","_CloseDialpad","_DialPad","_styles","e","__esModule","_defineProperty","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","TypeError","String","Number","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","a","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","length","n","l","iterator","u","f","o","next","done","push","isArray","cleanRegex","filter","replace","MAX_PASTE_LENGTH","CallLogDialpad","_ref","onChange","onClose","className","isWide","_React$useState","React","useState","_React$useState2","setValue","audioRef","useRef","useEffect","document","createElement","current","remove","playAudio","RcDialerPadSoundsMPEG","paused","pause","src","currentTime","play","error","console","onButtonOutput","key","sendDTMFKeys","keys","split","forEach","index","setTimeout","onInputChange","currentTarget","onKeyDown","onPaste","item","clipboardData","items","getAsString","data","filteredValue","clsx","styles","root","classic","closeBtn","onClick","dialInput","input","autoFocus","keypadContainer","dataSign","dialPad","exports"],"sources":["components/CallLogCallCtrlComponent/CallLogDialpad/CallLogDialpad.tsx"],"sourcesContent":["import { RcDialerPadSoundsMPEG } from '@ringcentral/juno';\nimport clsx from 'clsx';\nimport type { FunctionComponent } from 'react';\nimport React from 'react';\n\nimport CloseDialpadIcon from '../../../assets/images/CloseDialpad.svg';\nimport DialPad from '../../DialPad';\n\nimport type {\n  CallLogDialpadProps,\n  DtmfValue,\n} from './CallLogDialpad.interface';\nimport styles from './styles.scss';\n\nconst cleanRegex = /[^\\d*#]/g;\nconst filter = (value: any) => value.replace(cleanRegex, '');\n\nconst MAX_PASTE_LENGTH = 15;\n\nconst CallLogDialpad: FunctionComponent<CallLogDialpadProps> = ({\n  onChange,\n  onClose,\n  className,\n  isWide,\n}) => {\n  const [value, setValue] = React.useState('');\n  const audioRef = React.useRef<HTMLAudioElement>(null);\n  React.useEffect(() => {\n    if (typeof document !== 'undefined' && document.createElement) {\n      // @ts-expect-error TS(2540): Cannot assign to 'current' because it is a read-on... Remove this comment to see the full error message\n      audioRef.current = document.createElement('audio');\n    }\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.remove();\n        // @ts-expect-error TS(2540): Cannot assign to 'current' because it is a read-on... Remove this comment to see the full error message\n        audioRef.current = null;\n      }\n    };\n  }, []);\n\n  const playAudio = (value: DtmfValue) => {\n    if (audioRef.current && RcDialerPadSoundsMPEG[value]) {\n      if (!audioRef.current.paused) {\n        audioRef.current.pause();\n      }\n      audioRef.current.src = RcDialerPadSoundsMPEG[value];\n      audioRef.current.currentTime = 0;\n      audioRef.current.play().catch((error: any) => {\n        console.error('playAudio error:', error);\n      });\n    }\n  };\n\n  const onButtonOutput = (key: DtmfValue) => {\n    setValue(value + key);\n    onChange(key);\n  };\n\n  const sendDTMFKeys = (keys: DtmfValue) => {\n    // @ts-expect-error TS(2367): This condition will always return 'false' since th... Remove this comment to see the full error message\n    if (keys === '') {\n      return;\n    }\n    onChange(keys);\n    keys.split('').forEach((key, index) => {\n      setTimeout(() => {\n        // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n        playAudio(key);\n      }, 100 * index);\n    });\n  };\n\n  const onInputChange = (e: any) => {\n    const value = filter(e.currentTarget.value);\n    setValue(value);\n  };\n\n  const onKeyDown = (e: any) => {\n    const value = filter(e.key);\n    sendDTMFKeys(value);\n  };\n\n  const onPaste = (e: any) => {\n    const item = e.clipboardData.items[0];\n    item.getAsString((data: any) => {\n      const filteredValue = filter(data.replace(/<[^>]*>/g, '')); // remove HTML tag in firefox\n      let keys = filteredValue;\n      if (filteredValue.length > MAX_PASTE_LENGTH) {\n        keys = filteredValue.slice(0, MAX_PASTE_LENGTH);\n      }\n      sendDTMFKeys(keys);\n      if (filteredValue.length > MAX_PASTE_LENGTH) {\n        setValue(value.replace(filteredValue, keys));\n      }\n    });\n  };\n  return (\n    <div\n      data-sign=\"callLogDialPad\"\n      className={clsx(styles.root, className, {\n        [styles.classic]: !isWide,\n      })}\n    >\n      <div className={styles.closeBtn} onClick={onClose} data-sign=\"closeBtn\">\n        <CloseDialpadIcon />\n      </div>\n      <div className={clsx(styles.dialInput, { [styles.classic]: !isWide })}>\n        <input\n          data-sign=\"input\"\n          className={styles.input}\n          value={value}\n          onChange={onInputChange}\n          onKeyDown={onKeyDown}\n          onPaste={onPaste}\n          autoFocus // eslint-disable-line\n        />\n      </div>\n      <div\n        className={clsx(styles.keypadContainer, {\n          [styles.classic]: !isWide,\n        })}\n      >\n        <DialPad\n          dataSign=\"keypad\"\n          className={styles.dialPad}\n          onButtonOutput={onButtonOutput}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { CallLogDialpad };\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,MAAA,GAAAD,sBAAA,CAAAF,OAAA;AAEA,IAAAI,aAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,QAAA,GAAAH,sBAAA,CAAAF,OAAA;AAMA,IAAAM,OAAA,GAAAJ,sBAAA,CAAAF,OAAA;AAAmC,SAAAE,uBAAAK,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAAA,SAAAE,gBAAAF,CAAA,EAAAG,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAAE,cAAA,CAAAF,CAAA,MAAAH,CAAA,GAAAM,MAAA,CAAAC,cAAA,CAAAP,CAAA,EAAAG,CAAA,IAAAK,KAAA,EAAAJ,CAAA,EAAAK,UAAA,MAAAC,YAAA,MAAAC,QAAA,UAAAX,CAAA,CAAAG,CAAA,IAAAC,CAAA,EAAAJ,CAAA;AAAA,SAAAK,eAAAD,CAAA,QAAAQ,CAAA,GAAAC,YAAA,CAAAT,CAAA,gCAAAU,OAAA,CAAAF,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAC,aAAAT,CAAA,EAAAD,CAAA,oBAAAW,OAAA,CAAAV,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAJ,CAAA,GAAAI,CAAA,CAAAW,MAAA,CAAAC,WAAA,kBAAAhB,CAAA,QAAAY,CAAA,GAAAZ,CAAA,CAAAiB,IAAA,CAAAb,CAAA,EAAAD,CAAA,gCAAAW,OAAA,CAAAF,CAAA,UAAAA,CAAA,YAAAM,SAAA,yEAAAf,CAAA,GAAAgB,MAAA,GAAAC,MAAA,EAAAhB,CAAA;AAAA,SAAAiB,eAAAlB,CAAA,EAAAH,CAAA,WAAAsB,eAAA,CAAAnB,CAAA,KAAAoB,qBAAA,CAAApB,CAAA,EAAAH,CAAA,KAAAwB,2BAAA,CAAArB,CAAA,EAAAH,CAAA,KAAAyB,gBAAA;AAAA,SAAAA,iBAAA,cAAAP,SAAA;AAAA,SAAAM,4BAAArB,CAAA,EAAAuB,CAAA,QAAAvB,CAAA,2BAAAA,CAAA,SAAAwB,iBAAA,CAAAxB,CAAA,EAAAuB,CAAA,OAAAtB,CAAA,MAAAwB,QAAA,CAAAX,IAAA,CAAAd,CAAA,EAAA0B,KAAA,6BAAAzB,CAAA,IAAAD,CAAA,CAAA2B,WAAA,KAAA1B,CAAA,GAAAD,CAAA,CAAA2B,WAAA,CAAAC,IAAA,aAAA3B,CAAA,cAAAA,CAAA,GAAA4B,KAAA,CAAAC,IAAA,CAAA9B,CAAA,oBAAAC,CAAA,+CAAA8B,IAAA,CAAA9B,CAAA,IAAAuB,iBAAA,CAAAxB,CAAA,EAAAuB,CAAA;AAAA,SAAAC,kBAAAxB,CAAA,EAAAuB,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAvB,CAAA,CAAAgC,MAAA,MAAAT,CAAA,GAAAvB,CAAA,CAAAgC,MAAA,YAAAnC,CAAA,MAAAoC,CAAA,GAAAJ,KAAA,CAAAN,CAAA,GAAA1B,CAAA,GAAA0B,CAAA,EAAA1B,CAAA,MAAAoC,CAAA,CAAApC,CAAA,IAAAG,CAAA,CAAAH,CAAA,YAAAoC,CAAA;AAAA,SAAAb,sBAAApB,CAAA,EAAAkC,CAAA,QAAAjC,CAAA,WAAAD,CAAA,gCAAAY,MAAA,IAAAZ,CAAA,CAAAY,MAAA,CAAAuB,QAAA,KAAAnC,CAAA,4BAAAC,CAAA,QAAAJ,CAAA,EAAAoC,CAAA,EAAAxB,CAAA,EAAA2B,CAAA,EAAAb,CAAA,OAAAc,CAAA,OAAAC,CAAA,iBAAA7B,CAAA,IAAAR,CAAA,GAAAA,CAAA,CAAAa,IAAA,CAAAd,CAAA,GAAAuC,IAAA,QAAAL,CAAA,QAAA/B,MAAA,CAAAF,CAAA,MAAAA,CAAA,UAAAoC,CAAA,uBAAAA,CAAA,IAAAxC,CAAA,GAAAY,CAAA,CAAAK,IAAA,CAAAb,CAAA,GAAAuC,IAAA,MAAAjB,CAAA,CAAAkB,IAAA,CAAA5C,CAAA,CAAAQ,KAAA,GAAAkB,CAAA,CAAAS,MAAA,KAAAE,CAAA,GAAAG,CAAA,sBAAArC,CAAA,IAAAsC,CAAA,OAAAL,CAAA,GAAAjC,CAAA,yBAAAqC,CAAA,YAAApC,CAAA,eAAAmC,CAAA,GAAAnC,CAAA,cAAAE,MAAA,CAAAiC,CAAA,MAAAA,CAAA,2BAAAE,CAAA,QAAAL,CAAA,aAAAV,CAAA;AAAA,SAAAJ,gBAAAnB,CAAA,QAAA6B,KAAA,CAAAa,OAAA,CAAA1C,CAAA,UAAAA,CAAA;AAEnC,IAAM2C,UAAU,GAAG,UAAU;AAC7B,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIvC,KAAU;EAAA,OAAKA,KAAK,CAACwC,OAAO,CAACF,UAAU,EAAE,EAAE,CAAC;AAAA;AAE5D,IAAMG,gBAAgB,GAAG,EAAE;AAE3B,IAAMC,cAAsD,GAAG,SAAzDA,cAAsDA,CAAAC,IAAA,EAKtD;EAAA,IAJJC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IACPC,SAAS,GAAAH,IAAA,CAATG,SAAS;IACTC,MAAM,GAAAJ,IAAA,CAANI,MAAM;EAAA,IAAAC,eAAA,GAEoBC,iBAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAtC,cAAA,CAAAmC,eAAA;IAArChD,KAAK,GAAAmD,gBAAA;IAAEC,QAAQ,GAAAD,gBAAA;EACtB,IAAME,QAAQ,GAAGJ,iBAAK,CAACK,MAAM,CAAmB,IAAI,CAAC;EACrDL,iBAAK,CAACM,SAAS,CAAC,YAAM;IACpB,IAAI,OAAOC,QAAQ,KAAK,WAAW,IAAIA,QAAQ,CAACC,aAAa,EAAE;MAC7D;MACAJ,QAAQ,CAACK,OAAO,GAAGF,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IACpD;IACA,OAAO,YAAM;MACX,IAAIJ,QAAQ,CAACK,OAAO,EAAE;QACpBL,QAAQ,CAACK,OAAO,CAACC,MAAM,CAAC,CAAC;QACzB;QACAN,QAAQ,CAACK,OAAO,GAAG,IAAI;MACzB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAME,SAAS,GAAG,SAAZA,SAASA,CAAI5D,KAAgB,EAAK;IACtC,IAAIqD,QAAQ,CAACK,OAAO,IAAIG,2BAAqB,CAAC7D,KAAK,CAAC,EAAE;MACpD,IAAI,CAACqD,QAAQ,CAACK,OAAO,CAACI,MAAM,EAAE;QAC5BT,QAAQ,CAACK,OAAO,CAACK,KAAK,CAAC,CAAC;MAC1B;MACAV,QAAQ,CAACK,OAAO,CAACM,GAAG,GAAGH,2BAAqB,CAAC7D,KAAK,CAAC;MACnDqD,QAAQ,CAACK,OAAO,CAACO,WAAW,GAAG,CAAC;MAChCZ,QAAQ,CAACK,OAAO,CAACQ,IAAI,CAAC,CAAC,SAAM,CAAC,UAACC,KAAU,EAAK;QAC5CC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C,CAAC,CAAC;IACJ;EACF,CAAC;EAED,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,GAAc,EAAK;IACzClB,QAAQ,CAACpD,KAAK,GAAGsE,GAAG,CAAC;IACrB1B,QAAQ,CAAC0B,GAAG,CAAC;EACf,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAe,EAAK;IACxC;IACA,IAAIA,IAAI,KAAK,EAAE,EAAE;MACf;IACF;IACA5B,QAAQ,CAAC4B,IAAI,CAAC;IACdA,IAAI,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,UAACJ,GAAG,EAAEK,KAAK,EAAK;MACrCC,UAAU,CAAC,YAAM;QACf;QACAhB,SAAS,CAACU,GAAG,CAAC;MAChB,CAAC,EAAE,GAAG,GAAGK,KAAK,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAIrF,CAAM,EAAK;IAChC,IAAMQ,KAAK,GAAGuC,MAAM,CAAC/C,CAAC,CAACsF,aAAa,CAAC9E,KAAK,CAAC;IAC3CoD,QAAQ,CAACpD,KAAK,CAAC;EACjB,CAAC;EAED,IAAM+E,SAAS,GAAG,SAAZA,SAASA,CAAIvF,CAAM,EAAK;IAC5B,IAAMQ,KAAK,GAAGuC,MAAM,CAAC/C,CAAC,CAAC8E,GAAG,CAAC;IAC3BC,YAAY,CAACvE,KAAK,CAAC;EACrB,CAAC;EAED,IAAMgF,OAAO,GAAG,SAAVA,OAAOA,CAAIxF,CAAM,EAAK;IAC1B,IAAMyF,IAAI,GAAGzF,CAAC,CAAC0F,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IACrCF,IAAI,CAACG,WAAW,CAAC,UAACC,IAAS,EAAK;MAC9B,IAAMC,aAAa,GAAG/C,MAAM,CAAC8C,IAAI,CAAC7C,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;MAC5D,IAAIgC,IAAI,GAAGc,aAAa;MACxB,IAAIA,aAAa,CAAC3D,MAAM,GAAGc,gBAAgB,EAAE;QAC3C+B,IAAI,GAAGc,aAAa,CAACjE,KAAK,CAAC,CAAC,EAAEoB,gBAAgB,CAAC;MACjD;MACA8B,YAAY,CAACC,IAAI,CAAC;MAClB,IAAIc,aAAa,CAAC3D,MAAM,GAAGc,gBAAgB,EAAE;QAC3CW,QAAQ,CAACpD,KAAK,CAACwC,OAAO,CAAC8C,aAAa,EAAEd,IAAI,CAAC,CAAC;MAC9C;IACF,CAAC,CAAC;EACJ,CAAC;EACD,oBACEpF,MAAA,YAAAqE,aAAA;IACE,aAAU,gBAAgB;IAC1BX,SAAS,EAAE,IAAAyC,iBAAI,EAACC,kBAAM,CAACC,IAAI,EAAE3C,SAAS,EAAApD,eAAA,KACnC8F,kBAAM,CAACE,OAAO,EAAG,CAAC3C,MAAM,CAC1B;EAAE,gBAEH3D,MAAA,YAAAqE,aAAA;IAAKX,SAAS,EAAE0C,kBAAM,CAACG,QAAS;IAACC,OAAO,EAAE/C,OAAQ;IAAC,aAAU;EAAU,gBACrEzD,MAAA,YAAAqE,aAAA,CAACpE,aAAA,WAAgB,MAAE,CAChB,CAAC,eACND,MAAA,YAAAqE,aAAA;IAAKX,SAAS,EAAE,IAAAyC,iBAAI,EAACC,kBAAM,CAACK,SAAS,EAAAnG,eAAA,KAAK8F,kBAAM,CAACE,OAAO,EAAG,CAAC3C,MAAM,CAAE;EAAE,gBACpE3D,MAAA,YAAAqE,aAAA;IACE,aAAU,OAAO;IACjBX,SAAS,EAAE0C,kBAAM,CAACM,KAAM;IACxB9F,KAAK,EAAEA,KAAM;IACb4C,QAAQ,EAAEiC,aAAc;IACxBE,SAAS,EAAEA,SAAU;IACrBC,OAAO,EAAEA,OAAQ;IACjBe,SAAS,OAAC;EAAA,CACX,CACE,CAAC,eACN3G,MAAA,YAAAqE,aAAA;IACEX,SAAS,EAAE,IAAAyC,iBAAI,EAACC,kBAAM,CAACQ,eAAe,EAAAtG,eAAA,KACnC8F,kBAAM,CAACE,OAAO,EAAG,CAAC3C,MAAM,CAC1B;EAAE,gBAEH3D,MAAA,YAAAqE,aAAA,CAACnE,QAAA,WAAO;IACN2G,QAAQ,EAAC,QAAQ;IACjBnD,SAAS,EAAE0C,kBAAM,CAACU,OAAQ;IAC1B7B,cAAc,EAAEA;EAAe,CAChC,CACE,CACF,CAAC;AAEV,CAAC;AAAC8B,OAAA,CAAAzD,cAAA,GAAAA,cAAA","ignoreList":[]}