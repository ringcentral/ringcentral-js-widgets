{"version":3,"sources":["components/CallLogCallCtrlComponent/index.tsx"],"names":["recodingVoiceTime","CallLogCallCtrlComponent","props","onMute","onUnmute","onHangup","onReject","isOnMute","callStatus","recordStatus","currentLocale","callDirection","onTransfer","isOnTransfer","isOnHold","onUnHold","onHold","startRecord","stopRecord","disableLinks","isWide","transferRef","isCurrentDeviceCall","sendDTMF","forward","answer","forwardingNumbers","ignore","otherActiveCalls","answerAndHold","answerAndEnd","realOutboundCallStatus","dialpadToggleTrack","clickForwardTrack","isInComingCall","callDirections","inbound","telephonyStatuses","ringing","isOutboundCallConnecting","telephonySessionStatus","proceeding","isOutboundCallOnVoiceMail","voicemail","muteIcon","MuteIcon","UnmuteIcon","muteAction","muteTitle","holdTitle","holdAction","endTitle","endAction","disabledCtrl","dialpadShow","onDialpadShow","toggleDialpadShow","anchorEl","setAnchorEl","recordPendingState","setRecordPendingState","timer","startRecordAction","res","setTimeout","clearTimeout","handleClick","event","currentTarget","handleClose","isWebRTCCall","onGoingActiveCalls","outbound","isRecording","recordStatusEnum","recording","recordingText","recordAction","keypadText","onHoldText","recordDisabled","holdDisabled","moreActions","icon","TransferSmallIcon","key","onClick","iconClassName","styles","moreActionIcon","text","i18n","getString","HoldIconInAction","holdActive","disabled","RecordIconActive","RecordIcon","recordingIcon","recordingDisabled","rootButtonProps","MoreIcon","tooltip","classic","root","button","buttonDisabled","DialpadIcon","dialpadIconActive","EndIcon","hangup","smallDialpad","smallDiapadShow","e","forwardTitle","onForward","stopPropagation","selectdValue","attributes","value","forwardList","map","phoneNumber","label","subText","push","ForwardIcon","className","rootButtonActive","paper","forwardPopover","IgnoreIcon","VoicemailIcon","AnswerIcon","answerButton","TransferIcon","buttonActive","HoldIcon","defaultProps","undefined","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport classnames from 'classnames';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport { telephonySessionStatus } from '@ringcentral-integration/commons/enums/telephonySessionStatus';\nimport telephonyStatuses from '@ringcentral-integration/commons/enums/telephonyStatus';\nimport recordStatusEnum from '@ringcentral-integration/commons/modules/Webphone/recordStatus';\nimport {\n  Hold as HoldIconInAction,\n  Ignore as IgnoreIcon,\n  TransferCall as TransferSmallIcon,\n  Voicemail as VoicemailIcon,\n} from '@ringcentral/juno/icon';\n\nimport AnswerIcon from '../../assets/images/Answer.svg';\nimport DialpadIcon from '../../assets/images/Dialpad.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport EndAnswerIcon from '../../assets/images/EndAnswer.svg';\nimport ForwardIcon from '../../assets/images/Forward_white.svg';\nimport HoldIcon from '../../assets/images/Hold.svg';\nimport HoldAnswerIcon from '../../assets/images/HoldAnswer.svg';\nimport MoreIcon from '../../assets/images/MoreIcon.svg';\nimport MuteIcon from '../../assets/images/Mute.svg';\nimport RecordIcon from '../../assets/images/RecordOff.svg';\nimport RecordIconActive from '../../assets/images/RecordOn.svg';\nimport TransferIcon from '../../assets/images/Transfer.svg';\nimport UnmuteIcon from '../../assets/images/Unmute.svg';\nimport CircleButton from '../CircleButton';\nimport { CallLogDialpad } from './CallLogDialpad';\nimport i18n from './i18n';\nimport { MoreActionComponent } from './MoreActionComponent';\nimport { MoreActionWithForward } from './MoreActionWithForward';\nimport styles from './styles.scss';\n\nconst recodingVoiceTime = 6781;\ntype CallLogCallCtrlComponentProps = {\n  onMute?: (...args: any[]) => any;\n  onUnmute?: (...args: any[]) => any;\n  onHangup?: (...args: any[]) => any;\n  onReject?: (...args: any[]) => any;\n  onTransfer?: (...args: any[]) => any;\n  isOnMute?: boolean;\n  isOnHold?: boolean;\n  onUnHold?: (...args: any[]) => any;\n  onHold?: (...args: any[]) => any;\n  startRecord?: (...args: any[]) => any;\n  stopRecord?: (...args: any[]) => any;\n  disableLinks?: boolean;\n  callStatus?: string;\n  recordStatus?: string;\n  currentLocale?: string;\n  callDirection: string;\n  isWide?: boolean;\n  isCurrentDeviceCall?: boolean;\n  transferRef?:\n    | ((...args: any[]) => any)\n    | {\n        current?: any;\n      };\n  isOnTransfer?: boolean;\n  sendDTMF?: (...args: any[]) => any;\n  forward?: (...args: any[]) => any;\n  answer?: (...args: any[]) => any;\n  forwardingNumbers?: any[];\n  ignore?: (...args: any[]) => any;\n  otherActiveCalls?: boolean;\n  answerAndHold?: (...args: any[]) => any;\n  answerAndEnd?: (...args: any[]) => any;\n  dialpadToggleTrack?: (...args: any[]) => any;\n  clickForwardTrack?: (...args: any[]) => any;\n  realOutboundCallStatus?: string;\n};\nconst CallLogCallCtrlComponent: React.SFC<CallLogCallCtrlComponentProps> = (\n  props,\n) => {\n  const {\n    onMute,\n    onUnmute,\n    onHangup,\n    onReject,\n    isOnMute,\n    callStatus,\n    recordStatus,\n    currentLocale,\n    callDirection,\n    onTransfer,\n    isOnTransfer,\n    isOnHold,\n    onUnHold,\n    onHold,\n    startRecord,\n    stopRecord,\n    disableLinks,\n    isWide,\n    transferRef,\n    isCurrentDeviceCall,\n    sendDTMF,\n    forward,\n    answer,\n    forwardingNumbers,\n    ignore,\n    otherActiveCalls,\n    answerAndHold,\n    answerAndEnd,\n    realOutboundCallStatus,\n    dialpadToggleTrack,\n    clickForwardTrack,\n  } = props;\n  // reject conditions: call direction is inbound & call status is ringing\n  const isInComingCall =\n    callDirections.inbound === callDirection &&\n    telephonyStatuses.ringing === callStatus;\n  // real outbound call status\n  const isOutboundCallConnecting =\n    realOutboundCallStatus === telephonySessionStatus.proceeding;\n  const isOutboundCallOnVoiceMail =\n    realOutboundCallStatus === telephonySessionStatus.voicemail;\n  const muteIcon = isOnMute ? MuteIcon : UnmuteIcon;\n  const muteAction = isOnMute ? onUnmute : onMute;\n  const muteTitle = isOnMute ? 'unmute' : 'mute';\n  const holdTitle = isOnHold ? 'onHold' : 'hold';\n  const holdAction = isOnHold ? onUnHold : onHold;\n  const endTitle = isInComingCall ? 'reject' : 'hangup';\n  const endAction = isInComingCall ? onReject : onHangup;\n  const disabledCtrl = callStatus === telephonyStatuses.ringing;\n  const [dialpadShow, onDialpadShow] = useState(false);\n  const toggleDialpadShow = () => {\n    dialpadToggleTrack(!dialpadShow);\n    onDialpadShow(!dialpadShow);\n  };\n  // WebRTC logic\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [recordPendingState, setRecordPendingState] = useState(false);\n  let timer;\n  const startRecordAction = async (...args) => {\n    const res = await startRecord(...args);\n    if (res) {\n      setRecordPendingState(true);\n      timer = setTimeout(() => {\n        setRecordPendingState(false);\n      }, recodingVoiceTime);\n    }\n  };\n  useEffect(() => () => {\n    timer && clearTimeout(timer);\n    timer = null;\n  });\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const isWebRTCCall = isCurrentDeviceCall;\n  const onGoingActiveCalls = otherActiveCalls;\n  if (\n    (isWebRTCCall && callDirections.outbound === callDirection) ||\n    (isWebRTCCall &&\n      callDirections.inbound === callDirection &&\n      callStatus !== telephonyStatuses.ringing)\n  ) {\n    const isRecording = recordStatus === recordStatusEnum.recording;\n    const recordingText = isRecording ? 'stopRecord' : 'record';\n    const recordAction = isRecording ? stopRecord : startRecordAction;\n    const keypadText = dialpadShow ? 'hideKeypad' : 'showKeypad';\n    const onHoldText = isOnHold ? 'unHold' : 'hold';\n    const recordDisabled =\n      recordPendingState ||\n      isOnHold ||\n      isOutboundCallConnecting ||\n      isOutboundCallOnVoiceMail;\n    const holdDisabled = disableLinks || isOutboundCallConnecting;\n    const moreActions = [\n      {\n        icon: TransferSmallIcon,\n        key: 'transfer',\n        onClick: onTransfer,\n        iconClassName: classnames({\n          [styles.moreActionIcon]: true,\n        }),\n        text: i18n.getString('transfer', currentLocale),\n      },\n      {\n        icon: HoldIconInAction,\n        key: onHoldText,\n        onClick: holdAction,\n        iconClassName: classnames({\n          [styles.moreActionIcon]: true,\n          [styles.holdActive]: isOnHold,\n        }),\n        disabled: holdDisabled,\n        text: i18n.getString(onHoldText, currentLocale),\n      },\n      {\n        icon: isRecording ? RecordIconActive : RecordIcon,\n        key: recordingText,\n        onClick: recordAction,\n        iconClassName: classnames({\n          [styles.moreActionIcon]: true,\n          [styles.recordingIcon]: true,\n          [styles.recordingDisabled]: recordPendingState,\n        }),\n        disabled: recordDisabled,\n        text: i18n.getString(recordingText, currentLocale),\n      },\n    ];\n    const rootButtonProps = {\n      icon: MoreIcon,\n      tooltip: i18n.getString('more', currentLocale),\n    };\n    return (\n      <>\n        <div\n          className={classnames(!isWide ? styles.classic : null, styles.root)}\n        >\n          <span title={i18n.getString(muteTitle, currentLocale)}>\n            <CircleButton\n              dataSign={muteTitle}\n              icon={muteIcon}\n              onClick={muteAction}\n              className={classnames({\n                [styles.button]: true,\n                [styles.buttonDisabled]: disableLinks || disabledCtrl,\n              })}\n              disabled={disableLinks || disabledCtrl}\n            />\n          </span>\n          <span title={i18n.getString(keypadText, currentLocale)}>\n            <CircleButton\n              dataSign={keypadText}\n              icon={DialpadIcon}\n              className={classnames({\n                [styles.button]: true,\n                [styles.buttonDisabled]: isInComingCall || disableLinks,\n                [styles.dialpadIconActive]: dialpadShow,\n              })}\n              disabled={disableLinks || isInComingCall}\n              onClick={toggleDialpadShow}\n            />\n          </span>\n          <MoreActionComponent\n            dataSign=\"more\"\n            rootButtonProps={rootButtonProps}\n            actionsList={moreActions}\n            currentLocale={currentLocale}\n            disabled={disableLinks || disabledCtrl}\n            handleClick={handleClick}\n            handleClose={handleClose}\n            anchorEl={anchorEl}\n          />\n          <span title={i18n.getString(endTitle, currentLocale)}>\n            <CircleButton\n              dataSign={endTitle}\n              showBorder={false}\n              icon={EndIcon}\n              onClick={endAction}\n              className={classnames({\n                [styles.hangup]: true,\n                [styles.button]: true,\n                [styles.buttonDisabled]: disableLinks,\n              })}\n              disabled={disableLinks}\n            />\n          </span>\n        </div>\n        {dialpadShow && (\n          <CallLogDialpad\n            className={classnames(styles.smallDialpad, {\n              [styles.smallDiapadShow]: dialpadShow,\n            })}\n            onChange={(e) => {\n              sendDTMF(e);\n            }}\n            onClose={toggleDialpadShow}\n            isWide={isWide}\n          />\n        )}\n      </>\n    );\n  }\n  if (isWebRTCCall && isInComingCall && !onGoingActiveCalls) {\n    const forwardTitle = i18n.getString('forward', currentLocale);\n    const onForward = (e) => {\n      e.stopPropagation();\n      handleClose();\n      const selectdValue = e.currentTarget.attributes['data-value'].value;\n      forward(selectdValue);\n    };\n    const forwardList = forwardingNumbers.map((phoneNumber) => {\n      return {\n        key: phoneNumber.phoneNumber,\n        text: phoneNumber.label,\n        subText: phoneNumber.phoneNumber,\n        onClick: (e) => onForward(e),\n      };\n    });\n    forwardList.push({\n      key: 'custom',\n      text: i18n.getString('custom', currentLocale),\n      onClick: (e) => onForward(e),\n    });\n    const rootButtonProps = {\n      icon: ForwardIcon,\n      className: !!anchorEl && styles.rootButtonActive,\n      tooltip: forwardTitle,\n    };\n    return (\n      <div className={classnames(!isWide ? styles.classic : null, styles.root)}>\n        <MoreActionComponent\n          dataSign={!anchorEl ? 'forward' : 'forwardActive'}\n          rootButtonProps={rootButtonProps}\n          actionsList={forwardList}\n          currentLocale={currentLocale}\n          handleClick={(e) => {\n            clickForwardTrack();\n            handleClick(e);\n          }}\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          withSubText\n          popoverClasses={{ paper: styles.forwardPopover }}\n        />\n        <span title={i18n.getString('ignore', currentLocale)}>\n          <CircleButton\n            dataSign=\"ignore\"\n            icon={IgnoreIcon}\n            iconWidth={250}\n            iconHeight={250}\n            iconX={125}\n            iconY={125}\n            className={classnames({\n              [styles.button]: true,\n            })}\n            disabled={disableLinks}\n            onClick={ignore}\n          />\n        </span>\n        <span title={i18n.getString('voicemail', currentLocale)}>\n          <CircleButton\n            dataSign=\"voicemail\"\n            showBorder={false}\n            icon={VoicemailIcon}\n            iconWidth={250}\n            iconHeight={250}\n            iconX={125}\n            iconY={125}\n            onClick={endAction}\n            className={classnames({\n              [styles.hangup]: true,\n              [styles.button]: true,\n              [styles.buttonDisabled]: disableLinks,\n            })}\n            disabled={disableLinks}\n          />\n        </span>\n        <span title={i18n.getString('answer', currentLocale)}>\n          <CircleButton\n            dataSign=\"answer\"\n            showBorder={false}\n            icon={AnswerIcon}\n            onClick={answer}\n            className={classnames({\n              [styles.button]: true,\n              [styles.answer]: true,\n              [styles.buttonDisabled]: disableLinks,\n            })}\n            disabled={disableLinks}\n          />\n        </span>\n      </div>\n    );\n  }\n  if (isWebRTCCall && onGoingActiveCalls && isInComingCall) {\n    return (\n      <div className={classnames(!isWide ? styles.classic : null, styles.root)}>\n        <span\n          data-sign=\"endAndAnswer\"\n          title={i18n.getString('answerAndEnd', currentLocale)}\n          className={styles.answerButton}\n          onClick={answerAndEnd}\n        >\n          <EndAnswerIcon />\n        </span>\n        <span title={i18n.getString('voicemail', currentLocale)}>\n          <CircleButton\n            dataSign=\"voicemail\"\n            showBorder={false}\n            icon={VoicemailIcon}\n            iconWidth={250}\n            iconHeight={250}\n            iconX={125}\n            iconY={125}\n            onClick={endAction}\n            className={classnames({\n              [styles.hangup]: true,\n              [styles.button]: true,\n              [styles.buttonDisabled]: disableLinks,\n            })}\n            disabled={disableLinks}\n          />\n        </span>\n        <span\n          data-sign=\"holdAndAnswer\"\n          title={i18n.getString('answerAndHold', currentLocale)}\n          className={styles.answerButton}\n          onClick={answerAndHold}\n        >\n          <HoldAnswerIcon />\n        </span>\n        <MoreActionWithForward\n          currentLocale={currentLocale}\n          disabled={disableLinks}\n          forwardingNumbers={forwardingNumbers}\n          forward={forward}\n          ignore={ignore}\n          clickForwardTrack={clickForwardTrack}\n        />\n      </div>\n    );\n  }\n  return (\n    <div className={classnames(!isWide ? styles.classic : null, styles.root)}>\n      <span title={i18n.getString(muteTitle, currentLocale)}>\n        <CircleButton\n          dataSign={muteTitle}\n          icon={muteIcon}\n          onClick={muteAction}\n          className={classnames({\n            [styles.button]: true,\n            [styles.buttonDisabled]: disableLinks || disabledCtrl,\n          })}\n          disabled={disableLinks || disabledCtrl}\n        />\n      </span>\n      <span ref={transferRef} title={i18n.getString('transfer', currentLocale)}>\n        <CircleButton\n          dataSign=\"transfer\"\n          icon={TransferIcon}\n          onClick={onTransfer}\n          className={classnames({\n            [styles.button]: true,\n            [styles.buttonActive]: isOnTransfer,\n            [styles.buttonDisabled]: disableLinks || isInComingCall,\n          })}\n          disabled={disableLinks || isInComingCall}\n        />\n      </span>\n      <span title={i18n.getString(holdTitle, currentLocale)}>\n        <CircleButton\n          dataSign={holdTitle}\n          icon={HoldIcon}\n          onClick={holdAction}\n          className={classnames({\n            [styles.button]: true,\n            [styles.buttonActive]: isOnHold,\n            [styles.buttonDisabled]:\n              isInComingCall || disableLinks || isOutboundCallConnecting,\n          })}\n          disabled={disableLinks || isInComingCall || isOutboundCallConnecting}\n        />\n      </span>\n      <span title={i18n.getString(endTitle, currentLocale)}>\n        <CircleButton\n          dataSign={endTitle}\n          showBorder={false}\n          icon={EndIcon}\n          onClick={endAction}\n          className={classnames({\n            [styles.hangup]: true,\n            [styles.button]: true,\n            [styles.buttonDisabled]: disableLinks,\n          })}\n          disabled={disableLinks}\n        />\n      </span>\n    </div>\n  );\n};\nCallLogCallCtrlComponent.defaultProps = {\n  onMute() {},\n  onUnmute() {},\n  onHangup() {},\n  onReject() {},\n  onTransfer() {},\n  onUnHold() {},\n  onHold() {},\n  startRecord() {},\n  stopRecord() {},\n  isOnMute: false,\n  isOnHold: false,\n  callStatus: 'CallConnected',\n  currentLocale: 'en-US',\n  disableLinks: false,\n  isWide: true,\n  transferRef: undefined,\n  isOnTransfer: false,\n  sendDTMF() {},\n  forward() {},\n  answer() {},\n  forwardingNumbers: [],\n  ignore() {},\n  otherActiveCalls: false,\n  answerAndEnd() {},\n  answerAndHold() {},\n  dialpadToggleTrack(i) {},\n  clickForwardTrack() {},\n  realOutboundCallStatus: '',\n};\nexport default CallLogCallCtrlComponent;\n"],"file":"index.js"}