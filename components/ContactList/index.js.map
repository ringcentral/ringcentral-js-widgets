{"version":3,"file":"index.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_ramda","_reactVirtualized","_ContactItem","_i18n","_styles","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","CAPTION_HEIGHT","ROW_HEIGHT","Placeholder","_ref","message","createElement","className","styles","placeholder","propTypes","PropTypes","string","isRequired","ContactList","_Component","_super","_this","calculateRowHeight","_ref2","index","isBottomNoticeRow","bottomNoticeHeight","state","captionRows","findGroup","_ref3","find","item","startIndex","contacts","groups","rowGetter","_ref4","bottomNoticeRow","caption","group","onScroll","_ref5","scrollTop","setState","cellRenderer","_ref6","rowData","BottomNotice","bottomNotice","groupCaption","_this$props","currentLocale","getAvatarUrl","getPresence","onItemSelect","sourceNodeRenderer","currentSiteCode","isMultipleSiteEnabled","concat","type","id","ContactItem","contact","onSelect","onRowsRendered","_ref7","groupIndex","findIndex","captions","previousCaption","currentCaption","headerRenderer","getDerivedStateFromProps","list","React","createRef","componentDidUpdate","prevProps","lastContactGroups","contactGroups","current","recomputeRowHeights","rowIndex","rowCount","resetScrollTop","renderList","Table","ref","headerHeight","width","height","rowHeight","Column","dataKey","disableSort","flexGrow","render","_this$props2","isSearching","content","i18n","getString","root","contactCount","reduce","nextState","rowOffset","Component","arrayOf","shape","name","extensionNumber","email","profileImageUrl","presence","contactStatus","func","bool","number","defaultProps","_default","exports"],"sources":["components/ContactList/index.tsx"],"sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { find, findIndex, reduce } from 'ramda';\nimport { Column, Table } from 'react-virtualized';\n\nimport { ContactItem } from '../ContactItem';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst CAPTION_HEIGHT = 20;\nconst ROW_HEIGHT = 50;\n\n// @ts-expect-error\nconst Placeholder = ({ message }) => {\n  return <p className={styles.placeholder}>{message}</p>;\n};\nPlaceholder.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nclass ContactList extends Component {\n  // @ts-expect-error\n  constructor(props) {\n    super(props);\n    this.state = ContactList.getDerivedStateFromProps(props);\n    // @ts-expect-error\n    this.list = React.createRef();\n  }\n\n  static getDerivedStateFromProps(\n    // @ts-expect-error\n    props,\n    state = { scrollTop: 0, currentCaption: '' },\n  ) {\n    // @ts-expect-error\n    if (props.contactGroups !== state.lastContactGroups) {\n      return {\n        ...reduce(\n          (nextState, group) => {\n            // @ts-expect-error\n            nextState.captions.push(group.caption);\n\n            // skip the caption row for the first group\n            const rowOffset = nextState.groups.length !== 0 ? 1 : 0;\n            if (rowOffset) {\n              // @ts-expect-error\n              nextState.captionRows[nextState.rowCount] = group.caption;\n            }\n            (nextState.groups as any).push({\n              // @ts-expect-error\n              ...group,\n              startIndex: nextState.rowCount + rowOffset,\n            });\n            // @ts-expect-error\n            nextState.rowCount += group.contacts.length + rowOffset; // with caption row\n            // @ts-expect-error\n            nextState.contactCount += group.contacts.length;\n            return nextState;\n          },\n          {\n            ...state,\n            groups: [],\n            captions: [],\n            captionRows: {},\n            rowCount: 0,\n            contactCount: 0,\n          },\n          props.contactGroups,\n        ),\n        lastContactGroups: props.contactGroups,\n      };\n    }\n    return state;\n  }\n\n  // @ts-expect-error\n  componentDidUpdate(prevProps) {\n    // @ts-expect-error\n    if (this.state.lastContactGroups !== prevProps.contactGroups) {\n      if (\n        // @ts-expect-error\n        this.list &&\n        // @ts-expect-error\n        this.list.current &&\n        // @ts-expect-error\n        this.list.current.recomputeRowHeights\n      ) {\n        // @ts-expect-error\n        this.list.current.recomputeRowHeights(0);\n      }\n    }\n  }\n\n  // @ts-expect-error\n  isBottomNoticeRow(rowIndex) {\n    // @ts-expect-error\n    return this.props.bottomNotice && rowIndex === this.state.rowCount;\n  }\n\n  // @ts-expect-error\n  calculateRowHeight = ({ index }) => {\n    if (this.isBottomNoticeRow(index)) {\n      // @ts-expect-error\n      return this.props.bottomNoticeHeight;\n    }\n    // @ts-expect-error\n    if (this.state.captionRows[index]) {\n      return CAPTION_HEIGHT;\n    }\n    return ROW_HEIGHT;\n  };\n\n  // @ts-expect-error\n  findGroup = ({ index }) =>\n    find(\n      (item) =>\n        // @ts-expect-error\n        index >= item.startIndex &&\n        // @ts-expect-error\n        index < item.startIndex + item.contacts.length,\n      // @ts-expect-error\n      this.state.groups,\n    );\n\n  // @ts-expect-error\n  rowGetter = ({ index }) => {\n    if (this.isBottomNoticeRow(index)) {\n      return {\n        bottomNoticeRow: true,\n      };\n    }\n    // @ts-expect-error\n    if (this.state.captionRows[index]) {\n      return {\n        // @ts-expect-error\n        caption: this.state.captionRows[index],\n      };\n    }\n    const group = this.findGroup({ index });\n    // @ts-expect-error\n    return group.contacts[index - group.startIndex];\n  };\n\n  // @ts-expect-error\n  onScroll = ({ scrollTop }) => {\n    // @ts-expect-error\n    if (scrollTop !== this.state.scrollTop) {\n      this.setState({\n        scrollTop,\n      });\n    }\n  };\n\n  resetScrollTop() {\n    this.setState({\n      scrollTop: 0,\n    });\n  }\n  // @ts-expect-error\n\n  cellRenderer = ({ rowData }) => {\n    if (rowData.bottomNoticeRow) {\n      // @ts-expect-error\n      const { bottomNotice: BottomNotice } = this.props;\n      return BottomNotice ? <BottomNotice /> : <span />;\n    }\n    if (rowData.caption) {\n      return <div className={styles.groupCaption}>{rowData.caption}</div>;\n    }\n    const {\n      // @ts-expect-error\n      currentLocale,\n      // @ts-expect-error\n      getAvatarUrl,\n      // @ts-expect-error\n      getPresence,\n      // @ts-expect-error\n      onItemSelect,\n      // @ts-expect-error\n      sourceNodeRenderer,\n      // @ts-expect-error\n      currentSiteCode,\n      // @ts-expect-error\n      isMultipleSiteEnabled,\n    } = this.props;\n    return (\n      <div key={`${rowData.type}-${rowData.id}`}>\n        <ContactItem\n          currentLocale={currentLocale}\n          currentSiteCode={currentSiteCode}\n          isMultipleSiteEnabled={isMultipleSiteEnabled}\n          contact={rowData}\n          getAvatarUrl={getAvatarUrl}\n          getPresence={getPresence}\n          onSelect={onItemSelect}\n          sourceNodeRenderer={sourceNodeRenderer}\n        />\n      </div>\n    );\n  };\n\n  // @ts-expect-error\n  onRowsRendered = ({ startIndex }) => {\n    if (this.isBottomNoticeRow(startIndex)) {\n      return;\n    }\n    // update header with the correct caption\n\n    // @ts-expect-error\n    if (this.state.captionRows[startIndex]) {\n      const groupIndex = findIndex(\n        // @ts-expect-error\n        (item) => item === this.state.captionRows[startIndex],\n\n        // @ts-expect-error\n        this.state.captions,\n      );\n      // @ts-expect-error\n      const previousCaption = this.state.captions[groupIndex - 1];\n      // @ts-expect-error\n      if (previousCaption !== this.state.currentCaption) {\n        this.setState({\n          currentCaption: previousCaption,\n        });\n      }\n    } else {\n      const group = this.findGroup({ index: startIndex });\n      // @ts-expect-error\n      if (group.caption !== this.state.currentCaption) {\n        this.setState({\n          // @ts-expect-error\n          currentCaption: group.caption,\n        });\n      }\n    }\n  };\n\n  headerRenderer = () => (\n    <div className={styles.groupCaption} data-sign=\"currentCaption\">\n      {\n        // @ts-expect-error\n        this.state.currentCaption\n      }\n    </div>\n  );\n\n  renderList() {\n    // use table instead of list to allow caption header\n    return (\n      <Table\n        // @ts-expect-error\n        ref={this.list}\n        headerHeight={CAPTION_HEIGHT}\n        // @ts-expect-error\n        width={this.props.width}\n        // @ts-expect-error\n        height={this.props.height}\n        // @ts-expect-error\n        rowCount={this.state.rowCount + (this.props.bottomNotice ? 1 : 0)}\n        rowHeight={this.calculateRowHeight}\n        rowGetter={this.rowGetter}\n        onRowsRendered={this.onRowsRendered}\n        onScroll={this.onScroll}\n        // @ts-expect-error\n        scrollTop={this.state.scrollTop}\n      >\n        <Column\n          dataKey=\"caption\"\n          disableSort\n          flexGrow={1}\n          // @ts-expect-error\n          width={this.props.width}\n          cellRenderer={this.cellRenderer}\n          headerRenderer={this.headerRenderer}\n        />\n      </Table>\n    );\n  }\n\n  // @ts-expect-error\n  render() {\n    // @ts-expect-error\n    const { currentLocale, contactGroups, isSearching, width, height } =\n      this.props;\n    let content = null;\n    if (width !== 0 && height !== 0) {\n      if (contactGroups.length) {\n        content = this.renderList();\n      } else if (isSearching) {\n        content = (\n          <Placeholder message={i18n.getString('onSearching', currentLocale)} />\n        );\n      } else {\n        content = (\n          <Placeholder message={i18n.getString('noContacts', currentLocale)} />\n        );\n      }\n    }\n    return (\n      <div\n        className={styles.root}\n        data-sign=\"contactList\"\n        // @ts-expect-error\n        data-contact-count={this.state.contactCount}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n\n// @ts-expect-error\nContactList.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      caption: PropTypes.string.isRequired,\n      contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          type: PropTypes.string,\n          name: PropTypes.string,\n          extensionNumber: PropTypes.string,\n          email: PropTypes.string,\n          profileImageUrl: PropTypes.string,\n          presence: PropTypes.object,\n          contactStatus: PropTypes.string,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  currentSiteCode: PropTypes.string,\n  isMultipleSiteEnabled: PropTypes.bool,\n  getPresence: PropTypes.func.isRequired,\n  onItemSelect: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  isSearching: PropTypes.bool,\n  bottomNotice: PropTypes.func,\n  bottomNoticeHeight: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\n// @ts-expect-error\nContactList.defaultProps = {\n  onItemSelect: undefined,\n  sourceNodeRenderer: undefined,\n  isSearching: false,\n  bottomNotice: undefined,\n  bottomNoticeHeight: 0,\n  currentSiteCode: '',\n  isMultipleSiteEnabled: false,\n};\n\nexport default ContactList;\n"],"mappings":"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"}