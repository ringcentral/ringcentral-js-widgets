{"version":3,"file":"index.js","names":["_propTypes","_interopRequireDefault","require","_ramda","_react","_interopRequireWildcard","_reactVirtualized","_ContactItem","_i18n","_styles","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","value","configurable","writable","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","CAPTION_HEIGHT","ROW_HEIGHT","Placeholder","_ref","message","createElement","className","styles","placeholder","propTypes","PropTypes","string","isRequired","ContactList","_Component","_super","props","_this","calculateRowHeight","_ref2","index","isBottomNoticeRow","bottomNoticeHeight","state","captionRows","findGroup","_ref3","find","item","startIndex","contacts","groups","rowGetter","_ref4","bottomNoticeRow","caption","group","onScroll","_ref5","scrollTop","setState","cellRenderer","_ref6","rowData","BottomNotice","bottomNotice","groupCaption","_this$props","currentLocale","getAvatarUrl","getPresence","onItemSelect","sourceNodeRenderer","currentSiteCode","isMultipleSiteEnabled","concat","type","id","ContactItem","contact","onSelect","onRowsRendered","_ref7","groupIndex","findIndex","captions","previousCaption","currentCaption","headerRenderer","getDerivedStateFromProps","list","React","createRef","componentDidUpdate","prevProps","lastContactGroups","contactGroups","current","recomputeRowHeights","rowIndex","rowCount","resetScrollTop","renderList","Table","ref","headerHeight","width","height","rowHeight","Column","dataKey","disableSort","flexGrow","render","_this$props2","isSearching","content","i18n","getString","root","contactCount","undefined","reduce","nextState","rowOffset","Component","arrayOf","shape","name","extensionNumber","email","profileImageUrl","presence","object","contactStatus","func","bool","number","defaultProps","_default","exports"],"sources":["components/ContactList/index.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { find, findIndex, reduce } from 'ramda';\nimport React, { Component } from 'react';\nimport { Column, Table } from 'react-virtualized';\n\nimport { ContactItem } from '../ContactItem';\n\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst CAPTION_HEIGHT = 20;\nconst ROW_HEIGHT = 50;\n\n// @ts-expect-error\nconst Placeholder = ({ message }) => {\n  return <p className={styles.placeholder}>{message}</p>;\n};\nPlaceholder.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nclass ContactList extends Component {\n  // @ts-expect-error\n  constructor(props) {\n    super(props);\n    this.state = ContactList.getDerivedStateFromProps(props);\n    // @ts-expect-error\n    this.list = React.createRef();\n  }\n\n  static getDerivedStateFromProps(\n    // @ts-expect-error\n    props,\n    state = { scrollTop: 0, currentCaption: '' },\n  ) {\n    // @ts-expect-error\n    if (props.contactGroups !== state.lastContactGroups) {\n      return {\n        ...reduce(\n          (nextState, group) => {\n            // @ts-expect-error\n            nextState.captions.push(group.caption);\n\n            // skip the caption row for the first group\n            const rowOffset = nextState.groups.length !== 0 ? 1 : 0;\n            if (rowOffset) {\n              // @ts-expect-error\n              nextState.captionRows[nextState.rowCount] = group.caption;\n            }\n            (nextState.groups as any).push({\n              // @ts-expect-error\n              ...group,\n              startIndex: nextState.rowCount + rowOffset,\n            });\n            // @ts-expect-error\n            nextState.rowCount += group.contacts.length + rowOffset; // with caption row\n            // @ts-expect-error\n            nextState.contactCount += group.contacts.length;\n            return nextState;\n          },\n          {\n            ...state,\n            groups: [],\n            captions: [],\n            captionRows: {},\n            rowCount: 0,\n            contactCount: 0,\n          },\n          props.contactGroups,\n        ),\n        lastContactGroups: props.contactGroups,\n      };\n    }\n    return state;\n  }\n\n  // @ts-expect-error\n  componentDidUpdate(prevProps) {\n    // @ts-expect-error\n    if (this.state.lastContactGroups !== prevProps.contactGroups) {\n      if (\n        // @ts-expect-error\n        this.list &&\n        // @ts-expect-error\n        this.list.current &&\n        // @ts-expect-error\n        this.list.current.recomputeRowHeights\n      ) {\n        // @ts-expect-error\n        this.list.current.recomputeRowHeights(0);\n      }\n    }\n  }\n\n  // @ts-expect-error\n  isBottomNoticeRow(rowIndex) {\n    // @ts-expect-error\n    return this.props.bottomNotice && rowIndex === this.state.rowCount;\n  }\n\n  // @ts-expect-error\n  calculateRowHeight = ({ index }) => {\n    if (this.isBottomNoticeRow(index)) {\n      // @ts-expect-error\n      return this.props.bottomNoticeHeight;\n    }\n    // @ts-expect-error\n    if (this.state.captionRows[index]) {\n      return CAPTION_HEIGHT;\n    }\n    return ROW_HEIGHT;\n  };\n\n  // @ts-expect-error\n  findGroup = ({ index }) =>\n    find(\n      (item) =>\n        // @ts-expect-error\n        index >= item.startIndex &&\n        // @ts-expect-error\n        index < item.startIndex + item.contacts.length,\n      // @ts-expect-error\n      this.state.groups,\n    );\n\n  // @ts-expect-error\n  rowGetter = ({ index }) => {\n    if (this.isBottomNoticeRow(index)) {\n      return {\n        bottomNoticeRow: true,\n      };\n    }\n    // @ts-expect-error\n    if (this.state.captionRows[index]) {\n      return {\n        // @ts-expect-error\n        caption: this.state.captionRows[index],\n      };\n    }\n    const group = this.findGroup({ index });\n    // @ts-expect-error\n    return group.contacts[index - group.startIndex];\n  };\n\n  // @ts-expect-error\n  onScroll = ({ scrollTop }) => {\n    // @ts-expect-error\n    if (scrollTop !== this.state.scrollTop) {\n      this.setState({\n        scrollTop,\n      });\n    }\n  };\n\n  resetScrollTop() {\n    this.setState({\n      scrollTop: 0,\n    });\n  }\n  // @ts-expect-error\n\n  cellRenderer = ({ rowData }) => {\n    if (rowData.bottomNoticeRow) {\n      // @ts-expect-error\n      const { bottomNotice: BottomNotice } = this.props;\n      return BottomNotice ? <BottomNotice /> : <span />;\n    }\n    if (rowData.caption) {\n      return <div className={styles.groupCaption}>{rowData.caption}</div>;\n    }\n    const {\n      // @ts-expect-error\n      currentLocale,\n      // @ts-expect-error\n      getAvatarUrl,\n      // @ts-expect-error\n      getPresence,\n      // @ts-expect-error\n      onItemSelect,\n      // @ts-expect-error\n      sourceNodeRenderer,\n      // @ts-expect-error\n      currentSiteCode,\n      // @ts-expect-error\n      isMultipleSiteEnabled,\n    } = this.props;\n    return (\n      <div key={`${rowData.type}-${rowData.id}`}>\n        <ContactItem\n          currentLocale={currentLocale}\n          currentSiteCode={currentSiteCode}\n          isMultipleSiteEnabled={isMultipleSiteEnabled}\n          contact={rowData}\n          getAvatarUrl={getAvatarUrl}\n          getPresence={getPresence}\n          onSelect={onItemSelect}\n          sourceNodeRenderer={sourceNodeRenderer}\n        />\n      </div>\n    );\n  };\n\n  // @ts-expect-error\n  onRowsRendered = ({ startIndex }) => {\n    if (this.isBottomNoticeRow(startIndex)) {\n      return;\n    }\n    // update header with the correct caption\n\n    // @ts-expect-error\n    if (this.state.captionRows[startIndex]) {\n      const groupIndex = findIndex(\n        // @ts-expect-error\n        (item) => item === this.state.captionRows[startIndex],\n\n        // @ts-expect-error\n        this.state.captions,\n      );\n      // @ts-expect-error\n      const previousCaption = this.state.captions[groupIndex - 1];\n      // @ts-expect-error\n      if (previousCaption !== this.state.currentCaption) {\n        this.setState({\n          currentCaption: previousCaption,\n        });\n      }\n    } else {\n      const group = this.findGroup({ index: startIndex });\n      // @ts-expect-error\n      if (group.caption !== this.state.currentCaption) {\n        this.setState({\n          // @ts-expect-error\n          currentCaption: group.caption,\n        });\n      }\n    }\n  };\n\n  headerRenderer = () => (\n    <div className={styles.groupCaption} data-sign=\"currentCaption\">\n      {\n        // @ts-expect-error\n        this.state.currentCaption\n      }\n    </div>\n  );\n\n  renderList() {\n    // use table instead of list to allow caption header\n    return (\n      <Table\n        // @ts-expect-error\n        ref={this.list}\n        headerHeight={CAPTION_HEIGHT}\n        // @ts-expect-error\n        width={this.props.width}\n        // @ts-expect-error\n        height={this.props.height}\n        // @ts-expect-error\n        rowCount={this.state.rowCount + (this.props.bottomNotice ? 1 : 0)}\n        rowHeight={this.calculateRowHeight}\n        rowGetter={this.rowGetter}\n        onRowsRendered={this.onRowsRendered}\n        onScroll={this.onScroll}\n        // @ts-expect-error\n        scrollTop={this.state.scrollTop}\n      >\n        <Column\n          dataKey=\"caption\"\n          disableSort\n          flexGrow={1}\n          // @ts-expect-error\n          width={this.props.width}\n          cellRenderer={this.cellRenderer}\n          headerRenderer={this.headerRenderer}\n        />\n      </Table>\n    );\n  }\n\n  // @ts-expect-error\n  render() {\n    // @ts-expect-error\n    const { currentLocale, contactGroups, isSearching, width, height } =\n      this.props;\n    let content = null;\n    if (width !== 0 && height !== 0) {\n      if (contactGroups.length) {\n        content = this.renderList();\n      } else if (isSearching) {\n        content = (\n          <Placeholder message={i18n.getString('onSearching', currentLocale)} />\n        );\n      } else {\n        content = (\n          <Placeholder message={i18n.getString('noContacts', currentLocale)} />\n        );\n      }\n    }\n    return (\n      <div\n        className={styles.root}\n        data-sign=\"contactList\"\n        // @ts-expect-error\n        data-contact-count={this.state.contactCount}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n\n// @ts-expect-error\nContactList.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      caption: PropTypes.string.isRequired,\n      contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          type: PropTypes.string,\n          name: PropTypes.string,\n          extensionNumber: PropTypes.string,\n          email: PropTypes.string,\n          profileImageUrl: PropTypes.string,\n          presence: PropTypes.object,\n          contactStatus: PropTypes.string,\n        }),\n      ).isRequired,\n    }),\n  ).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  currentSiteCode: PropTypes.string,\n  isMultipleSiteEnabled: PropTypes.bool,\n  getPresence: PropTypes.func.isRequired,\n  onItemSelect: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  isSearching: PropTypes.bool,\n  bottomNotice: PropTypes.func,\n  bottomNoticeHeight: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\n// @ts-expect-error\nContactList.defaultProps = {\n  onItemSelect: undefined,\n  sourceNodeRenderer: undefined,\n  isSearching: false,\n  bottomNotice: undefined,\n  bottomNoticeHeight: 0,\n  currentSiteCode: '',\n  isMultipleSiteEnabled: false,\n};\n\nexport default ContactList;\n"],"mappings":"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","ignoreList":[]}