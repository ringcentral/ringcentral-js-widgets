{"version":3,"sources":["components/ContactSourceFilter/ContactSourceFilter.tsx"],"names":["StyledListItem","RcListItem","ContactSourceFilter","props","_mounted","hideList","setState","unfold","onUnfoldChange","window","removeEventListener","showList","addEventListener","togglePanel","evt","stopPropagation","state","emitSelect","sourceName","onSourceSelect","undefined","key","locale","i18n","getString","className","currentLocale","contactSourceNames","selectedSourceName","isAllSource","styles","contactSourceFilter","filterIconContainer","filterIconNode","iconNoneFill","contactSourceList","e","map","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\n\nimport { RcListItem, RcMenuList, spacing, styled } from '@ringcentral/juno';\n\nimport ContactFilterIcon from '../../assets/images/ContactFilter.svg';\nimport ContactFilterSolidIcon from '../../assets/images/ContactFilterSolid.svg';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst StyledListItem = styled(RcListItem)`\n  padding-left: ${spacing(2)};\n  font-size: 13px;\n`;\n\ntype ContactSourceFilterProps = {\n  className?: string;\n  currentLocale: string;\n  onSourceSelect?: (...args: any[]) => any;\n  selectedSourceName?: string;\n  contactSourceNames: string[];\n  unfold?: boolean;\n  onUnfoldChange?: (...args: any[]) => any;\n};\n\ntype ContactSourceFilterState = {\n  unfold: any;\n};\n\nexport class ContactSourceFilter extends Component<\n  ContactSourceFilterProps,\n  ContactSourceFilterState\n> {\n  _mounted = false;\n\n  constructor(props: ContactSourceFilterProps) {\n    super(props);\n    const unfold = props.unfold !== undefined ? props.unfold : false;\n    this.state = {\n      unfold,\n    };\n  }\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    if (!this.state.unfold) {\n      window.removeEventListener('click', this.hideList);\n    }\n  }\n\n  getString(key: string, locale: string) {\n    return i18n.getString(key, locale);\n  }\n\n  hideList = () => {\n    if (this._mounted) {\n      this.setState({\n        unfold: false,\n      });\n      if (typeof this.props.onUnfoldChange === 'function') {\n        this.props.onUnfoldChange(false);\n      }\n    }\n    window.removeEventListener('click', this.hideList);\n  };\n\n  showList = () => {\n    this.setState({\n      unfold: true,\n    });\n    window.addEventListener('click', this.hideList);\n    if (typeof this.props.onUnfoldChange === 'function') {\n      this.props.onUnfoldChange(true);\n    }\n  };\n\n  togglePanel: React.MouseEventHandler<HTMLDivElement> = (evt) => {\n    evt.stopPropagation();\n    if (!this.state.unfold) {\n      this.showList();\n      return;\n    }\n    this.hideList();\n  };\n\n  emitSelect = (sourceName: string) => {\n    const { onSourceSelect } = this.props;\n    if (onSourceSelect) {\n      onSourceSelect(sourceName);\n    }\n    this.hideList();\n  };\n\n  render() {\n    const { className, currentLocale, contactSourceNames, selectedSourceName } =\n      this.props;\n    const isAllSource = selectedSourceName === contactSourceNames[0];\n    return (\n      <div\n        className={classnames(styles.contactSourceFilter, className)}\n        data-sign=\"contactSourceFilterButton\"\n        onClick={this.togglePanel}\n      >\n        <div\n          data-sign=\"filterIconContainer\"\n          className={styles.filterIconContainer}\n          title={this.getString(selectedSourceName, currentLocale)}\n        >\n          {isAllSource ? (\n            <ContactFilterIcon\n              className={classnames(styles.filterIconNode, styles.iconNoneFill)}\n            />\n          ) : (\n            <ContactFilterSolidIcon className={styles.filterIconNode} />\n          )}\n        </div>\n        {!this.state.unfold ? null : (\n          <RcMenuList\n            className={styles.contactSourceList}\n            onClick={(e) => e.stopPropagation()}\n            data-sign=\"contactSourceList\"\n          >\n            {contactSourceNames.map((sourceName) => (\n              <StyledListItem\n                data-sign=\"contactSourceItem\"\n                component=\"div\"\n                onClick={() => this.emitSelect(sourceName)}\n                size=\"small\"\n                key={sourceName}\n                selected={sourceName === selectedSourceName}\n                disableGutters\n              >\n                {this.getString(sourceName, currentLocale)}\n              </StyledListItem>\n            ))}\n          </RcMenuList>\n        )}\n      </div>\n    );\n  }\n}\n"],"file":"ContactSourceFilter.js"}