{"version":3,"sources":["components/RecipientsInput/RecipientsInput.tsx"],"names":["RecipientsInput","props","setSelectedIndex","scrollOperation","addSelectedContactIndex","reduceSelectedContactIndex","isSplitter","handleHotKey","listRef","inputRef","_focusTimeout","onInputKeyUp","ev","searchContact","currentTarget","value","setState","isFocusOnInput","onInputFocus","onInputChange","lastInputTimestamp","Date","now","onChange","scrollTop","onPaste","detectPhoneNumbers","clipboardData","getData","preventDefault","pastedText","result","currentVal","state","newVal","replace","onClean","clickHandler","contains","target","_addToRecipients","item","addToRecipients","setInputRef","ref","selectedContactIndex","scrollDirection","index","direction","length","searchContactList","preState","key","keyCode","trimmedValue","trim","relatedContactList","currentSelected","name","phoneNumber","nextProps","isNotEditing","undefined","window","addEventListener","autoFocus","setTimeout","focus","removeEventListener","className","contactInfoRenderer","contactPhoneRenderer","currentLocale","formatContactPhone","isLastInputFromDialpad","label","multiple","phoneSourceNameRenderer","phoneTypeRenderer","placeholder","recipient","recipients","recipientsClassName","removeFromRecipients","titleEnabled","useRCUI","slice","labelEl","styles","i18n","getString","toNumberInput","inputWrapper","inputField","numberInput","removeButton","container","rcuiStyle","rightPanel","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiDMA,e;;;;;AAmBJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UAfnBC,gBAemB;AAAA,UAdnBC,eAcmB;AAAA,UAbnBC,uBAamB;AAAA,UAZnBC,0BAYmB;AAAA,UAXnBC,UAWmB;AAAA,UAVnBC,YAUmB;AAAA,UATnBC,OASmB;AAAA,UARnBC,QAQmB;AAAA,UAPnBC,aAOmB;;AAAA,UAuGnBC,YAvGmB,GAuGJ,UAACC,EAAD,EAA+C;AAC5D,YAAKX,KAAL,CAAWY,aAAX,CAAyBD,EAAE,CAACE,aAAH,CAAiBC,KAA1C;;AACA,YAAKC,QAAL,CAAc;AACZC,QAAAA,cAAc,EAAE;AADJ,OAAd;AAGD,KA5GkB;;AAAA,UA8GnBC,YA9GmB,GA8GJ,YAAM;AACnB,YAAKF,QAAL,CAAc;AACZC,QAAAA,cAAc,EAAE;AADJ,OAAd;AAGD,KAlHkB;;AAAA,UAoHnBE,aApHmB,GAoHH,UAACP,EAAD,EAA6C;AAAA,UACnDG,KADmD,GACzCH,EAAE,CAACE,aADsC,CACnDC,KADmD;AAE3D,UAAMK,kBAAkB,GAAGC,IAAI,CAACC,GAAL,EAA3B;;AACA,YAAKN,QAAL,CAAc;AAAED,QAAAA,KAAK,EAALA,KAAF;AAASK,QAAAA,kBAAkB,EAAlBA;AAAT,OAAd,EAA6C,YAAM;AACjD,cAAKnB,KAAL,CAAWsB,QAAX,CAAoBR,KAApB;AACD,OAFD;;AAGA,UAAI,MAAKP,OAAT,EAAkB;AAChB,cAAKA,OAAL,CAAagB,SAAb,GAAyB,CAAzB;AACD;AACF,KA7HkB;;AAAA,UA+HnBC,OA/HmB;AAAA,yEA+HT,iBAAOb,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEN,MAAKX,KAAL,CAAWyB,kBAAX,IACAd,EAAE,CAACe,aADH,IAEAf,EAAE,CAACe,aAAH,CAAiBC,OAJX;AAAA;AAAA;AAAA;;AAMNhB,gBAAAA,EAAE,CAACiB,cAAH;AACMC,gBAAAA,UAPA,GAOalB,EAAE,CAACe,aAAH,CAAiBC,OAAjB,CAAyB,YAAzB,CAPb;AAAA;AAAA,uBAQe,MAAK3B,KAAL,CAAWyB,kBAAX,CAA8BI,UAA9B,CARf;;AAAA;AAQAC,gBAAAA,MARA;AASAC,gBAAAA,UATA,GASa,MAAKC,KAAL,CAAWlB,KAAX,IAAoB,EATjC;;AAUN,oBAAI,CAACgB,MAAL,EAAa;AACLG,kBAAAA,MADK,aACOF,UADP,SACoBF,UAAU,CAACK,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CADpB;;AAEX,wBAAKnB,QAAL,CAAc;AAAED,oBAAAA,KAAK,EAAEmB;AAAT,mBAAd,EAAiC,YAAM;AACrC,0BAAKjC,KAAL,CAAWsB,QAAX,CAAoBW,MAApB;AACD,mBAFD;AAGD;;AAfK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA/HS;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAkJnBE,OAlJmB,GAkJT,YAAM;AACd,YAAKpB,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAd;;AACA,YAAKd,KAAL,CAAWmC,OAAX;AACD,KArJkB;;AAAA,UAyLnBC,YAzLmB,GAyLJ,UAACzB,EAAD,EAAoB;AACjC,UAAI,MAAKJ,OAAL,IAAgB,MAAKA,OAAL,CAAa8B,QAAb,CAAsB1B,EAAE,CAAC2B,MAAzB,CAApB,EAAsD;AACpD;AACD;;AACD,UAAI,MAAK9B,QAAL,IAAiB,MAAKA,QAAL,CAAc6B,QAAd,CAAuB1B,EAAE,CAAC2B,MAA1B,CAArB,EAAwD;AACtD,cAAKvB,QAAL,CAAc;AACZC,UAAAA,cAAc,EAAE;AADJ,SAAd;;AAGA;AACD;;AACD,YAAKD,QAAL,CAAc;AACZC,QAAAA,cAAc,EAAE;AADJ,OAAd;AAGD,KAtMkB;;AAAA,UAwMnBuB,gBAxMmB,GAwMA,UAACC,IAAD,EAAU;AAC3B,YAAKzB,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAE,EAAT;AAAaE,QAAAA,cAAc,EAAE;AAA7B,OAAd;;AACA,YAAKhB,KAAL,CAAWyC,eAAX,CAA2BD,IAA3B;AACD,KA3MkB;;AAAA,UA6MnBE,WA7MmB,GA6ML,UAACC,GAAD,EAAS;AACrB,YAAKnC,QAAL,GAAgBmC,GAAhB;;AACA,UAAI,OAAO,MAAK3C,KAAL,CAAWQ,QAAlB,KAA+B,UAAnC,EAA+C;AAC7C,cAAKR,KAAL,CAAWQ,QAAX,CAAoBmC,GAApB;AACD;AACF,KAlNkB;;AAEjB,UAAKX,KAAL,GAAa;AACXlB,MAAAA,KAAK,EAAEd,KAAK,CAACc,KADF;AAEXK,MAAAA,kBAAkB,EAAE,CAFT;AAGXH,MAAAA,cAAc,EAAE,KAHL;AAIX4B,MAAAA,oBAAoB,EAAE,CAJX;AAKXC,MAAAA,eAAe,EAAE;AALN,KAAb;;AAOA,UAAK5C,gBAAL,GAAwB,UAAC6C,KAAD,EAAW;AACjC,YAAK/B,QAAL,CAAc;AACZ6B,QAAAA,oBAAoB,EAAEE,KADV;AAEZD,QAAAA,eAAe,EAAE;AAFL,OAAd;AAID,KALD;;AAMA,UAAK3C,eAAL,GAAuB,UAAC6C,SAAD,EAAe;AACpC,UAAIA,SAAS,KAAK,WAAd,IAA6BA,SAAS,KAAK,SAA/C,EAA0D;AACxD,cAAKhC,QAAL,CAAc;AACZ8B,UAAAA,eAAe,EAAEE;AADL,SAAd;AAGD;AACF,KAND;;AAOA,UAAK5C,uBAAL,GAA+B,YAAM;AAAA,UAC3B6C,MAD2B,GAChB,MAAKhD,KAAL,CAAWiD,iBADK,CAC3BD,MAD2B;;AAEnC,UAAI,MAAKhB,KAAL,CAAWY,oBAAX,IAAmCI,MAAM,GAAG,CAAhD,EAAmD;AACjD,cAAKjC,QAAL,CAAc;AACZ6B,UAAAA,oBAAoB,EAAEI,MAAM,GAAG;AADnB,SAAd;AAGD,OAJD,MAIO;AACL,cAAKjC,QAAL,CAAc,UAACmC,QAAD;AAAA,iBAAe;AAC3BN,YAAAA,oBAAoB,EAAEM,QAAQ,CAACN,oBAAT,GAAgC;AAD3B,WAAf;AAAA,SAAd;AAGD;AACF,KAXD;;AAYA,UAAKxC,0BAAL,GAAkC,YAAM;AACtC,UAAI,MAAK4B,KAAL,CAAWY,oBAAX,GAAkC,CAAtC,EAAyC;AACvC,cAAK7B,QAAL,CAAc,UAACmC,QAAD;AAAA,iBAAe;AAC3BN,YAAAA,oBAAoB,EAAEM,QAAQ,CAACN,oBAAT,GAAgC;AAD3B,WAAf;AAAA,SAAd;AAGD,OAJD,MAIO;AACL,cAAK7B,QAAL,CAAc;AACZ6B,UAAAA,oBAAoB,EAAE;AADV,SAAd;AAGD;AACF,KAVD;;AAWA,UAAKvC,UAAL,GAAkB,UAACM,EAAD,EAA+C;AAC/D,UACEA,EAAE,CAACwC,GAAH,KAAW,GAAX,IACAxC,EAAE,CAACwC,GAAH,KAAW,GADX,IAEAxC,EAAE,CAACwC,GAAH,KAAW,OAFX,IAGCxC,EAAE,CAACwC,GAAH,KAAW,cAAX,MAA6B;AAC3BxC,MAAAA,EAAE,CAACyC,OAAH,KAAe,GAAf,IAAsB;AACrBzC,MAAAA,EAAE,CAACyC,OAAH,KAAe,GADhB,IACuB;AACtBzC,MAAAA,EAAE,CAACyC,OAAH,KAAe,EAHlB,CAJH,CAO0B;AAP1B,QAQE;AACA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAbD,CA7CiB,CA2DjB;;;AACA,UAAK9C,YAAL,GAAoB,UAACK,EAAD,EAA+C;AACjE,UAAI,MAAKqB,KAAL,CAAWhB,cAAX,IAA6B,MAAKgB,KAAL,CAAWlB,KAAX,CAAiBkC,MAAjB,IAA2B,CAA5D,EAA+D;AAC7D,YAAIrC,EAAE,CAACwC,GAAH,KAAW,SAAf,EAA0B;AACxB,gBAAK/C,0BAAL;;AACA,gBAAKF,eAAL,CAAqBS,EAAE,CAACwC,GAAxB;AACD,SAHD,MAGO,IAAIxC,EAAE,CAACwC,GAAH,KAAW,WAAf,EAA4B;AACjC,gBAAKhD,uBAAL;;AACA,gBAAKD,eAAL,CAAqBS,EAAE,CAACwC,GAAxB;AACD;AACF,OARD,MAQO;AACL,cAAKpC,QAAL,CAAc;AACZ6B,UAAAA,oBAAoB,EAAE;AADV,SAAd;AAGD;;AACD,UAAI,MAAKvC,UAAL,CAAgBM,EAAhB,CAAJ,EAAyB;AACvBA,QAAAA,EAAE,CAACiB,cAAH;;AACA,YAAMyB,YAAY,GAAG,MAAKrB,KAAL,CAAWlB,KAAX,CAAiBwC,IAAjB,EAArB;;AAEA,YAAMC,kBAAkB,GACtB,MAAKvB,KAAL,CAAWlB,KAAX,CAAiBkC,MAAjB,IAA2B,CAA3B,GAA+B,MAAKhD,KAAL,CAAWiD,iBAA1C,GAA8D,EADhE;AAEA,YAAMO,eAAe,GACnBD,kBAAkB,CAAC,MAAKvB,KAAL,CAAWY,oBAAZ,CADpB;;AAGA,YAAIS,YAAY,CAACL,MAAb,KAAwB,CAAxB,IAA6B,CAACQ,eAAlC,EAAmD;AACjD;AACD;;AAED,YAAIA,eAAe,IAAI7C,EAAE,CAACwC,GAAH,KAAW,OAAlC,EAA2C;AACzC,gBAAKnD,KAAL,CAAWyC,eAAX,CAA2B;AACzBgB,YAAAA,IAAI,EAAED,eAAe,CAACC,IADG;AAEzBC,YAAAA,WAAW,EAAEF,eAAe,CAACE;AAFJ,WAA3B;AAID,SALD,MAKO;AACL,gBAAK1D,KAAL,CAAWyC,eAAX,CAA2B;AACzBgB,YAAAA,IAAI,EAAEJ,YAAY,CAACnB,OAAb,CAAqB,GAArB,EAA0B,EAA1B,CADmB;AAEzBwB,YAAAA,WAAW,EAAEL,YAAY,CAACnB,OAAb,CAAqB,GAArB,EAA0B,EAA1B;AAFY,WAA3B;AAID;;AACD,cAAKnB,QAAL,CAAc;AAAED,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;AACF,KAxCD;;AA5DiB;AAqGlB;;;;qDAkDgC6C,S,EAAW;AAAA;;AAC1C,UAAMC,YAAY,GAChB,CAAC,KAAK5B,KAAL,CAAWhB,cAAZ,IACAI,IAAI,CAACC,GAAL,KAAa,KAAKW,KAAL,CAAWb,kBAAxB,GAA6C,IAF/C;;AAGA,UACEyC,YAAY,IACZD,SAAS,CAAC7C,KAAV,KAAoB+C,SADpB,IAEAF,SAAS,CAAC7C,KAAV,KAAoB,KAAKd,KAAL,CAAWc,KAHjC,EAIE;AACA,aAAKC,QAAL,CAAc;AAAED,UAAAA,KAAK,EAAE6C,SAAS,CAAC7C;AAAnB,SAAd,EAA0C,YAAM;AAC9C,cAAI,MAAI,CAACN,QAAT,EAAmB;AACjB,wCAAW,MAAI,CAACA,QAAhB;AACD;AACF,SAJD;AAKA,aAAKR,KAAL,CAAWY,aAAX,CAAyB+C,SAAS,CAAC7C,KAAnC;AACD;AACF;;;wCAEmB;AAAA;;AAClB,WAAKd,KAAL,CAAWY,aAAX,CAAyB,KAAKZ,KAAL,CAAWc,KAApC;AACAgD,MAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAK3B,YAAtC;;AACA,UAAI,KAAKpC,KAAL,CAAWgE,SAAf,EAA0B;AACxB,aAAKvD,aAAL,GAAqBwD,UAAU,CAAC,YAAM;AACpC,cAAI,MAAI,CAACzD,QAAT,EAAmB;AACjB,YAAA,MAAI,CAACA,QAAL,CAAc0D,KAAd;AACD;AACF,SAJ8B,EAI5B,GAJ4B,CAA/B;AAKD;AACF;;;2CAEsB;AACrBJ,MAAAA,MAAM,CAACK,mBAAP,CAA2B,OAA3B,EAAoC,KAAK/B,YAAzC;AACD;;;6BA6BQ;AAAA;;AAAA,wBAoBH,KAAKpC,KApBF;AAAA,UAELoE,SAFK,eAELA,SAFK;AAAA,UAGLC,mBAHK,eAGLA,mBAHK;AAAA,UAILC,oBAJK,eAILA,oBAJK;AAAA,UAKLC,aALK,eAKLA,aALK;AAAA,UAMLC,kBANK,eAMLA,kBANK;AAAA,UAOLC,sBAPK,eAOLA,sBAPK;AAAA,UAQLC,KARK,eAQLA,KARK;AAAA,UASLC,QATK,eASLA,QATK;AAAA,UAULC,uBAVK,eAULA,uBAVK;AAAA,UAWLC,iBAXK,eAWLA,iBAXK;AAAA,UAYLC,WAZK,eAYLA,WAZK;AAAA,UAaLC,SAbK,eAaLA,SAbK;AAAA,UAcLC,UAdK,eAcLA,UAdK;AAAA,UAeLC,mBAfK,eAeLA,mBAfK;AAAA,UAgBLC,oBAhBK,eAgBLA,oBAhBK;AAAA,UAiBLjC,iBAjBK,eAiBLA,iBAjBK;AAAA,UAkBLkC,YAlBK,eAkBLA,YAlBK;AAAA,UAmBLC,OAnBK,eAmBLA,OAnBK;AAAA,wBAuBL,KAAKpD,KAvBA;AAAA,UAsBClB,KAtBD,eAsBCA,KAtBD;AAAA,UAsBQE,cAtBR,eAsBQA,cAtBR;AAAA,UAsBwB6B,eAtBxB,eAsBwBA,eAtBxB;AAAA,UAsByCD,oBAtBzC,eAsByCA,oBAtBzC,EAwBP;;AACA,UAAMW,kBAAkB,GACtBzC,KAAK,CAACkC,MAAN,IAAgB,CAAhB,GAAoBC,iBAAiB,CAACoC,KAAlB,CAAwB,CAAxB,EAA2B,EAA3B,CAApB,GAAqD,EADvD;;AAEA,UAAMC,OAAO;AAAA;AACX;AACA;AAAO,QAAA,SAAS,EAAEC,mBAAOb;AAAzB,SACGA,KAAK,KAAKb,SAAV,aACM2B,iBAAKC,SAAL,CAAe,IAAf,EAAqBlB,aAArB,CADN,SAEGG,KAHN,CAFF;;AAQA,UAAMgB,aAAa,GACjB,CAACf,QAAD,IAAaI,SAAb,GAAyB,IAAzB,gBACE;AAAK,QAAA,SAAS,EAAEQ,mBAAOI;AAAvB,sBACE;AACE,QAAA,SAAS,EAAE,4BACTJ,mBAAOK,UADE,EAET5E,cAAc,GAAG,aAAH,GAAmB,IAFxB,EAGT,oBAHS;AADb,sBAOE;AACE,qBAAU,iBADZ;AAEE,QAAA,GAAG,EAAE,KAAK0B,WAFZ;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAE5B,KAJT;AAKE,QAAA,QAAQ,EAAE,KAAKI,aALjB;AAME,QAAA,OAAO,EAAE,KAAKM,OANhB;AAOE,QAAA,SAAS,EAAE+D,mBAAOM,WAPpB;AAQE,QAAA,SAAS,EAAE,EARb;AASE,QAAA,OAAO,EAAE,KAAK5E,YAThB;AAUE,QAAA,OAAO,EAAE,KAAKP,YAVhB;AAWE,QAAA,WAAW,EACToE,WAAW,KAAKjB,SAAhB,GACI2B,iBAAKC,SAAL,CAAe,mBAAf,EAAoClB,aAApC,CADJ,GAEIO,WAdR;AAgBE,QAAA,YAAY,EAAC;AAhBf,QAPF,CADF,eA2BE,gCAAC,0BAAD;AACE,QAAA,SAAS,EAAES,mBAAOO,YADpB;AAEE,QAAA,OAAO,EAAE,KAAK3D,OAFhB;AAGE,QAAA,UAAU,EAAErB,KAAK,CAACkC,MAAN,GAAe;AAH7B,QA3BF,CAFJ;AAoCA,0BACE;AACE,QAAA,SAAS,EAAE,4BACTuC,mBAAOQ,SADE,EAETX,OAAO,GAAGG,mBAAOS,SAAV,GAAsB,IAFpB,EAGT5B,SAHS,CADb;AAME,QAAA,SAAS,EAAE,KAAK9D;AANlB,SAQGgF,OARH,eASE;AACE,QAAA,SAAS,EAAE,4BACTF,OAAO,GAAGG,mBAAOS,SAAV,GAAsB,IADpB,EAETtB,KAAK,KAAKb,SAAV,GAAsB0B,mBAAOU,UAA7B,GAA0C,EAFjC;AADb,sBAME,gCAAC,sCAAD;AACE,QAAA,SAAS,EAAElB,SADb;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGE,QAAA,QAAQ,EAAEL,QAHZ;AAIE,QAAA,QAAQ,EAAEO,oBAJZ;AAKE,QAAA,SAAS,EAAED;AALb,QANF,EAaGS,aAbH,CATF,eAwBE,gCAAC,wCAAD;AACE,QAAA,aAAa,EAAEnB,aADjB;AAEE,QAAA,OAAO,EAAE,iBAAC5B,GAAD,EAAS;AAChB,UAAA,MAAI,CAACpC,OAAL,GAAeoC,GAAf;AACD,SAJH;AAKE,QAAA,eAAe,EAAEE,eALnB;AAME,QAAA,aAAa,EAAED,oBANjB;AAOE,QAAA,gBAAgB,EAAE,KAAK3C,gBAPzB;AAQE,QAAA,eAAe,EAAE,KAAKsC,gBARxB;AASE,QAAA,KAAK,EAAEgB,kBATT;AAUE,QAAA,kBAAkB,EAAEiB,kBAVtB;AAWE,QAAA,UAAU,EAAExD,cAAc,IAAI,CAACyD,sBAXjC;AAYE,QAAA,YAAY,EAAEU,YAZhB;AAaE,QAAA,iBAAiB,EAAEN,iBAbrB;AAcE,QAAA,uBAAuB,EAAED,uBAd3B;AAeE,QAAA,mBAAmB,EAAEP,mBAfvB;AAgBE,QAAA,oBAAoB,EAAEC;AAhBxB,QAxBF,CADF;AA6CD;;;;EA3V2B4B,gB;;AAAxBnG,e,CAcGoG,Y,GAA8C;AACnDnB,EAAAA,UAAU,EAAE,EADuC;AAEnDpE,EAAAA,aAAa,EAAE;AAAA,WAAM,IAAN;AAAA;AAFoC,C;eAgVxCb,e","sourcesContent":["import React, { ClipboardEvent, Component } from 'react';\n\nimport classnames from 'classnames';\n\nimport { ContactDropdownList } from '../ContactDropdownList';\nimport { RemoveButton } from '../RemoveButton';\nimport { focusCampo } from './focusCampo';\nimport i18n from './i18n';\nimport { SelectedRecipients } from './SelectedRecipients';\nimport styles from './styles.scss';\n\ntype RecipientsInputProps = {\n  className?: string;\n  recipientsClassName?: string;\n  label?: string;\n  placeholder?: string;\n  searchContactList: {\n    name: string;\n    entityType: string;\n    phoneType: string;\n    phoneNumber: string;\n  }[];\n  recipient?: {\n    phoneNumber: string;\n    name?: string;\n  };\n  recipients?: {\n    phoneNumber: string;\n    name?: string;\n  }[];\n  value: string;\n  onChange: (...args: any[]) => any;\n  onClean: (...args: any[]) => any;\n  addToRecipients: (...args: any[]) => any;\n  removeFromRecipients: (...args: any[]) => any;\n  formatContactPhone: (...args: any[]) => any;\n  detectPhoneNumbers: (...args: any[]) => any;\n  searchContact?: (...args: any[]) => any;\n  titleEnabled?: boolean;\n  autoFocus?: boolean;\n  currentLocale: string;\n  multiple?: boolean;\n  inputRef?: (...args: any[]) => any;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  contactInfoRenderer?: (...args: any[]) => any;\n  contactPhoneRenderer?: (...args: any[]) => any;\n  useRCUI?: boolean;\n  isLastInputFromDialpad?: boolean;\n};\ntype RecipientsInputState = {\n  value: any;\n  lastInputTimestamp: number;\n  isFocusOnInput: boolean;\n  selectedContactIndex: number;\n  scrollDirection: null;\n};\n\nclass RecipientsInput extends Component<\n  RecipientsInputProps,\n  RecipientsInputState\n> {\n  setSelectedIndex: (index: any) => void;\n  scrollOperation: (direction: any) => void;\n  addSelectedContactIndex: () => void;\n  reduceSelectedContactIndex: () => void;\n  isSplitter: (ev: React.KeyboardEvent<HTMLInputElement>) => boolean;\n  handleHotKey: (ev: React.KeyboardEvent<HTMLInputElement>) => void;\n  listRef: any;\n  inputRef: any;\n  _focusTimeout: NodeJS.Timeout;\n\n  static defaultProps: Partial<RecipientsInputProps> = {\n    recipients: [],\n    searchContact: () => null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n      lastInputTimestamp: 0,\n      isFocusOnInput: false,\n      selectedContactIndex: 0,\n      scrollDirection: null,\n    };\n    this.setSelectedIndex = (index) => {\n      this.setState({\n        selectedContactIndex: index,\n        scrollDirection: null,\n      });\n    };\n    this.scrollOperation = (direction) => {\n      if (direction === 'ArrowDown' || direction === 'ArrowUp') {\n        this.setState({\n          scrollDirection: direction,\n        });\n      }\n    };\n    this.addSelectedContactIndex = () => {\n      const { length } = this.props.searchContactList;\n      if (this.state.selectedContactIndex >= length - 1) {\n        this.setState({\n          selectedContactIndex: length - 1,\n        });\n      } else {\n        this.setState((preState) => ({\n          selectedContactIndex: preState.selectedContactIndex + 1,\n        }));\n      }\n    };\n    this.reduceSelectedContactIndex = () => {\n      if (this.state.selectedContactIndex > 0) {\n        this.setState((preState) => ({\n          selectedContactIndex: preState.selectedContactIndex - 1,\n        }));\n      } else {\n        this.setState({\n          selectedContactIndex: 0,\n        });\n      }\n    };\n    this.isSplitter = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n      if (\n        ev.key === ',' ||\n        ev.key === ';' ||\n        ev.key === 'Enter' ||\n        (ev.key === 'Unidentified' && // for Safari (FF cannot rely on keyCode...)\n          (ev.keyCode === 186 || // semicolon\n            ev.keyCode === 188 || // comma\n            ev.keyCode === 13)) // enter\n      ) {\n        return true;\n      }\n      return false;\n    };\n    // using React SyntheticEvent to deal with cross browser issue\n    this.handleHotKey = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n      if (this.state.isFocusOnInput && this.state.value.length >= 3) {\n        if (ev.key === 'ArrowUp') {\n          this.reduceSelectedContactIndex();\n          this.scrollOperation(ev.key);\n        } else if (ev.key === 'ArrowDown') {\n          this.addSelectedContactIndex();\n          this.scrollOperation(ev.key);\n        }\n      } else {\n        this.setState({\n          selectedContactIndex: 0,\n        });\n      }\n      if (this.isSplitter(ev)) {\n        ev.preventDefault();\n        const trimmedValue = this.state.value.trim();\n\n        const relatedContactList =\n          this.state.value.length >= 3 ? this.props.searchContactList : [];\n        const currentSelected =\n          relatedContactList[this.state.selectedContactIndex];\n\n        if (trimmedValue.length === 0 && !currentSelected) {\n          return;\n        }\n\n        if (currentSelected && ev.key === 'Enter') {\n          this.props.addToRecipients({\n            name: currentSelected.name,\n            phoneNumber: currentSelected.phoneNumber,\n          });\n        } else {\n          this.props.addToRecipients({\n            name: trimmedValue.replace(',', ''),\n            phoneNumber: trimmedValue.replace(',', ''),\n          });\n        }\n        this.setState({ value: '' });\n      }\n    };\n  }\n\n  onInputKeyUp = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    this.props.searchContact(ev.currentTarget.value);\n    this.setState({\n      isFocusOnInput: true,\n    });\n  };\n\n  onInputFocus = () => {\n    this.setState({\n      isFocusOnInput: true,\n    });\n  };\n\n  onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = ev.currentTarget;\n    const lastInputTimestamp = Date.now();\n    this.setState({ value, lastInputTimestamp }, () => {\n      this.props.onChange(value);\n    });\n    if (this.listRef) {\n      this.listRef.scrollTop = 0;\n    }\n  };\n\n  onPaste = async (ev: ClipboardEvent) => {\n    if (\n      this.props.detectPhoneNumbers &&\n      ev.clipboardData &&\n      ev.clipboardData.getData\n    ) {\n      ev.preventDefault();\n      const pastedText = ev.clipboardData.getData('text/plain');\n      const result = await this.props.detectPhoneNumbers(pastedText);\n      const currentVal = this.state.value || '';\n      if (!result) {\n        const newVal = `${currentVal}${pastedText.replace(/\\n/g, ' ')}`;\n        this.setState({ value: newVal }, () => {\n          this.props.onChange(newVal);\n        });\n      }\n    }\n  };\n\n  onClean = () => {\n    this.setState({ value: '' });\n    this.props.onClean();\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const isNotEditing =\n      !this.state.isFocusOnInput ||\n      Date.now() - this.state.lastInputTimestamp > 2000;\n    if (\n      isNotEditing &&\n      nextProps.value !== undefined &&\n      nextProps.value !== this.props.value\n    ) {\n      this.setState({ value: nextProps.value }, () => {\n        if (this.inputRef) {\n          focusCampo(this.inputRef);\n        }\n      });\n      this.props.searchContact(nextProps.value);\n    }\n  }\n\n  componentDidMount() {\n    this.props.searchContact(this.props.value);\n    window.addEventListener('click', this.clickHandler);\n    if (this.props.autoFocus) {\n      this._focusTimeout = setTimeout(() => {\n        if (this.inputRef) {\n          this.inputRef.focus();\n        }\n      }, 300);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.clickHandler);\n  }\n\n  clickHandler = (ev: MouseEvent) => {\n    if (this.listRef && this.listRef.contains(ev.target)) {\n      return;\n    }\n    if (this.inputRef && this.inputRef.contains(ev.target)) {\n      this.setState({\n        isFocusOnInput: true,\n      });\n      return;\n    }\n    this.setState({\n      isFocusOnInput: false,\n    });\n  };\n\n  _addToRecipients = (item) => {\n    this.setState({ value: '', isFocusOnInput: false });\n    this.props.addToRecipients(item);\n  };\n\n  setInputRef = (ref) => {\n    this.inputRef = ref;\n    if (typeof this.props.inputRef === 'function') {\n      this.props.inputRef(ref);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      contactInfoRenderer,\n      contactPhoneRenderer,\n      currentLocale,\n      formatContactPhone,\n      isLastInputFromDialpad,\n      label,\n      multiple,\n      phoneSourceNameRenderer,\n      phoneTypeRenderer,\n      placeholder,\n      recipient,\n      recipients,\n      recipientsClassName,\n      removeFromRecipients,\n      searchContactList,\n      titleEnabled,\n      useRCUI,\n    } = this.props;\n\n    const { value, isFocusOnInput, scrollDirection, selectedContactIndex } =\n      this.state;\n    // TODO a temporary fix for rendering slower search result.\n    const relatedContactList =\n      value.length >= 3 ? searchContactList.slice(0, 50) : [];\n    const labelEl = (\n      // eslint-disable-next-line jsx-a11y/label-has-associated-control\n      <label className={styles.label}>\n        {label === undefined\n          ? `${i18n.getString('to', currentLocale)}:`\n          : label}\n      </label>\n    );\n    const toNumberInput =\n      !multiple && recipient ? null : (\n        <div className={styles.inputWrapper}>\n          <div\n            className={classnames(\n              styles.inputField,\n              isFocusOnInput ? 'Mui-focused' : null,\n              'MuiInput-underline',\n            )}\n          >\n            <input\n              data-sign=\"recipientsInput\"\n              ref={this.setInputRef}\n              name=\"receiver\"\n              value={value}\n              onChange={this.onInputChange}\n              onPaste={this.onPaste}\n              className={styles.numberInput}\n              maxLength={30}\n              onFocus={this.onInputFocus}\n              onKeyUp={this.onInputKeyUp}\n              placeholder={\n                placeholder === undefined\n                  ? i18n.getString('enterNameOrNumber', currentLocale)\n                  : placeholder\n              }\n              autoComplete=\"off\"\n            />\n          </div>\n          <RemoveButton\n            className={styles.removeButton}\n            onClick={this.onClean}\n            visibility={value.length > 0}\n          />\n        </div>\n      );\n    return (\n      <div\n        className={classnames(\n          styles.container,\n          useRCUI ? styles.rcuiStyle : null,\n          className,\n        )}\n        onKeyDown={this.handleHotKey}\n      >\n        {labelEl}\n        <div\n          className={classnames(\n            useRCUI ? styles.rcuiStyle : null,\n            label === undefined ? styles.rightPanel : '',\n          )}\n        >\n          <SelectedRecipients\n            recipient={recipient}\n            recipients={recipients}\n            multiple={multiple}\n            onRemove={removeFromRecipients}\n            className={recipientsClassName}\n          />\n          {toNumberInput}\n        </div>\n        <ContactDropdownList\n          currentLocale={currentLocale}\n          listRef={(ref) => {\n            this.listRef = ref;\n          }}\n          scrollDirection={scrollDirection}\n          selectedIndex={selectedContactIndex}\n          setSelectedIndex={this.setSelectedIndex}\n          addToRecipients={this._addToRecipients}\n          items={relatedContactList}\n          formatContactPhone={formatContactPhone}\n          visibility={isFocusOnInput && !isLastInputFromDialpad}\n          titleEnabled={titleEnabled}\n          phoneTypeRenderer={phoneTypeRenderer}\n          phoneSourceNameRenderer={phoneSourceNameRenderer}\n          contactInfoRenderer={contactInfoRenderer}\n          contactPhoneRenderer={contactPhoneRenderer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RecipientsInput;\n"],"file":"RecipientsInput.js"}