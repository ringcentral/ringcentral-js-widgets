{"version":3,"file":"ManualEntryPanel.ut.js","names":["_react","_interopRequireDefault","require","_enzyme","_juno","_ManualEntryPanel","obj","__esModule","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","wrapper","currentLocale","defaultTransferCountryOptions","countryId","countryName","setup","_ref","_ref$goBack","goBack","_ref$transferRecipien","transferRecipientCountryId","_ref$changeRecipientN","changeRecipientNumber","_ref$changeRecipientC","changeRecipientCountryId","_ref$transferRecipien2","transferRecipientNumber","_ref$allowManualInter","allowManualInternationalTransfer","mount","createElement","RcThemeProvider","ManualEntryPanel","transferCountryOptions","UTCheckManualEntryRender","_ref3","regeneratorRuntime","mark","_callee","_ref2","internalOptions","dataSign","wrap","_callee$","_context","prev","next","Dialpad","expect","find","concat","not","toBeUndefined","stop","_x","exports","UTManualEntryInternationalTransferForbid","_ref4","_callee2","_callee2$","_context2","toHaveLength","UTManualEntryInternationalTransferAllowed","_ref5","_callee3","transferCountry","_callee3$","_context3","jest","at","simulate","document","body","querySelector","click","toBeCalledWith","UTManualEntryInternationalTransferRender","_ref6","_callee4","_callee4$","_context4","prop","toBe","text","filter","x"],"sources":["components/TransferCallRecipient/ManualEntryPanel/ManualEntryPanel.ut.tsx"],"sourcesContent":["import React from 'react';\n\nimport { mount } from 'enzyme';\n\nimport type { StepFunction } from '@ringcentral-integration/test-utils';\nimport { RcThemeProvider } from '@ringcentral/juno';\n\nimport type { ManualEntryPanelProps } from './ManualEntryPanel';\nimport { ManualEntryPanel } from './ManualEntryPanel';\n\nlet wrapper;\nconst currentLocale = 'en-US';\nconst defaultTransferCountryOptions = [\n  { countryId: 'CAN', countryName: 'Canada' },\n  { countryId: 'FRA', countryName: 'France' },\n  { countryId: 'GER', countryName: 'Germany' },\n  { countryId: 'MEX', countryName: 'Mexico' },\n  { countryId: 'MTQ', countryName: 'Martinique' },\n  { countryId: 'USA', countryName: 'US' },\n  { countryId: 'USX', countryName: 'US Extended' },\n];\n\nfunction setup({\n  goBack = () => {},\n  transferRecipientCountryId = 'USA',\n  changeRecipientNumber = () => {},\n  changeRecipientCountryId = () => {},\n  transferRecipientNumber = '6508653454',\n  allowManualInternationalTransfer = false,\n}: Partial<ManualEntryPanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <ManualEntryPanel\n        currentLocale={currentLocale}\n        goBack={goBack}\n        transferRecipientCountryId={transferRecipientCountryId}\n        changeRecipientNumber={changeRecipientNumber}\n        changeRecipientCountryId={changeRecipientCountryId}\n        transferCountryOptions={defaultTransferCountryOptions}\n        transferRecipientNumber={transferRecipientNumber}\n        allowManualInternationalTransfer={allowManualInternationalTransfer}\n      />\n    </RcThemeProvider>,\n  );\n}\n\ninterface UTCheckManualEntryRenderProps {\n  internalOptions: string;\n}\n\nexport const UTCheckManualEntryRender: StepFunction<UTCheckManualEntryRenderProps> =\n  async ({ internalOptions }) => {\n    const wrapper = setup({});\n    const dataSign = {\n      'Enter number field': 'transferRecipientNumber',\n      Dialpad: 'dialPad',\n    };\n    expect(\n      wrapper.find(`[data-sign=\"${dataSign[internalOptions]}\"]`),\n    ).not.toBeUndefined();\n  };\n\nexport const UTManualEntryInternationalTransferForbid: StepFunction<any> =\n  async () => {\n    const transferRecipientCountryId = 'FRA';\n    const allowManualInternationalTransfer = false;\n    wrapper = setup({\n      allowManualInternationalTransfer,\n      transferRecipientCountryId,\n    });\n    expect(wrapper.find('PickList[data-sign=\"transferCountry\"]')).toHaveLength(\n      0,\n    );\n  };\n\nexport const UTManualEntryInternationalTransferAllowed: StepFunction<any> =\n  async () => {\n    const changeRecipientCountryId = jest.fn(() => {});\n    const allowManualInternationalTransfer = true;\n    const countryId = 'GER';\n    wrapper = setup({\n      allowManualInternationalTransfer,\n      changeRecipientCountryId,\n    });\n\n    const transferCountry = wrapper\n      .find('PickList[data-sign=\"transferCountry\"]')\n      .at(0);\n    transferCountry.find('[role=\"button\"]').simulate('click');\n    document.body\n      .querySelector<HTMLLIElement>(`li[data-value=\"${countryId}\"]`)\n      .click();\n    expect(changeRecipientCountryId).toBeCalledWith(countryId);\n  };\n\nexport const UTManualEntryInternationalTransferRender: StepFunction<any> =\n  async () => {\n    const transferRecipientCountryId = 'FRA';\n    const transferRecipientNumber = '6508653454';\n    const allowManualInternationalTransfer = true;\n    wrapper = setup({\n      allowManualInternationalTransfer,\n      transferRecipientCountryId,\n      transferRecipientNumber,\n    });\n    const transferCountry = wrapper.find(\n      'PickList[data-sign=\"transferCountry\"]',\n    );\n    expect(transferCountry.prop('value')).toBe(transferRecipientCountryId);\n\n    expect(transferCountry.find('[role=\"button\"]').text()).toBe(\n      defaultTransferCountryOptions.filter(\n        (x) => x.countryId === transferRecipientCountryId,\n      )[0].countryName,\n    );\n\n    expect(\n      wrapper\n        .find('RecipientsInput[data-sign=\"transferRecipientNumber\"]')\n        .prop('value'),\n    ).toBe(transferRecipientNumber);\n  };\n"],"mappings":"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"}