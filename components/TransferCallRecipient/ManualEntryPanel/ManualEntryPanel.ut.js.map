{"version":3,"sources":["components/TransferCallRecipient/ManualEntryPanel/ManualEntryPanel.ut.tsx"],"names":["wrapper","currentLocale","defaultTransferCountryOptions","countryId","countryName","setup","goBack","transferRecipientCountryId","changeRecipientNumber","changeRecipientCountryId","transferRecipientNumber","allowManualInternationalTransfer","UTCheckManualEntryRender","internalOptions","dataSign","Dialpad","expect","find","not","toBeUndefined","UTManualEntryInternationalTransferForbid","toHaveLength","UTManualEntryInternationalTransferAllowed","jest","fn","transferCountry","at","simulate","document","body","querySelector","click","toBeCalledWith","UTManualEntryInternationalTransferRender","prop","toBe","text","filter","x"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { mount } from 'enzyme';\n\nimport { StepFunction } from '@ringcentral-integration/test-utils';\nimport { RcThemeProvider } from '@ringcentral/juno';\n\nimport { ManualEntryPanel, ManualEntryPanelProps } from './ManualEntryPanel';\n\nlet wrapper;\nconst currentLocale = 'en-US';\nconst defaultTransferCountryOptions = [\n  { countryId: 'CAN', countryName: 'Canada' },\n  { countryId: 'FRA', countryName: 'France' },\n  { countryId: 'GER', countryName: 'Germany' },\n  { countryId: 'MEX', countryName: 'Mexico' },\n  { countryId: 'MTQ', countryName: 'Martinique' },\n  { countryId: 'USA', countryName: 'US' },\n  { countryId: 'USX', countryName: 'US Extended' },\n];\n\nfunction setup({\n  goBack = () => {},\n  transferRecipientCountryId = 'USA',\n  changeRecipientNumber = () => {},\n  changeRecipientCountryId = () => {},\n  transferRecipientNumber = '6508653454',\n  allowManualInternationalTransfer = false,\n}: Partial<ManualEntryPanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <ManualEntryPanel\n        currentLocale={currentLocale}\n        goBack={goBack}\n        transferRecipientCountryId={transferRecipientCountryId}\n        changeRecipientNumber={changeRecipientNumber}\n        changeRecipientCountryId={changeRecipientCountryId}\n        transferCountryOptions={defaultTransferCountryOptions}\n        transferRecipientNumber={transferRecipientNumber}\n        allowManualInternationalTransfer={allowManualInternationalTransfer}\n      />\n    </RcThemeProvider>,\n  );\n}\n\ninterface UTCheckManualEntryRenderProps {\n  internalOptions: string;\n}\n\nexport const UTCheckManualEntryRender: StepFunction<UTCheckManualEntryRenderProps> =\n  async ({ internalOptions }) => {\n    const wrapper = setup({});\n    const dataSign = {\n      'Enter number field': 'transferRecipientNumber',\n      Dialpad: 'dialPad',\n    };\n    expect(\n      wrapper.find(`[data-sign=\"${dataSign[internalOptions]}\"]`),\n    ).not.toBeUndefined();\n  };\n\nexport const UTManualEntryInternationalTransferForbid: StepFunction<any> =\n  async () => {\n    const transferRecipientCountryId = 'FRA';\n    const allowManualInternationalTransfer = false;\n    wrapper = setup({\n      allowManualInternationalTransfer,\n      transferRecipientCountryId,\n    });\n    expect(wrapper.find('PickList[data-sign=\"transferCountry\"]')).toHaveLength(\n      0,\n    );\n  };\n\nexport const UTManualEntryInternationalTransferAllowed: StepFunction<any> =\n  async () => {\n    const changeRecipientCountryId = jest.fn(() => {});\n    const allowManualInternationalTransfer = true;\n    const countryId = 'GER';\n    wrapper = setup({\n      allowManualInternationalTransfer,\n      changeRecipientCountryId,\n    });\n\n    const transferCountry = wrapper\n      .find('PickList[data-sign=\"transferCountry\"]')\n      .at(0);\n    transferCountry.find('[role=\"button\"]').simulate('click');\n    document.body\n      .querySelector<HTMLLIElement>(`li[data-value=\"${countryId}\"]`)\n      .click();\n    expect(changeRecipientCountryId).toBeCalledWith(countryId);\n  };\n\nexport const UTManualEntryInternationalTransferRender: StepFunction<any> =\n  async () => {\n    const transferRecipientCountryId = 'FRA';\n    const transferRecipientNumber = '6508653454';\n    const allowManualInternationalTransfer = true;\n    wrapper = setup({\n      allowManualInternationalTransfer,\n      transferRecipientCountryId,\n      transferRecipientNumber,\n    });\n    const transferCountry = wrapper.find(\n      'PickList[data-sign=\"transferCountry\"]',\n    );\n    expect(transferCountry.prop('value')).toBe(transferRecipientCountryId);\n\n    expect(transferCountry.find('[role=\"button\"]').text()).toBe(\n      defaultTransferCountryOptions.filter(\n        (x) => x.countryId === transferRecipientCountryId,\n      )[0].countryName,\n    );\n\n    expect(\n      wrapper\n        .find('RecipientsInput[data-sign=\"transferRecipientNumber\"]')\n        .prop('value'),\n    ).toBe(transferRecipientNumber);\n  };\n"],"file":"ManualEntryPanel.ut.js"}