{"version":3,"file":"ManualEntryPanel.ut.js","names":["_juno","require","_enzyme","_react","_interopRequireDefault","_ManualEntryPanel","e","__esModule","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","wrapper","currentLocale","defaultTransferCountryOptions","countryId","countryName","setup","_ref","_ref$goBack","goBack","_ref$transferRecipien","transferRecipientCountryId","_ref$changeRecipientN","changeRecipientNumber","_ref$changeRecipientC","changeRecipientCountryId","_ref$transferRecipien2","transferRecipientNumber","_ref$allowManualInter","allowManualInternationalTransfer","mount","createElement","RcThemeProvider","ManualEntryPanel","transferCountryOptions","UTCheckManualEntryRender","_ref3","regeneratorRuntime","mark","_callee","_ref2","internalOptions","dataSign","wrap","_callee$","_context","prev","next","Dialpad","expect","find","concat","not","toBeUndefined","stop","_x","exports","UTManualEntryInternationalTransferForbid","_ref4","_callee2","_callee2$","_context2","toHaveLength","UTManualEntryInternationalTransferAllowed","_ref5","_callee3","transferCountry","_callee3$","_context3","jest","fn","at","simulate","document","body","querySelector","click","toHaveBeenCalledWith","UTManualEntryInternationalTransferRender","_ref6","_callee4","_callee4$","_context4","prop","toBe","text","filter","x"],"sources":["components/TransferCallRecipient/ManualEntryPanel/ManualEntryPanel.ut.tsx"],"sourcesContent":["import type { StepFunction } from '@ringcentral-integration/test-utils';\nimport { RcThemeProvider } from '@ringcentral/juno';\nimport { mount } from 'enzyme';\nimport React from 'react';\n\nimport type { ManualEntryPanelProps } from './ManualEntryPanel';\nimport { ManualEntryPanel } from './ManualEntryPanel';\n\nlet wrapper;\nconst currentLocale = 'en-US';\nconst defaultTransferCountryOptions = [\n  { countryId: 'CAN', countryName: 'Canada' },\n  { countryId: 'FRA', countryName: 'France' },\n  { countryId: 'GER', countryName: 'Germany' },\n  { countryId: 'MEX', countryName: 'Mexico' },\n  { countryId: 'MTQ', countryName: 'Martinique' },\n  { countryId: 'USA', countryName: 'US' },\n  { countryId: 'USX', countryName: 'US Extended' },\n];\n\nfunction setup({\n  goBack = () => {},\n  transferRecipientCountryId = 'USA',\n  changeRecipientNumber = () => {},\n  changeRecipientCountryId = () => {},\n  transferRecipientNumber = '6508653454',\n  allowManualInternationalTransfer = false,\n}: Partial<ManualEntryPanelProps>) {\n  return mount(\n    <RcThemeProvider>\n      <ManualEntryPanel\n        currentLocale={currentLocale}\n        goBack={goBack}\n        transferRecipientCountryId={transferRecipientCountryId}\n        changeRecipientNumber={changeRecipientNumber}\n        changeRecipientCountryId={changeRecipientCountryId}\n        transferCountryOptions={defaultTransferCountryOptions}\n        transferRecipientNumber={transferRecipientNumber}\n        allowManualInternationalTransfer={allowManualInternationalTransfer}\n      />\n    </RcThemeProvider>,\n  );\n}\n\ninterface UTCheckManualEntryRenderProps {\n  internalOptions: string;\n}\n\nexport const UTCheckManualEntryRender: StepFunction<\n  UTCheckManualEntryRenderProps\n> = async ({ internalOptions }) => {\n  const wrapper = setup({});\n  const dataSign = {\n    'Enter number field': 'transferRecipientNumber',\n    Dialpad: 'dialPad',\n  };\n  expect(\n    wrapper.find(`[data-sign=\"${dataSign[internalOptions]}\"]`),\n  ).not.toBeUndefined();\n};\n\nexport const UTManualEntryInternationalTransferForbid: StepFunction<\n  any\n> = async () => {\n  const transferRecipientCountryId = 'FRA';\n  const allowManualInternationalTransfer = false;\n  wrapper = setup({\n    allowManualInternationalTransfer,\n    transferRecipientCountryId,\n  });\n  expect(wrapper.find('PickList[data-sign=\"transferCountry\"]')).toHaveLength(0);\n};\n\nexport const UTManualEntryInternationalTransferAllowed: StepFunction<\n  any\n> = async () => {\n  const changeRecipientCountryId = jest.fn(() => {});\n  const allowManualInternationalTransfer = true;\n  const countryId = 'GER';\n  wrapper = setup({\n    allowManualInternationalTransfer,\n    changeRecipientCountryId,\n  });\n\n  const transferCountry = wrapper\n    .find('PickList[data-sign=\"transferCountry\"]')\n    .at(0);\n  transferCountry.find('[role=\"button\"]').simulate('click');\n  document.body\n    .querySelector<HTMLLIElement>(`li[data-value=\"${countryId}\"]`)\n    .click();\n  expect(changeRecipientCountryId).toHaveBeenCalledWith(countryId);\n};\n\nexport const UTManualEntryInternationalTransferRender: StepFunction<\n  any\n> = async () => {\n  const transferRecipientCountryId = 'FRA';\n  const transferRecipientNumber = '6508653454';\n  const allowManualInternationalTransfer = true;\n  wrapper = setup({\n    allowManualInternationalTransfer,\n    transferRecipientCountryId,\n    transferRecipientNumber,\n  });\n  const transferCountry = wrapper.find('PickList[data-sign=\"transferCountry\"]');\n  expect(transferCountry.prop('value')).toBe(transferRecipientCountryId);\n\n  expect(transferCountry.find('[role=\"button\"]').text()).toBe(\n    defaultTransferCountryOptions.filter(\n      (x) => x.countryId === transferRecipientCountryId,\n    )[0].countryName,\n  );\n\n  expect(\n    wrapper\n      .find('RecipientsInput[data-sign=\"transferRecipientNumber\"]')\n      .prop('value'),\n  ).toBe(transferRecipientNumber);\n};\n"],"mappings":"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","ignoreList":[]}