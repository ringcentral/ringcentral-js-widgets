{"version":3,"sources":["components/TransferCallRecipient/InternalPanel/InternalPanel.tsx"],"names":["InternalPanel","currentLocale","transferAgentList","goBack","transferAgentListUpdateTTL","fetchAgentList","transferAgentId","changeTransferAgentId","searchAgent","isWide","timerId","setInterval","clearInterval","i18n","getString","transferCallI18n","agent","option","i","index","agentId","available","status","statusText","internalTransferName","transferCallStyles","listItem","styles","agentItem","dot","content","undefined","agentName","ellipsis"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAeA,IAAMA,aAAoD,GAAG,SAAvDA,aAAuD,OAUvD;AAAA,MATJC,aASI,QATJA,aASI;AAAA,MARJC,iBAQI,QARJA,iBAQI;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,0BAMI,QANJA,0BAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,eAII,QAJJA,eAII;AAAA,MAHJC,qBAGI,QAHJA,qBAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,wBAAU,YAAM;AACd,QAAMC,OAAO,GAAGC,WAAW,CAAC,YAAM;AAChCN,MAAAA,cAAc;AACf,KAF0B,EAExBD,0BAFwB,CAA3B;AAGA,WAAO;AAAA,aAAMQ,aAAa,CAACF,OAAD,CAAnB;AAAA,KAAP;AACD,GALD,EAKG,EALH;AAOA,sBACE,gCAAC,sBAAD;AACE,IAAA,WAAW,EAAEP,MADf;AAEE,IAAA,KAAK,EAAEU,kBAAKC,SAAL,CAAe,uBAAf,EAAwCb,aAAxC,CAFT;AAGE,IAAA,WAAW,EAAEc,iBAAiBD,SAAjB,CAA2B,QAA3B,EAAqCb,aAArC,CAHf;AAIE,IAAA,OAAO,EAAEC,iBAJX;AAKE,IAAA,YAAY,EAAEM,WALhB;AAME,IAAA,aAAa,EAAEP,aANjB;AAOE,IAAA,cAAc,EAAE,+BAMV;AAAA,UALIe,KAKJ,SALJC,MAKI;AAAA,UAJGC,CAIH,SAJJC,KAII;AAAA,UACIC,OADJ,GAC2BJ,KAD3B,CACII,OADJ;AAAA,UACaC,SADb,GAC2BL,KAD3B,CACaK,SADb;AAEJ,UAAMC,MAAM,GAAGD,SAAS,GAAG,WAAH,GAAiB,aAAzC;;AACA,UAAME,UAAU,GAAGV,kBAAKC,SAAL,CAAeQ,MAAf,EAAuBrB,aAAvB,CAAnB;;AACA,UAAMuB,oBAAoB,GAAG,+CAAwBR,KAAxB,CAA7B;AACA,0BACE,gCAAC,oBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMT,qBAAqB,CAACa,OAAD,CAA3B;AAAA,SADX;AAEE,QAAA,QAAQ,EAAEA,OAAO,KAAKd,eAFxB;AAGE,QAAA,GAAG,EAAEY,CAHP;AAIE,QAAA,SAAS,EAAEO,mBAAmBC,QAJhC;AAKE,qBAAU;AALZ,sBAOE;AAAK,QAAA,SAAS,EAAEC,oBAAOC;AAAvB,sBACE;AAAK,QAAA,SAAS,EAAE,4BAAWD,oBAAOE,GAAlB,EAAuBF,oBAAOL,MAAP,CAAvB;AAAhB,QADF,eAEE;AAAK,QAAA,SAAS,EAAEb,MAAM,GAAGkB,oBAAOG,OAAV,GAAoBC;AAA1C,sBACE;AACE,QAAA,SAAS,EAAE,4BACTJ,oBAAOK,SADE,EAETP,mBAAmBQ,QAFV;AADb,SAMGT,oBANH,CADF,eASE;AAAG,QAAA,SAAS,EAAEG,oBAAOJ;AAArB,SAAkCA,UAAlC,CATF,CAFF,CAPF,CADF;AAwBD;AA1CH,IADF;AA8CD,CAhED","sourcesContent":["import React, { FunctionComponent, useEffect } from 'react';\n\nimport classNames from 'classnames';\n\nimport {\n  EvTransferCallUIFunctions,\n  EvTransferCallUIProps,\n} from '../../../interfaces';\nimport { getInternalTransferName } from '../../../modules/EvTransferCallUI';\nimport { ListItem, SelectList } from '../../SelectList';\nimport transferCallI18n from '../i18n';\nimport transferCallStyles from '../styles.scss';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport type InternalPanelProps = Pick<\n  EvTransferCallUIProps & EvTransferCallUIFunctions,\n  | 'currentLocale'\n  | 'goBack'\n  | 'transferAgentList'\n  | 'transferAgentListUpdateTTL'\n  | 'fetchAgentList'\n  | 'transferAgentId'\n  | 'changeTransferAgentId'\n  | 'searchAgent'\n  | 'isWide'\n>;\n\nconst InternalPanel: FunctionComponent<InternalPanelProps> = ({\n  currentLocale,\n  transferAgentList,\n  goBack,\n  transferAgentListUpdateTTL,\n  fetchAgentList,\n  transferAgentId,\n  changeTransferAgentId,\n  searchAgent,\n  isWide,\n}) => {\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      fetchAgentList();\n    }, transferAgentListUpdateTTL);\n    return () => clearInterval(timerId);\n  }, []);\n\n  return (\n    <SelectList\n      onBackClick={goBack}\n      title={i18n.getString('internalCallRecipient', currentLocale)}\n      placeholder={transferCallI18n.getString('search', currentLocale)}\n      options={transferAgentList}\n      searchOption={searchAgent}\n      currentLocale={currentLocale}\n      renderListItem={({\n        option: agent,\n        index: i,\n      }: {\n        option: EvTransferCallUIProps['transferAgentList'][number];\n        index: number;\n      }) => {\n        const { agentId, available } = agent;\n        const status = available ? 'available' : 'unavailable';\n        const statusText = i18n.getString(status, currentLocale);\n        const internalTransferName = getInternalTransferName(agent);\n        return (\n          <ListItem\n            onClick={() => changeTransferAgentId(agentId)}\n            selected={agentId === transferAgentId}\n            key={i}\n            className={transferCallStyles.listItem}\n            data-sign=\"agentItem\"\n          >\n            <div className={styles.agentItem}>\n              <div className={classNames(styles.dot, styles[status])} />\n              <div className={isWide ? styles.content : undefined}>\n                <p\n                  className={classNames(\n                    styles.agentName,\n                    transferCallStyles.ellipsis,\n                  )}\n                >\n                  {internalTransferName}\n                </p>\n                <p className={styles.statusText}>{statusText}</p>\n              </div>\n            </div>\n          </ListItem>\n        );\n      }}\n    />\n  );\n};\n\nexport { InternalPanel };\n"],"file":"InternalPanel.js"}