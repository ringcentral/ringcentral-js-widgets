{"version":3,"sources":["components/ConversationList/index.tsx"],"names":["ConversationList","props","onScroll","totalScrollHeight","messagesListBody","scrollHeight","clientHeight","currentScrollTop","scrollTop","_scrollTop","loadNextPage","prevProps","typeFilter","className","currentLocale","currentSiteCode","isMultipleSiteEnabled","conversations","perPage","disableLinks","disableCallButton","placeholder","loadingNextPage","childProps","content","length","map","item","id","loading","styles","i18n","getString","root","list","Component","defaultProps","undefined","dateTimeFormatter","showContactDisplayPlaceholder","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","showGroupNumberName","renderExtraButton","enableCDC"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classnames from 'classnames';\n\nimport MessageItem from '../MessageItem';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\ntype ConversationListProps = {\n  brand: string;\n  currentLocale: string;\n  currentSiteCode?: string;\n  isMultipleSiteEnabled?: boolean;\n  conversations: {\n    id?: number;\n    conversationId: string;\n    subject?: string;\n  }[];\n  disableLinks?: boolean;\n  disableCallButton?: boolean;\n  perPage?: number;\n  className?: string;\n  showConversationDetail: (...args: any[]) => any;\n  readMessage: (...args: any[]) => any;\n  markMessage: (...args: any[]) => any;\n  unmarkMessage: (...args: any[]) => any;\n  dateTimeFormatter?: (...args: any[]) => any;\n  showContactDisplayPlaceholder?: boolean;\n  sourceIcons?: object;\n  phoneTypeRenderer?: (...args: any[]) => any;\n  phoneSourceNameRenderer?: (...args: any[]) => any;\n  showGroupNumberName?: boolean;\n  placeholder?: string;\n  typeFilter?: string;\n  loadNextPage?: (...args: any[]) => any;\n  loadingNextPage?: boolean;\n  renderExtraButton?: (...args: any[]) => any;\n  enableCDC?: boolean;\n};\nclass ConversationList extends Component<ConversationListProps, {}> {\n  constructor(props) {\n    super(props);\n    this._scrollTop = 0;\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.typeFilter === prevProps.typeFilter) {\n      return;\n    }\n    if (this.messagesListBody) {\n      this.messagesListBody.scrollTop = 0;\n    }\n  }\n  onScroll = () => {\n    const totalScrollHeight = this.messagesListBody.scrollHeight;\n    const { clientHeight } = this.messagesListBody;\n    const currentScrollTop = this.messagesListBody.scrollTop;\n    // load next page if scroll near buttom\n    if (\n      totalScrollHeight - this._scrollTop > clientHeight + 10 &&\n      totalScrollHeight - currentScrollTop <= clientHeight + 10\n    ) {\n      if (typeof this.props.loadNextPage === 'function') {\n        this.props.loadNextPage();\n      }\n    }\n    this._scrollTop = currentScrollTop;\n  };\n  render() {\n    const {\n      className,\n      currentLocale,\n      currentSiteCode,\n      isMultipleSiteEnabled,\n      conversations,\n      perPage,\n      disableLinks,\n      disableCallButton,\n      placeholder,\n      loadingNextPage,\n      ...childProps\n    } = this.props;\n    let content;\n    if (conversations && conversations.length) {\n      content = conversations.map((item) => (\n        <MessageItem\n          {...childProps}\n          conversation={item}\n          currentLocale={currentLocale}\n          currentSiteCode={currentSiteCode}\n          isMultipleSiteEnabled={isMultipleSiteEnabled}\n          key={item.id}\n          disableLinks={disableLinks}\n          disableCallButton={disableCallButton}\n        />\n      ));\n    }\n    const loading = loadingNextPage ? (\n      <div className={styles.loading}>\n        {i18n.getString('loading', currentLocale)}\n      </div>\n    ) : null;\n    return (\n      <div\n        className={classnames(styles.root, className)}\n        onScroll={this.onScroll}\n        ref={(list) => {\n          this.messagesListBody = list;\n        }}\n      >\n        {content}\n        {loading}\n      </div>\n    );\n  }\n}\nConversationList.defaultProps = {\n  currentSiteCode: '',\n  isMultipleSiteEnabled: false,\n  perPage: 20,\n  className: undefined,\n  disableLinks: false,\n  disableCallButton: false,\n  dateTimeFormatter: undefined,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  showGroupNumberName: false,\n  placeholder: undefined,\n  loadNextPage: undefined,\n  loadingNextPage: false,\n  typeFilter: undefined,\n  renderExtraButton: undefined,\n  enableCDC: false,\n};\nexport default ConversationList;\n"],"file":"index.js"}