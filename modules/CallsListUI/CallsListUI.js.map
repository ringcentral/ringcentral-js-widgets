{"version":3,"sources":["modules/CallsListUI/CallsListUI.ts"],"names":["FILTER_THRESHOLD","CallsListUI","name","deps","dep","optional","showContactDisplayPlaceholder","enableContactFallback","_deps","brand","callLogger","callMonitor","locale","regionSettings","appFeatures","callHistory","connectivityMonitor","rateLimiter","dateTimeFormat","call","composeText","extensionInfo","currentSiteCode","site","code","isMultipleSiteEnabled","currentLocale","activeRingCalls","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","areaCode","countryCode","outboundSmsPermission","hasOutboundSMSPermission","internalSmsPermission","hasInternalSMSPermission","fullName","autoLog","calls","latestCalls","disableLinks","connectivity","throttling","disableClickToDial","isIdle","loggingMap","showSpinner","ready","readTextPermission","hasReadTextPermission","enableCDC","isCDCEnabled","composeTextRoute","callCtrlRoute","onCreateContact","onLogCall","isLoggedContact","onViewContact","dateTimeFormatter","dialerRoute","contactMatcher","contactSearch","contactDetailsUI","routerInteraction","webphone","dialerUI","formatPhone","phoneNumber","webphoneAnswer","sessionId","answer","webphoneToVoicemail","toVoiceMail","webphoneReject","reject","webphoneHangup","hangup","webphoneResume","resume","currentPath","push","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","undefined","contact","redirect","logCall","utcTimestamp","formatDateTime","type","id","showContactDetails","direct","onClickToDial","recipient","onClickToCall","onClickToSms","isDummyContact","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","onClickToSMS","RcUIModuleV2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaO,IAAMA,gBAAwB,GAAG,GAAjC;;IA4BMC,W,WA1BZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,aADA;AAENC,EAAAA,IAAI,EAAE,CACJ,OADI,EAEJ,aAFI,EAGJ,QAHI,EAIJ,gBAJI,EAKJ,aALI,EAMJ,qBANI,EAOJ,aAPI,EAQJ,gBARI,EASJ,MATI,EAUJ,eAVI,EAWJ,gBAXI,EAYJ,eAZI,EAaJ,mBAbI,EAcJ,aAdI,EAeJ;AAAEC,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAfI,EAgBJ;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAhBI,EAiBJ;AAAED,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAjBI,EAkBJ;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAlBI,EAmBJ;AAAED,IAAAA,GAAG,EAAE,aAAP;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAnBI,EAoBJ;AAAED,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GApBI,EAqBJ;AAAED,IAAAA,GAAG,EAAE,kBAAP;AAA2BC,IAAAA,QAAQ,EAAE;AAArC,GArBI;AAFA,CAAP,C;;;;;AA2BC,uBAAYF,IAAZ,EAAqB;AAAA;;AAAA,6BACb;AAAEA,MAAAA,IAAI,EAAJA;AAAF,KADa;AAEpB;;;;qCAKoC;AAAA;;AAAA,uCAFnCG,6BAEmC;AAAA,UAFnCA,6BAEmC,sCAFH,KAEG;AAAA,uCADnCC,qBACmC;AAAA,UADnCA,qBACmC,sCADX,KACW;AAAA,wBAe/B,KAAKC,KAf0B;AAAA,UAEjCC,KAFiC,eAEjCA,KAFiC;AAAA,UAGjCC,UAHiC,eAGjCA,UAHiC;AAAA,UAIjCC,WAJiC,eAIjCA,WAJiC;AAAA,UAKjCC,MALiC,eAKjCA,MALiC;AAAA,UAMjCC,cANiC,eAMjCA,cANiC;AAAA,UAOjCC,WAPiC,eAOjCA,WAPiC;AAAA,UAQjCC,WARiC,eAQjCA,WARiC;AAAA,UASjCC,mBATiC,eASjCA,mBATiC;AAAA,UAUjCC,WAViC,eAUjCA,WAViC;AAAA,UAWjCC,cAXiC,eAWjCA,cAXiC;AAAA,UAYjCC,IAZiC,eAYjCA,IAZiC;AAAA,UAajCC,WAbiC,eAajCA,WAbiC;AAAA,UAcjCC,aAdiC,eAcjCA,aAdiC;AAgBnC,aAAO;AACLC,QAAAA,eAAe,2BAAED,aAAF,aAAEA,aAAF,8CAAEA,aAAa,CAAEE,IAAjB,wDAAE,oBAAqBC,IAAvB,yEAA+B,EADzC;AAELC,QAAAA,qBAAqB,2BAAEJ,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEI,qBAAjB,yEAA0C,KAF1D;AAGLC,QAAAA,aAAa,EAAEd,MAAM,CAACc,aAHjB;AAILC,QAAAA,eAAe,EAAEhB,WAAW,CAACgB,eAJxB;AAKLC,QAAAA,iBAAiB,EAAEjB,WAAW,CAACiB,iBAL1B;AAMLC,QAAAA,kBAAkB,EAAElB,WAAW,CAACkB,kBAN3B;AAOLC,QAAAA,gBAAgB,EAAEnB,WAAW,CAACmB,gBAPzB;AAQLC,QAAAA,QAAQ,EAAElB,cAAc,CAACkB,QARpB;AASLC,QAAAA,WAAW,EAAEnB,cAAc,CAACmB,WATvB;AAULC,QAAAA,qBAAqB,EAAEnB,WAAW,CAACoB,wBAV9B;AAWLC,QAAAA,qBAAqB,EAAErB,WAAW,CAACsB,wBAX9B;AAYL3B,QAAAA,KAAK,EAAEA,KAAK,CAAC4B,QAZR;AAaL/B,QAAAA,6BAA6B,EAA7BA,6BAbK;AAcLgC,QAAAA,OAAO,EAAE,CAAC,EAAE5B,UAAU,IAAIA,UAAU,CAAC4B,OAA3B,CAdL;AAeL/B,QAAAA,qBAAqB,EAArBA,qBAfK;AAgBLgC,QAAAA,KAAK,EAAExB,WAAW,CAACyB,WAhBd;AAiBLC,QAAAA,YAAY,EAAE,CAACzB,mBAAmB,CAAC0B,YAArB,IAAqCzB,WAAW,CAAC0B,UAjB1D;AAkBLC,QAAAA,kBAAkB,EAAE,EAAEzB,IAAI,IAAIA,IAAI,CAAC0B,MAAf,CAlBf;AAmBLC,QAAAA,UAAU,EAAEpC,UAAU,IAAIA,UAAU,CAACoC,UAnBhC;AAoBLC,QAAAA,WAAW,EAAE,EACXhC,WAAW,CAACiC,KAAZ,IACApC,MAAM,CAACoC,KADP,IAEAnC,cAAc,CAACmC,KAFf,IAGA9B,cAAc,CAAC8B,KAHf,IAIAhC,mBAAmB,CAACgC,KAJpB,IAKAlC,WAAW,CAACkC,KALZ,KAMC,CAAC7B,IAAD,IAASA,IAAI,CAAC6B,KANf,MAOC,CAAC5B,WAAD,IAAgBA,WAAW,CAAC4B,KAP7B,MAQC,CAACtC,UAAD,IAAeA,UAAU,CAACsC,KAR3B,CADW,CApBR;AA+BLC,QAAAA,kBAAkB,EAAEnC,WAAW,CAACoC,qBA/B3B;AAgCLC,QAAAA,SAAS,EAAErC,WAAW,CAACsC;AAhClB,OAAP;AAkCD;;;0CAW4C;AAAA,wCAR3CC,gBAQ2C;AAAA,UAR3CA,gBAQ2C,sCARxB,cAQwB;AAAA,sCAP3CC,aAO2C;AAAA,UAP3CA,aAO2C,oCAP3B,eAO2B;AAAA,UAN3CC,eAM2C,SAN3CA,eAM2C;AAAA,UAL3CC,SAK2C,SAL3CA,SAK2C;AAAA,UAJ3CC,eAI2C,SAJ3CA,eAI2C;AAAA,UAH3CC,aAG2C,SAH3CA,aAG2C;AAAA,UAF3CC,iBAE2C,SAF3CA,iBAE2C;AAAA,oCAD3CC,WAC2C;AAAA,UAD3CA,WAC2C,kCAD7B,SAC6B;AAAA,yBAcvC,KAAKpD,KAdkC;AAAA,UAEzCE,UAFyC,gBAEzCA,UAFyC;AAAA,UAGzCU,WAHyC,gBAGzCA,WAHyC;AAAA,UAIzCyC,cAJyC,gBAIzCA,cAJyC;AAAA,UAKzCC,aALyC,gBAKzCA,aALyC;AAAA,UAMzCjD,cANyC,gBAMzCA,cANyC;AAAA,UAOzCkD,gBAPyC,gBAOzCA,gBAPyC;AAAA,UAQzCC,iBARyC,gBAQzCA,iBARyC;AAAA,UASzCC,QATyC,gBASzCA,QATyC;AAAA,UAUzC9C,IAVyC,gBAUzCA,IAVyC;AAAA,UAWzC+C,QAXyC,gBAWzCA,QAXyC;AAAA,UAYzCnD,WAZyC,gBAYzCA,WAZyC;AAAA,UAazCG,cAbyC,gBAazCA,cAbyC;AAe3C,aAAO;AACLiD,QAAAA,WAAW,EAAE,qBAACC,WAAD;AAAA,iBACX,8BAAa;AACXA,YAAAA,WAAW,EAAXA,WADW;AAEXrC,YAAAA,QAAQ,EAAElB,cAAc,CAACkB,QAFd;AAGXC,YAAAA,WAAW,EAAEnB,cAAc,CAACmB;AAHjB,WAAb,CADW;AAAA,SADR;AAOLqC,QAAAA,cAAc,EAAE,wBAACC,SAAD;AAAA,iBAAuBL,QAAvB,aAAuBA,QAAvB,uBAAuBA,QAAQ,CAAEM,MAAV,CAAiBD,SAAjB,CAAvB;AAAA,SAPX;AAQLE,QAAAA,mBAAmB,EAAE,6BAACF,SAAD;AAAA,iBACnBL,QADmB,aACnBA,QADmB,uBACnBA,QAAQ,CAAEQ,WAAV,CAAsBH,SAAtB,CADmB;AAAA,SARhB;AAULI,QAAAA,cAAc,EAAE,wBAACJ,SAAD;AAAA,iBAAuBL,QAAvB,aAAuBA,QAAvB,uBAAuBA,QAAQ,CAAEU,MAAV,CAAiBL,SAAjB,CAAvB;AAAA,SAVX;AAWLM,QAAAA,cAAc,EAAE,wBAACN,SAAD;AAAA,iBAAuBL,QAAvB,aAAuBA,QAAvB,uBAAuBA,QAAQ,CAAEY,MAAV,CAAiBP,SAAjB,CAAvB;AAAA,SAXX;AAYCQ,QAAAA,cAZD,0BAYgBR,SAZhB,EAYmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACjCL,QADiC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,2BAIhCA,QAAQ,CAACc,MAAT,CAAgBT,SAAhB,CAJgC;;AAAA;AAKtC,wBAAIN,iBAAiB,CAACgB,WAAlB,KAAkC1B,aAAtC,EAAqD;AACnDU,sBAAAA,iBAAiB,CAACiB,IAAlB,CAAuB3B,aAAvB;AACD;;AAPqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQvC,SApBI;AAqBLC,QAAAA,eAAe,EAAEA,eAAe;AAAA,8EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASa,oBAAAA,WAAT,SAASA,WAAT,EAAsBlE,IAAtB,SAAsBA,IAAtB,EAA4BgF,UAA5B,SAA4BA,UAA5B;AAAA;AAAA,2BAC+BrB,cAAc,CAACsB,cAAf,CAA8B;AACzDf,sBAAAA,WAAW,EAAXA,WADyD;AAEzDgB,sBAAAA,WAAW,EAAE;AAF4C,qBAA9B,CAD/B;;AAAA;AACQD,oBAAAA,cADR;;AAAA,wBAKOA,cALP;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAMU5B,eAAe,CAAC;AAAEa,sBAAAA,WAAW,EAAXA,WAAF;AAAelE,sBAAAA,IAAI,EAAJA,IAAf;AAAqBgF,sBAAAA,UAAU,EAAVA;AAArB,qBAAD,CANzB;;AAAA;AAAA;AAAA,2BAOUrB,cAAc,CAACwB,gBAAf,CAAgC;AAAEjB,sBAAAA,WAAW,EAAXA;AAAF,qBAAhC,CAPV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAD4B;;AAAA;AAAA;AAAA;AAAA,cAW5BkB,SAhCC;AAiCL7B,QAAAA,eAAe,EAAfA,eAjCK;AAkCLD,QAAAA,SAAS,EACPA,SAAS,IACR9C,UAAU;AAAA,8EACR;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASS,oBAAAA,IAAT,SAASA,IAAT,EAAeoE,OAAf,SAAeA,OAAf,yBAAwBC,QAAxB,EAAwBA,QAAxB,+BAAmC,IAAnC;AAAA;AAAA,2BACO9E,UAAU,CAAC+E,OAAX,CAAmB;AACvBtE,sBAAAA,IAAI,EAAJA,IADuB;AAEvBoE,sBAAAA,OAAO,EAAPA,OAFuB;AAGvBC,sBAAAA,QAAQ,EAARA;AAHuB,qBAAnB,CADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADQ;;AAAA;AAAA;AAAA;AAAA,WApCR;AA6CL7B,QAAAA,iBAAiB,EACfA,iBADe,aACfA,iBADe,cACfA,iBADe,GAEd;AAAA,cAAG+B,YAAH,SAAGA,YAAH;AAAA,iBACCxE,cAAc,CAACyE,cAAf,CAA8B;AAC5BD,YAAAA,YAAY,EAAZA;AAD4B,WAA9B,CADD;AAAA,SA/CE;AAmDLhC,QAAAA,aAAa,EACXA,aAAa,IACZ,iBAAyD;AAAA,oCAAtD6B,OAAsD;AAAA,cAA3CK,IAA2C,iBAA3CA,IAA2C;AAAA,cAArCC,EAAqC,iBAArCA,EAAqC;;AACxD,cAAI9B,gBAAJ,EAAsB;AACpBA,YAAAA,gBAAgB,CAAC+B,kBAAjB,CAAoC;AAAEF,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,EAAE,EAAFA,EAAR;AAAYE,cAAAA,MAAM,EAAE;AAApB,aAApC;AACD;AACF,SAzDE;AA0DLC,QAAAA,aAAa,EAAE9B,QAAQ,GACnB;AACA,kBAAC+B,SAAD,EAAoB;AAClB,cAAI9E,IAAI,CAAC0B,MAAT,EAAiB;AACfmB,YAAAA,iBAAiB,CAACiB,IAAlB,CAAuBrB,WAAvB;AACAM,YAAAA,QAAQ,CAAC/C,IAAT,CAAc;AAAE8E,cAAAA,SAAS,EAATA;AAAF,aAAd;AACAlF,YAAAA,WAAW,CAACmF,aAAZ;AACD;AACF,SARkB,GASnBZ,SAnEC;AAoELa,QAAAA,YAAY,EAAE/E,WAAW;AAAA,8EACrB,kBACEmE,OADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEa,oBAAAA,cAFF,8DAEmB,KAFnB;;AAIE,wBAAIpC,iBAAJ,EAAuB;AACrBA,sBAAAA,iBAAiB,CAACiB,IAAlB,CAAuB5B,gBAAvB;AACD,qBANH,CAOE;;;AACA,wBAAIkC,OAAO,CAACrF,IAAR,IAAgBqF,OAAO,CAACnB,WAAxB,IAAuCgC,cAA3C,EAA2D;AACzDhF,sBAAAA,WAAW,CAACiF,oBAAZ,CAAiCd,OAAO,CAACrF,IAAzC;AACA4D,sBAAAA,aAAa,CAACwC,MAAd,CAAqB;AAAEC,wBAAAA,YAAY,EAAEhB,OAAO,CAACrF;AAAxB,uBAArB;AACD,qBAHD,MAGO;AACLkB,sBAAAA,WAAW,CAACoF,WAAZ,CAAwBjB,OAAxB;;AACA,0BAAInE,WAAW,CAACqF,cAAZ,KAA+BlB,OAAO,CAACnB,WAA3C,EAAwD;AACtDhD,wBAAAA,WAAW,CAACsF,mBAAZ;AACD;AACF;;AACD3F,oBAAAA,WAAW,CAAC4F,YAAZ;;AAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADqB;;AAAA;AAAA;AAAA;AAAA,cAoBrBrB;AAxFC,OAAP;AA0FD;;;;EA9KqDsB,kB","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport formatNumber from '@ringcentral-integration/commons/lib/formatNumber';\nimport { FormatDateTimeOptions } from '@ringcentral-integration/commons/modules/DateTimeFormatV2';\nimport { RcUIModuleV2 } from '@ringcentral-integration/core';\nimport { ToNumber } from '@ringcentral-integration/commons/modules/ComposeTextV2';\nimport { RouteParams } from '../ContactDetailsUI';\nimport {\n  CallsListUIFunctions,\n  CallsListUIProps,\n  Deps,\n  OnCreateContactOptions,\n  OnLogCallOptions,\n  UIFunctionsOptions,\n  UIPropsOptions,\n} from './CallsListUI.interface';\n\nexport const FILTER_THRESHOLD: number = 500;\n\n@Module({\n  name: 'CallsListUI',\n  deps: [\n    'Brand',\n    'CallMonitor',\n    'Locale',\n    'RegionSettings',\n    'CallHistory',\n    'ConnectivityMonitor',\n    'RateLimiter',\n    'DateTimeFormat',\n    'Call',\n    'ExtensionInfo',\n    'ContactMatcher',\n    'ContactSearch',\n    'RouterInteraction',\n    'AppFeatures',\n    { dep: 'DialerUI', optional: true },\n    { dep: 'DialerUI', optional: true },\n    { dep: 'CallLogger', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'ComposeText', optional: true },\n    { dep: 'CallsListUIOptions', optional: true },\n    { dep: 'ContactDetailsUI', optional: true },\n  ],\n})\nexport class CallsListUI<T extends Deps = Deps> extends RcUIModuleV2<T> {\n  constructor(deps: T) {\n    super({ deps });\n  }\n\n  getUIProps({\n    showContactDisplayPlaceholder = false,\n    enableContactFallback = false,\n  }: UIPropsOptions): CallsListUIProps {\n    const {\n      brand,\n      callLogger,\n      callMonitor,\n      locale,\n      regionSettings,\n      appFeatures,\n      callHistory,\n      connectivityMonitor,\n      rateLimiter,\n      dateTimeFormat,\n      call,\n      composeText,\n      extensionInfo,\n    } = this._deps;\n    return {\n      currentSiteCode: extensionInfo?.site?.code ?? '',\n      isMultipleSiteEnabled: extensionInfo?.isMultipleSiteEnabled ?? false,\n      currentLocale: locale.currentLocale,\n      activeRingCalls: callMonitor.activeRingCalls,\n      activeOnHoldCalls: callMonitor.activeOnHoldCalls,\n      activeCurrentCalls: callMonitor.activeCurrentCalls,\n      otherDeviceCalls: callMonitor.otherDeviceCalls,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n      outboundSmsPermission: appFeatures.hasOutboundSMSPermission,\n      internalSmsPermission: appFeatures.hasInternalSMSPermission,\n      brand: brand.fullName,\n      showContactDisplayPlaceholder,\n      autoLog: !!(callLogger && callLogger.autoLog),\n      enableContactFallback,\n      calls: callHistory.latestCalls,\n      disableLinks: !connectivityMonitor.connectivity || rateLimiter.throttling,\n      disableClickToDial: !(call && call.isIdle),\n      loggingMap: callLogger && callLogger.loggingMap,\n      showSpinner: !(\n        callHistory.ready &&\n        locale.ready &&\n        regionSettings.ready &&\n        dateTimeFormat.ready &&\n        connectivityMonitor.ready &&\n        appFeatures.ready &&\n        (!call || call.ready) &&\n        (!composeText || composeText.ready) &&\n        (!callLogger || callLogger.ready)\n      ),\n      readTextPermission: appFeatures.hasReadTextPermission,\n      enableCDC: appFeatures.isCDCEnabled,\n    };\n  }\n\n  getUIFunctions({\n    composeTextRoute = '/composeText',\n    callCtrlRoute = '/calls/active',\n    onCreateContact,\n    onLogCall,\n    isLoggedContact,\n    onViewContact,\n    dateTimeFormatter,\n    dialerRoute = '/dialer',\n  }: UIFunctionsOptions): CallsListUIFunctions {\n    const {\n      callLogger,\n      composeText,\n      contactMatcher,\n      contactSearch,\n      regionSettings,\n      contactDetailsUI,\n      routerInteraction,\n      webphone,\n      call,\n      dialerUI,\n      callHistory,\n      dateTimeFormat,\n    } = this._deps;\n    return {\n      formatPhone: (phoneNumber: string) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: regionSettings.areaCode,\n          countryCode: regionSettings.countryCode,\n        }),\n      webphoneAnswer: (sessionId: string) => webphone?.answer(sessionId),\n      webphoneToVoicemail: (sessionId: string) =>\n        webphone?.toVoiceMail(sessionId),\n      webphoneReject: (sessionId: string) => webphone?.reject(sessionId),\n      webphoneHangup: (sessionId: string) => webphone?.hangup(sessionId),\n      async webphoneResume(sessionId: string) {\n        if (!webphone) {\n          return;\n        }\n        await webphone.resume(sessionId);\n        if (routerInteraction.currentPath !== callCtrlRoute) {\n          routerInteraction.push(callCtrlRoute);\n        }\n      },\n      onCreateContact: onCreateContact\n        ? async ({ phoneNumber, name, entityType }: OnCreateContactOptions) => {\n            const hasMatchNumber = await contactMatcher.hasMatchNumber({\n              phoneNumber,\n              ignoreCache: true,\n            });\n            if (!hasMatchNumber) {\n              await onCreateContact({ phoneNumber, name, entityType });\n              await contactMatcher.forceMatchNumber({ phoneNumber });\n            }\n          }\n        : undefined,\n      isLoggedContact,\n      onLogCall:\n        onLogCall ||\n        (callLogger &&\n          (async ({ call, contact, redirect = true }: OnLogCallOptions) => {\n            await callLogger.logCall({\n              call,\n              contact,\n              redirect,\n            });\n          })),\n\n      dateTimeFormatter:\n        dateTimeFormatter ??\n        (({ utcTimestamp }: Partial<FormatDateTimeOptions>) =>\n          dateTimeFormat.formatDateTime({\n            utcTimestamp,\n          })),\n      onViewContact:\n        onViewContact ||\n        (({ contact: { type, id } }: { contact: RouteParams }) => {\n          if (contactDetailsUI) {\n            contactDetailsUI.showContactDetails({ type, id, direct: true });\n          }\n        }),\n      onClickToDial: dialerUI\n        ? // TODO: fix type in dialerUI\n          (recipient: any) => {\n            if (call.isIdle) {\n              routerInteraction.push(dialerRoute);\n              dialerUI.call({ recipient });\n              callHistory.onClickToCall();\n            }\n          }\n        : undefined,\n      onClickToSms: composeText\n        ? async (\n            contact: ToNumber & { name?: string },\n            isDummyContact = false,\n          ) => {\n            if (routerInteraction) {\n              routerInteraction.push(composeTextRoute);\n            }\n            // if contact autocomplete, if no match fill the number only\n            if (contact.name && contact.phoneNumber && isDummyContact) {\n              composeText.updateTypingToNumber(contact.name);\n              contactSearch.search({ searchString: contact.name });\n            } else {\n              composeText.addToNumber(contact);\n              if (composeText.typingToNumber === contact.phoneNumber) {\n                composeText.cleanTypingToNumber();\n              }\n            }\n            callHistory.onClickToSMS();\n          }\n        : undefined,\n    };\n  }\n}\n"],"file":"CallsListUI.js"}