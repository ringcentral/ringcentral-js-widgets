{"version":3,"sources":["modules/AlertV2/Alert.ts"],"names":["Alert","name","deps","dep","optional","alertOptions","ttl","enableGlobalCache","enableTabSync","storageKey","_autoDismiss","now","Date","ids","messages","filter","item","timestamp","map","id","length","dismiss","allowDuplicates","find","message","level","push","_deps","forEach","setTimeout","payload","alertLevels","info","loading","backdrop","classes","onBackdropClick","action","uuid","v4","_alert","options","alert","danger","warning","success","Object","assign","_dismiss","_dismissAll","specifiedAlertIds","specifiedAlertId","_ids","concat","indexOf","RcModuleV2","globalStorage","state","proxify"],"mappings":"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","sourcesContent":["import * as uuid from 'uuid';\n\nimport {\n  action,\n  globalStorage,\n  RcModuleV2,\n  state,\n} from '@ringcentral-integration/core';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport {\n  AlertItem,\n  AlertLevel,\n  AllowDuplicates,\n  Deps,\n  Options,\n} from './Alert.interface';\nimport { alertLevels, AlertLevelType } from './alertLevels';\n\n@Module({\n  name: 'Alert',\n  deps: ['GlobalStorage', { dep: 'AlertOptions', optional: true }],\n})\nexport class Alert extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps: {\n        ...deps,\n        alertOptions: {\n          ...deps.alertOptions,\n          ttl: deps.alertOptions?.ttl ?? 5000,\n        },\n      },\n      enableGlobalCache: deps.alertOptions?.enableTabSync ?? false,\n      storageKey: 'alert',\n    });\n  }\n\n  @globalStorage\n  @state\n  messages: AlertItem[] = [];\n\n  @action\n  protected _alert({ allowDuplicates, ...item }: AlertItem & AllowDuplicates) {\n    if (\n      !allowDuplicates &&\n      this.messages.find(\n        ({ message, level }) =>\n          item.message === message && item.level === level,\n      )\n    ) {\n      return;\n    }\n    this.messages.push(item);\n  }\n\n  onInit() {\n    if (this._deps.alertOptions?.enableTabSync) {\n      this.messages.forEach(({ ttl }) => {\n        setTimeout(this._autoDismiss, ttl + 10);\n      });\n    }\n  }\n\n  /**\n   * Scans the messages for expired ones and dismiss them.\n   */\n  _autoDismiss = () => {\n    const now = Date.now();\n    const ids = this.messages\n      .filter((item) => item.ttl > 0 && now - item.timestamp > item.ttl)\n      .map((item) => item.id);\n    if (ids.length) {\n      this.dismiss(ids);\n    }\n  };\n\n  /**\n   * Add alert message to the state.\n   */\n  @proxify\n  async alert({\n    message,\n    payload,\n    level = alertLevels.info as AlertLevelType,\n    ttl = this._deps.alertOptions.ttl,\n    allowDuplicates = true,\n    loading = false,\n    backdrop = false,\n    classes,\n    onBackdropClick,\n    action = this._deps.alertOptions?.action,\n  }: Options & AlertLevel) {\n    const id = uuid.v4();\n    this._alert({\n      message,\n      payload,\n      level,\n      // when loading the ttl will be zero, make this never dismiss\n      ttl: loading ? 0 : ttl,\n      allowDuplicates,\n      backdrop,\n      classes,\n      onBackdropClick,\n      id,\n      timestamp: Date.now(),\n      loading,\n      action,\n    });\n    if (ttl > 0) {\n      setTimeout(this._autoDismiss, ttl + 10);\n    }\n    return id;\n  }\n\n  /**\n   * Add alert message of alertLevel \"danger\" to the state.\n   */\n  danger(options: Options) {\n    return this.alert({\n      ...options,\n      level: alertLevels.danger,\n    });\n  }\n\n  /**\n   * Add alert message of alertLevel \"warning\" to the state.\n   */\n  warning(options: Options) {\n    return this.alert({\n      ...options,\n      level: alertLevels.warning,\n    });\n  }\n\n  /**\n   * Add alert message of alertLevel \"info\" to the state.\n   */\n  info(options: Options) {\n    return this.alert({\n      ...options,\n      level: alertLevels.info,\n    });\n  }\n\n  /**\n   * Add alert message of alertLevel \"success\" to the state.\n   */\n  success(options: Options) {\n    return this.alert({\n      ...options,\n      level: alertLevels.success,\n    });\n  }\n\n  /**\n   * Update the message with given id.\n   */\n  @action\n  update(\n    id: string,\n    options: Partial<Pick<AlertItem, 'message' | 'loading' | 'action'>>,\n  ) {\n    const message = this.messages.find((item) => item.id === id);\n    if (message) {\n      Object.assign(message, options);\n    }\n  }\n\n  /**\n   * Dismiss the messages/message\n   */\n  @proxify\n  async dismiss(ids: string | string[]) {\n    this._dismiss(ids);\n  }\n\n  /**\n   * Dismiss all messages.\n   */\n  @proxify\n  async dismissAll() {\n    this._dismissAll();\n  }\n\n  /**\n   * Dismiss all other messages expect some specified message.\n   */\n  @action\n  dismissAllExpectSpecified({\n    specifiedAlertIds,\n  }: {\n    specifiedAlertIds: string[];\n  }) {\n    const messages: AlertItem[] = [];\n    specifiedAlertIds.forEach((specifiedAlertId) => {\n      const message = this.messages.find(\n        (item) => item.id === specifiedAlertId,\n      );\n      if (message) messages.push(message);\n    });\n    this.messages = messages;\n  }\n\n  @action\n  _dismiss(ids: string | string[]) {\n    const _ids = [].concat(ids);\n    this.messages = this.messages.filter(\n      (item) => _ids.indexOf(item.id) === -1,\n    );\n  }\n\n  @action\n  _dismissAll() {\n    this.messages = [];\n  }\n}\n"],"file":"Alert.js"}