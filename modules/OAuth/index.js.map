{"version":3,"sources":["modules/OAuth/index.js"],"names":["OAuth","name","deps","dep","optional","loginPath","redirectUri","restrictSameOriginRedirectUri","routerInteraction","client","options","_routerInteraction","_client","_loginPath","_loginWindow","_redirectCheckTimeout","_isInElectron","_restrictSameOriginRedirectUri","_uuid","uuid","v4","window","addEventListener","close","error","data","callbackUri","_clearRedirectCheckTimeout","_handleCallbackUri","e","key","callbackUriStorageKey","newValue","localStorage","removeItem","ready","_auth","loggedIn","currentPath","oAuthReady","setupOAuth","destroyOAuth","oAuthCallback","store","dispatch","type","actionTypes","service","platform","discovery","loginUrlWithDiscovery","oAuthUri","isRedirectUriSameOrigin","_setupRedirectCheckTimeout","clearTimeout","setTimeout","closed","location","href","indexOf","origin","btoa","Date","now","prefix","encodeURIComponent","OAuthBase","background","proxify"],"mappings":"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","sourcesContent":["import background from '@ringcentral-integration/commons/lib/background';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport proxify from '@ringcentral-integration/commons/lib/proxy/proxify';\nimport ensureExist from '@ringcentral-integration/commons/lib/ensureExist';\nimport * as uuid from 'uuid';\n\nimport popWindow from '../../lib/popWindow';\nimport OAuthBase from '../../lib/OAuthBase';\nimport { isElectron } from '../../lib/isElectron';\n\n@Module({\n  name: 'OAuth',\n  deps: [\n    'RouterInteraction',\n    'Client',\n    { dep: 'OAuthOptions', optional: true },\n  ],\n})\nexport default class OAuth extends OAuthBase {\n  constructor({\n    loginPath = '/',\n    redirectUri = './redirect.html',\n    restrictSameOriginRedirectUri = true,\n    routerInteraction,\n    client,\n    ...options\n  }) {\n    super({\n      redirectUri,\n      ...options,\n    });\n    this._routerInteraction = ensureExist(\n      routerInteraction,\n      'routerInteraction',\n    );\n    this._client = ensureExist(client, 'client');\n    this._loginPath = loginPath;\n    this._loginWindow = null;\n    this._redirectCheckTimeout = null;\n    this._isInElectron = isElectron();\n    this._restrictSameOriginRedirectUri = restrictSameOriginRedirectUri;\n    this._uuid = uuid.v4();\n  }\n\n  initialize() {\n    super.initialize();\n    // close login window when unload and login window exist\n    window.addEventListener('beforeunload', () => {\n      if (this._loginWindow) {\n        try {\n          this._loginWindow.close();\n        } catch (error) {\n          /* ignore error */\n        }\n      }\n    });\n    // listen callback uri from redirect page, works with coss origin redirect page\n    window.addEventListener('message', ({ data = {} }) => {\n      if (!data) {\n        return;\n      }\n      const { callbackUri } = data;\n      if (callbackUri) {\n        this._clearRedirectCheckTimeout();\n        this._handleCallbackUri(callbackUri);\n      }\n    });\n    // listen callback uri from storage, works only with same origin\n    window.addEventListener('storage', (e) => {\n      if (\n        e.key === this.callbackUriStorageKey &&\n        e.newValue &&\n        e.newValue !== ''\n      ) {\n        const callbackUri = e.newValue;\n        localStorage.removeItem(this.callbackUriStorageKey);\n        this._clearRedirectCheckTimeout();\n        this._handleCallbackUri(callbackUri);\n      }\n    });\n  }\n\n  _onStateChange() {\n    super._onStateChange();\n    if (\n      this.ready &&\n      !this._auth.loggedIn &&\n      this._routerInteraction.currentPath === this._loginPath &&\n      !this.oAuthReady\n    ) {\n      this.setupOAuth();\n    }\n    if (\n      this._auth.loggedIn ||\n      this._routerInteraction.currentPath !== this._loginPath\n    ) {\n      this.destroyOAuth();\n    }\n  }\n\n  get name() {\n    return 'OAuth';\n  }\n\n  @background\n  async setupOAuth() {\n    if (!this.oAuthReady) {\n      window.oAuthCallback = (callbackUri) => {\n        this._clearRedirectCheckTimeout();\n        this._handleCallbackUri(callbackUri);\n      };\n      this.store.dispatch({\n        type: this.actionTypes.setupOAuth,\n      });\n    }\n  }\n\n  @background\n  async destroyOAuth() {\n    if (this.oAuthReady) {\n      window.oAuthCallback = null;\n      this.store.dispatch({\n        type: this.actionTypes.destroyOAuth,\n      });\n    }\n  }\n\n  @proxify\n  async openOAuthPage() {\n    if (this.oAuthReady) {\n      if (this._client.service.platform().discovery()) {\n        await this._client.service.platform().loginUrlWithDiscovery();\n      }\n      this._loginWindow = popWindow(this.oAuthUri, 'rc-oauth', 600, 600);\n      if (this.isRedirectUriSameOrigin) {\n        this._setupRedirectCheckTimeout();\n      }\n    }\n  }\n\n  @proxify\n  async openOAuthPageInOtherRouter() {\n    if (this._client.service.platform().discovery()) {\n      await this._client.service.platform().loginUrlWithDiscovery();\n    }\n    this._loginWindow = popWindow(this.oAuthUri, 'rc-oauth', 600, 600);\n    if (this.isRedirectUriSameOrigin) {\n      this._setupRedirectCheckTimeout();\n    }\n  }\n\n  _clearRedirectCheckTimeout() {\n    if (this._redirectCheckTimeout === null) {\n      return;\n    }\n    clearTimeout(this._redirectCheckTimeout);\n  }\n\n  _setupRedirectCheckTimeout() {\n    this._clearRedirectCheckTimeout();\n    this._redirectCheckTimeout = setTimeout(() => {\n      this._redirectCheckTimeout = null;\n      if (\n        !this._loginWindow ||\n        this._loginWindow.closed ||\n        // for electron, the .window is always undefined\n        (!this._isInElectron && !this._loginWindow.window)\n      ) {\n        this._loginWindow = null;\n        return;\n      }\n\n      try {\n        const callbackUri = this._loginWindow.location.href;\n        if (callbackUri.indexOf(this.redirectUri) !== -1) {\n          this._loginWindow.close();\n          this._loginWindow = null;\n          this._handleCallbackUri(callbackUri);\n          return;\n        }\n      } catch (e) {\n        // ignore e\n        // console.log('checking redirect uri');\n      }\n      this._setupRedirectCheckTimeout();\n    }, 1000);\n  }\n\n  get isRedirectUriSameOrigin() {\n    return this.restrictSameOriginRedirectUri\n      ? this.redirectUri.indexOf(window.origin) === 0\n      : true;\n  }\n\n  get authState() {\n    return `${btoa(Date.now())}-${this.prefix}-${encodeURIComponent(\n      btoa(this._uuid),\n    )}`;\n  }\n\n  get callbackUriStorageKey() {\n    return `${this.prefix}-${encodeURIComponent(btoa(this._uuid))}-callbackUri`;\n  }\n}\n"],"file":"index.js"}