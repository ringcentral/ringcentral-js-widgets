{"version":3,"sources":["modules/RegionSettingsUI/RegionSettingsUI.ts"],"names":["RegionSettingsUI","name","deps","dep","optional","availableCountries","_deps","regionSettings","countryCode","areaCode","currentLocale","locale","onBackButtonClick","routerInteraction","goBack","onSave","setData","onLogoutButtonClick","auth","logout","RcUIModuleV2"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAkBaA,gB,WAVZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,kBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,MADI,EAEJ,QAFI,EAGJ,gBAHI,EAIJ,mBAJI,EAKJ;AAAEC,IAAAA,GAAG,EAAE,yBAAP;AAAkCC,IAAAA,QAAQ,EAAE;AAA5C,GALI;AAFA,CAAP,C;;;;;AAWC,4BAAYF,IAAZ,EAAwB;AAAA;;AAAA,6BAChB;AACJA,MAAAA,IAAI,EAAJA;AADI,KADgB;AAIvB;;;;iCACiD;AAChD,aAAO;AACLG,QAAAA,kBAAkB,EAAE,KAAKC,KAAL,CAAWC,cAAX,CAA0BF,kBADzC;AAELG,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,cAAX,CAA0BC,WAFlC;AAGLC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC,cAAX,CAA0BE,QAH/B;AAILC,QAAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWK,MAAX,CAAkBD;AAJ5B,OAAP;AAMD;;;qCAEyD;AAAA;;AACxD,aAAO;AACLE,QAAAA,iBAAiB,EAAE;AAAA,iBAAM,KAAI,CAACN,KAAL,CAAWO,iBAAX,CAA6BC,MAA7B,EAAN;AAAA,SADd;AAELC,QAAAA,MAAM,EAAE;AAAA;;AAAA,iBAAa,yBAAA,KAAI,CAACT,KAAL,CAAWC,cAAX,EAA0BS,OAA1B,wCAAb;AAAA,SAFH;AAGLC,QAAAA,mBAAmB,EAAE;AAAA,iBAAM,KAAI,CAACX,KAAL,CAAWY,IAAX,CAAgBC,MAAhB,EAAN;AAAA;AAHhB,OAAP;AAKD;;;;EArBmCC,kB","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  RcUIModuleV2,\n  UIFunctions,\n  UIProps,\n} from '@ringcentral-integration/core';\n\nimport { Deps, RegionSettingsUIPanelProps } from './RegionSettingsUI.interface';\n\n@Module({\n  name: 'RegionSettingsUI',\n  deps: [\n    'Auth',\n    'Locale',\n    'RegionSettings',\n    'RouterInteraction',\n    { dep: 'RegionSettingsUIOptions', optional: true },\n  ],\n})\nexport class RegionSettingsUI extends RcUIModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n  getUIProps(): UIProps<RegionSettingsUIPanelProps> {\n    return {\n      availableCountries: this._deps.regionSettings.availableCountries,\n      countryCode: this._deps.regionSettings.countryCode,\n      areaCode: this._deps.regionSettings.areaCode,\n      currentLocale: this._deps.locale.currentLocale,\n    };\n  }\n\n  getUIFunctions(): UIFunctions<RegionSettingsUIPanelProps> {\n    return {\n      onBackButtonClick: () => this._deps.routerInteraction.goBack(),\n      onSave: (...args) => this._deps.regionSettings.setData(...args),\n      onLogoutButtonClick: () => this._deps.auth.logout(),\n    };\n  }\n}\n"],"file":"RegionSettingsUI.js"}