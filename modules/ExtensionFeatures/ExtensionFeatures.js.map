{"version":3,"sources":["modules/ExtensionFeatures/ExtensionFeatures.ts"],"names":["ExtensionFeatures","name","deps","dep","optional","data","_stopWatchingSubscription","_handleSubscription","message","ready","_source","disableCache","_deps","tabManager","active","body","hints","includes","subscriptionHints","limits","features","permissions","fetchData","DataSource","polling","extensionFeaturesOptions","key","cleanOnReset","fetchFunction","client","service","platform","get","response","json","status","auth","logout","alert","danger","permissionsMessages","insufficientPrivilege","ttl","readyCheckFunction","subscription","dataFetcherV2","register","ReadExtensionInfo","available","loginStatus","loggedIn","hasData","readExtensionInfo","subscribe","subscriptionFilters","extensionInfo","item","id","records","DataFetcherV2Consumer"],"mappings":"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","sourcesContent":["import {\n  ExtensionInfoEvent,\n  FeatureInfo,\n  FeatureList,\n} from '@rc-ex/core/definitions';\nimport { computed, watch, watchEffect } from '@ringcentral-integration/core';\nimport { reduce } from 'ramda';\nimport { Unsubscribe } from 'redux';\nimport { permissionsMessages } from '../../enums/permissionsMessages';\nimport { subscriptionFilters } from '../../enums/subscriptionFilters';\nimport { subscriptionHints } from '../../enums/subscriptionHints';\nimport { Module } from '../../lib/di';\nimport loginStatus from '../Auth/loginStatus';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './ExtensionFeatures.interface';\n\n@Module({\n  name: 'ExtensionFeatures',\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    'DataFetcherV2',\n    { dep: 'Subscription', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'ExtensionFeaturesOptions', optional: true },\n  ],\n})\nexport class ExtensionFeatures extends DataFetcherV2Consumer<\n  Deps,\n  FeatureList\n> {\n  protected _stopWatchingSubscription: Unsubscribe = null;\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n\n    this._source = new DataSource({\n      polling: deps.extensionFeaturesOptions?.polling ?? true,\n      ...deps.extensionFeaturesOptions,\n      key: 'extensionFeatures',\n      cleanOnReset: true,\n      fetchFunction: async () => {\n        try {\n          const response = await this._deps.client.service\n            .platform()\n            .get('/restapi/v1.0/account/~/extension/~/features');\n          return response.json();\n        } catch (error) {\n          if (error.response?.status === 403) {\n            await this._deps.auth.logout();\n            this._deps.alert.danger({\n              message: permissionsMessages.insufficientPrivilege,\n              ttl: 0,\n            });\n            return {};\n          }\n          throw error;\n        }\n      },\n      readyCheckFunction: () => this._deps.subscription?.ready ?? true,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  protected _handleSubscription = (message: ExtensionInfoEvent) => {\n    if (\n      this.ready &&\n      (this._source.disableCache || (this._deps.tabManager?.active ?? true)) &&\n      message?.body?.hints &&\n      (message.body.hints.includes(subscriptionHints.limits) ||\n        message.body.hints.includes(subscriptionHints.features) ||\n        message.body.hints.includes(subscriptionHints.permissions))\n    ) {\n      this.fetchData();\n    }\n  };\n\n  onInitOnce() {\n    watchEffect(\n      this,\n      () => [\n        this.ready,\n        !!this.data,\n        !!this.features?.ReadExtensionInfo?.available,\n        this._deps.auth.loginStatus === loginStatus.loggedIn,\n      ],\n      async ([ready, hasData, readExtensionInfo, loggedIn]) => {\n        if (ready && loggedIn && !readExtensionInfo) {\n          await this._deps.auth.logout();\n          if (hasData) {\n            // only show alert if featuresList was successfully fetched,\n            // but the user has no ReadExtensionInfo feature\n            this._deps.alert.danger({\n              message: permissionsMessages.insufficientPrivilege,\n              ttl: 0,\n            });\n          }\n        }\n      },\n    );\n  }\n\n  onInit() {\n    if (this._deps.subscription) {\n      this._deps.subscription.subscribe([subscriptionFilters.extensionInfo]);\n      this._stopWatchingSubscription = watch(\n        this,\n        () => this._deps.subscription.message,\n        this._handleSubscription,\n      );\n    }\n  }\n\n  onReset() {\n    this._stopWatchingSubscription?.();\n    this._stopWatchingSubscription = null;\n  }\n\n  @computed(({ data }: ExtensionFeatures) => [data])\n  get features() {\n    return reduce(\n      (features, item) => {\n        features[item.id] = item;\n        return features;\n      },\n      {} as Record<string, FeatureInfo>,\n      this.data?.records ?? [],\n    );\n  }\n}\n"],"file":"ExtensionFeatures.js"}