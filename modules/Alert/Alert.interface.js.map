{"version":3,"file":"Alert.interface.js","names":[],"sources":["modules/Alert/Alert.interface.ts"],"sourcesContent":["import type { DOMAttributes } from 'react';\n\nimport type { GlobalStorage } from '../GlobalStorage';\nimport type { AlertLevelType } from './alertLevels';\n\nexport interface Deps {\n  globalStorage: GlobalStorage;\n  alertOptions?: AlertOptions;\n}\n\nexport interface AlertOptions {\n  // TODO: fix state serialization issue and handle the ttl timeout when tab sync up.\n  /**\n   * Set default ttl for auto dismiss alert.\n   * When enable tab sync, other tabs will not handle the ttl timeout.\n   */\n  ttl?: number;\n  /**\n   * enable tab sync for alert\n   */\n  enableTabSync?: boolean;\n  /**\n   * action template(right area) with new notification\n   */\n  action?: React.ReactNode;\n}\n\nexport interface AlertItem {\n  /**\n   * alert uuid\n   */\n  id: string;\n  /**\n   * alert text information\n   */\n  message: string;\n  /**\n   * payload for alert\n   */\n  payload?: any;\n  /**\n   * timestamp for alert\n   */\n  timestamp: number;\n  /**\n   * level type for alert\n   */\n  level: AlertLevelType;\n  /**\n   * set ttl for auto dismiss alert\n   */\n  ttl: number;\n  /**\n   * show loading with new notification\n   */\n  loading?: boolean;\n  /**\n   * action template(right area) with new notification\n   */\n  action?: React.ReactNode;\n  /**\n   * backdrop with page, default is false\n   */\n  backdrop?: boolean;\n  /**\n   * classes for that alert\n   */\n  classes?: {\n    backdrop?: string;\n  };\n  /**\n   * emit event when backdrop to be click\n   */\n  onBackdropClick?: DOMAttributes<HTMLDivElement>['onClick'];\n}\n\nexport interface AllowDuplicates {\n  /**\n   * allow duplicate alert\n   */\n  allowDuplicates?: boolean;\n}\n\nexport type Options = Pick<AlertItem, 'message'> &\n  Pick<Partial<AlertItem>, Exclude<keyof AlertItem, 'message'>> &\n  AllowDuplicates;\n"],"mappings":""}