{"version":3,"sources":["modules/MessageSender/index.ts"],"names":["MessageMaxLength","MultipartMessageMaxLength","SENDING_THRESHOLD","MessageSender","deps","dep","optional","alert","client","extensionInfo","extensionPhoneNumber","numberValidate","availabilityMonitor","options","actionTypes","messageSenderActionTypes","_alert","_client","_extensionPhoneNumber","_extensionInfo","_reducer","_numberValidate","_availabilityMonitor","_eventEmitter","EventEmitter","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","_shouldReset","_resetModuleStatus","ready","dispatch","type","initSuccess","resetSuccess","message","warning","ttl","text","multipart","_alertWarning","messageSenderMessages","textEmpty","length","textTooLong","multipartTextTooLong","toNumbers","recipientsEmpty","senderNumber","validateResult","validate","isMySenderNumber","number","phoneNumber","senderNumbersList","validateError","senderNumberInvalid","errors","forEach","error","recipientNumberInvalids","result","_validateToNumbersIsEmpty","recipientNumbers","filter","item","index","arr","indexOf","validateNumbers","numberValidateResult","_alertInvalidRecipientErrors","numbers","subAddress","isCompanyExtension","e164","notAnExtension","push","availableExtension","fromNumber","replyOnMessageId","eventId","uuid","v4","_validateText","_validateToNumbers","validateToNumberResult","extensionNumbers","phoneNumbers","_validateSenderNumber","emit","send","responses","chunks","total","shouldSleep","chunk","_sendPager","pagerResponse","_sendSms","toNumber","smsResponse","sendOver","sendError","_onSendError","console","debug","toUsers","account","extension","sms","post","from","to","response","extensionNumber","map","params","replyOn","companyPager","errResp","clone","json","_json","ok","errorCode","err","parameterName","startsWith","notSmsToExtension","internationalSMSNotSupported","noInternalSMSPermission","checkIfHAError","event","handler","on","state","status","sendStatus","moduleStatuses","messageSenderStatus","idle","smsSenderNumbers","RcModule","proxify"],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\nimport { find } from 'ramda';\nimport * as uuid from 'uuid';\n\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport chunkMessage from '../../lib/chunkMessage';\nimport { Module } from '../../lib/di';\nimport isBlank from '../../lib/isBlank';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport getMessageSenderReducer from './getMessageSenderReducer';\nimport { messageSenderActionTypes } from './messageSenderActionTypes';\nimport { messageSenderMessages } from './messageSenderMessages';\nimport { messageSenderStatus } from './messageSenderStatus';\n\nexport const MessageMaxLength = 1000;\nexport const MultipartMessageMaxLength = MessageMaxLength * 5;\n\nconst SENDING_THRESHOLD = 30;\n\n/**\n * @class\n * @description Message sender and validator module\n */\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'ExtensionPhoneNumber',\n    'NumberValidate',\n    { dep: 'AvailabilityMonitor', optional: true },\n  ],\n})\nexport default class MessageSender extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Alert} params.alert - alert module instance\n   * @param {Client} params.client - client module instance\n   * @param {ExtensionInfo} params.extensionInfo - extensionInfo module instance\n   * @param {ExtensionPhoneNumber} params.extensionPhoneNumber - extensionPhoneNumber module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   */\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    extensionPhoneNumber,\n    numberValidate,\n    availabilityMonitor,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: messageSenderActionTypes,\n    });\n\n    this._alert = alert;\n    this._client = client;\n    this._extensionPhoneNumber = extensionPhoneNumber;\n    this._extensionInfo = extensionInfo;\n    this._reducer = getMessageSenderReducer(this.actionTypes);\n    this._numberValidate = numberValidate;\n    this._availabilityMonitor = availabilityMonitor;\n    this._eventEmitter = new EventEmitter();\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._extensionPhoneNumber.ready &&\n      this._extensionInfo.ready &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready) &&\n      !this.ready\n    );\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _shouldReset() {\n    return (\n      (!this._extensionPhoneNumber.ready ||\n        !this._extensionInfo.ready ||\n        (!!this._availabilityMonitor && !this._availabilityMonitor.ready)) &&\n      this.ready\n    );\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _alertWarning(message) {\n    if (message) {\n      this._alert.warning({\n        message,\n        ttl: 0,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _validateText(text, multipart) {\n    if (isBlank(text)) {\n      this._alertWarning(messageSenderMessages.textEmpty);\n      return false;\n    }\n\n    if (!multipart && text.length > MessageMaxLength) {\n      this._alertWarning(messageSenderMessages.textTooLong);\n      return false;\n    }\n\n    if (multipart && text.length > MultipartMessageMaxLength) {\n      this._alertWarning(messageSenderMessages.multipartTextTooLong);\n      return false;\n    }\n\n    return true;\n  }\n\n  _validateToNumbersIsEmpty(toNumbers) {\n    if (toNumbers.length === 0) {\n      this._alertWarning(messageSenderMessages.recipientsEmpty);\n      return true;\n    }\n    return false;\n  }\n\n  _validateSenderNumber(senderNumber) {\n    let validateResult = true;\n    if (isBlank(senderNumber)) {\n      validateResult = false;\n    }\n    this.store.dispatch({ type: this.actionTypes.validate });\n    if (validateResult) {\n      const isMySenderNumber = find(\n        (number) => number.phoneNumber === senderNumber,\n        this.senderNumbersList,\n      );\n      if (!isMySenderNumber) {\n        validateResult = false;\n      }\n    }\n    if (!validateResult) {\n      this.store.dispatch({ type: this.actionTypes.validateError });\n      this._alertWarning(messageSenderMessages.senderNumberInvalid);\n    }\n    return validateResult;\n  }\n\n  _alertInvalidRecipientErrors(errors) {\n    errors.forEach((error) => {\n      const message = messageSenderMessages[error.type];\n      if (!this._alertWarning(message)) {\n        this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      }\n    });\n  }\n\n  @proxify\n  async _validateToNumbers(toNumbers) {\n    const result = {\n      result: false,\n    };\n    if (this._validateToNumbersIsEmpty(toNumbers)) {\n      return result;\n    }\n    const recipientNumbers = toNumbers.filter(\n      (item, index, arr) => arr.indexOf(item) === index,\n    );\n    this.store.dispatch({ type: this.actionTypes.validate });\n    const numberValidateResult = await this._numberValidate.validateNumbers(\n      recipientNumbers,\n    );\n    if (!numberValidateResult.result) {\n      this._alertInvalidRecipientErrors(numberValidateResult.errors);\n      this.store.dispatch({ type: this.actionTypes.validateError });\n      return result;\n    }\n    const numbers = [];\n    for (const number of numberValidateResult.numbers) {\n      if (number.subAddress && number.subAddress.length > 0) {\n        if (\n          !this._numberValidate.isCompanyExtension(\n            number.e164,\n            number.subAddress,\n          )\n        ) {\n          this._alertWarning(messageSenderMessages.notAnExtension);\n          this.store.dispatch({ type: this.actionTypes.validateError });\n          return result;\n        }\n        numbers.push(number.subAddress);\n      } else {\n        numbers.push(number.availableExtension || number.e164);\n      }\n    }\n    result.result = true;\n    result.numbers = numbers;\n    return result;\n  }\n\n  @proxify\n  async send({\n    fromNumber,\n    toNumbers,\n    text,\n    replyOnMessageId,\n    multipart = false,\n  }) {\n    const eventId = uuid.v4();\n    if (!this._validateText(text, multipart)) {\n      return null;\n    }\n    try {\n      const validateToNumberResult = await this._validateToNumbers(toNumbers);\n      if (!validateToNumberResult.result) {\n        return null;\n      }\n      const recipientNumbers = validateToNumberResult.numbers;\n\n      const extensionNumbers = recipientNumbers.filter(\n        (number) => number.length <= 6,\n      );\n      const phoneNumbers = recipientNumbers.filter(\n        (number) => number.length > 6,\n      );\n\n      // not validate sender number if recipient is only extension number\n      if (phoneNumbers.length > 0) {\n        if (!this._validateSenderNumber(fromNumber)) {\n          return null;\n        }\n      }\n      this._eventEmitter.emit(this.actionTypes.send, {\n        eventId,\n        fromNumber,\n        toNumbers,\n        text,\n        replyOnMessageId,\n        multipart,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.send,\n      });\n\n      const responses = [];\n      const chunks = multipart ? chunkMessage(text, MessageMaxLength) : [text];\n      const total = (phoneNumbers.length + 1) * chunks.length;\n      const shouldSleep = total > SENDING_THRESHOLD;\n      if (extensionNumbers.length > 0) {\n        for (const chunk of chunks) {\n          if (shouldSleep) await sleep(2000);\n          const pagerResponse = await this._sendPager({\n            toNumbers: extensionNumbers,\n            text: chunk,\n            replyOnMessageId,\n          });\n          responses.push(pagerResponse);\n        }\n      }\n\n      if (phoneNumbers.length > 0) {\n        for (const phoneNumber of phoneNumbers) {\n          for (const chunk of chunks) {\n            if (shouldSleep) await sleep(2000);\n            const smsResponse = await this._sendSms({\n              fromNumber,\n              toNumber: phoneNumber,\n              text: chunk,\n            });\n            responses.push(smsResponse);\n          }\n        }\n      }\n\n      this.store.dispatch({\n        type: this.actionTypes.sendOver,\n        toNumbers,\n      });\n\n      return responses;\n    } catch (error) {\n      this._eventEmitter.emit(this.actionTypes.sendError, {\n        eventId,\n        fromNumber,\n        toNumbers,\n        text,\n        replyOnMessageId,\n        multipart,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.sendError,\n        error: 'error',\n      });\n      await this._onSendError(error);\n      console.debug('sendComposeText e ', error);\n      throw error;\n    }\n  }\n\n  @proxify\n  async _sendSms({ fromNumber, toNumber, text }) {\n    const toUsers = [{ phoneNumber: toNumber }];\n    const response = await this._client\n      .account()\n      .extension()\n      .sms()\n      .post({\n        from: { phoneNumber: fromNumber },\n        to: toUsers,\n        text,\n      });\n    return response;\n  }\n\n  @proxify\n  async _sendPager({ toNumbers, text, replyOnMessageId }) {\n    const from = { extensionNumber: this._extensionInfo.extensionNumber };\n    const toUsers = toNumbers.map((number) => ({ extensionNumber: number }));\n    const params = { from, to: toUsers, text };\n    if (replyOnMessageId) {\n      params.replyOn = replyOnMessageId;\n    }\n    const response = await this._client\n      .account()\n      .extension()\n      .companyPager()\n      .post(params);\n    return response;\n  }\n\n  async _onSendError(error) {\n    const errResp = error.response;\n    if (errResp) {\n      errResp._json = await errResp.clone().json();\n    }\n    if (\n      errResp &&\n      !errResp.ok &&\n      errResp._json &&\n      (errResp._json.errorCode === 'InvalidParameter' ||\n        errResp._json.errorCode === 'InternationalProhibited' ||\n        errResp._json.errorCode === 'CMN-408')\n    ) {\n      errResp._json.errors.map((err) => {\n        if (\n          (err.errorCode === 'CMN-101' ||\n            err.errorCode === 'CMN-102' ||\n            err.errorCode === 'CMN-414') &&\n          err.parameterName.startsWith('to')\n        ) {\n          // 101 : \"Parameter [to.extensionNumber] value is invalid\"\n          // 101 : \"Parameter [to.phoneNumber] value is invalid\"\n          // 102 : \"Resource for parameter [to] is not found\"\n          this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n          return null;\n        }\n        if (err.errorCode === 'MSG-246') {\n          // MSG-246 : \"Sending SMS from/to extension numbers is not available\"\n          this._alertWarning(messageSenderMessages.notSmsToExtension);\n        }\n        if (err.errorCode === 'MSG-240') {\n          // MSG-240 : \"International SMS is not supported\"\n          this._alertWarning(\n            messageSenderMessages.internationalSMSNotSupported,\n          );\n        }\n        if (err.errorCode === 'CMN-408') {\n          // MSG-240 : \"In order to call this API endpoint, user needs to have [InternalSMS] permission for requested resource.\"\n          this._alertWarning(messageSenderMessages.noInternalSMSPermission);\n        }\n\n        return null;\n      });\n      return;\n    }\n\n    if (\n      this._availabilityMonitor &&\n      (await this._availabilityMonitor.checkIfHAError(error))\n    ) {\n      return null;\n    }\n\n    this._alertWarning(messageSenderMessages.sendError);\n  }\n\n  on(event, handler) {\n    this._eventEmitter.on(event, handler);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get sendStatus() {\n    return this.state.sendStatus;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get idle() {\n    return this.sendStatus === messageSenderStatus.idle;\n  }\n\n  get senderNumbersList() {\n    return this._extensionPhoneNumber.smsSenderNumbers;\n  }\n\n  get events() {\n    return this.actionTypes;\n  }\n}\n"],"file":"index.js"}