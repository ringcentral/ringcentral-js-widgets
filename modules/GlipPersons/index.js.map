{"version":3,"file":"index.js","names":["_utils","require","_moduleStatuses","_interopRequireDefault","_RcModule2","_batchApiHelper","_di","_ensureExist","_proxify","_actionTypes","_getReducer","_interopRequireWildcard","_dec","_class","_class2","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","asyncGeneratorStep","o","c","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","_objectSpread","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","_objectWithoutProperties","_objectWithoutPropertiesLoose","indexOf","propertyIsEnumerable","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","l","initializer","slice","reverse","reduce","MaximumBatchGetPersons","DEFAULT_BATCH_FETCH_DELAY","GlipPersons","Module","deps","dep","optional","_RcModule","_super","_ref","_this","client","auth","storage","tabManager","appFeatures","_ref$batchFetchDelay","batchFetchDelay","options","actionTypes","_appFeatures","_auth","_batchFetchDelay","_client","_dataStorageKey","_fetchingIds","_storage","_tabManager","ensureExist","_reducer","getReducer","registerReducer","reducer","getGlipPersonStoreReducer","glipPersonStore","initialize","_this2","store","subscribe","_onStateChange","_onStateChange2","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","_shouldInit","dispatch","type","init","isFreshLogin","cleanUp","_hasPermission","abrupt","loadMe","initSuccess","_shouldReset","resetSuccess","stop","loggedIn","ready","pending","_loadMe","_callee2","_callee2$","_context2","loadPerson","ownerId","_loadPerson","_callee3","id","person","_callee3$","_context3","fetch","glip","persons","sent","fetchSuccess","t0","fetchError","_x","_loadPersons","_callee4","personIds","_this3","newPersonIds","ids","lastIds","_callee4$","_context4","personsMap","_batchGetPersons","batchFetchSuccess","sleep","loadPersons","_x2","_batchGetPersons2","_callee5","response","multipartResponse","responses","_callee5$","_context5","join","batchGetApi","platform","service","url","concat","all","ok","map","x","json","_x3","getItem","state","status","moduleStatuses","hasGlipPermission","RcModule","proxify","exports"],"sources":["modules/GlipPersons/index.ts"],"sourcesContent":["import { sleep } from '@ringcentral-integration/utils';\n\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport RcModule from '../../lib/RcModule';\nimport { batchGetApi } from '../../lib/batchApiHelper';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\n\nimport { actionTypes } from './actionTypes';\nimport getReducer, { getGlipPersonStoreReducer } from './getReducer';\n\nconst MaximumBatchGetPersons = 30;\nconst DEFAULT_BATCH_FETCH_DELAY = 500;\n\n@Module({\n  deps: [\n    'Client',\n    'Auth',\n    'AppFeatures',\n    { dep: 'Storage', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'GlipPersonsOptions', optional: true },\n  ],\n})\n// @ts-expect-error TS(2415): Class 'GlipPersons' incorrectly extends base class... Remove this comment to see the full error message\nexport default class GlipPersons extends RcModule {\n  _appFeatures: any;\n  _auth: any;\n  _batchFetchDelay: any;\n  _client: any;\n  _dataStorageKey: any;\n  _fetchingIds: any;\n  _storage: any;\n  _tabManager: any;\n  constructor({\n    client,\n    auth,\n    storage,\n    tabManager,\n    appFeatures,\n    batchFetchDelay = DEFAULT_BATCH_FETCH_DELAY,\n    ...options\n  }: any) {\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._appFeatures = appFeatures;\n    // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n    this._client = ensureExist.call(this, client, 'client');\n    // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n    this._auth = ensureExist.call(this, auth, 'auth');\n    this._tabManager = tabManager;\n    this._storage = storage;\n\n    this._fetchingIds = {};\n    this._batchFetchDelay = batchFetchDelay;\n\n    this._dataStorageKey = 'glipPersonsData';\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._dataStorageKey,\n        reducer: getGlipPersonStoreReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        glipPersonStore: getGlipPersonStoreReducer(this.actionTypes),\n      });\n    }\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this._auth.isFreshLogin) {\n        this.store.dispatch({\n          type: this.actionTypes.cleanUp,\n        });\n      }\n      if (!this._hasPermission) return;\n      await this.loadMe();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  // @ts-expect-error TS(4113): This member cannot have an 'override' modifier bec... Remove this comment to see the full error message\n  override _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._appFeatures.ready &&\n      (!this._storage || this._storage.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  // @ts-expect-error TS(4113): This member cannot have an 'override' modifier bec... Remove this comment to see the full error message\n  override _shouldReset() {\n    return (\n      ((this._storage && !this._storage.ready) ||\n        (this._tabManager && !this._tabManager.ready) ||\n        !this._appFeatures.ready ||\n        !this._auth.loggedIn) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async loadMe() {\n    await this.loadPerson(this._auth.ownerId);\n  }\n\n  @proxify\n  async loadPerson(id: any) {\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.fetch,\n      });\n      const person = await this._client.glip().persons(id).get();\n      this.store.dispatch({\n        type: this.actionTypes.fetchSuccess,\n        person,\n      });\n    } catch (e: any /** TODO: confirm with instanceof */) {\n      this.store.dispatch({\n        type: this.actionTypes.fetchError,\n      });\n    }\n  }\n\n  @proxify\n  async loadPersons(personIds: any) {\n    if (!this._auth.loggedIn) {\n      return;\n    }\n    if (!personIds) {\n      return;\n    }\n    const { ownerId } = this._auth;\n    const newPersonIds: any = [];\n    personIds.forEach((id: any) => {\n      if (!this.personsMap[id] && !this._fetchingIds[id]) {\n        newPersonIds.push(id);\n      }\n    });\n    if (newPersonIds.length === 0) {\n      return;\n    }\n    const ids = newPersonIds.slice(0, MaximumBatchGetPersons);\n    // @ts-expect-error TS(7006): Parameter 'id' implicitly has an 'any' type.\n    ids.forEach((id) => {\n      this._fetchingIds[id] = 1;\n    });\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.fetch,\n      });\n      const persons = await this._batchGetPersons(ids);\n      this.store.dispatch({\n        type: this.actionTypes.batchFetchSuccess,\n        persons,\n      });\n      // @ts-expect-error TS(7006): Parameter 'id' implicitly has an 'any' type.\n      ids.forEach((id) => {\n        delete this._fetchingIds[id];\n      });\n    } catch (e: any /** TODO: confirm with instanceof */) {\n      this.store.dispatch({\n        type: this.actionTypes.fetchError,\n      });\n      // @ts-expect-error TS(7006): Parameter 'id' implicitly has an 'any' type.\n      ids.forEach((id) => {\n        delete this._fetchingIds[id];\n      });\n    }\n    if (ownerId !== this._auth.ownerId) {\n      return;\n    }\n    const lastIds = newPersonIds.slice(MaximumBatchGetPersons);\n    if (lastIds.length > 0) {\n      await sleep(this._batchFetchDelay);\n      await this.loadPersons(lastIds);\n    }\n  }\n\n  async _batchGetPersons(personIds: any) {\n    if (!personIds || personIds.length === 0) {\n      return [];\n    }\n    if (personIds.length === 1) {\n      const response = await this._client.glip().persons(personIds[0]).get();\n      return [response];\n    }\n    const ids = personIds.join(',');\n    const multipartResponse = await batchGetApi({\n      platform: this._client.service.platform(),\n      url: `/restapi/v1.0/glip/persons/${ids}`,\n    });\n    const responses = await Promise.all(\n      multipartResponse.filter((r: any) => r.ok).map((x: any) => x.json()),\n    );\n    return responses;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get _actionTypes() {\n    return actionTypes;\n  }\n\n  get personsMap() {\n    if (this._storage) {\n      return this._storage.getItem(this._dataStorageKey) || {};\n    }\n    return this.state.glipPersonStore;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get status() {\n    return this.state.status;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get me() {\n    return this.personsMap[this._auth.ownerId];\n  }\n\n  get _hasPermission() {\n    return !!this._appFeatures.hasGlipPermission;\n  }\n}\n"],"mappings":"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","ignoreList":[]}