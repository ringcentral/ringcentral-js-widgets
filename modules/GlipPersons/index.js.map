{"version":3,"sources":["modules/GlipPersons/index.ts"],"names":["MaximumBatchGetPersons","DEFAULT_BATCH_FETCH_DELAY","GlipPersons","deps","dep","optional","client","auth","storage","tabManager","appFeatures","batchFetchDelay","options","actionTypes","_appFeatures","_client","ensureExist","call","_auth","_tabManager","_storage","_fetchingIds","_batchFetchDelay","_dataStorageKey","_reducer","registerReducer","key","reducer","glipPersonStore","store","subscribe","_onStateChange","_shouldInit","dispatch","type","init","isFreshLogin","cleanUp","_hasPermission","loadMe","initSuccess","_shouldReset","resetSuccess","loggedIn","ready","pending","loadPerson","ownerId","id","fetch","glip","persons","get","person","fetchSuccess","fetchError","personIds","newPersonIds","forEach","personsMap","push","length","ids","slice","_batchGetPersons","batchFetchSuccess","lastIds","loadPersons","response","join","platform","service","url","multipartResponse","Promise","all","filter","r","ok","map","x","json","responses","getItem","state","status","moduleStatuses","hasGlipPermission","RcModule","proxify"],"mappings":"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","sourcesContent":["import moduleStatuses from '../../enums/moduleStatuses';\nimport { batchGetApi } from '../../lib/batchApiHelper';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport { sleep } from '../../lib/sleep';\nimport { actionTypes } from './actionTypes';\nimport getReducer, { getGlipPersonStoreReducer } from './getReducer';\n\nconst MaximumBatchGetPersons = 30;\nconst DEFAULT_BATCH_FETCH_DELAY = 500;\n\n@Module({\n  deps: [\n    'Client',\n    'Auth',\n    'AppFeatures',\n    { dep: 'Storage', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'GlipPersonsOptions', optional: true },\n  ],\n})\nexport default class GlipPersons extends RcModule {\n  constructor({\n    client,\n    auth,\n    storage,\n    tabManager,\n    appFeatures,\n    batchFetchDelay = DEFAULT_BATCH_FETCH_DELAY,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._appFeatures = appFeatures;\n    this._client = ensureExist.call(this, client, 'client');\n    this._auth = ensureExist.call(this, auth, 'auth');\n    this._tabManager = tabManager;\n    this._storage = storage;\n\n    this._fetchingIds = {};\n    this._batchFetchDelay = batchFetchDelay;\n\n    this._dataStorageKey = 'glipPersonsData';\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._dataStorageKey,\n        reducer: getGlipPersonStoreReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        glipPersonStore: getGlipPersonStoreReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this._auth.isFreshLogin) {\n        this.store.dispatch({\n          type: this.actionTypes.cleanUp,\n        });\n      }\n      if (!this._hasPermission) return;\n      await this.loadMe();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._appFeatures.ready &&\n      (!this._storage || this._storage.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      ((this._storage && !this._storage.ready) ||\n        (this._tabManager && !this._tabManager.ready) ||\n        !this._appFeatures.ready ||\n        !this._auth.loggedIn) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async loadMe() {\n    await this.loadPerson(this._auth.ownerId);\n  }\n\n  @proxify\n  async loadPerson(id) {\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.fetch,\n      });\n      const person = await this._client.glip().persons(id).get();\n      this.store.dispatch({\n        type: this.actionTypes.fetchSuccess,\n        person,\n      });\n    } catch (e) {\n      this.store.dispatch({\n        type: this.actionTypes.fetchError,\n      });\n    }\n  }\n\n  @proxify\n  async loadPersons(personIds) {\n    if (!this._auth.loggedIn) {\n      return;\n    }\n    if (!personIds) {\n      return;\n    }\n    const { ownerId } = this._auth;\n    const newPersonIds = [];\n    personIds.forEach((id) => {\n      if (!this.personsMap[id] && !this._fetchingIds[id]) {\n        newPersonIds.push(id);\n      }\n    });\n    if (newPersonIds.length === 0) {\n      return;\n    }\n    const ids = newPersonIds.slice(0, MaximumBatchGetPersons);\n    ids.forEach((id) => {\n      this._fetchingIds[id] = 1;\n    });\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.fetch,\n      });\n      const persons = await this._batchGetPersons(ids);\n      this.store.dispatch({\n        type: this.actionTypes.batchFetchSuccess,\n        persons,\n      });\n      ids.forEach((id) => {\n        delete this._fetchingIds[id];\n      });\n    } catch (e) {\n      this.store.dispatch({\n        type: this.actionTypes.fetchError,\n      });\n      ids.forEach((id) => {\n        delete this._fetchingIds[id];\n      });\n    }\n    if (ownerId !== this._auth.ownerId) {\n      return;\n    }\n    const lastIds = newPersonIds.slice(MaximumBatchGetPersons);\n    if (lastIds.length > 0) {\n      await sleep(this._batchFetchDelay);\n      await this.loadPersons(lastIds);\n    }\n  }\n\n  async _batchGetPersons(personIds) {\n    if (!personIds || personIds.length === 0) {\n      return [];\n    }\n    if (personIds.length === 1) {\n      const response = await this._client.glip().persons(personIds[0]).get();\n      return [response];\n    }\n    const ids = personIds.join(',');\n    const multipartResponse = await batchGetApi({\n      platform: this._client.service.platform(),\n      url: `/restapi/v1.0/glip/persons/${ids}`,\n    });\n    const responses = await Promise.all(\n      multipartResponse.filter((r) => r.ok).map((x) => x.json()),\n    );\n    return responses;\n  }\n\n  get _actionTypes() {\n    return actionTypes;\n  }\n\n  get personsMap() {\n    if (this._storage) {\n      return this._storage.getItem(this._dataStorageKey) || {};\n    }\n    return this.state.glipPersonStore;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get me() {\n    return this.personsMap[this._auth.ownerId];\n  }\n\n  get _hasPermission() {\n    return !!this._appFeatures.hasGlipPermission;\n  }\n}\n"],"file":"index.js"}