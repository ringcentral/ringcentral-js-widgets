{"version":3,"sources":["modules/AudioSettingsV2/AudioSettings.ts"],"names":["polyfillGetUserMedia","navigator","mediaDevices","undefined","Object","assign","getUserMedia","webkitGetUserMedia","mozGetUserMedia","constraints","Promise","resolve","reject","call","AudioSettings","name","deps","dep","optional","availableDevices","storageKey","enableCache","_getUserMediaPromise","_deps","storage","migrationMapping","data","hasAutoPrompted","hasUserMedia","outputDeviceId","inputDeviceId","devices","isOutputDeviceExist","device","deviceId","kind","hasDefaultDevice","firstDevice","isInputDeviceExist","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","Math","min","max","supportDevices","_checkDevices","parentModule","store","subscribe","ready","auth","loggedIn","appFeatures","isWebPhoneEnabled","userMedia","markAutoPrompted","setHasAutoPrompted","addEventListener","enumerateDevices","setAvailableDevices","map","d","JSON","parse","stringify","audio","stream","_onGetUserMediaSuccess","getTracks","forEach","track","stop","onGetUserMediaError","userMediaAlert","item","message","audioSettingsErrors","userMediaPermission","alert","messages","dismiss","id","setUserMediaSuccess","setUserMediaError","danger","allowDuplicates","ttl","_setData","isFirefox","userAgent","indexOf","length","label","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport { filter, find } from 'ramda';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { AudioSettingsData, Deps } from './AudioSettings.interface';\nimport { audioSettingsErrors } from './audioSettingsErrors';\n\nfunction polyfillGetUserMedia() {\n  if (navigator.mediaDevices === undefined) {\n    Object.assign(navigator, { mediaDevices: {} });\n  }\n  navigator.getUserMedia =\n    navigator.getUserMedia ||\n    (navigator as any).webkitGetUserMedia ||\n    (navigator as any).mozGetUserMedia;\n  if (\n    navigator.mediaDevices.getUserMedia === undefined &&\n    navigator.getUserMedia\n  ) {\n    navigator.mediaDevices.getUserMedia = (constraints) =>\n      new Promise((resolve, reject) => {\n        navigator.getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n  }\n}\npolyfillGetUserMedia();\n\n@Module({\n  name: 'AudioSettings',\n  deps: [\n    'Auth',\n    'Alert',\n    'Storage',\n    'AppFeatures',\n    { dep: 'AudioSettingsOptions', optional: true },\n  ],\n})\nexport class AudioSettings extends RcModuleV2<Deps> {\n  protected _getUserMediaPromise: Promise<MediaStream> = null;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      storageKey: 'AudioSettings',\n      enableCache: true,\n    });\n    /* migration storage v1 to v2 */\n    if (this._deps.storage) {\n      this._deps.storage.migrationMapping =\n        this._deps.storage.migrationMapping ?? {};\n      this._deps.storage.migrationMapping['AudioSettings-data'] =\n        'audioSettings';\n    }\n    /* migration storage v1 to v2 */\n  }\n\n  @storage\n  @state\n  data: AudioSettingsData = {\n    dialButtonVolume: 1,\n    dialButtonMuted: false,\n    ringtoneVolume: 0.3,\n    ringtoneMuted: false,\n    callVolume: 1,\n    outputDeviceId: 'default',\n    inputDeviceId: 'default',\n    hasAutoPrompted: false,\n  };\n\n  @state\n  availableDevices: MediaDeviceInfo[] = [];\n\n  @state\n  hasUserMedia = false;\n\n  @action\n  setHasAutoPrompted() {\n    this.data.hasAutoPrompted = true;\n  }\n\n  @action\n  setUserMediaError() {\n    this.hasUserMedia = false;\n    this.availableDevices = [];\n    this.data.outputDeviceId = 'default';\n    this.data.inputDeviceId = 'default';\n  }\n\n  @action\n  setUserMediaSuccess() {\n    this.hasUserMedia = true;\n  }\n\n  @action\n  setAvailableDevices(devices: MediaDeviceInfo[]) {\n    this.availableDevices = devices;\n\n    const isOutputDeviceExist = find(\n      (device) =>\n        device.deviceId === this.data.outputDeviceId &&\n        device.kind === 'audiooutput',\n      devices,\n    );\n    if (!isOutputDeviceExist) {\n      // For Firefox, don't have default device id\n      const hasDefaultDevice = find(\n        (device) =>\n          device.deviceId === 'default' && device.kind === 'audiooutput',\n        devices,\n      );\n      const firstDevice = find(\n        (device) => device.kind === 'audiooutput',\n        devices,\n      );\n      if (!hasDefaultDevice && firstDevice) {\n        this.data.outputDeviceId = firstDevice.deviceId;\n      } else {\n        this.data.outputDeviceId = 'default';\n      }\n    }\n\n    const isInputDeviceExist = find(\n      (device) =>\n        device.deviceId === this.data.inputDeviceId &&\n        device.kind === 'audioinput',\n      devices,\n    );\n    if (!isInputDeviceExist) {\n      // For Firefox, don't have default device id\n      const hasDefaultDevice = find(\n        (device) =>\n          device.deviceId === 'default' && device.kind === 'audioinput',\n        devices,\n      );\n      const firstDevice = find(\n        (device) => device.kind === 'audioinput',\n        devices,\n      );\n      if (!hasDefaultDevice && firstDevice) {\n        this.data.inputDeviceId = firstDevice.deviceId;\n      } else {\n        this.data.inputDeviceId = 'default';\n      }\n    }\n  }\n\n  @action\n  _setData({\n    dialButtonVolume = this.dialButtonVolume,\n    dialButtonMuted = this.dialButtonMuted,\n    ringtoneVolume = this.ringtoneVolume,\n    ringtoneMuted = this.ringtoneMuted,\n    callVolume = this.callVolume,\n    outputDeviceId = this.outputDeviceId,\n    inputDeviceId = this.inputDeviceId,\n  }) {\n    this.data.outputDeviceId = outputDeviceId;\n    this.data.inputDeviceId = inputDeviceId;\n    this.data.dialButtonVolume = Math.min(1, Math.max(0, dialButtonVolume));\n    this.data.dialButtonMuted = !!dialButtonMuted;\n    this.data.ringtoneVolume = Math.min(1, Math.max(0, ringtoneVolume));\n    this.data.ringtoneMuted = !!ringtoneMuted;\n    this.data.callVolume = Math.min(1, Math.max(0.1, callVolume));\n  }\n\n  initializeProxy() {\n    // Check audio permissions everytime app client starts\n    if (this.supportDevices) {\n      this._checkDevices();\n    }\n    this.parentModule.store.subscribe(() => {\n      if (\n        this.ready &&\n        this._deps.auth.loggedIn &&\n        this._deps.appFeatures.isWebPhoneEnabled &&\n        !this.userMedia\n      ) {\n        // Make sure it only prompts once\n        if (this.hasAutoPrompted) return;\n        this.markAutoPrompted();\n        this.getUserMedia();\n      }\n    });\n  }\n\n  @proxify\n  async markAutoPrompted() {\n    this.setHasAutoPrompted();\n  }\n\n  async _initModule() {\n    super._initModule();\n    if (\n      navigator &&\n      navigator.mediaDevices &&\n      navigator.mediaDevices.addEventListener\n    ) {\n      navigator.mediaDevices.addEventListener('devicechange', () => {\n        this._checkDevices();\n      });\n    }\n  }\n\n  async onInit() {\n    if (this.supportDevices) {\n      await this._checkDevices();\n    }\n  }\n\n  @proxify\n  async _checkDevices() {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    this.setAvailableDevices(\n      // TODO formatting for devices info instances and replace JSON APIs.\n      devices.map((d) => JSON.parse(JSON.stringify(d))),\n    );\n  }\n\n  async getUserMedia() {\n    if (!navigator.mediaDevices.getUserMedia) {\n      return;\n    }\n    try {\n      if (!this._getUserMediaPromise) {\n        this._getUserMediaPromise = navigator.mediaDevices.getUserMedia({\n          audio: true,\n        });\n      }\n      const stream = await this._getUserMediaPromise;\n      this._getUserMediaPromise = null;\n      await this._onGetUserMediaSuccess();\n      if (typeof stream.getTracks === 'function') {\n        stream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      } else if (typeof (stream as any).stop === 'function') {\n        // TODO: check type;\n        (stream as any).stop();\n      }\n    } catch (error) {\n      this._getUserMediaPromise = null;\n      this.onGetUserMediaError();\n    }\n  }\n\n  @proxify\n  async _onGetUserMediaSuccess() {\n    const userMediaAlert = find(\n      (item) => item.message === audioSettingsErrors.userMediaPermission,\n      this._deps.alert.messages,\n    );\n    if (userMediaAlert) {\n      this._deps.alert.dismiss(userMediaAlert.id);\n    }\n    this.setUserMediaSuccess();\n    await this._checkDevices();\n  }\n\n  @proxify\n  async onGetUserMediaError() {\n    this.setUserMediaError();\n    this._deps.alert.danger({\n      message: audioSettingsErrors.userMediaPermission,\n      allowDuplicates: false,\n    });\n  }\n\n  @proxify\n  async showAlert() {\n    if (!this.userMedia) {\n      this._deps.alert.danger({\n        message: audioSettingsErrors.userMediaPermission,\n        allowDuplicates: false,\n        ttl: 30 * 1000,\n      });\n    }\n  }\n\n  @proxify\n  async setData({\n    dialButtonVolume = this.dialButtonVolume,\n    dialButtonMuted = this.dialButtonMuted,\n    ringtoneVolume = this.ringtoneVolume,\n    ringtoneMuted = this.ringtoneMuted,\n    callVolume = this.callVolume,\n    outputDeviceId = this.outputDeviceId,\n    inputDeviceId = this.inputDeviceId,\n  }) {\n    this._setData({\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      outputDeviceId,\n      inputDeviceId,\n    });\n  }\n\n  get outputDeviceId() {\n    return this.data.outputDeviceId;\n  }\n\n  get outputDevice() {\n    return find(\n      (device) =>\n        device.kind === 'audiooutput' &&\n        device.deviceId === this.outputDeviceId,\n      this.availableDevices,\n    );\n  }\n\n  get inputDeviceId() {\n    return this.data.inputDeviceId;\n  }\n\n  get inputDevice() {\n    return find(\n      (device) =>\n        device.kind === 'audioinput' && device.deviceId === this.inputDeviceId,\n      this.availableDevices,\n    );\n  }\n\n  get supportDevices() {\n    return !!(\n      navigator.mediaDevices && navigator.mediaDevices.enumerateDevices\n    );\n  }\n\n  @computed(({ availableDevices }: AudioSettings) => [availableDevices])\n  get availableOutputDevices() {\n    return filter(\n      (device) => device.kind === 'audiooutput',\n      this.availableDevices,\n    );\n  }\n\n  @computed(({ availableDevices }: AudioSettings) => [availableDevices])\n  get availableInputDevices() {\n    return filter(\n      (device) => device.kind === 'audioinput',\n      this.availableDevices,\n    );\n  }\n\n  get dialButtonVolume() {\n    return this.data.dialButtonVolume;\n  }\n\n  get dialButtonMuted() {\n    return this.data.dialButtonMuted;\n  }\n\n  get ringtoneVolume() {\n    return this.data.ringtoneVolume;\n  }\n\n  get ringtoneMuted() {\n    return this.data.ringtoneMuted;\n  }\n\n  get callVolume() {\n    return this.data.callVolume;\n  }\n\n  get hasAutoPrompted() {\n    return this.data.hasAutoPrompted;\n  }\n\n  get userMedia() {\n    const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n    if (isFirefox) {\n      return true;\n    }\n    // this detection method may not work in the future\n    // currently there is no good way to detect this\n    return !!(\n      this.availableDevices.length && this.availableDevices[0].label !== ''\n    );\n  }\n}\n"],"file":"AudioSettings.js"}