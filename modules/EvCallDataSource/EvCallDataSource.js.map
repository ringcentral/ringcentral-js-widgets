{"version":3,"file":"EvCallDataSource.js","names":["_di","require","_core","_dayjs","_interopRequireDefault","_events","_enums","_helper","_dec","_class","_class2","_descriptor","e","__esModule","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","n","ownKeys","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_initializerDefineProperty","i","l","initializer","_classCallCheck","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","toPrimitive","String","Number","_inherits","create","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","reverse","reduce","_initializerWarningHelper","Error","EvCallDataSource","Module","deps","dep","optional","_RcModuleV","_super","_this","enableCache","storageKey","eventEmitter","EventEmitter","changeCallsLimited","_window$localStorage","window","localStorage","setItem","addNewCall","rawAgentRecording","agentRecording","pause","data","rawCallsMapping","uii","timestamp","getTimeStamp","queueDts","gate","_getCurrentGateData","setNewSession","session","id","_deps","evClient","encodeUii","agentId","evAuth","index","callIds","indexOf","unshift","otherCallIds","callsMapping","addNewSession","emit","callStatus","RINGING","dropSession","_getCallEncodeId","callId","removeEndedCall","endedCall","includes","callLogsIndex","callLogsIds","JSON","parse","stringify","clearCalls","setCallHoldStatus","res","isHold","holdState","limitCalls","_this2","lastWeekDayTimestamp","_getLastWeekDayTimestamp","storageCallData","fullCallLogsIds","acc","curr","concat","substr","endsWith","currentGateId","queue","number","currentQueueGroup","availableRequeueQueues","find","_ref","gates","some","_ref2","gateId","gateGroupId","now","dayjs","lastWeekDay","clone","subtract","startOf","get","_window$localStorage2","getItem","RcModuleV2","storage","state","action","exports"],"sources":["modules/EvCallDataSource/EvCallDataSource.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  action,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport type { Mapping } from '@ringcentral-integration/widgets/typings';\nimport dayjs from 'dayjs';\nimport { EventEmitter } from 'events';\n\nimport { callStatus } from '../../enums';\nimport type {\n  EvCallData,\n  EvEvRequeueCallGate,\n} from '../../interfaces/EvData.interface';\nimport type {\n  EvAddSessionNotification,\n  EvBaseCall,\n  EvDropSessionNotification,\n  EvEndedCall,\n  EvHoldResponse,\n} from '../../lib/EvClient';\n\nimport type { CallDataSource, Deps } from './EvCallDataSource.interface';\nimport { getTimeStamp } from './helper';\n\n@Module({\n  name: 'EvCallDataSource',\n  deps: [\n    'EvAuth',\n    'EvClient',\n    'Storage',\n    'TabManager',\n    { dep: 'EvCallDataSourceOptions', optional: true },\n  ],\n})\nclass EvCallDataSource extends RcModuleV2<Deps> implements CallDataSource {\n  eventEmitter = new EventEmitter();\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvCallDataSource',\n    });\n  }\n\n  @storage\n  @state\n  data: {\n    callIds: string[];\n    otherCallIds: string[];\n    callLogsIds: string[];\n    callsMapping: Mapping<EvCallData>;\n    rawCallsMapping: Mapping<EvCallData>;\n  } = {\n    callIds: [],\n    otherCallIds: [],\n    callLogsIds: [],\n    callsMapping: {},\n    rawCallsMapping: {},\n  };\n\n  get callIds() {\n    return this.data.callIds;\n  }\n\n  get otherCallIds() {\n    return this.data.otherCallIds;\n  }\n\n  get callLogsIds() {\n    return this.data.callLogsIds;\n  }\n\n  get callsMapping() {\n    return this.data.callsMapping;\n  }\n\n  get rawCallsMapping() {\n    return this.data.rawCallsMapping;\n  }\n\n  get callsLimited() {\n    return window.localStorage?.getItem('callsLimited') === 'true';\n  }\n\n  changeCallsLimited(value: boolean) {\n    window.localStorage?.setItem('callsLimited', value?.toString());\n  }\n\n  @action\n  addNewCall(call: EvBaseCall) {\n    let rawAgentRecording = call?.agentRecording;\n    rawAgentRecording &&= {\n      ...rawAgentRecording,\n      pause: rawAgentRecording.pause ? Number(rawAgentRecording.pause) : null,\n    };\n    // note: rawCallsMapping index is raw call uii.\n    this.data.rawCallsMapping[call.uii] = {\n      ...call,\n      // input timezone in second arg if EV reponse has timezone propoty\n      // default timezone is 'America/New_York'\n      timestamp: getTimeStamp(call.queueDts),\n      gate: this._getCurrentGateData(call),\n      agentRecording: rawAgentRecording,\n    };\n  }\n\n  @action\n  setNewSession(session: EvAddSessionNotification) {\n    const id = this._deps.evClient.encodeUii(session);\n    if (session.agentId === this._deps.evAuth.agentId) {\n      // related to current agent session\n      const index = this.callIds.indexOf(id);\n      if (index === -1) {\n        this.data.callIds.unshift(id);\n      }\n    } else {\n      // other session without current agent\n      const index = this.otherCallIds.indexOf(id);\n      if (index === -1) {\n        this.data.otherCallIds.unshift(id);\n      }\n    }\n\n    this.data.callsMapping[id] = {\n      ...this.rawCallsMapping[session.uii],\n      session,\n    };\n  }\n\n  addNewSession(session: EvAddSessionNotification) {\n    this.setNewSession(session);\n    // check with other phone\n    if (session.agentId === '') {\n      // ringing\n      this.eventEmitter.emit(callStatus.RINGING, session);\n    }\n  }\n\n  @action\n  dropSession(dropSession: EvDropSessionNotification) {\n    const id = this._getCallEncodeId(dropSession);\n    this.data.otherCallIds = this.otherCallIds.filter(\n      (callId) => callId !== id,\n    );\n  }\n\n  @action\n  removeEndedCall(endedCall: EvEndedCall) {\n    const id = this._getCallEncodeId(endedCall);\n    // remove current agent session call with uii.\n    this.data.callIds = this.callIds.filter((callId) => callId !== id);\n    // remove other call session with uii.\n    this.data.otherCallIds = this.otherCallIds.filter(\n      (callId) => !callId.includes(endedCall.uii),\n    );\n\n    // add call with id (encodeUii({ uii, sessionId }))\n    const callLogsIndex = this.callLogsIds.indexOf(id);\n    if (callLogsIndex === -1) {\n      this.data.callLogsIds.unshift(id);\n    }\n    if (this.callsMapping[id]) {\n      this.data.callsMapping[id].endedCall = JSON.parse(\n        JSON.stringify(endedCall),\n      );\n    }\n  }\n\n  @action\n  clearCalls() {\n    this.data.callIds = [];\n    this.data.otherCallIds = [];\n  }\n\n  @action\n  setCallHoldStatus(res: EvHoldResponse) {\n    const id = this._deps.evClient.encodeUii(res);\n    this.data.callsMapping[id].isHold = res.holdState;\n  }\n\n  @action\n  limitCalls() {\n    // max 250 and 7 days\n    const lastWeekDayTimestamp = this._getLastWeekDayTimestamp();\n    const storageCallData: {\n      callIds: string[];\n      otherCallIds: string[];\n      callLogsIds: string[];\n      callsMapping: Mapping<EvCallData>;\n      rawCallsMapping: Mapping<EvCallData>;\n    } = {\n      callIds: [],\n      otherCallIds: [],\n      callLogsIds: [],\n      callsMapping: {},\n      rawCallsMapping: {},\n    };\n\n    const fullCallLogsIds = this.callLogsIds\n      .slice(0, 250)\n      .reduce((acc, curr) => [...acc, curr.substr(0, curr.length - 2)], []);\n\n    // valid rawCallsMapping\n    storageCallData.rawCallsMapping = Object.keys(this.rawCallsMapping).reduce(\n      (acc, id) => {\n        if (\n          fullCallLogsIds.includes(id) &&\n          getTimeStamp(this.rawCallsMapping[id].queueDts) >=\n            lastWeekDayTimestamp\n        ) {\n          acc[id] = this.rawCallsMapping[id];\n        }\n        return acc;\n      },\n      {} as Mapping<EvCallData>,\n    );\n\n    // valid callsMapping\n    storageCallData.callsMapping = Object.keys(this.callsMapping).reduce(\n      (acc, id) => {\n        if (\n          fullCallLogsIds.includes(id.substr(0, id.length - 2)) &&\n          getTimeStamp(this.callsMapping[id].queueDts) >= lastWeekDayTimestamp\n        ) {\n          acc[id] = this.callsMapping[id];\n          if (!id.endsWith('$1')) {\n            storageCallData.callLogsIds.unshift(id);\n          }\n        }\n        return acc;\n      },\n      {} as Mapping<EvCallData>,\n    );\n\n    this.data = storageCallData;\n    this.changeCallsLimited(true);\n  }\n\n  private _getCallEncodeId(session: Partial<EvAddSessionNotification>) {\n    return this._deps.evClient.encodeUii(session);\n  }\n\n  private _getCurrentGateData(call: Partial<EvCallData>): EvEvRequeueCallGate {\n    const currentGateId = call.queue.number;\n    const currentQueueGroup = this._deps.evAuth.availableRequeueQueues.find(\n      ({ gates }) => {\n        return gates.some(({ gateId }) => gateId === currentGateId);\n      },\n    );\n    return {\n      gateId: currentGateId,\n      gateGroupId: currentQueueGroup?.gateGroupId,\n    };\n  }\n\n  private _getLastWeekDayTimestamp() {\n    const now = dayjs();\n    const lastWeekDay = now.clone().subtract(7, 'days').startOf('day');\n    return lastWeekDay.valueOf();\n  }\n}\n\nexport { EvCallDataSource };\n"],"mappings":"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","ignoreList":[]}