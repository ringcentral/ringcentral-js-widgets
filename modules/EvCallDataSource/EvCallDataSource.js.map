{"version":3,"file":"EvCallDataSource.js","names":["_events","require","_dayjs","_interopRequireDefault","_di","_core","_enums","_helper","_dec","_class","_class2","_descriptor","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","_initializerDefineProperty","property","descriptor","context","initializer","_classCallCheck","instance","Constructor","_defineProperties","props","_createClass","protoProps","staticProps","arg","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","desc","reverse","reduce","decorator","_initializerWarningHelper","Error","EvCallDataSource","Module","deps","dep","optional","_RcModuleV","_super","_this","enableCache","storageKey","eventEmitter","EventEmitter","changeCallsLimited","_window$localStorage","window","localStorage","setItem","addNewCall","rawAgentRecording","agentRecording","pause","data","rawCallsMapping","uii","timestamp","getTimeStamp","queueDts","gate","_getCurrentGateData","setNewSession","session","id","_deps","evClient","encodeUii","agentId","evAuth","index","callIds","indexOf","unshift","otherCallIds","callsMapping","addNewSession","emit","callStatus","RINGING","dropSession","_getCallEncodeId","callId","removeEndedCall","endedCall","includes","callLogsIndex","callLogsIds","JSON","parse","stringify","clearCalls","setCallHoldStatus","isHold","holdState","limitCalls","_this2","lastWeekDayTimestamp","_getLastWeekDayTimestamp","storageCallData","fullCallLogsIds","acc","curr","concat","substr","endsWith","currentGateId","queue","number","currentQueueGroup","availableRequeueQueues","find","_ref","gates","some","_ref2","gateId","gateGroupId","now","dayjs","lastWeekDay","clone","subtract","startOf","get","_window$localStorage2","getItem","RcModuleV2","storage","state","action","exports"],"sources":["modules/EvCallDataSource/EvCallDataSource.ts"],"sourcesContent":["import { EventEmitter } from 'events';\nimport dayjs from 'dayjs';\n\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  action,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport type { Mapping } from '@ringcentral-integration/widgets/typings';\n\nimport { callStatus } from '../../enums';\nimport type {\n  EvCallData,\n  EvEvRequeueCallGate,\n} from '../../interfaces/EvData.interface';\nimport type {\n  EvAddSessionNotification,\n  EvBaseCall,\n  EvDropSessionNotification,\n  EvEndedCall,\n  EvHoldResponse,\n} from '../../lib/EvClient';\nimport type { CallDataSource, Deps } from './EvCallDataSource.interface';\nimport { getTimeStamp } from './helper';\n\n@Module({\n  name: 'EvCallDataSource',\n  deps: [\n    'EvAuth',\n    'EvClient',\n    'Storage',\n    'TabManager',\n    { dep: 'EvCallDataSourceOptions', optional: true },\n  ],\n})\nclass EvCallDataSource extends RcModuleV2<Deps> implements CallDataSource {\n  eventEmitter = new EventEmitter();\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvCallDataSource',\n    });\n  }\n\n  @storage\n  @state\n  data: {\n    callIds: string[];\n    otherCallIds: string[];\n    callLogsIds: string[];\n    callsMapping: Mapping<EvCallData>;\n    rawCallsMapping: Mapping<EvCallData>;\n  } = {\n    callIds: [],\n    otherCallIds: [],\n    callLogsIds: [],\n    callsMapping: {},\n    rawCallsMapping: {},\n  };\n\n  get callIds() {\n    return this.data.callIds;\n  }\n\n  get otherCallIds() {\n    return this.data.otherCallIds;\n  }\n\n  get callLogsIds() {\n    return this.data.callLogsIds;\n  }\n\n  get callsMapping() {\n    return this.data.callsMapping;\n  }\n\n  get rawCallsMapping() {\n    return this.data.rawCallsMapping;\n  }\n\n  get callsLimited() {\n    return window.localStorage?.getItem('callsLimited') === 'true';\n  }\n\n  changeCallsLimited(value: boolean) {\n    window.localStorage?.setItem('callsLimited', value?.toString());\n  }\n\n  @action\n  addNewCall(call: EvBaseCall) {\n    let rawAgentRecording = call?.agentRecording;\n    rawAgentRecording &&= {\n      ...rawAgentRecording,\n      pause: rawAgentRecording.pause ? Number(rawAgentRecording.pause) : null,\n    };\n    // note: rawCallsMapping index is raw call uii.\n    this.data.rawCallsMapping[call.uii] = {\n      ...call,\n      // input timezone in second arg if EV reponse has timezone propoty\n      // default timezone is 'America/New_York'\n      timestamp: getTimeStamp(call.queueDts),\n      gate: this._getCurrentGateData(call),\n      agentRecording: rawAgentRecording,\n    };\n  }\n\n  @action\n  setNewSession(session: EvAddSessionNotification) {\n    const id = this._deps.evClient.encodeUii(session);\n    if (session.agentId === this._deps.evAuth.agentId) {\n      // related to current agent session\n      const index = this.callIds.indexOf(id);\n      if (index === -1) {\n        this.data.callIds.unshift(id);\n      }\n    } else {\n      // other session without current agent\n      const index = this.otherCallIds.indexOf(id);\n      if (index === -1) {\n        this.data.otherCallIds.unshift(id);\n      }\n    }\n\n    this.data.callsMapping[id] = {\n      ...this.rawCallsMapping[session.uii],\n      session,\n    };\n  }\n\n  addNewSession(session: EvAddSessionNotification) {\n    this.setNewSession(session);\n    // check with other phone\n    if (session.agentId === '') {\n      // ringing\n      this.eventEmitter.emit(callStatus.RINGING, session);\n    }\n  }\n\n  @action\n  dropSession(dropSession: EvDropSessionNotification) {\n    const id = this._getCallEncodeId(dropSession);\n    this.data.otherCallIds = this.otherCallIds.filter(\n      (callId) => callId !== id,\n    );\n  }\n\n  @action\n  removeEndedCall(endedCall: EvEndedCall) {\n    const id = this._getCallEncodeId(endedCall);\n    // remove current agent session call with uii.\n    this.data.callIds = this.callIds.filter((callId) => callId !== id);\n    // remove other call session with uii.\n    this.data.otherCallIds = this.otherCallIds.filter(\n      (callId) => !callId.includes(endedCall.uii),\n    );\n\n    // add call with id (encodeUii({ uii, sessionId }))\n    const callLogsIndex = this.callLogsIds.indexOf(id);\n    if (callLogsIndex === -1) {\n      this.data.callLogsIds.unshift(id);\n    }\n    if (this.callsMapping[id]) {\n      this.data.callsMapping[id].endedCall = JSON.parse(\n        JSON.stringify(endedCall),\n      );\n    }\n  }\n\n  @action\n  clearCalls() {\n    this.data.callIds = [];\n    this.data.otherCallIds = [];\n  }\n\n  @action\n  setCallHoldStatus(res: EvHoldResponse) {\n    const id = this._deps.evClient.encodeUii(res);\n    this.data.callsMapping[id].isHold = res.holdState;\n  }\n\n  @action\n  limitCalls() {\n    // max 250 and 7 days\n    const lastWeekDayTimestamp = this._getLastWeekDayTimestamp();\n    const storageCallData: {\n      callIds: string[];\n      otherCallIds: string[];\n      callLogsIds: string[];\n      callsMapping: Mapping<EvCallData>;\n      rawCallsMapping: Mapping<EvCallData>;\n    } = {\n      callIds: [],\n      otherCallIds: [],\n      callLogsIds: [],\n      callsMapping: {},\n      rawCallsMapping: {},\n    };\n\n    const fullCallLogsIds = this.callLogsIds\n      .slice(0, 250)\n      .reduce((acc, curr) => [...acc, curr.substr(0, curr.length - 2)], []);\n\n    // valid rawCallsMapping\n    storageCallData.rawCallsMapping = Object.keys(this.rawCallsMapping).reduce(\n      (acc, id) => {\n        if (\n          fullCallLogsIds.includes(id) &&\n          getTimeStamp(this.rawCallsMapping[id].queueDts) >=\n            lastWeekDayTimestamp\n        ) {\n          acc[id] = this.rawCallsMapping[id];\n        }\n        return acc;\n      },\n      {} as Mapping<EvCallData>,\n    );\n\n    // valid callsMapping\n    storageCallData.callsMapping = Object.keys(this.callsMapping).reduce(\n      (acc, id) => {\n        if (\n          fullCallLogsIds.includes(id.substr(0, id.length - 2)) &&\n          getTimeStamp(this.callsMapping[id].queueDts) >= lastWeekDayTimestamp\n        ) {\n          acc[id] = this.callsMapping[id];\n          if (!id.endsWith('$1')) {\n            storageCallData.callLogsIds.unshift(id);\n          }\n        }\n        return acc;\n      },\n      {} as Mapping<EvCallData>,\n    );\n\n    this.data = storageCallData;\n    this.changeCallsLimited(true);\n  }\n\n  private _getCallEncodeId(session: Partial<EvAddSessionNotification>) {\n    return this._deps.evClient.encodeUii(session);\n  }\n\n  private _getCurrentGateData(call: Partial<EvCallData>): EvEvRequeueCallGate {\n    const currentGateId = call.queue.number;\n    const currentQueueGroup = this._deps.evAuth.availableRequeueQueues.find(\n      ({ gates }) => {\n        return gates.some(({ gateId }) => gateId === currentGateId);\n      },\n    );\n    return {\n      gateId: currentGateId,\n      gateGroupId: currentQueueGroup?.gateGroupId,\n    };\n  }\n\n  private _getLastWeekDayTimestamp() {\n    const now = dayjs();\n    const lastWeekDay = now.clone().subtract(7, 'days').startOf('day');\n    return lastWeekDay.valueOf();\n  }\n}\n\nexport { EvCallDataSource };\n"],"mappings":"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"}