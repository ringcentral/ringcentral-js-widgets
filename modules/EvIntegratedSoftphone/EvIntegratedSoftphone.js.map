{"version":3,"sources":["modules/EvIntegratedSoftphone/EvIntegratedSoftphone.ts"],"names":["SECOND","RECONNECT_DEBOUNCE_TIME","RECONNECT_DEBOUNCE_TIME_WHEN_CONNECTED","SIP_MAX_CONNECTING_TIME","ModalContentRendererID","ModalContentRenderer","isInbound","inboundTextProps","outboundText","EvIntegratedSoftphone","name","deps","dep","optional","_deps","tabManager","enable","isMainTab","sipRegisterSuccess","evAgentSession","isIntegratedSoftphone","enableCache","storageKey","autoAnswerCheckFn","_isFirefox","_audio","_eventEmitter","EventEmitter","_answerModalId","_audioPermissionAlertId","_beforeunloadHandler","isWebRTCTab","_isCloseWhenCallConnected","_failedBlockId","evAuth","beforeAgentLogout","_resetAllState","beforeunload","onAfterUnload","_sendTabManager","tabManagerEvents","CLOSE_WHEN_CALL_CONNECTED","modalUI","registerRenderer","navigator","userAgent","indexOf","id","connectingAlertId","permission","audioPermission","muteActive","state","sipRegistering","_initAudio","_bindingIntegratedSoftphone","onSetMainTabComplete","console","log","connectWebRTC","onConfigSuccess","hasMultipleTabs","isConfigTabAlive","setSipRegisterSuccess","onReConfigFail","_emitRegistrationFailed","error","_closeWebRTCConnectingMask","resetSip","evClient","sipTerminate","emit","EvSoftphoneEvents","RESET","evSubscription","EvCallbackTypes","SIP_REGISTRATION_FAILED","ready","_checkTabManagerEvent","event","data","args","ASK_AUDIO_PERMISSION","SIP_CONNECTING","SIP_RINGING","SIP_RINGING_MODAL","MUTE_STATE_CHANGE","SIP_REGISTERED","SIP_UNREGISTERED","SIP_REGISTRATION_FAILED_RELOAD","SIP_CONNECTED","SIP_ENDED","MUTE","NOTIFY_ACTIVE_TAB_CALL_ACTIVE","_showAskAudioPermissionMask","_closeAskAudioPermissionMask","_showWebRTCConnectingMask","_showRingingModal","close","answerCall","rejectCall","setMuteActive","_sipRegistered","_reloadApp","_handleRegistrationFailed","onceLogoutThenLogin","_closeFailReconnectedBlock","_sipConnected","_sipEnded","presence","setDialoutStatus","dialoutStatuses","idle","sipToggleMute","active","alert","warning","message","backdrop","ttl","block","unblock","callback","on","showMask","mediaDevices","getUserMedia","audio","danger","AUDIO_STREAM_REJECTED","Error","setAudioPermission","_registerSoftphone","askAudioPermission","subscribe","setSipRegistering","ringingCall","bindBeforeunload","_sipAnswer","displayName","request","from","queueName","currentCall","queue","dialoutStatus","isOffhooking","isManualOffhook","callType","info","removeBeforeunload","SIP_MUTE","SIP_UNMUTE","_closeRingingModal","setOffhook","REGISTERED","title","content","confirmButtonText","childrenSize","onConfirm","setMainTabId","window","location","reload","resetController","SIP_RECONNECTING_WHEN_CALL_CONNECTED","loading","setConnectingAlertId","dismiss","_playAudioLoop","currentLocale","locale","confirm","i18n","getString","contentProps","incomingText","queueNameText","cancelButtonText","onCancel","_resetRingingModal","tabManagerEnabled","showOffHookInitError","sipReject","CALL_REJECTED","_resolve","_reject","Promise","resolve","reject","once","timeout","onTimeout","res","rej","finalize","off","_stopAudio","isReconnected","isForceLogin","_connectedWebRTC","sipInit","sipRegister","onceRegistered","sipAnswer","document","createElement","type","loop","_playAudio","currentTime","src","audios","play","pause","value","send","add","remove","RcModuleV2","storage","action"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAQA;;AAMA;;AACA;;AAMA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,IAAf;AACA,IAAMC,uBAAuB,GAAGD,MAAM,GAAG,CAAzC;AACA,IAAME,sCAAsC,GAAGF,MAAM,GAAG,EAAxD;AACA,IAAMG,uBAAuB,GAAGH,MAAM,GAAG,EAAzC;AAEA,IAAMI,sBAAsB,GAAG,4CAA/B;;AACA,IAAMC,oBAAoC,GAAG,SAAvCA,oBAAuC;AAAA,MAC3CC,SAD2C,QAC3CA,SAD2C;AAAA,MAE3CC,gBAF2C,QAE3CA,gBAF2C;AAAA,MAG3CC,YAH2C,QAG3CA,YAH2C;AAAA,SAIvC,qCAAa;AAAEF,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,gBAAgB,EAAhBA,gBAAb;AAA+BC,IAAAA,YAAY,EAAZA;AAA/B,GAAb,CAJuC;AAAA,CAA7C;;IA2BMC,qB,WArBL,gBAAO;AACNC,EAAAA,IAAI,EAAE,uBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ,gBAHI,EAIJ,gBAJI,EAKJ,cALI,EAMJ,YANI,EAOJ,UAPI,EAQJ,UARI,EASJ,SATI,EAUJ,QAVI,EAWJ,OAXI,EAYJ,MAZI,EAaJ,SAbI,EAcJ,OAdI,EAeJ;AAAEC,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAfI,EAgBJ;AAAED,IAAAA,GAAG,EAAE,8BAAP;AAAuCC,IAAAA,QAAQ,EAAE;AAAjD,GAhBI;AAFA,CAAP,C,UA8vBE,qD,UAOA,qD;;;;;;;;AAluBD;AAGA;AAEA;wBAOwB;AAAA;;AACtB,sCAAO,KAAKC,KAAL,CAAWC,UAAlB,0DAAO,sBAAuBC,MAA9B;AACD;;;wBAEiB;AAChB,aAAO,KAAKF,KAAL,CAAWC,UAAX,CAAsBE,SAAtB,IAAmC,KAAKC,kBAA/C;AACD;;;wBAEwC;AACvC,aACE,KAAKJ,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,IACA,KAAKF,KAAL,CAAWK,cAAX,CAA0BC,qBAF5B;AAID;;;AAED,iCAAYT,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA,IADI;AAEJU,MAAAA,WAAW,EAAE,IAFT;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAAN;AADsB,UArCxBC,iBAqCwB;AAAA,UAnChBC,UAmCgB;AAAA,UAjChBC,MAiCgB;AAAA,UA/BhBC,aA+BgB,GA/BA,IAAIC,oBAAJ,EA+BA;AAAA,UA7BhBC,cA6BgB,GA7BS,IA6BT;AAAA,UA1BhBC,uBA0BgB,GA1BkB,IA0BlB;;AAAA,UApBhBC,oBAoBgB,GApBO;AAAA,aAAM,MAAKC,WAAX;AAAA,KAoBP;;AAAA,UAlBhBC,yBAkBgB,GAlBY,KAkBZ;AAAA,UAjBhBC,cAiBgB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOtB,UAAKnB,KAAL,CAAWoB,MAAX,CAAkBC,iBAAlB,CAAoC,YAAM;AACxC,YAAKC,cAAL;AACD,KAFD;;AAIA,UAAKtB,KAAL,CAAWuB,YAAX,CAAwBC,aAAxB,CAAsC,YAAM;AAC1C,YAAKC,eAAL,CAAqBC,wBAAiBC,yBAAtC;AACD,KAFD;;AAIA,UAAK3B,KAAL,CAAW4B,OAAX,CAAmBC,gBAAnB,CACEvC,sBADF,EAEEC,oBAFF;;AAIA,UAAKmB,UAAL,GAAkBoB,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4B,SAA5B,MAA2C,CAAC,CAA9D;AAnBsB;AAoBvB,G,CAED;AACA;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;yCAGqBC,E,EAAY;AAC/B,WAAKC,iBAAL,GAAyBD,EAAzB;AACD;;;uCAGkBE,U,EAAqB;AACtC,WAAKC,eAAL,GAAuBD,UAAvB;AACD;;;sCAGiB;AAChB;AACA,WAAKE,UAAL,GAAkB,KAAlB;AACD;;;kCAGaC,K,EAAgB;AAC5B,WAAKD,UAAL,GAAkBC,KAAlB;AACD;;;+BAGU;AACT,WAAKF,eAAL,GAAuB,KAAvB;AACA,WAAKG,cAAL,GAAsB,KAAtB;AACA,WAAKnC,kBAAL,GAA0B,KAA1B;AACD;;;0CAGqBkC,K,EAAgB;AACpC,WAAKlC,kBAAL,GAA0BkC,KAA1B;AACD;;;sCAGiBA,K,EAAgB;AAChC,WAAKC,cAAL,GAAsBD,KAAtB;AACD;;;iCAEY;AAAA;;AACX,WAAKE,UAAL;;AAEA,WAAKC,2BAAL;;AAEA,WAAKzC,KAAL,CAAWC,UAAX,CAAsByC,oBAAtB,uEAA2C;AAAA;AAAA;AAAA;AAAA;AACzCC,gBAAAA,OAAO,CAACC,GAAR,CACE,wBADF,EAEE,MAAI,CAAC5C,KAAL,CAAWK,cAAX,CAA0BC,qBAF5B;;AADyC,qBAKrC,MAAI,CAACN,KAAL,CAAWK,cAAX,CAA0BC,qBALW;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMjC,MAAI,CAACuC,aAAL,EANiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3C;;AAUA,WAAK7C,KAAL,CAAWK,cAAX,CAA0ByC,eAA1B,CAA0C,YAAM;AAC9C,YACE,MAAI,CAAC9C,KAAL,CAAWC,UAAX,CAAsB8C,eAAtB,IACA,CAAC,MAAI,CAAC/C,KAAL,CAAWC,UAAX,CAAsBE,SADvB,IAEA,MAAI,CAACH,KAAL,CAAWK,cAAX,CAA0BC,qBAF1B,IAGA,MAAI,CAACN,KAAL,CAAWK,cAAX,CAA0B2C,gBAA1B,EAJF,EAKE;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;;AACA,UAAA,MAAI,CAACK,qBAAL,CAA2B,IAA3B;AACD;AACF,OAVD;;AAYA,WAAKjD,KAAL,CAAWK,cAAX,CAA0B6C,cAA1B,CAAyC,YAAM;AAC7C,YAAI,MAAI,CAAClD,KAAL,CAAWK,cAAX,CAA0BC,qBAA9B,EAAqD;AACnD,UAAA,MAAI,CAAC6C,uBAAL;AACD;AACF,OAJD;AAKD;;;8BAES;AACR,UAAI;AACFR,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AACA,aAAKtB,cAAL;AACD,OAHD,CAGE,OAAO8B,KAAP,EAAc,CACd;AACD;AACF;;;qCAEwB;AACvB,WAAKC,0BAAL;;AACA,WAAKC,QAAL;;AAEA,WAAKtD,KAAL,CAAWuD,QAAX,CAAoBC,YAApB;;AACA,WAAK5C,aAAL,CAAmB6C,IAAnB,CAAwBC,yBAAkBC,KAA1C;AACD;;;8CAEiC;AAChC,WAAK3D,KAAL,CAAW4D,cAAX,CAA0BH,IAA1B,CACEI,wBAAgBC,uBADlB,EAEE,IAFF;AAID;;;;;;;;;AAGC,oBACE,KAAKC,KAAL,IACA,KAAK/D,KAAL,CAAWC,UAAX,CAAsBC,MADtB,IAEA,KAAKF,KAAL,CAAWC,UAAX,CAAsB8D,KAHxB,EAIE;AACA,uBAAKC,qBAAL;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AAIOC,gBAAAA,K,GAAU,KAAKjE,KAAL,CAAWC,U,CAArBgE,K;;qBACJA,K;;;;;AACIC,gBAAAA,I,GAAOD,KAAK,CAACE,IAAN,CAAW,CAAX,C;+BACLF,KAAK,CAACrE,I;kDACP8B,wBAAiB0C,oB,wBAOjB1C,wBAAiB2C,c,wBAGjB3C,wBAAiB4C,W,yBAGjB5C,wBAAiB6C,iB,yBASjB7C,wBAAiB8C,iB,yBAGjB9C,wBAAiB+C,c,yBAIjB/C,wBAAiBgD,gB,yBAGjBhD,wBAAiBiD,8B,yBAGjBjD,wBAAiBoC,uB,yBAKjBpC,wBAAiBkD,a,yBAGjBlD,wBAAiBmD,S,yBAKjBnD,wBAAiBoD,I,yBAGjBpD,wBAAiBC,yB,yBAGjBD,wBAAiBqD,6B;;;;AArDpB,oBAAIb,IAAJ,EAAU;AACR,uBAAKc,2BAAL;AACD,iBAFD,MAEO;AACL,uBAAKC,4BAAL;AACD;;;;;AAGD,qBAAKC,yBAAL;;;;;AAGA,qBAAKC,iBAAL,CAAuBjB,IAAvB;;;;;AAGA;AACA,qBAAKlE,KAAL,CAAW4B,OAAX,CAAmBwD,KAAnB,CAAyB,KAAKtE,cAA9B;;qBACIoD,I;;;;;;uBACI,KAAKmB,UAAL,E;;;;;;;AAEN,qBAAKC,UAAL;;;;;;AAIF,qBAAKC,aAAL,CAAmBrB,IAAnB;;;;AAGAvB,gBAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,qBAAK4C,cAAL;;;;;AAGA,qBAAKvC,qBAAL,CAA2B,KAA3B;;;;AAGA,qBAAKwC,UAAL;;;;;AAGA,qBAAKC,yBAAL;;;uBACM,KAAK1F,KAAL,CAAWK,cAAX,CAA0BsF,mBAA1B,E;;;AACN,qBAAKC,0BAAL;;;;;AAGA,qBAAKC,aAAL;;;;;AAGA,qBAAKC,SAAL,G,CACA;;;AACA,qBAAK9F,KAAL,CAAW+F,QAAX,CAAoBC,gBAApB,CAAqCC,uBAAgBC,IAArD;;;;;AAGA,qBAAKC,aAAL,CAAmBjC,IAAnB;;;;AAGA,qBAAKhD,yBAAL,GAAiC,IAAjC;;;;AAGA,oBAAI,KAAKlB,KAAL,CAAWC,UAAX,CAAsBmG,MAA1B,EAAkC;AAChC,uBAAKpG,KAAL,CAAWqG,KAAX,CAAiBC,OAAjB,CAAyB;AACvBC,oBAAAA,OAAO,EAAE7E,wBAAiBqD,6BADH;AAEvByB,oBAAAA,QAAQ,EAAE,IAFa;AAGvBC,oBAAAA,GAAG,EAAE;AAHkB,mBAAzB;AAKD;;;;;;;;;;;;;;;;;;;;;;;iDAQ4B;AACnC,WAAKzG,KAAL,CAAW0G,KAAX,CAAiBC,OAAjB,CAAyB,KAAKxF,cAA9B;;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACD;;;kCAEamB,K,EAAgB;AAC5B,WAAKtC,KAAL,CAAWuD,QAAX,CAAoB4C,aAApB,CAAkC7D,KAAlC;AACD;;;8BAESsE,Q,EAA6C;AACrD,WAAKhG,aAAL,CAAmBiG,EAAnB,CAAsBhD,wBAAgBS,WAAtC,EAAmDsC,QAAnD;AACD;;;;;;;;;;;AAEwBE,gBAAAA,Q,8DAAoB,I;AAC3CnE,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCkE,QAApC;;;qBAEMA,Q;;;;;AACF,oBAAI,CAAC,KAAK1E,eAAV,EAA2B;AACzB,uBAAKX,eAAL,CAAqBC,wBAAiB0C,oBAAtC,EAA4D,IAA5D;;AACA,uBAAKY,2BAAL;AACD;;AAEDrC,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;uBACMd,SAAS,CAACiF,YAAV,CAAuBC,YAAvB,CAAoC;AACxCC,kBAAAA,KAAK,EAAE;AADiC,iBAApC,C;;;;;;;;;;AAKR,qBAAKjH,KAAL,CAAWqG,KAAX,CAAiBa,MAAjB,CAAwB;AACtBX,kBAAAA,OAAO,EAAE7C,yBAAkByD,qBADL;AAEtBX,kBAAAA,QAAQ,EAAE,IAFY;AAGtBC,kBAAAA,GAAG,EAAE;AAHiB,iBAAxB;;AAKA9D,gBAAAA,OAAO,CAACC,GAAR;sBACM,IAAIwE,KAAJ,CAAU,uBAAV,C;;;;;AAEN,oBAAIN,QAAJ,EAAc;AACZ,sBAAI,KAAK/F,uBAAT,EAAkC;AAChC,yBAAKU,eAAL,CAAqBC,wBAAiB0C,oBAAtC,EAA4D,KAA5D;;AACA,yBAAKa,4BAAL;AACD;AACF;;;;;AAGH,qBAAKoC,kBAAL,CAAwB,IAAxB;;oBACK,KAAKjH,kB;;;;;;uBACF,KAAKkH,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;AAKR3E,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,qBAAKU,QAAL;;uBACM,KAAKiE,kBAAL,E;;;;;;;;;;;;;;;;;;kDAG8B;AAAA;;AACpC5E,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,WAAK5C,KAAL,CAAW4D,cAAX,CAA0B4D,SAA1B,CAAoC3D,wBAAgBY,cAApD,EAAoE,YAAM;AACxE;AACA9B,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,YAAI,CAAC,MAAI,CAACxC,kBAAV,EAA8B;AAC5B,UAAA,MAAI,CAACqB,eAAL,CAAqBC,wBAAiB+C,cAAtC;;AACA,UAAA,MAAI,CAACe,cAAL;AACD;AACF,OAPD;;AASA,WAAKxF,KAAL,CAAW4D,cAAX,CAA0B4D,SAA1B,CACE3D,wBAAgBa,gBADlB,EAEE,YAAM;AACJ/B,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,YAAI,MAAI,CAACxC,kBAAT,EAA6B;AAC3B,UAAA,MAAI,CAACqB,eAAL,CAAqBC,wBAAiBgD,gBAAtC;;AACA,UAAA,MAAI,CAACzB,qBAAL,CAA2B,KAA3B;AACD;AACF,OARH;;AAWA,WAAKjD,KAAL,CAAW4D,cAAX,CAA0B4D,SAA1B,CACE3D,wBAAgBC,uBADlB,uEAEE;AAAA;AAAA;AAAA;AAAA;AACEnB,gBAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AACA,gBAAA,MAAI,CAAC6E,iBAAL,CAAuB,KAAvB;;AAEA,gBAAA,MAAI,CAAChG,eAAL,CAAqBC,wBAAiBoC,uBAAtC;;AACA,gBAAA,MAAI,CAAC4B,yBAAL,GALF,CAOE;AACA;;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF;;AAcA,WAAK1F,KAAL,CAAW4D,cAAX,CAA0B4D,SAA1B,CACE3D,wBAAgBS,WADlB,EAEE,UAACoD,WAAD,EAAiB;AAAA;;AACf,QAAA,MAAI,CAACC,gBAAL;;AACAhF,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,QAAA,MAAI,CAAChC,aAAL,CAAmB6C,IAAnB,CAAwBI,wBAAgBS,WAAxC,EAAqDoD,WAArD;;AAEA,YAAI,MAAI,CAACjH,iBAAL,EAAJ,EAA8B;AAC5B,iBAAO,MAAI,CAACmH,UAAL,EAAP;AACD;;AAPc,YASPC,WATO,GASSH,WAAW,CAACxD,IAAZ,CAAiB4D,OAAjB,CAAyBC,IATlC,CASPF,WATO;AAUf,YAAMG,SAAS,4BAAG,MAAI,CAAChI,KAAL,CAAWuD,QAAX,CAAoB0E,WAAvB,oFAAG,sBAAiCC,KAApC,2DAAG,uBAAwCtI,IAA1D;AAVe,oCAYb,MAAI,CAACI,KAAL,CAAW+F,QAZE;AAAA,YAWPoC,aAXO,yBAWPA,aAXO;AAAA,YAWQC,YAXR,yBAWQA,YAXR;AAAA,YAWsBC,eAXtB,yBAWsBA,eAXtB,EAaf;;AACA,YAAM7I,SAAS,GACb2I,aAAa,KAAK,SAAlB,IACA,EAAEE,eAAe,IAAID,YAArB,CADA,IAEA,2BAAA,MAAI,CAACpI,KAAL,CAAWuD,QAAX,CAAoB0E,WAApB,kFAAiCK,QAAjC,MAA8C,SAHhD;;AAKA,QAAA,MAAI,CAAC7G,eAAL,CAAqBC,wBAAiB4C,WAAtC,EAAmD;AACjDuD,UAAAA,WAAW,EAAXA,WADiD;AAEjDG,UAAAA,SAAS,EAATA,SAFiD;AAGjDxI,UAAAA,SAAS,EAATA;AAHiD,SAAnD;;AAKA,QAAA,MAAI,CAAC2F,iBAAL,CAAuB;AAAE0C,UAAAA,WAAW,EAAXA,WAAF;AAAeG,UAAAA,SAAS,EAATA,SAAf;AAA0BxI,UAAAA,SAAS,EAATA;AAA1B,SAAvB;AACD,OA3BH;;AA8BA,WAAKQ,KAAL,CAAW4D,cAAX,CAA0B4D,SAA1B,CAAoC3D,wBAAgBe,aAApD,EAAmE,YAAM;AACvEjC,QAAAA,OAAO,CAAC4F,IAAR,CAAa,sBAAb;;AACA,QAAA,MAAI,CAAC9G,eAAL,CAAqBC,wBAAiBkD,aAAtC;;AACA,QAAA,MAAI,CAACiB,aAAL;AACD,OAJD;;AAMA,WAAK7F,KAAL,CAAW4D,cAAX,CAA0B4D,SAA1B,CAAoC3D,wBAAgBgB,SAApD,EAA+D,YAAM;AACnElC,QAAAA,OAAO,CAAC4F,IAAR,CAAa,kBAAb;;AACA,QAAA,MAAI,CAACC,kBAAL;;AAEA,QAAA,MAAI,CAAC/G,eAAL,CAAqBC,wBAAiBmD,SAAtC;;AACA,QAAA,MAAI,CAACiB,SAAL;AACD,OAND;;AAQA,WAAK9F,KAAL,CAAW4D,cAAX,CAA0B4D,SAA1B,CAAoC3D,wBAAgB4E,QAApD,EAA8D,YAAM;AAClE9F,QAAAA,OAAO,CAAC4F,IAAR,CAAa,iBAAb;;AACA,QAAA,MAAI,CAAC9G,eAAL,CAAqBC,wBAAiB8C,iBAAtC,EAAyD,IAAzD;;AACA,QAAA,MAAI,CAACe,aAAL,CAAmB,IAAnB;AACD,OAJD;;AAMA,WAAKvF,KAAL,CAAW4D,cAAX,CAA0B4D,SAA1B,CAAoC3D,wBAAgB6E,UAApD,EAAgE,YAAM;AACpE/F,QAAAA,OAAO,CAAC4F,IAAR,CAAa,mBAAb;;AACA,QAAA,MAAI,CAAC9G,eAAL,CAAqBC,wBAAiB8C,iBAAtC,EAAyD,KAAzD;;AACA,QAAA,MAAI,CAACe,aAAL,CAAmB,KAAnB;AACD,OAJD,EAtFoC,CA4FpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;;gCAEmB;AAClB,WAAKoD,kBAAL;;AACA,WAAK3I,KAAL,CAAW+F,QAAX,CAAoB6C,UAApB,CAA+B,KAA/B;AACD;;;qCAEwB;AACvBjG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAKK,qBAAL,CAA2B,IAA3B;;AACA,WAAKrC,aAAL,CAAmB6C,IAAnB,CAAwBC,yBAAkBmF,UAA1C;;AAEA,WAAK3H,yBAAL,GAAiC,KAAjC;;AACA,WAAKmC,0BAAL;AACD;;;gDAEmC;AAAA;;AAClC,WAAKlC,cAAL,GAAsB,KAAKnB,KAAL,CAAW0G,KAAX,CAAiBA,KAAjB,EAAtB;;AACA,WAAK1G,KAAL,CAAWuD,QAAX,CAAoBC,YAApB;;AAEA,WAAKlC,cAAL;;AACA,WAAK+B,0BAAL,GALkC,CAMlC;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAAKrD,KAAL,CAAW4B,OAAX,CAAmByE,KAAnB,CAAyB;AACvByC,QAAAA,KAAK,EAAE,qBADgB;AAEvBC,QAAAA,OAAO,EAAE,yCAFc;AAGvBC,QAAAA,iBAAiB,EAAE,IAHI;AAIvBC,QAAAA,YAAY,EAAE,OAJS;AAKvBC,QAAAA,SAAS,EAAE,qBAAM;AACf,UAAA,MAAI,CAACzH,eAAL,CAAqBC,wBAAiBiD,8BAAtC;;AACA,UAAA,MAAI,CAACc,UAAL;AACD;AARsB,OAAzB;;AAWA,WAAKzF,KAAL,CAAWC,UAAX,CAAsBkJ,YAAtB,CAAmC,IAAnC,EAxBkC,CAyBlC;;AACD;;;iCAEoB;AACnBC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;;;oCAEuB;AACtB,WAAKtJ,KAAL,CAAW+F,QAAX,CAAoB6C,UAApB,CAA+B,IAA/B,EADsB,CAEtB;;;AACA,WAAKW,eAAL;AACD;;;;;;;;;AAGC,qBAAKlG,0BAAL;;+BACA,I;;uBACQ,KAAKrD,KAAL,CAAWqG,KAAX,CAAiBkC,IAAjB,CAAsB;AAC1BhC,kBAAAA,OAAO,EAAE,KAAKrF,yBAAL,GACLQ,wBAAiB8H,oCADZ,GAEL9H,wBAAiB2C,cAHK;AAI1BoF,kBAAAA,OAAO,EAAE;AAJiB,iBAAtB,C;;;;;6BADHC,oB;;;;;;;;;;;;;;;;;;iDAU8B;AACnC/G,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4C,KAAKV,iBAAjD;;AACA,UAAI,KAAKA,iBAAT,EAA4B;AAC1B,aAAKlC,KAAL,CAAWqG,KAAX,CAAiBsD,OAAjB,CAAyB,KAAKzH,iBAA9B;;AAEA,aAAKwH,oBAAL,CAA0B,IAA1B;AACD;AACF;;;;;;;;;AAGC,qBAAKzE,4BAAL;;;uBACqC,KAAKjF,KAAL,CAAWqG,KAAX,CAAiBkC,IAAjB,CAAsB;AACzDhC,kBAAAA,OAAO,EAAE7E,wBAAiB0C,oBAD+B;AAEzDqF,kBAAAA,OAAO,EAAE,IAFgD;AAGzDjD,kBAAAA,QAAQ,EAAE;AAH+C,iBAAtB,C;;;AAArC,qBAAKzF,uB;;;;;;;;;;;;;;;;;;mDAOgC;AACrC,UAAI,KAAKA,uBAAT,EAAkC;AAChC,aAAKf,KAAL,CAAWqG,KAAX,CAAiBsD,OAAjB,CAAyB,KAAK5I,uBAA9B;;AACA,aAAKA,uBAAL,GAA+B,IAA/B;AACD;AACF;;;6CAMyB;AAAA;;AAAA,UAHxB8G,WAGwB,SAHxBA,WAGwB;AAAA,UAFxBG,SAEwB,SAFxBA,SAEwB;AAAA,UADxBxI,SACwB,SADxBA,SACwB;;AACxB;AACA,UAAI,KAAKsB,cAAT,EAAyB;AACvB;AACD;;AAED,WAAK8I,cAAL,CAAoB,UAApB;;AANwB,UAQhBC,aARgB,GAQE,KAAK7J,KAAL,CAAW8J,MARb,CAQhBD,aARgB;AAUxB,WAAK/I,cAAL,GAAsB,KAAKd,KAAL,CAAW4B,OAAX,CAAmBmI,OAAnB,CAA2B;AAC/CjB,QAAAA,KAAK,EAAEkB,iBAAKC,SAAL,CAAe,kBAAf,EAAmCJ,aAAnC,CADwC;AAE/Cd,QAAAA,OAAO,EAAEzJ,sBAFsC;AAG/C4K,QAAAA,YAAY,EAAE;AACZ1K,UAAAA,SAAS,EAATA,SADY;AAEZC,UAAAA,gBAAgB,EAAEuI,SAAS,IAAI;AAC7BmC,YAAAA,YAAY,EAAE,+BACZH,iBAAKC,SAAL,CAAe,cAAf,EAA+BJ,aAA/B,CADY,EAEZ;AACEhC,cAAAA,WAAW,EAAXA;AADF,aAFY,CADe;AAO7BuC,YAAAA,aAAa,EAAE,+BACbJ,iBAAKC,SAAL,CAAe,eAAf,EAAgCJ,aAAhC,CADa,EAEb;AACE7B,cAAAA,SAAS,EAATA;AADF,aAFa;AAPc,WAFnB;AAgBZtI,UAAAA,YAAY,EAAE,+BACZsK,iBAAKC,SAAL,CAAe,cAAf,EAA+BJ,aAA/B,CADY,EAEZ;AACEhC,YAAAA,WAAW,EAAXA;AADF,WAFY;AAhBF,SAHiC;AA0B/CmB,QAAAA,iBAAiB,EAAEgB,iBAAKC,SAAL,CAAe,mBAAf,EAAoCJ,aAApC,CA1B4B;AA2B/CQ,QAAAA,gBAAgB,EAAEL,iBAAKC,SAAL,CAAe,mBAAf,EAAoCJ,aAApC,CA3B6B;AA4B/CX,QAAAA,SAAS;AAAA,mFAAE;AAAA;AAAA;AAAA;AAAA;AACT,oBAAA,MAAI,CAACzH,eAAL,CAAqBC,wBAAiB6C,iBAAtC,EAAyD,IAAzD;;AADS;AAAA,2BAEH,MAAI,CAACc,UAAL,EAFG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WA5BsC;AAgC/CiF,QAAAA,QAAQ,EAAE,oBAAM;AACd,UAAA,MAAI,CAAC7I,eAAL,CAAqBC,wBAAiB6C,iBAAtC,EAAyD,KAAzD;;AACA,UAAA,MAAI,CAACe,UAAL;AACD,SAnC8C;AAoC/C2D,QAAAA,YAAY,EAAE;AApCiC,OAA3B,CAAtB;AAsCD;;;;;;;;;AAGC,qBAAKsB,kBAAL;;sBAEE,CAAC,KAAKC,iBAAN,IACC,KAAKA,iBAAL,IAA0B,KAAKxK,KAAL,CAAWC,UAAX,CAAsBE,S;;;;;;uBAE3C,KAAKyH,UAAL,E;;;;;;;;;;;;;;;;;;iCAIW;AACnB,WAAK2C,kBAAL,GADmB,CAEnB;;;AACA,WAAKvK,KAAL,CAAW+F,QAAX,CAAoB0E,oBAApB,GAA2C,KAA3C;;AACA,WAAKzK,KAAL,CAAWuD,QAAX,CAAoBmH,SAApB;;AACA,WAAK9J,aAAL,CAAmB6C,IAAnB,CAAwBC,yBAAkBiH,aAA1C;;AACA,WAAKnC,kBAAL;AACD;;;qCAEgB;AAAA;;AACf,UAAIoC,QAAJ;;AACA,UAAIC,OAAJ;;AAEA,aAAO,8BACL,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BJ,QAAAA,QAAQ,GAAGG,OAAX;AACAF,QAAAA,OAAO,GAAGG,MAAV;;AACA,QAAA,MAAI,CAACpK,aAAL,CAAmBqK,IAAnB,CAAwBvH,yBAAkBmF,UAA1C,EAAsD+B,QAAtD,EAH+B,CAK/B;;;AACA,QAAA,MAAI,CAAChK,aAAL,CAAmBqK,IAAnB,CAAwBvH,yBAAkBC,KAA1C,EAAiDkH,OAAjD;AACD,OAPD,CADK,EASL;AACEK,QAAAA,OAAO,EAAE7L,uBADX;AAEE8L,QAAAA,SAAS,EAAE,mBAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,UAAA,MAAI,CAAClI,uBAAL;;AACAkI,UAAAA,GAAG,CAAC,oCAAD,CAAH;AACD,SALH;AAMEC,QAAAA,QAAQ,EAAE,oBAAM;AACdV,UAAAA,QAAQ;;AACR,UAAA,MAAI,CAAChK,aAAL,CAAmB2K,GAAnB,CAAuB7H,yBAAkBmF,UAAzC,EAAqD+B,QAArD;;AACA,UAAA,MAAI,CAAChK,aAAL,CAAmB2K,GAAnB,CAAuB7H,yBAAkBC,KAAzC,EAAgDkH,OAAhD;AACD;AAVH,OATK,CAAP;AAsBD;;;yCAE4B;AAC3B;AACA,UAAI,KAAK/J,cAAT,EAAyB;AACvB,aAAKd,KAAL,CAAWqG,KAAX,CAAiBkC,IAAjB,CAAsB;AACpBhC,UAAAA,OAAO,EAAE7C,yBAAkBiH,aADP;AAEpBlE,UAAAA,GAAG,EAAE;AAFe,SAAtB;;AAIA,aAAKzG,KAAL,CAAW4B,OAAX,CAAmBwD,KAAnB,CAAyB,KAAKtE,cAA9B;;AACA,aAAKA,cAAL,GAAsB,IAAtB;;AACA,aAAK0K,UAAL;AACD;AACF;;;;;;;;;oBAGM,KAAKjJ,c;;;;;AACR,qBAAKkF,iBAAL,CAAuB,IAAvB;;AAEA,qBAAKhG,eAAL,CAAqBC,wBAAiB2C,cAAtC;;AACA,qBAAKa,yBAAL;;AAEAvC,gBAAAA,OAAO,CAACC,GAAR,CACE,yDADF,EAEE,KAAK5C,KAAL,CAAWK,cAAX,CAA0BoL,aAF5B,EAGE,KAAKzL,KAAL,CAAWK,cAAX,CAA0BqL,YAH5B,EAIE,KAAKxK,yBAJP,E,CAOA;;sBAEE,KAAKlB,KAAL,CAAWK,cAAX,CAA0BoL,aAA1B,IACA,KAAKzL,KAAL,CAAWK,cAAX,CAA0BqL,Y;;;;;;uBAEpB,kBACJ,KAAKxK,yBAAL,GACI9B,sCADJ,GAEID,uBAHA,C;;;;uBAKA,KAAKwM,gBAAL,E;;;;;;;;uBAEA,KAAKA,gBAAL,E;;;;;;sBAKJ,IAAIvE,KAAJ,CAAU,oBAAV,C;;;;;;;;;;;;;;;;;;;;;;;;;;AAKJ,qBAAKpH,KAAL,CAAWuD,QAAX,CAAoBqI,OAApB;;AACA,qBAAK5L,KAAL,CAAWuD,QAAX,CAAoBsI,WAApB;;;uBAEM,KAAKC,cAAL,E;;;AAEN,qBAAKrE,iBAAL,CAAuB,KAAvB;;AACA,qBAAKpE,0BAAL;;;;;;;;AAEAV,gBAAAA,OAAO,CAACS,KAAR;;;;;;;;;;;;;;;;;;yCAIyB;AAC3B,WAAKoI,UAAL;;AACA,WAAK1K,cAAL,GAAsB,IAAtB;AACD;;;;;;;;;;;qBAGK,KAAKJ,U;;;;;;uBACD,8BACJoB,SAAS,CAACiF,YAAV,CAAuBC,YAAvB,CAAoC;AAClCC,kBAAAA,KAAK,EAAE;AAD2B,iBAApC,CADI,EAIJ;AACEiE,kBAAAA,OAAO,EAAE,IADX;AAEEC,kBAAAA,SAAS,EAAE,mBAACJ,OAAD,EAAUC,MAAV,EAAqB;AAC9B,oBAAA,MAAI,CAACvJ,eAAL,CACEC,wBAAiBqD,6BADnB;;AAGA,yBACE;AACAqE,oBAAAA,MAAM,CAACW,OAAP,CACEC,iBAAKC,SAAL,CACE,eADF,EAEE,MAAI,CAACjK,KAAL,CAAW8J,MAAX,CAAkBD,aAFpB,CADF,CAFF,EAQE;AACAkB,sBAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF;AAjBH,iBAJI,C;;;AAyBR,qBAAK/K,KAAL,CAAWuD,QAAX,CAAoBwI,SAApB;;;;;;;;;;;;;;;;;;iCAGmB;AACnB,UAAI,OAAOC,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACC,aAAhD,EAA+D;AAC7D,aAAKtL,MAAL,GAAcqL,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACD;AACF;;;mCAEsBC,I,EAA2B;AAChD,WAAKvL,MAAL,CAAYwL,IAAZ,GAAmB,IAAnB;;AACA,WAAKC,UAAL,CAAgBF,IAAhB;AACD;;;+BAGkBA,I,EAA2B;AAC5C,WAAKvL,MAAL,CAAY0L,WAAZ,GAA0B,CAA1B;AACA,WAAK1L,MAAL,CAAY2L,GAAZ,GAAkBC,eAAOL,IAAP,CAAlB;;AACA,WAAKvL,MAAL,CAAY6L,IAAZ;AACD;;;iCAGoB;AACnB,WAAK7L,MAAL,CAAYwL,IAAZ,GAAmB,KAAnB;;AACA,WAAKxL,MAAL,CAAY8L,KAAZ;AACD;;;oCAEuBxI,K,EAAeyI,K,EAAa;AAAA;;AAClD,qCAAK1M,KAAL,CAAWC,UAAX,kFAAuB0M,IAAvB,CAA4B1I,KAA5B,EAAmCyI,KAAnC;AACD;;;uCAEkB;AACjB,WAAK1M,KAAL,CAAWuB,YAAX,CAAwBqL,GAAxB,CAA4B,KAAK5L,oBAAjC;AACD;;;yCAEoB;AACnB,WAAKhB,KAAL,CAAWuB,YAAX,CAAwBsL,MAAxB,CAA+B,KAAK7L,oBAApC;AACD;;;;EA/vBO8L,gB,mFAiEPC,a,EACAzK,W;;;;;WACiB,K;;+EAEjByK,a,EACAzK,W;;;;;WACY,K;;uFAEZA,W;;;;;WACoB,K;;mFAEpBA,W;;;;;WACgB,K;;sFAGhBA,W;;;;;WAC2B,I;;0EAS3B0K,Y,uKAKAA,Y,kKAKAA,Y,6JAMAA,Y,sJAKAA,Y,8JAOAA,Y,uKAKAA,Y","sourcesContent":["import { EventEmitter } from 'events';\nimport formatMessage from 'format-message';\n\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport { raceTimeout } from '@ringcentral-integration/commons/lib/raceTimeout';\nimport { sleep } from '@ringcentral-integration/commons/lib/sleep';\nimport {\n  action,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport { CustomRenderer } from '@ringcentral-integration/widgets/modules/ModalUI/ModalUI.interface';\n\nimport {\n  dialoutStatuses,\n  EvSoftphoneEvents,\n  tabManagerEvents,\n} from '../../enums';\nimport { EvSipRingingData } from '../../lib/EvClient';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums';\nimport { audios } from './audios';\nimport {\n  Deps,\n  IntegratedSoftphone,\n  ShowRingingModalProps,\n} from './EvIntegratedSoftphone.interface';\nimport i18n from './i18n';\nimport { getModalText } from './IncomingModalText';\nimport { runInActivityWebRTCTab } from './runInActivityWebRTCTab.decorator';\n\nconst SECOND = 1000;\nconst RECONNECT_DEBOUNCE_TIME = SECOND * 5;\nconst RECONNECT_DEBOUNCE_TIME_WHEN_CONNECTED = SECOND * 15;\nconst SIP_MAX_CONNECTING_TIME = SECOND * 30;\n\nconst ModalContentRendererID = 'EvIntegratedSoftphone.ModalContentRenderer';\nconst ModalContentRenderer: CustomRenderer = ({\n  isInbound,\n  inboundTextProps,\n  outboundText,\n}) => getModalText({ isInbound, inboundTextProps, outboundText });\n\n@Module({\n  name: 'EvIntegratedSoftphone',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'EvAgentSession',\n    'EvSubscription',\n    'Beforeunload',\n    'EvSettings',\n    'EvClient',\n    'Presence',\n    'Storage',\n    'EvAuth',\n    'Block',\n    'Auth',\n    'ModalUI',\n    'Alert',\n    { dep: 'TabManager', optional: true },\n    { dep: 'EvIntegratedSoftphoneOptions', optional: true },\n  ],\n})\nclass EvIntegratedSoftphone\n  extends RcModuleV2<Deps>\n  implements IntegratedSoftphone\n{\n  autoAnswerCheckFn: () => boolean;\n\n  private _isFirefox: boolean;\n\n  private _audio: HTMLAudioElement;\n\n  private _eventEmitter = new EventEmitter();\n\n  private _answerModalId: string = null;\n\n  /** audio permission alert id */\n  private _audioPermissionAlertId: string = null;\n\n  // private _checkWebRTCIntervalId: NodeJS.Timeout;\n\n  // private _heartBeatIntervalTime: number;\n\n  private _beforeunloadHandler = () => this.isWebRTCTab;\n\n  private _isCloseWhenCallConnected = false;\n  private _failedBlockId: string;\n\n  get tabManagerEnabled() {\n    return this._deps.tabManager?.enable;\n  }\n\n  get isWebRTCTab() {\n    return this._deps.tabManager.isMainTab && this.sipRegisterSuccess;\n  }\n\n  get isIntegratedSoftphoneWithTabEnable() {\n    return (\n      this._deps.tabManager.enable &&\n      this._deps.evAgentSession.isIntegratedSoftphone\n    );\n  }\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvIntegratedSoftphone',\n    });\n\n    this._deps.evAuth.beforeAgentLogout(() => {\n      this._resetAllState();\n    });\n\n    this._deps.beforeunload.onAfterUnload(() => {\n      this._sendTabManager(tabManagerEvents.CLOSE_WHEN_CALL_CONNECTED);\n    });\n\n    this._deps.modalUI.registerRenderer(\n      ModalContentRendererID,\n      ModalContentRenderer,\n    );\n    this._isFirefox = navigator.userAgent.indexOf('Firefox') !== -1;\n  }\n\n  // @state\n  // dtmfString: string = '';\n\n  @storage\n  @state\n  audioPermission = false;\n\n  @storage\n  @state\n  muteActive = false;\n\n  @state\n  sipRegisterSuccess = false;\n\n  @state\n  sipRegistering = false;\n\n  /** connecting webRTC alert id, for dialer call button disabled check */\n  @state\n  connectingAlertId: string = null;\n\n  // this is for dialPad click when on call\n  // @action\n  // sipSendDTMF(dtmf: string) {\n  // this.dtmfString += dtmf;\n  // this._deps.evClient.sipSendDTMF(dtmf);\n  // }\n\n  @action\n  setConnectingAlertId(id: string) {\n    this.connectingAlertId = id;\n  }\n\n  @action\n  setAudioPermission(permission: boolean) {\n    this.audioPermission = permission;\n  }\n\n  @action\n  resetController() {\n    // this.dtmfString = '';\n    this.muteActive = false;\n  }\n\n  @action\n  setMuteActive(state: boolean) {\n    this.muteActive = state;\n  }\n\n  @action\n  resetSip() {\n    this.audioPermission = false;\n    this.sipRegistering = false;\n    this.sipRegisterSuccess = false;\n  }\n\n  @action\n  setSipRegisterSuccess(state: boolean) {\n    this.sipRegisterSuccess = state;\n  }\n\n  @action\n  setSipRegistering(state: boolean) {\n    this.sipRegistering = state;\n  }\n\n  onInitOnce() {\n    this._initAudio();\n\n    this._bindingIntegratedSoftphone();\n\n    this._deps.tabManager.onSetMainTabComplete(async () => {\n      console.log(\n        'onSetMainTabComplete~~',\n        this._deps.evAgentSession.isIntegratedSoftphone,\n      );\n      if (this._deps.evAgentSession.isIntegratedSoftphone) {\n        await this.connectWebRTC();\n      }\n    });\n\n    this._deps.evAgentSession.onConfigSuccess(() => {\n      if (\n        this._deps.tabManager.hasMultipleTabs &&\n        !this._deps.tabManager.isMainTab &&\n        this._deps.evAgentSession.isIntegratedSoftphone &&\n        this._deps.evAgentSession.isConfigTabAlive()\n      ) {\n        console.log('setSipRegisterSuccess in onConfigSuccess~~');\n        this.setSipRegisterSuccess(true);\n      }\n    });\n\n    this._deps.evAgentSession.onReConfigFail(() => {\n      if (this._deps.evAgentSession.isIntegratedSoftphone) {\n        this._emitRegistrationFailed();\n      }\n    });\n  }\n\n  onReset() {\n    try {\n      console.log('onReset in EvIntegratedSoftphone~');\n      this._resetAllState();\n    } catch (error) {\n      // ignore error\n    }\n  }\n\n  private _resetAllState() {\n    this._closeWebRTCConnectingMask();\n    this.resetSip();\n\n    this._deps.evClient.sipTerminate();\n    this._eventEmitter.emit(EvSoftphoneEvents.RESET);\n  }\n\n  private _emitRegistrationFailed() {\n    this._deps.evSubscription.emit(\n      EvCallbackTypes.SIP_REGISTRATION_FAILED,\n      null,\n    );\n  }\n\n  async onStateChange() {\n    if (\n      this.ready &&\n      this._deps.tabManager.enable &&\n      this._deps.tabManager.ready\n    ) {\n      this._checkTabManagerEvent();\n    }\n  }\n\n  private async _checkTabManagerEvent() {\n    const { event } = this._deps.tabManager;\n    if (event) {\n      const data = event.args[0];\n      switch (event.name) {\n        case tabManagerEvents.ASK_AUDIO_PERMISSION:\n          if (data) {\n            this._showAskAudioPermissionMask();\n          } else {\n            this._closeAskAudioPermissionMask();\n          }\n          break;\n        case tabManagerEvents.SIP_CONNECTING:\n          this._showWebRTCConnectingMask();\n          break;\n        case tabManagerEvents.SIP_RINGING:\n          this._showRingingModal(data);\n          break;\n        case tabManagerEvents.SIP_RINGING_MODAL:\n          // that event call from modal ok or cancel, that auto close modal\n          this._deps.modalUI.close(this._answerModalId);\n          if (data) {\n            await this.answerCall();\n          } else {\n            this.rejectCall();\n          }\n          break;\n        case tabManagerEvents.MUTE_STATE_CHANGE:\n          this.setMuteActive(data);\n          break;\n        case tabManagerEvents.SIP_REGISTERED:\n          console.log('_sipRegistered in other tabs~');\n          this._sipRegistered();\n          break;\n        case tabManagerEvents.SIP_UNREGISTERED:\n          this.setSipRegisterSuccess(false);\n          break;\n        case tabManagerEvents.SIP_REGISTRATION_FAILED_RELOAD:\n          this._reloadApp();\n          break;\n        case tabManagerEvents.SIP_REGISTRATION_FAILED:\n          this._handleRegistrationFailed();\n          await this._deps.evAgentSession.onceLogoutThenLogin();\n          this._closeFailReconnectedBlock();\n          break;\n        case tabManagerEvents.SIP_CONNECTED:\n          this._sipConnected();\n          break;\n        case tabManagerEvents.SIP_ENDED:\n          this._sipEnded();\n          // When sip end need reset Dialout Status to idle\n          this._deps.presence.setDialoutStatus(dialoutStatuses.idle);\n          break;\n        case tabManagerEvents.MUTE:\n          this.sipToggleMute(data);\n          break;\n        case tabManagerEvents.CLOSE_WHEN_CALL_CONNECTED:\n          this._isCloseWhenCallConnected = true;\n          break;\n        case tabManagerEvents.NOTIFY_ACTIVE_TAB_CALL_ACTIVE:\n          if (this._deps.tabManager.active) {\n            this._deps.alert.warning({\n              message: tabManagerEvents.NOTIFY_ACTIVE_TAB_CALL_ACTIVE,\n              backdrop: true,\n              ttl: 0,\n            });\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  private _closeFailReconnectedBlock() {\n    this._deps.block.unblock(this._failedBlockId);\n    this._failedBlockId = null;\n  }\n\n  sipToggleMute(state: boolean) {\n    this._deps.evClient.sipToggleMute(state);\n  }\n\n  onRinging(callback: (call?: EvSipRingingData) => void) {\n    this._eventEmitter.on(EvCallbackTypes.SIP_RINGING, callback);\n  }\n\n  async askAudioPermission(showMask: boolean = true) {\n    console.log('askAudioPermission~~', showMask);\n    try {\n      if (showMask) {\n        if (!this.audioPermission) {\n          this._sendTabManager(tabManagerEvents.ASK_AUDIO_PERMISSION, true);\n          this._showAskAudioPermissionMask();\n        }\n\n        console.log('connect WEB_RTC');\n        await navigator.mediaDevices.getUserMedia({\n          audio: true,\n        });\n      }\n    } catch (error) {\n      this._deps.alert.danger({\n        message: EvSoftphoneEvents.AUDIO_STREAM_REJECTED,\n        backdrop: true,\n        ttl: 0,\n      });\n      console.log(error);\n      throw new Error('Need Audio permission');\n    } finally {\n      if (showMask) {\n        if (this._audioPermissionAlertId) {\n          this._sendTabManager(tabManagerEvents.ASK_AUDIO_PERMISSION, false);\n          this._closeAskAudioPermissionMask();\n        }\n      }\n    }\n\n    this.setAudioPermission(true);\n    if (!this.sipRegisterSuccess) {\n      await this._registerSoftphone();\n    }\n  }\n\n  private async connectWebRTC() {\n    console.log('connectWebRTC~');\n\n    this.resetSip();\n    await this.askAudioPermission();\n  }\n\n  private _bindingIntegratedSoftphone() {\n    console.log('_bindingIntegratedSoftphone~~');\n    this._deps.evSubscription.subscribe(EvCallbackTypes.SIP_REGISTERED, () => {\n      // That will call several times when reconnected.\n      console.log('!!!!!!!SIP_REGISTERED');\n      if (!this.sipRegisterSuccess) {\n        this._sendTabManager(tabManagerEvents.SIP_REGISTERED);\n        this._sipRegistered();\n      }\n    });\n\n    this._deps.evSubscription.subscribe(\n      EvCallbackTypes.SIP_UNREGISTERED,\n      () => {\n        console.log('!!!!!!!SIP_UNREGISTERED');\n        if (this.sipRegisterSuccess) {\n          this._sendTabManager(tabManagerEvents.SIP_UNREGISTERED);\n          this.setSipRegisterSuccess(false);\n        }\n      },\n    );\n\n    this._deps.evSubscription.subscribe(\n      EvCallbackTypes.SIP_REGISTRATION_FAILED,\n      async () => {\n        console.log('!!!!!!!SIP_REGISTRATION_FAILED');\n        this.setSipRegistering(false);\n\n        this._sendTabManager(tabManagerEvents.SIP_REGISTRATION_FAILED);\n        this._handleRegistrationFailed();\n\n        // await this._deps.evAgentSession.reLoginAgent();\n        // this._closeFailReconnectedBlock();\n      },\n    );\n\n    this._deps.evSubscription.subscribe(\n      EvCallbackTypes.SIP_RINGING,\n      (ringingCall) => {\n        this.bindBeforeunload();\n        console.log('!!!!!!!SIP_RINGING');\n        this._eventEmitter.emit(EvCallbackTypes.SIP_RINGING, ringingCall);\n\n        if (this.autoAnswerCheckFn()) {\n          return this._sipAnswer();\n        }\n\n        const { displayName } = ringingCall.data.request.from;\n        const queueName = this._deps.evClient.currentCall?.queue?.name;\n        const { dialoutStatus, isOffhooking, isManualOffhook } =\n          this._deps.presence;\n        // exclude outbound and offhook\n        const isInbound =\n          dialoutStatus !== 'dialing' &&\n          !(isManualOffhook && isOffhooking) &&\n          this._deps.evClient.currentCall?.callType === 'INBOUND';\n\n        this._sendTabManager(tabManagerEvents.SIP_RINGING, {\n          displayName,\n          queueName,\n          isInbound,\n        });\n        this._showRingingModal({ displayName, queueName, isInbound });\n      },\n    );\n\n    this._deps.evSubscription.subscribe(EvCallbackTypes.SIP_CONNECTED, () => {\n      console.info('!!!!!!!SIP_CONNECTED');\n      this._sendTabManager(tabManagerEvents.SIP_CONNECTED);\n      this._sipConnected();\n    });\n\n    this._deps.evSubscription.subscribe(EvCallbackTypes.SIP_ENDED, () => {\n      console.info('!!!!!!!SIP_ENDED');\n      this.removeBeforeunload();\n\n      this._sendTabManager(tabManagerEvents.SIP_ENDED);\n      this._sipEnded();\n    });\n\n    this._deps.evSubscription.subscribe(EvCallbackTypes.SIP_MUTE, () => {\n      console.info('!!!!!!!SIP_MUTE');\n      this._sendTabManager(tabManagerEvents.MUTE_STATE_CHANGE, true);\n      this.setMuteActive(true);\n    });\n\n    this._deps.evSubscription.subscribe(EvCallbackTypes.SIP_UNMUTE, () => {\n      console.info('!!!!!!!SIP_UNMUTE');\n      this._sendTabManager(tabManagerEvents.MUTE_STATE_CHANGE, false);\n      this.setMuteActive(false);\n    });\n\n    // TODO: that is update session config related feature\n    // triggered by agentSDK if dial destination is changed on softphone registration\n    // pass in autoStartOH, maintainOH and dial destination, needed for reconnect logic\n    // this._deps.evSubscription.subscribe(\n    // EvCallbackTypes.SIP_DIAL_DEST_CHANGED,\n    // (data) => {\n    // console.info('!!!!!!!SIP_DIAL_DEST_CHANGED');\n    // // AgentSvc.setDialDest(data.dialDest),\n    // // SessionSvc.attemptingSoftphoneReconnect &&\n    // // (data.autoStartOH\n    // // ? AgentSvc.offhookInit().then(\n    // // function(result) {\n    // // data.maintainOH && (AgentSvc.systemInitOffhook = !1);\n    // // },\n    // // function(err) {\n    // // SessionSvc.showOffhookError(err.detail, data.maintainOH);\n    // // },\n    // // )\n    // // : ($timeout(function() {\n    // // 'RNA-STATE' === AgentSvc.currentAgentState.baseState &&\n    // // AgentSvc.setAgentState('AVAILABLE');\n    // // }, 1e3),\n    // // (SessionSvc.attemptingSoftphoneReconnect = !1),\n    // // (SessionSvc.manualSoftphoneReconnect = !1)));\n    // },\n    // );\n  }\n\n  private _sipEnded() {\n    this._closeRingingModal();\n    this._deps.presence.setOffhook(false);\n  }\n\n  private _sipRegistered() {\n    console.log('_sipRegistered~');\n    this.setSipRegisterSuccess(true);\n    this._eventEmitter.emit(EvSoftphoneEvents.REGISTERED);\n\n    this._isCloseWhenCallConnected = false;\n    this._closeWebRTCConnectingMask();\n  }\n\n  private _handleRegistrationFailed() {\n    this._failedBlockId = this._deps.block.block();\n    this._deps.evClient.sipTerminate();\n\n    this._resetAllState();\n    this._closeWebRTCConnectingMask();\n    // this._deps.alert.danger({\n    //   message: EvCallbackTypes.SIP_REGISTRATION_FAILED,\n    //   backdrop: true,\n    //   ttl: 0,\n    //   allowDuplicates: false,\n    // });\n\n    this._deps.modalUI.alert({\n      title: 'Registration failed',\n      content: 'Will reload your pages and tabs for you',\n      confirmButtonText: 'Ok',\n      childrenSize: 'small',\n      onConfirm: () => {\n        this._sendTabManager(tabManagerEvents.SIP_REGISTRATION_FAILED_RELOAD);\n        this._reloadApp();\n      },\n    });\n\n    this._deps.tabManager.setMainTabId(null);\n    // this._deps.routerInteraction.push('/sessionConfig');\n  }\n\n  private _reloadApp() {\n    window.location.reload();\n  }\n\n  private _sipConnected() {\n    this._deps.presence.setOffhook(true);\n    // When connected reset all controller state\n    this.resetController();\n  }\n\n  private async _showWebRTCConnectingMask() {\n    this._closeWebRTCConnectingMask();\n    this.setConnectingAlertId(\n      await this._deps.alert.info({\n        message: this._isCloseWhenCallConnected\n          ? tabManagerEvents.SIP_RECONNECTING_WHEN_CALL_CONNECTED\n          : tabManagerEvents.SIP_CONNECTING,\n        loading: true,\n      }),\n    );\n  }\n\n  private _closeWebRTCConnectingMask() {\n    console.log('_closeWebRTCConnectingMask~~', this.connectingAlertId);\n    if (this.connectingAlertId) {\n      this._deps.alert.dismiss(this.connectingAlertId);\n\n      this.setConnectingAlertId(null);\n    }\n  }\n\n  private async _showAskAudioPermissionMask() {\n    this._closeAskAudioPermissionMask();\n    this._audioPermissionAlertId = await this._deps.alert.info({\n      message: tabManagerEvents.ASK_AUDIO_PERMISSION,\n      loading: true,\n      backdrop: true,\n    });\n  }\n\n  private _closeAskAudioPermissionMask() {\n    if (this._audioPermissionAlertId) {\n      this._deps.alert.dismiss(this._audioPermissionAlertId);\n      this._audioPermissionAlertId = null;\n    }\n  }\n\n  private _showRingingModal({\n    displayName,\n    queueName,\n    isInbound,\n  }: ShowRingingModalProps) {\n    // prevent open a lot of modal, that sdk event pass a lot of ringing state when re login\n    if (this._answerModalId) {\n      return;\n    }\n\n    this._playAudioLoop('ringtone');\n\n    const { currentLocale } = this._deps.locale;\n\n    this._answerModalId = this._deps.modalUI.confirm({\n      title: i18n.getString('inviteModalTitle', currentLocale),\n      content: ModalContentRendererID,\n      contentProps: {\n        isInbound,\n        inboundTextProps: queueName && {\n          incomingText: formatMessage(\n            i18n.getString('incomingText', currentLocale),\n            {\n              displayName,\n            },\n          ),\n          queueNameText: formatMessage(\n            i18n.getString('queueNameText', currentLocale),\n            {\n              queueName,\n            },\n          ),\n        },\n        outboundText: formatMessage(\n          i18n.getString('outboundText', currentLocale),\n          {\n            displayName,\n          },\n        ),\n      },\n      confirmButtonText: i18n.getString('inviteModalAnswer', currentLocale),\n      cancelButtonText: i18n.getString('inviteModalReject', currentLocale),\n      onConfirm: async () => {\n        this._sendTabManager(tabManagerEvents.SIP_RINGING_MODAL, true);\n        await this.answerCall();\n      },\n      onCancel: () => {\n        this._sendTabManager(tabManagerEvents.SIP_RINGING_MODAL, false);\n        this.rejectCall();\n      },\n      childrenSize: 'small',\n    });\n  }\n\n  private async answerCall() {\n    this._resetRingingModal();\n    if (\n      !this.tabManagerEnabled ||\n      (this.tabManagerEnabled && this._deps.tabManager.isMainTab)\n    ) {\n      await this._sipAnswer();\n    }\n  }\n\n  private rejectCall() {\n    this._resetRingingModal();\n    // when reject not show init fail\n    this._deps.presence.showOffHookInitError = false;\n    this._deps.evClient.sipReject();\n    this._eventEmitter.emit(EvSoftphoneEvents.CALL_REJECTED);\n    this.removeBeforeunload();\n  }\n\n  onceRegistered() {\n    let _resolve: (value?: unknown) => void;\n    let _reject: (value?: unknown) => void;\n\n    return raceTimeout(\n      new Promise((resolve, reject) => {\n        _resolve = resolve;\n        _reject = reject;\n        this._eventEmitter.once(EvSoftphoneEvents.REGISTERED, _resolve);\n\n        // when reset sip also need reject that\n        this._eventEmitter.once(EvSoftphoneEvents.RESET, _reject);\n      }),\n      {\n        timeout: SIP_MAX_CONNECTING_TIME,\n        onTimeout: (res, rej) => {\n          this._emitRegistrationFailed();\n          rej('connected integratedSoftphone fail');\n        },\n        finalize: () => {\n          _resolve();\n          this._eventEmitter.off(EvSoftphoneEvents.REGISTERED, _resolve);\n          this._eventEmitter.off(EvSoftphoneEvents.RESET, _reject);\n        },\n      },\n    );\n  }\n\n  private _closeRingingModal() {\n    // if there is modal there, mean another cancel this call\n    if (this._answerModalId) {\n      this._deps.alert.info({\n        message: EvSoftphoneEvents.CALL_REJECTED,\n        ttl: 0,\n      });\n      this._deps.modalUI.close(this._answerModalId);\n      this._answerModalId = null;\n      this._stopAudio();\n    }\n  }\n\n  private async _registerSoftphone() {\n    if (!this.sipRegistering) {\n      this.setSipRegistering(true);\n\n      this._sendTabManager(tabManagerEvents.SIP_CONNECTING);\n      this._showWebRTCConnectingMask();\n\n      console.log(\n        'isReconnected, isForceLogin, _isCloseWhenCallConnected~',\n        this._deps.evAgentSession.isReconnected,\n        this._deps.evAgentSession.isForceLogin,\n        this._isCloseWhenCallConnected,\n      );\n\n      // When that is force login is also need delay to reconnect server\n      if (\n        this._deps.evAgentSession.isReconnected ||\n        this._deps.evAgentSession.isForceLogin\n      ) {\n        await sleep(\n          this._isCloseWhenCallConnected\n            ? RECONNECT_DEBOUNCE_TIME_WHEN_CONNECTED\n            : RECONNECT_DEBOUNCE_TIME,\n        );\n        await this._connectedWebRTC();\n      } else {\n        await this._connectedWebRTC();\n      }\n      return;\n    }\n\n    throw new Error('Sip is registering');\n  }\n\n  private async _connectedWebRTC() {\n    try {\n      this._deps.evClient.sipInit();\n      this._deps.evClient.sipRegister();\n\n      await this.onceRegistered();\n\n      this.setSipRegistering(false);\n      this._closeWebRTCConnectingMask();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  private _resetRingingModal() {\n    this._stopAudio();\n    this._answerModalId = null;\n  }\n\n  private async _sipAnswer() {\n    if (this._isFirefox) {\n      await raceTimeout(\n        navigator.mediaDevices.getUserMedia({\n          audio: true,\n        }),\n        {\n          timeout: 2000,\n          onTimeout: (resolve, reject) => {\n            this._sendTabManager(\n              tabManagerEvents.NOTIFY_ACTIVE_TAB_CALL_ACTIVE,\n            );\n            if (\n              // eslint-disable-next-line no-alert\n              window.confirm(\n                i18n.getString(\n                  'activeCallTip',\n                  this._deps.locale.currentLocale,\n                ),\n              )\n            ) {\n              resolve(null);\n            }\n          },\n        },\n      );\n    }\n    this._deps.evClient.sipAnswer();\n  }\n\n  private _initAudio() {\n    if (typeof document !== 'undefined' && document.createElement) {\n      this._audio = document.createElement('audio');\n    }\n  }\n\n  private _playAudioLoop(type: keyof typeof audios) {\n    this._audio.loop = true;\n    this._playAudio(type);\n  }\n\n  @runInActivityWebRTCTab()\n  private _playAudio(type: keyof typeof audios) {\n    this._audio.currentTime = 0;\n    this._audio.src = audios[type];\n    this._audio.play();\n  }\n\n  @runInActivityWebRTCTab()\n  private _stopAudio() {\n    this._audio.loop = false;\n    this._audio.pause();\n  }\n\n  private _sendTabManager(event: string, value?: any) {\n    this._deps.tabManager?.send(event, value);\n  }\n\n  bindBeforeunload() {\n    this._deps.beforeunload.add(this._beforeunloadHandler);\n  }\n\n  removeBeforeunload() {\n    this._deps.beforeunload.remove(this._beforeunloadHandler);\n  }\n}\n\nexport { EvIntegratedSoftphone };\n"],"file":"EvIntegratedSoftphone.js"}