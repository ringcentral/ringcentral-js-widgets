{"version":3,"file":"RateLimiter.js","names":["_core","require","_di","_proxify","_errorMessages","_dec","_class","_class2","_descriptor","_descriptor2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_initializerDefineProperty","target","property","descriptor","context","Object","defineProperty","enumerable","configurable","writable","initializer","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","length","_toPropertyKey","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","desc","keys","forEach","slice","reverse","reduce","decorator","_initializerWarningHelper","Error","DEFAULT_THROTTLE_DURATION","RateLimiter","Module","name","deps","dep","optional","_RcModuleV","_super","_this$_deps$rateLimit","_this$_deps$rateLimit2","_this","enableGlobalCache","storageKey","_timeoutId","_unbindHandlers","_throttleDuration","_beforeRequestHandler","throttling","errorMessages","rateLimitReached","_checkTimestamp","stopThrottle","_requestErrorHandler","message","response","retryAfter","headers","get","parseInt","wasThrottling","startThrottle","Date","now","showAlert","clearTimeout","setTimeout","_deps","rateLimiterOptions","throttleDuration","timestamp","onInitOnce","_this2","environment","watch","changeCounter","ready","_bindHandlers","onInit","_showAlert","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","alert","_suppressAlerts","abrupt","warning","ttl","allowDuplicates","rateLimitAlertId","sent","stop","_this3","client","service","on","events","requestError","beforeRequest","removeListener","_this$_deps$rateLimit3","_this$_deps$rateLimit4","suppressAlerts","RcModuleV2","globalStorage","state","action","getOwnPropertyDescriptor","proxify","exports"],"sources":["modules/RateLimiter/RateLimiter.ts"],"sourcesContent":["import {\n  action,\n  globalStorage,\n  RcModuleV2,\n  state,\n  watch,\n} from '@ringcentral-integration/core';\nimport type { ApiError } from '@ringcentral/sdk';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { errorMessages } from './errorMessages';\nimport type { Deps } from './RateLimiter.interface';\n\nconst DEFAULT_THROTTLE_DURATION = 61 * 1000;\n\n@Module({\n  name: 'RateLimiter',\n  deps: [\n    'Alert',\n    'Client',\n    'GlobalStorage',\n    { dep: 'Environment', optional: true },\n    { dep: 'RateLimiterOptions', optional: true },\n  ],\n})\nexport class RateLimiter extends RcModuleV2<Deps> {\n  // @ts-expect-error\n  protected _timeoutId: NodeJS.Timeout = null;\n  protected _unbindHandlers?: () => void;\n  protected _throttleDuration: number = DEFAULT_THROTTLE_DURATION;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableGlobalCache: true,\n      storageKey: 'RateLimiter',\n    });\n    this._throttleDuration =\n      this._deps.rateLimiterOptions?.throttleDuration ??\n      DEFAULT_THROTTLE_DURATION;\n  }\n\n  get _suppressAlerts() {\n    return this._deps.rateLimiterOptions?.suppressAlerts ?? false;\n  }\n\n  @globalStorage\n  @state\n  // @ts-expect-error\n  timestamp: number = null;\n\n  @globalStorage\n  @state\n  // @ts-expect-error\n  rateLimitAlertId: string = null;\n\n  @action\n  startThrottle(timestamp: number) {\n    this.timestamp = timestamp;\n  }\n\n  @action\n  stopThrottle() {\n    // @ts-expect-error\n    this.timestamp = null;\n  }\n\n  override onInitOnce() {\n    if (this._deps.environment) {\n      watch(\n        this,\n        // @ts-expect-error\n        () => this._deps.environment.changeCounter,\n        () => {\n          if (this.ready) {\n            this._bindHandlers();\n          }\n        },\n      );\n    }\n  }\n\n  override onInit() {\n    this._bindHandlers();\n  }\n\n  /**\n   * If the app is throttling, an incoming request will lead to an exception\n   */\n  _beforeRequestHandler = () => {\n    if (this.throttling) {\n      throw new Error(errorMessages.rateLimitReached);\n    }\n  };\n\n  _checkTimestamp = () => {\n    // @ts-expect-error\n    this._timeoutId = null;\n    if (!this.throttling) {\n      this.stopThrottle();\n    }\n  };\n\n  @proxify\n  async showAlert() {\n    if (!this.throttling || !this._deps.alert || this._suppressAlerts) {\n      return;\n    }\n\n    this.rateLimitAlertId = await this._deps.alert.warning({\n      message: errorMessages.rateLimitReached,\n      ttl: this.ttl,\n      allowDuplicates: false,\n    });\n  }\n\n  _requestErrorHandler = (error: ApiError) => {\n    if (\n      !(error instanceof Error) ||\n      error.message !== 'Request rate exceeded'\n    ) {\n      return;\n    }\n\n    // Get `retry-after` from response headers first\n    this._throttleDuration = DEFAULT_THROTTLE_DURATION;\n    if (error.response) {\n      const retryAfter = error.response.headers.get('retry-after');\n      if (retryAfter) {\n        this._throttleDuration = 1000 * Number.parseInt(retryAfter, 10);\n      }\n    }\n\n    const wasThrottling = this.throttling;\n    this.startThrottle(Date.now());\n    if (!wasThrottling) {\n      this.showAlert();\n    }\n    clearTimeout(this._timeoutId);\n    this._timeoutId = setTimeout(this._checkTimestamp, this._throttleDuration);\n  };\n\n  _bindHandlers() {\n    if (this._unbindHandlers) {\n      this._unbindHandlers();\n    }\n    const client = this._deps.client.service.client();\n    // TODO: Bind the `rateLimitError` event instead\n    client.on(client.events.requestError, this._requestErrorHandler);\n    client.on(client.events.beforeRequest, this._beforeRequestHandler);\n    this._unbindHandlers = () => {\n      client.removeListener(\n        client.events.requestError,\n        this._requestErrorHandler,\n      );\n      client.removeListener(\n        client.events.beforeRequest,\n        this._beforeRequestHandler,\n      );\n      // @ts-expect-error\n      this._unbindHandlers = null;\n    };\n  }\n\n  get ttl() {\n    return this.throttling\n      ? this._throttleDuration - (Date.now() - this.timestamp)\n      : 0;\n  }\n\n  get throttleDuration() {\n    return this._throttleDuration;\n  }\n\n  /**\n   * Is in throttling status\n   */\n  get throttling() {\n    return Date.now() - this.timestamp <= this._throttleDuration;\n  }\n}\n"],"mappings":"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"}