{"version":3,"sources":["modules/ActiveCallsUI/ActiveCallsUI.tsx"],"names":["ModalContentRendererID","ActiveCallsUI","name","deps","dep","optional","_deps","modalUI","registerRenderer","currentLocale","contactName","showContactDisplayPlaceholder","showRingoutCallControl","showSwitchCall","showTransferCall","showHoldOnOtherDevice","useV2","useCallControl","isWebRTC","callingSettings","callingMode","callingModes","webphone","controlBusy","activeCallControl","busy","locale","activeRingCalls","callMonitor","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","areaCode","regionSettings","countryCode","outboundSmsPermission","appFeatures","hasOutboundSMSPermission","internalSmsPermission","hasInternalSMSPermission","showSpinner","conferenceCall","isMerging","brand","connected","autoLog","callLogger","conferenceCallParties","partyProfiles","disableLinks","connectivityMonitor","connectivity","rateLimiter","throttling","isWide","composeTextRoute","callCtrlRoute","onCreateContact","onLogCall","isLoggedContact","onCallsEmpty","onViewContact","showViewContact","getAvatarUrl","useActiveCallControl","modalConfirm","props","confirm","content","modalClose","id","close","formatPhone","phoneNumber","webphoneAnswer","sessionId","telephonySessionId","isHoldAndAnswer","answerAndHold","answer","session","sessions","find","direction","callDirections","inbound","closeMergingPair","webphoneToVoicemail","reject","toVoiceMail","webphoneReject","webphoneHangup","allCallsClickHangupTrack","hangUp","hangup","webphoneResume","unhold","resume","routerInteraction","currentPath","push","webphoneHold","allCallsClickHoldTrack","hold","webphoneSwitchCall","activeCall","switchCall","homeCountryId","webphoneIgnore","ignore","ringoutHangup","args","ringoutTransfer","ringoutReject","allCallsClickRejectTrack","contact","type","contactDetailsUI","showContactDetails","direct","onClickToSms","composeText","isDummyContact","clean","updateTypingToNumber","contactSearch","search","searchString","addToRecipients","undefined","entityType","contactMatcher","hasMatchNumber","ignoreCache","forceMatchNumber","call","redirect","logCall","length","isSessionAConferenceCall","isConferenceSession","onCallItemClick","webphoneSession","callItemClickTrack","toggleMinimized","updateSessionMatchedContact","isOnHold","calls","telephonySession","clickSwitchTrack","RcUIModuleV2"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport { isRingingInboundCall } from '@ringcentral-integration/commons/lib/callLogHelpers';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport formatNumber from '@ringcentral-integration/commons/lib/formatNumber';\nimport { ActiveSession } from '@ringcentral-integration/commons/modules/ActiveCallControlV2';\nimport { isHolding } from '@ringcentral-integration/commons/modules/ActiveCallControlV2/helpers';\nimport callingModes from '@ringcentral-integration/commons/modules/CallingSettings/callingModes';\nimport { isOnHold } from '@ringcentral-integration/commons/modules/Webphone/webphoneHelper';\nimport { SwitchCallActiveCallParams } from '@ringcentral-integration/commons/modules/WebphoneV2';\nimport {\n  RcUIModuleV2,\n  UIFunctions,\n  UIProps,\n} from '@ringcentral-integration/core';\n\nimport { ModalContent } from '../../components/ActiveCallItemV2';\nimport {\n  ActiveCallsContainerProps,\n  ActiveCallsPanelProps,\n  Deps,\n} from './ActiveCallsUI.interface';\n\nconst ModalContentRendererID = 'ActiveCallsUI.ModalContentRenderer';\n@Module({\n  name: 'ActiveCallsUI',\n  deps: [\n    'Brand',\n    'Locale',\n    'CallMonitor',\n    'RateLimiter',\n    'ContactSearch',\n    'RegionSettings',\n    'ContactMatcher',\n    'CallingSettings',\n    'RouterInteraction',\n    'AppFeatures',\n    'ConnectivityMonitor',\n    { dep: 'ModalUI', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'CallLogger', optional: true },\n    { dep: 'ComposeText', optional: true },\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'ContactDetailsUI', optional: true },\n    { dep: 'ActiveCallControl', optional: true },\n  ],\n})\nexport class ActiveCallsUI<T = {}> extends RcUIModuleV2<Deps & T> {\n  constructor(deps: Deps & T) {\n    super({\n      deps,\n    });\n    this._deps.modalUI?.registerRenderer(\n      ModalContentRendererID,\n      ({ currentLocale, contactName }) => (\n        <ModalContent currentLocale={currentLocale} contactName={contactName} />\n      ),\n    );\n  }\n\n  getUIProps({\n    showContactDisplayPlaceholder = false,\n    showRingoutCallControl = false,\n    showSwitchCall = false,\n    showTransferCall = true,\n    showHoldOnOtherDevice = false,\n    useV2,\n    useCallControl,\n  }: ActiveCallsContainerProps): UIProps<ActiveCallsPanelProps> {\n    const isWebRTC =\n      this._deps.callingSettings.callingMode === callingModes.webphone;\n    const controlBusy = this._deps.activeCallControl?.busy || false;\n    return {\n      currentLocale: this._deps.locale.currentLocale,\n      activeRingCalls: this._deps.callMonitor.activeRingCalls,\n      activeOnHoldCalls: this._deps.callMonitor.activeOnHoldCalls,\n      activeCurrentCalls: this._deps.callMonitor.activeCurrentCalls,\n      otherDeviceCalls: this._deps.callMonitor.otherDeviceCalls,\n      areaCode: this._deps.regionSettings.areaCode,\n      countryCode: this._deps.regionSettings.countryCode,\n      outboundSmsPermission: this._deps.appFeatures.hasOutboundSMSPermission,\n      internalSmsPermission: this._deps.appFeatures.hasInternalSMSPermission,\n      showSpinner: !!this._deps.conferenceCall?.isMerging,\n      brand: this._deps.brand.name,\n      showContactDisplayPlaceholder,\n      showRingoutCallControl,\n      showTransferCall,\n      showHoldOnOtherDevice,\n      showSwitchCall:\n        showSwitchCall && isWebRTC && this._deps.webphone?.connected,\n      autoLog: !!this._deps.callLogger?.autoLog,\n      isWebRTC,\n      conferenceCallParties: this._deps.conferenceCall\n        ? this._deps.conferenceCall.partyProfiles\n        : null,\n      useV2,\n      disableLinks:\n        !this._deps.connectivityMonitor.connectivity ||\n        this._deps.rateLimiter.throttling ||\n        controlBusy,\n      useCallControl,\n      isWide: this.isWide,\n    };\n  }\n\n  getUIFunctions({\n    composeTextRoute = '/composeText',\n    callCtrlRoute = '/calls/active',\n    onCreateContact,\n    onLogCall,\n    isLoggedContact,\n    onCallsEmpty,\n    onViewContact,\n    showViewContact = true,\n    getAvatarUrl,\n    useV2,\n    useCallControl,\n  }: ActiveCallsContainerProps): UIFunctions<ActiveCallsPanelProps> {\n    // Toggle to control if use new call control API, should using the ActiveCallControlV2 module same time,\n    // when you set this toggle to true (https://developers.ringcentral.com/api-reference/Call-Control/createCallOutCallSession)\n    const useActiveCallControl = !!(\n      useCallControl && this._deps.activeCallControl\n    );\n    return {\n      modalConfirm: (props) =>\n        this._deps.modalUI?.confirm({\n          ...props,\n          content: ModalContentRendererID,\n        }),\n      modalClose: (id) => this._deps.modalUI?.close(id),\n      formatPhone: (phoneNumber) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._deps.regionSettings.areaCode,\n          countryCode: this._deps.regionSettings.countryCode,\n        }),\n      webphoneAnswer: async (\n        sessionId,\n        telephonySessionId,\n        isHoldAndAnswer = false,\n      ) => {\n        if (useActiveCallControl) {\n          isHoldAndAnswer && this._deps.activeCallControl.answerAndHold\n            ? this._deps.activeCallControl.answerAndHold(telephonySessionId)\n            : this._deps.activeCallControl.answer(telephonySessionId);\n        } else {\n          if (!this._deps.webphone) {\n            return;\n          }\n\n          const session = this._deps.webphone.sessions.find(\n            (session) => session.id === sessionId,\n          );\n          if (\n            this._deps.conferenceCall &&\n            session &&\n            session.direction === callDirections.inbound\n          ) {\n            this._deps.conferenceCall.closeMergingPair();\n          }\n\n          this._deps.webphone.answer(sessionId);\n        }\n      },\n      webphoneToVoicemail: (sessionId, telephonySessionId) => {\n        if (useActiveCallControl) {\n          return this._deps.activeCallControl.reject(telephonySessionId);\n        }\n        return this._deps.webphone?.toVoiceMail(sessionId);\n      },\n      webphoneReject: (sessionId) => this._deps.webphone?.reject(sessionId),\n      webphoneHangup: (sessionId, telephonySessionId) => {\n        // user action track\n        this._deps.callMonitor.allCallsClickHangupTrack();\n        if (useActiveCallControl) {\n          return this._deps.activeCallControl.hangUp(telephonySessionId);\n        }\n        return this._deps.webphone?.hangup(sessionId);\n      },\n      webphoneResume: async (sessionId, telephonySessionId) => {\n        if (useActiveCallControl) {\n          return this._deps.activeCallControl.unhold(telephonySessionId);\n        }\n        if (!this._deps.webphone) {\n          return;\n        }\n        await this._deps.webphone.resume(sessionId);\n        if (\n          this._deps.routerInteraction.currentPath !== callCtrlRoute &&\n          !useV2\n        ) {\n          this._deps.routerInteraction.push(callCtrlRoute);\n        }\n      },\n      webphoneHold: (sessionId, telephonySessionId) => {\n        // user action track\n        this._deps.callMonitor.allCallsClickHoldTrack();\n        if (useActiveCallControl) {\n          return this._deps.activeCallControl.hold(telephonySessionId);\n        }\n        return this._deps.webphone?.hold(sessionId);\n      },\n      webphoneSwitchCall: async (activeCall) => {\n        if (useActiveCallControl) {\n          return this._deps.activeCallControl.switch(\n            (activeCall as ActiveSession).telephonySessionId,\n          );\n        }\n        if (!this._deps.webphone) {\n          return;\n        }\n        const session = await this._deps.webphone.switchCall(\n          activeCall as SwitchCallActiveCallParams,\n          this._deps.regionSettings.homeCountryId,\n        );\n        return session;\n      },\n      webphoneIgnore: (telephonySessionId) =>\n        this._deps.activeCallControl?.ignore(telephonySessionId),\n      ringoutHangup: async (...args) => {\n        // user action track\n        this._deps.callMonitor.allCallsClickHangupTrack();\n        return this._deps.activeCallControl?.hangUp(...args);\n      },\n      ringoutTransfer: (sessionId) => {\n        this._deps.routerInteraction.push(`/transfer/${sessionId}/active`);\n      },\n      ringoutReject: async (sessionId) => {\n        // user action track\n        this._deps.callMonitor.allCallsClickRejectTrack();\n        return this._deps.activeCallControl?.reject(sessionId);\n      },\n      onViewContact: showViewContact\n        ? onViewContact ||\n          (({ contact }) => {\n            const { id, type } = contact;\n            this._deps.contactDetailsUI?.showContactDetails({\n              type,\n              id,\n              direct: true,\n            });\n          })\n        : null,\n      onClickToSms: this._deps.composeText\n        ? async (contact, isDummyContact = false) => {\n            if (this._deps.routerInteraction) {\n              this._deps.routerInteraction.push(composeTextRoute);\n            }\n            this._deps.composeText.clean();\n            const { name } = contact as {\n              name: string;\n            };\n            if (name && contact.phoneNumber && isDummyContact) {\n              this._deps.composeText.updateTypingToNumber(name);\n              this._deps.contactSearch.search({ searchString: name });\n            } else {\n              this._deps.composeText.addToRecipients(contact);\n            }\n          }\n        : undefined,\n      onCreateContact: onCreateContact\n        ? async ({ phoneNumber, name, entityType }) => {\n            const hasMatchNumber =\n              await this._deps.contactMatcher.hasMatchNumber({\n                phoneNumber,\n                ignoreCache: true,\n              });\n            if (!hasMatchNumber) {\n              await onCreateContact({ phoneNumber, name, entityType });\n              await this._deps.contactMatcher.forceMatchNumber({ phoneNumber });\n            }\n          }\n        : undefined,\n      isLoggedContact,\n      onLogCall:\n        onLogCall ||\n        (this._deps.callLogger &&\n          (async ({ call, contact, redirect = true }) => {\n            await this._deps.callLogger.logCall({\n              call,\n              contact,\n              redirect,\n            });\n          })),\n      onCallsEmpty:\n        onCallsEmpty ||\n        (() => {\n          const isWebRTC =\n            this._deps.callingSettings.callingMode === callingModes.webphone;\n\n          if (isWebRTC && !this._deps.webphone.sessions.length) {\n            this._deps.routerInteraction.push('/dialer');\n          }\n        }),\n      isSessionAConferenceCall: (sessionId) =>\n        !!this._deps.conferenceCall?.isConferenceSession(sessionId),\n      onCallItemClick: (call) => {\n        if (!call.webphoneSession) {\n          // For ringout call\n          if (isRingingInboundCall(call)) {\n            return;\n          }\n\n          const { telephonySessionId } = call;\n          // to track the call item be clicked.\n          this._deps.callMonitor.callItemClickTrack();\n          this._deps.routerInteraction.push(\n            `/simplifycallctrl/${telephonySessionId}`,\n          );\n        } else {\n          // For webphone call\n          // show the ring call modal when click a ringing call.\n          if (isRingingInboundCall(call)) {\n            this._deps.webphone.toggleMinimized(call.webphoneSession.id);\n            return;\n          }\n          if (call.webphoneSession && call.webphoneSession.id) {\n            // to track the call item be clicked.\n            this._deps.callMonitor.callItemClickTrack();\n            this._deps.routerInteraction.push(\n              `${callCtrlRoute}/${call.webphoneSession.id}`,\n            );\n          }\n        }\n      },\n      getAvatarUrl,\n      updateSessionMatchedContact: (sessionId, contact) =>\n        this._deps.webphone.updateSessionMatchedContact(sessionId, contact),\n      // function to check if a call is on hold status\n      isOnHold: (webphoneSession) => {\n        if (useActiveCallControl) {\n          const call =\n            this._deps.callMonitor.calls.find(\n              (call) => call.webphoneSession === webphoneSession,\n            ) || {};\n          const { telephonySession } = call;\n          return isHolding(telephonySession);\n        }\n        return isOnHold(webphoneSession);\n      },\n      clickSwitchTrack: () => {\n        this._deps.activeCallControl?.clickSwitchTrack?.();\n      },\n    };\n  }\n\n  get isWide() {\n    return true;\n  }\n}\n"],"file":"ActiveCallsUI.js"}