{"version":3,"sources":["modules/EvDialerUI/EvDialerUI.ts"],"names":["EvDialerUI","name","deps","dep","optional","that","_deps","evIntegratedSoftphone","connectingAlertId","enableCache","storageKey","toNumber","latestDialoutNumber","value","evAuth","beforeAgentLogout","evAgentSession","isAgentUpdating","reset","routerInteraction","currentPath","newValue","checkOnCall","evCallMonitor","calls","call","isPendingDisposition","evWorkingState","id","callLogsIds","evClient","encodeUii","session","evActivityCallUI","changeSavingStatus","saveStatus","submit","push","currentLocale","locale","size","environment","isWide","dialoutStatus","evCall","hasDialer","agentPermissions","allowManualCalls","dialButtonDisabled","setToNumber","dialout","setLatestDialoutNumber","goToManualDialSettings","hangup","outdialCancel","evSettings","isManualOffhook","offhookTerm","RcUIModuleV2","storage","state","action"],"mappings":"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","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  action,\n  computed,\n  RcUIModuleV2,\n  state,\n  storage,\n  watch,\n} from '@ringcentral-integration/core';\n\nimport { saveStatus } from '../../interfaces/EvActivityCallUI.interface';\nimport {\n  EvDialerUIFunctions,\n  EvDialerUIProps,\n} from '../../interfaces/EvDialerUI.interface';\nimport { Deps, DialerUI } from './EvDialerUI.interface';\n\n@Module({\n  name: 'EvDialerUI',\n  deps: [\n    'EvCall',\n    'Locale',\n    'Storage',\n    'EvAuth',\n    'RouterInteraction',\n    'EvSettings',\n    'EvClient',\n    'EvCallMonitor',\n    'EvWorkingState',\n    'EvAgentSession',\n    'EvIntegratedSoftphone',\n    'Environment',\n    'EvActivityCallUI',\n    { dep: 'EvDialerUIOptions', optional: true },\n  ],\n})\nclass EvDialerUI extends RcUIModuleV2<Deps> implements DialerUI {\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvDialerUI',\n    });\n  }\n\n  @storage\n  @state\n  toNumber = '';\n\n  @storage\n  @state\n  latestDialoutNumber = '';\n\n  @action\n  reset() {\n    this.toNumber = '';\n    this.latestDialoutNumber = '';\n  }\n\n  @action\n  setToNumber(value: string) {\n    this.toNumber = value;\n  }\n\n  @action\n  setLatestDialoutNumber() {\n    this.latestDialoutNumber = this.toNumber;\n  }\n\n  @computed((that: EvDialerUI) => [\n    that._deps.evIntegratedSoftphone.connectingAlertId,\n  ])\n  get dialButtonDisabled() {\n    return !!this._deps.evIntegratedSoftphone.connectingAlertId;\n  }\n\n  onInitOnce() {\n    this._deps.evAuth.beforeAgentLogout(() => {\n      // * if that logout is not from update session\n      if (!this._deps.evAgentSession.isAgentUpdating) {\n        this.reset();\n      }\n    });\n\n    watch(\n      this,\n      () => this._deps.routerInteraction.currentPath,\n      (newValue) => {\n        if (newValue === '/dialer') {\n          this.checkOnCall();\n        }\n      },\n    );\n  }\n\n  checkOnCall() {\n    // onCall or not yet disposed call, it should navigate to the `activityCallLog/:id` router.\n    const [call] = this._deps.evCallMonitor.calls;\n    const { isPendingDisposition } = this._deps.evWorkingState;\n    let id: string;\n    if (isPendingDisposition) {\n      id = this._deps.evCallMonitor.callLogsIds[0];\n    }\n    if (call) {\n      id = this._deps.evClient.encodeUii(call.session);\n    }\n    if (id) {\n      this._deps.evActivityCallUI.changeSavingStatus(saveStatus.submit);\n      this._deps.routerInteraction.push(`/activityCallLog/${id}`);\n    }\n  }\n\n  getUIProps(): EvDialerUIProps {\n    return {\n      toNumber: this.toNumber,\n      currentLocale: this._deps.locale.currentLocale,\n      size: this._deps.environment.isWide ? 'medium' : 'small',\n      dialoutStatus: this._deps.evCall.dialoutStatus,\n      hasDialer: this._deps.evAuth.agentPermissions.allowManualCalls,\n      dialButtonDisabled: this.dialButtonDisabled,\n    };\n  }\n\n  getUIFunctions(): EvDialerUIFunctions {\n    return {\n      setToNumber: (value: string) => this.setToNumber(value),\n      dialout: () => {\n        if (this.toNumber) {\n          this.setLatestDialoutNumber();\n        } else if (this.latestDialoutNumber) {\n          this.setToNumber(this.latestDialoutNumber);\n          return;\n        }\n\n        this._deps.evCall.dialout(this.toNumber);\n      },\n      goToManualDialSettings: () => {\n        this._deps.routerInteraction.push('/manualDialSettings');\n      },\n      hangup: () => {\n        this._deps.evCall.outdialCancel();\n        if (!this._deps.evSettings.isManualOffhook) {\n          this._deps.evClient.offhookTerm();\n        }\n      },\n    };\n  }\n}\n\nexport { EvDialerUI };\n"],"file":"EvDialerUI.js"}