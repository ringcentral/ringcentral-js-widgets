{"version":3,"sources":["modules/RecentMessagesV2/recentMessagesHelper.ts"],"names":["filterPhoneNumber","message","phoneNumber","from","to","find","extensionNumber","flattenToMessageRecords","allMessages","reduce","acc","records","concat","sortMessages","recentMessages","sort","a","b","Date","creationTime","getTime","markAsRemoteMessage","messages","map","fromRemote","dedup","hash","cur","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD,EAA+B;AAC9D,SAAO;AAAA,QAAGC,WAAH,QAAGA,WAAH;AAAA,WACLA,WAAW,KAAKD,OAAO,CAACE,IAAR,CAAaD,WAA7B,IACA,CAAC,CAACD,OAAO,CAACG,EAAR,CAAWC,IAAX,CAAgB,UAACD,EAAD;AAAA,aAAQA,EAAE,CAACF,WAAH,KAAmBA,WAA3B;AAAA,KAAhB,CADF,IAEAA,WAAW,KAAKD,OAAO,CAACE,IAAR,CAAaG,eAF7B,IAGA,CAAC,CAACL,OAAO,CAACG,EAAR,CAAWC,IAAX,CAAgB,UAACD,EAAD;AAAA,aAAQA,EAAE,CAACE,eAAH,KAAuBJ,WAA/B;AAAA,KAAhB,CAJG;AAAA,GAAP;AAKD,CANM;;;;AAQA,IAAMK,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,WAAD,EAAmC;AACxE,SAAOA,WAAW,CAACC,MAAZ,CACL,UAACC,GAAD;AAAA,QAAQC,OAAR,SAAQA,OAAR;AAAA,WAAsBD,GAAG,CAACE,MAAJ,CAAWD,OAAX,CAAtB;AAAA,GADK,EAEL,EAFK,CAAP;AAID,CALM;;;;AAOA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,cAAD,EAAqC;AAC/D;AACA,SAAOA,cAAc,CAACC,IAAf,CACL,UAACC,CAAD,EAAIC,CAAJ;AAAA,WACE,IAAIC,IAAJ,CAASD,CAAC,CAACE,YAAX,EAAyBC,OAAzB,KAAqC,IAAIF,IAAJ,CAASF,CAAC,CAACG,YAAX,EAAyBC,OAAzB,EADvC;AAAA,GADK,CAAP;AAID,CANM;;;;AAQA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD,EAAwC;AACzE,SAAOA,QAAQ,CAACC,GAAT,CAAa,UAACtB,OAAD,EAAa;AAC/B,2CACKA,OADL;AAEEuB,MAAAA,UAAU,EAAE;AAFd;AAID,GALM,CAAP;AAMD,CAPM;;;;AASA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACH,QAAD,EAA2C;AAC9D,MAAMI,IAA6B,GAAG,EAAtC;AACA,SAAOJ,QAAQ,CAACb,MAAT,CAAgB,UAACC,GAAD,EAAMiB,GAAN,EAAc;AACnC,QAAID,IAAI,CAACC,GAAG,CAACC,EAAL,CAAR,EAAkB,OAAOlB,GAAP;AAClBgB,IAAAA,IAAI,CAACC,GAAG,CAACC,EAAL,CAAJ,GAAe,IAAf;AACA,WAAOlB,GAAG,CAACE,MAAJ,CAAWe,GAAX,CAAP;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD,CAPM","sourcesContent":["import {\n  GetMessageInfoResponse,\n  GetMessageList,\n} from '@rc-ex/core/definitions';\n\nimport { Entity } from '../../interfaces/Entity.interface';\nimport { Message } from '../../interfaces/MessageStore.model';\nimport { MessageStoreItem } from '../MessageStoreV2';\nimport { RecentMessage } from './RecentMessages.interface';\n\nexport const filterPhoneNumber = (message: MessageStoreItem) => {\n  return ({ phoneNumber }: Entity['phoneNumbers'][number]) =>\n    phoneNumber === message.from.phoneNumber ||\n    !!message.to.find((to) => to.phoneNumber === phoneNumber) ||\n    phoneNumber === message.from.extensionNumber ||\n    !!message.to.find((to) => to.extensionNumber === phoneNumber);\n};\n\nexport const flattenToMessageRecords = (allMessages: GetMessageList[]) => {\n  return allMessages.reduce(\n    (acc, { records }) => acc.concat(records),\n    [] as GetMessageInfoResponse[],\n  );\n};\n\nexport const sortMessages = (recentMessages: RecentMessage[]) => {\n  // Sort by time in descending order\n  return recentMessages.sort(\n    (a, b) =>\n      new Date(b.creationTime).getTime() - new Date(a.creationTime).getTime(),\n  );\n};\n\nexport const markAsRemoteMessage = (messages: GetMessageInfoResponse[]) => {\n  return messages.map((message) => {\n    return {\n      ...message,\n      fromRemote: true,\n    } as RecentMessage;\n  });\n};\n\nexport const dedup = (messages: (Message | RecentMessage)[]) => {\n  const hash: Record<string, boolean> = {};\n  return messages.reduce((acc, cur) => {\n    if (hash[cur.id]) return acc;\n    hash[cur.id] = true;\n    return acc.concat(cur);\n  }, []);\n};\n"],"file":"recentMessagesHelper.js"}