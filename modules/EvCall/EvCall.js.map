{"version":3,"file":"EvCall.js","names":["_di","require","_Call","_core","_enums","_dialoutStatus","_callbackTypes","_checkCountryCode","_parseNumber","_trackEvents","_dec","_dec2","_dec3","_dec4","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","_initializerDefineProperty","l","initializer","call","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","slice","reverse","reduce","_initializerWarningHelper","Error","DEFAULT_OUTBOUND_SETTING","dialoutCallerId","dialoutQueueId","dialoutCountryId","dialoutRingTime","EvCall","Module","name","deps","dep","optional","computed","that","activityCallId","_deps","evCallMonitor","callsMapping","evAuth","isEvLogged","ready","track","trackEvents","outbound","evAgentSession","loginType","_RcModuleV","_super","_this","enableCache","storageKey","ringTimeLimit","min","max","setFormGroup","data","formGroup","saveForm","resetOutBoundDialSetting","defaultRingTime","parseInt","outboundManualDefaultRingtime","isNaN","resetForm","onInitOnce","_this2","watch","isOnLoginSuccess","onCallEnded","setDialoutStatus","dialoutStatuses","idle","evSubscription","subscribe","EvCallbackTypes","TCPA_SAFE_LEAD_STATE","includes","leadState","evSettings","isManualOffhook","_isTabActive","evClient","offhookTerm","setPhonedIdle","alert","info","message","messageTypes","INTERCEPT","OFFHOOK_TERM","onInit","isFreshLogin","_dialout","regeneratorRuntime","mark","_callee","phoneNumber","integratedSoftphone","destination","wrap","_callee$","_context","prev","next","presence","setCurrentCallUii","isIntegratedSoftphone","evIntegratedSoftphone","sipRegisterSuccess","askAudioPermission","configureAgent","onceRegistered","t0","abrupt","_checkAndParseNumber","_manualOutdial","callerId","countryId","queueId","ringTime","t1","stop","dialout","_x","outdialCancel","manualOutdialCancel","currentCallUii","checkDialoutRingTime","Math","checkIsAbleToCall","dialoutStatus","isOnCall","evWorkingState","isPendingDisposition","console","log","danger","FAILED_TO_CALL","ttl","status","setPhonedDialing","dialing","checkCountryCode","parseNumber","error","type","NO_SUPPORT_COUNTRY","callErrors","emergencyNumber","noToNumber","_manualOutdial2","_callee2","_ref","_ref$callerId","_ref$ringTime","_ref$queueId","_ref$countryId","offhookInitResult","getOffhookInitResult","_callee2$","_context2","isOffhook","_getOffhookInitResult","offhookInit","sent","manualOutdial","_x2","_this3","reject","evPresenceEvents","once","OFFHOOK_INIT","get","tabManager","active","_this$currentCall","currentCall","callType","RcModuleV2","storage","state","action","exports"],"sources":["modules/EvCall/EvCall.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { callErrors } from '@ringcentral-integration/commons/modules/Call';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  track,\n  watch,\n} from '@ringcentral-integration/core';\n\nimport { messageTypes } from '../../enums';\nimport type { DialoutStatusesType } from '../../enums/dialoutStatus';\nimport { dialoutStatuses } from '../../enums/dialoutStatus';\nimport type {\n  EvClientManualOutdialParams,\n  EvOffhookInitResponse,\n} from '../../lib/EvClient';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums/callbackTypes';\nimport { checkCountryCode } from '../../lib/checkCountryCode';\nimport { parseNumber } from '../../lib/parseNumber';\nimport { trackEvents } from '../../lib/trackEvents';\n\nimport type { Call, Deps, State } from './EvCall.interface';\n\nconst DEFAULT_OUTBOUND_SETTING = {\n  dialoutCallerId: '-1',\n  dialoutQueueId: '-1',\n  dialoutCountryId: 'USA',\n  dialoutRingTime: 30,\n};\n\n@Module({\n  name: 'EvCall',\n  deps: [\n    'Alert',\n    'EvAuth',\n    'Storage',\n    'EvClient',\n    'Presence',\n    'EvSettings',\n    'EvCallMonitor',\n    'EvSubscription',\n    'EvAgentSession',\n    'EvIntegratedSoftphone',\n    { dep: 'TabManager', optional: true },\n    { dep: 'EvCallOptions', optional: true },\n    { dep: 'EvWorkingState', optional: true },\n  ],\n})\nclass EvCall extends RcModuleV2<Deps> implements Call {\n  /** this id is get from route, set from EvActivityCallUI */\n  activityCallId: string;\n\n  ringTimeLimit = {\n    min: 20,\n    max: 120,\n  };\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvCall',\n    });\n  }\n\n  @storage\n  @state\n  dialoutCallerId = DEFAULT_OUTBOUND_SETTING.dialoutCallerId;\n\n  @storage\n  @state\n  dialoutQueueId = DEFAULT_OUTBOUND_SETTING.dialoutQueueId;\n\n  @storage\n  @state\n  dialoutCountryId = DEFAULT_OUTBOUND_SETTING.dialoutCountryId;\n\n  @storage\n  @state\n  dialoutRingTime: number = DEFAULT_OUTBOUND_SETTING.dialoutRingTime;\n\n  @storage\n  @state\n  formGroup: State['formGroup'] = DEFAULT_OUTBOUND_SETTING;\n\n  get ringTime() {\n    return this.dialoutRingTime;\n  }\n\n  get queueId() {\n    return this.dialoutQueueId === '-1' ? null : this.dialoutQueueId;\n  }\n\n  get callerId() {\n    return this.dialoutCallerId === '-1' ? null : this.dialoutCallerId;\n  }\n\n  get countryId() {\n    return this.dialoutCountryId;\n  }\n\n  get dialoutStatus() {\n    return this._deps.presence.dialoutStatus;\n  }\n\n  get isDialing() {\n    return this._deps.presence.dialoutStatus === 'dialing';\n  }\n\n  private get _isTabActive() {\n    return !this._deps.tabManager || this._deps.tabManager.active;\n  }\n\n  @computed((that: EvCall) => [\n    that.activityCallId,\n    that._deps.evCallMonitor.callsMapping,\n  ])\n  get currentCall() {\n    const call = this._deps.evCallMonitor.callsMapping[this.activityCallId];\n    return this.activityCallId && call ? call : null;\n  }\n\n  @action\n  setFormGroup(data: Partial<State['formGroup']>) {\n    this.formGroup = { ...this.formGroup, ...data };\n  }\n\n  @action\n  saveForm() {\n    this.dialoutCallerId = this.formGroup.dialoutCallerId;\n    this.dialoutQueueId = this.formGroup.dialoutQueueId;\n    this.dialoutCountryId = this.formGroup.dialoutCountryId;\n    this.dialoutRingTime = this.formGroup.dialoutRingTime;\n  }\n\n  @action\n  resetOutBoundDialSetting() {\n    this.dialoutCallerId = DEFAULT_OUTBOUND_SETTING.dialoutCallerId;\n    this.dialoutQueueId = DEFAULT_OUTBOUND_SETTING.dialoutQueueId;\n    this.dialoutCountryId = DEFAULT_OUTBOUND_SETTING.dialoutCountryId;\n    this.dialoutRingTime = DEFAULT_OUTBOUND_SETTING.dialoutRingTime;\n    const defaultRingTime = parseInt(\n      this._deps.evAuth.outboundManualDefaultRingtime,\n      10,\n    );\n    if (!Number.isNaN(defaultRingTime)) {\n      this.formGroup.dialoutRingTime = defaultRingTime;\n      this.dialoutRingTime = defaultRingTime;\n    }\n  }\n\n  resetForm() {\n    this.setFormGroup({\n      dialoutCallerId: this.dialoutCallerId,\n      dialoutQueueId: this.dialoutQueueId,\n      dialoutCountryId: this.dialoutCountryId,\n      dialoutRingTime: this.dialoutRingTime,\n    });\n  }\n\n  @computed((that: EvCall) => [that._deps.evAuth.isEvLogged, that.ready])\n  get isOnLoginSuccess() {\n    return this.ready && this._deps.evAuth.isEvLogged;\n  }\n\n  override onInitOnce() {\n    watch(\n      this,\n      () => this.isOnLoginSuccess,\n      (isOnLoginSuccess) => {\n        if (isOnLoginSuccess) {\n          this.resetForm();\n        }\n      },\n    );\n\n    this._deps.evCallMonitor.onCallEnded(() => {\n      this.setDialoutStatus(dialoutStatuses.idle);\n    });\n\n    this._deps.evSubscription.subscribe(\n      EvCallbackTypes.TCPA_SAFE_LEAD_STATE,\n      (data) => {\n        if (['INTERCEPT', 'BUSY', 'NOANSWER'].includes(data.leadState)) {\n          // TCPA_SAFE_LEAD_STATE -> BUSY\n          // TODO: alert message info about busy call.\n          if (!this._deps.evSettings.isManualOffhook && this._isTabActive) {\n            this._deps.evClient.offhookTerm();\n          }\n          this.setPhonedIdle();\n          if (data.leadState === 'INTERCEPT') {\n            this._deps.alert.info({\n              message: messageTypes.INTERCEPT,\n            });\n          }\n        }\n      },\n    );\n\n    this._deps.evSubscription.subscribe(EvCallbackTypes.OFFHOOK_TERM, () => {\n      this.setPhonedIdle();\n    });\n  }\n\n  override onInit() {\n    if (this._deps.evAuth.isFreshLogin) {\n      this.resetOutBoundDialSetting();\n    }\n  }\n\n  @track((that: EvCall) => [\n    trackEvents.outbound,\n    { value: that._deps.evAgentSession.loginType },\n  ])\n  async dialout(phoneNumber: string) {\n    this._deps.presence.setCurrentCallUii('');\n    if (this._deps.evAgentSession.isIntegratedSoftphone) {\n      const integratedSoftphone = this._deps.evIntegratedSoftphone;\n      try {\n        if (integratedSoftphone.sipRegisterSuccess) {\n          await integratedSoftphone.askAudioPermission(false);\n        } else {\n          await this._deps.evAgentSession.configureAgent();\n          await integratedSoftphone.onceRegistered();\n        }\n      } catch (error) {\n        return;\n      }\n    }\n\n    try {\n      const destination = this._checkAndParseNumber(phoneNumber);\n      await this._manualOutdial({\n        destination,\n        callerId: this.callerId,\n        countryId: this.countryId,\n        queueId: this.queueId,\n        ringTime: this.ringTime,\n      });\n    } catch (error) {\n      this.setPhonedIdle();\n    }\n  }\n\n  outdialCancel() {\n    this._deps.evClient.manualOutdialCancel(this._deps.presence.currentCallUii);\n  }\n\n  checkDialoutRingTime() {\n    const dialoutRingTime = Math.min(\n      Math.max(this.formGroup.dialoutRingTime, this.ringTimeLimit.min),\n      this.ringTimeLimit.max,\n    );\n    if (dialoutRingTime !== this.formGroup.dialoutRingTime) {\n      this.setFormGroup({ dialoutRingTime });\n    }\n  }\n\n  checkIsAbleToCall() {\n    if (\n      this.dialoutStatus !== dialoutStatuses.idle ||\n      this._deps.evCallMonitor.isOnCall ||\n      this._deps.evWorkingState.isPendingDisposition\n    ) {\n      console.log('Unavailable to call, have a call or is PendingDisposition.');\n      if (!this._deps.evCallMonitor.isOnCall) {\n        this.setPhonedIdle();\n      }\n      this._deps.alert.danger({\n        message: messageTypes.FAILED_TO_CALL,\n        ttl: 0,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  setDialoutStatus(status: DialoutStatusesType) {\n    this._deps.presence.setDialoutStatus(status);\n  }\n\n  setPhonedIdle() {\n    this.setDialoutStatus(dialoutStatuses.idle);\n  }\n\n  setPhonedDialing() {\n    this.setDialoutStatus(dialoutStatuses.dialing);\n  }\n\n  private _checkAndParseNumber(phoneNumber: string) {\n    try {\n      checkCountryCode(phoneNumber);\n\n      return parseNumber(phoneNumber);\n    } catch (error) {\n      switch (error.type) {\n        case messageTypes.NO_SUPPORT_COUNTRY:\n          this._deps.alert.danger({\n            message: messageTypes.NO_SUPPORT_COUNTRY,\n            ttl: 0,\n          });\n          break;\n        case callErrors.emergencyNumber:\n          this._deps.alert.danger({\n            message: callErrors.emergencyNumber,\n          });\n          break;\n        default:\n          this._deps.alert.danger({\n            message: callErrors.noToNumber,\n          });\n          break;\n      }\n\n      throw error;\n    }\n  }\n\n  private async _manualOutdial({\n    callerId = '',\n    destination,\n    ringTime = DEFAULT_OUTBOUND_SETTING.dialoutRingTime,\n    queueId = '',\n    countryId = 'USA',\n  }: EvClientManualOutdialParams) {\n    let offhookInitResult: EvOffhookInitResponse;\n    if (this.dialoutStatus !== dialoutStatuses.dialing) {\n      this.setPhonedDialing();\n    }\n\n    try {\n      if (!this._deps.evSettings.isOffhook) {\n        // bind init hook first, and then call offhookInit\n        const getOffhookInitResult = this._getOffhookInitResult();\n        this._deps.evClient.offhookInit();\n\n        offhookInitResult = await getOffhookInitResult;\n      }\n\n      if (\n        this._deps.evSettings.isOffhook ||\n        (offhookInitResult && offhookInitResult.status === 'OK')\n      ) {\n        console.log('manualOutdial~~');\n        await this._deps.evClient.manualOutdial({\n          callerId,\n          countryId,\n          destination,\n          queueId,\n          ringTime,\n        });\n      } else {\n        throw new Error(`'offhookInit' exception error`);\n      }\n    } catch (e) {\n      if (!this._deps.evSettings.isManualOffhook) {\n        this._deps.evClient.offhookTerm();\n      }\n\n      throw e;\n    }\n  }\n\n  private _getOffhookInitResult() {\n    return new Promise<EvOffhookInitResponse>((resolve, reject) => {\n      this._deps.presence.evPresenceEvents.once(\n        EvCallbackTypes.OFFHOOK_INIT,\n        (data: EvOffhookInitResponse) => {\n          if (data.status === 'OK') {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        },\n      );\n    });\n  }\n\n  get isInbound() {\n    return this.currentCall?.callType === 'INBOUND';\n  }\n}\n\nexport { EvCall };\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAAA,GAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAUA,IAAAG,MAAA,GAAAH,OAAA;AAEA,IAAAI,cAAA,GAAAJ,OAAA;AAKA,IAAAK,cAAA,GAAAL,OAAA;AACA,IAAAM,iBAAA,GAAAN,OAAA;AACA,IAAAO,YAAA,GAAAP,OAAA;AACA,IAAAQ,YAAA,GAAAR,OAAA;AAAoD,IAAAS,IAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA;AAAA,SAAAC,mBAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,cAAAC,CAAA,GAAAP,CAAA,CAAAK,CAAA,EAAAC,CAAA,GAAAE,CAAA,GAAAD,CAAA,CAAAE,KAAA,WAAAT,CAAA,gBAAAE,CAAA,CAAAF,CAAA,KAAAO,CAAA,CAAAG,IAAA,GAAAT,CAAA,CAAAO,CAAA,IAAAG,OAAA,CAAAC,OAAA,CAAAJ,CAAA,EAAAK,IAAA,CAAAV,CAAA,EAAAC,CAAA;AAAA,SAAAU,kBAAAd,CAAA,6BAAAC,CAAA,SAAAC,CAAA,GAAAa,SAAA,aAAAJ,OAAA,WAAAR,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAL,CAAA,CAAAgB,KAAA,CAAAf,CAAA,EAAAC,CAAA,YAAAe,MAAAjB,CAAA,IAAAD,kBAAA,CAAAM,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,UAAAlB,CAAA,cAAAkB,OAAAlB,CAAA,IAAAD,kBAAA,CAAAM,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,WAAAlB,CAAA,KAAAiB,KAAA;AAAA,SAAAE,QAAAjB,CAAA,EAAAC,CAAA,QAAAF,CAAA,GAAAmB,MAAA,CAAAC,IAAA,CAAAnB,CAAA,OAAAkB,MAAA,CAAAE,qBAAA,QAAAlB,CAAA,GAAAgB,MAAA,CAAAE,qBAAA,CAAApB,CAAA,GAAAC,CAAA,KAAAC,CAAA,GAAAA,CAAA,CAAAmB,MAAA,WAAApB,CAAA,WAAAiB,MAAA,CAAAI,wBAAA,CAAAtB,CAAA,EAAAC,CAAA,EAAAsB,UAAA,OAAAxB,CAAA,CAAAyB,IAAA,CAAAV,KAAA,CAAAf,CAAA,EAAAG,CAAA,YAAAH,CAAA;AAAA,SAAA0B,cAAAzB,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAa,MAAA,EAAAzB,CAAA,UAAAF,CAAA,WAAAc,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAgB,OAAA,CAAAC,MAAA,CAAAnB,CAAA,OAAA4B,OAAA,WAAA1B,CAAA,IAAA2B,eAAA,CAAA5B,CAAA,EAAAC,CAAA,EAAAF,CAAA,CAAAE,CAAA,SAAAiB,MAAA,CAAAW,yBAAA,GAAAX,MAAA,CAAAY,gBAAA,CAAA9B,CAAA,EAAAkB,MAAA,CAAAW,yBAAA,CAAA9B,CAAA,KAAAkB,OAAA,CAAAC,MAAA,CAAAnB,CAAA,GAAA4B,OAAA,WAAA1B,CAAA,IAAAiB,MAAA,CAAAa,cAAA,CAAA/B,CAAA,EAAAC,CAAA,EAAAiB,MAAA,CAAAI,wBAAA,CAAAvB,CAAA,EAAAE,CAAA,iBAAAD,CAAA;AAAA,SAAA4B,gBAAA5B,CAAA,EAAAC,CAAA,EAAAF,CAAA,YAAAE,CAAA,GAAA+B,cAAA,CAAA/B,CAAA,MAAAD,CAAA,GAAAkB,MAAA,CAAAa,cAAA,CAAA/B,CAAA,EAAAC,CAAA,IAAAM,KAAA,EAAAR,CAAA,EAAAwB,UAAA,MAAAU,YAAA,MAAAC,QAAA,UAAAlC,CAAA,CAAAC,CAAA,IAAAF,CAAA,EAAAC,CAAA;AAAA,SAAAmC,2BAAAnC,CAAA,EAAAK,CAAA,EAAAJ,CAAA,EAAAmC,CAAA,IAAAnC,CAAA,IAAAiB,MAAA,CAAAa,cAAA,CAAA/B,CAAA,EAAAK,CAAA,IAAAkB,UAAA,EAAAtB,CAAA,CAAAsB,UAAA,EAAAU,YAAA,EAAAhC,CAAA,CAAAgC,YAAA,EAAAC,QAAA,EAAAjC,CAAA,CAAAiC,QAAA,EAAA3B,KAAA,EAAAN,CAAA,CAAAoC,WAAA,GAAApC,CAAA,CAAAoC,WAAA,CAAAC,IAAA,CAAAF,CAAA;AAAA,SAAAG,gBAAApC,CAAA,EAAAL,CAAA,UAAAK,CAAA,YAAAL,CAAA,aAAA0C,SAAA;AAAA,SAAAC,kBAAAzC,CAAA,EAAAC,CAAA,aAAAF,CAAA,MAAAA,CAAA,GAAAE,CAAA,CAAAyB,MAAA,EAAA3B,CAAA,UAAAG,CAAA,GAAAD,CAAA,CAAAF,CAAA,GAAAG,CAAA,CAAAqB,UAAA,GAAArB,CAAA,CAAAqB,UAAA,QAAArB,CAAA,CAAA+B,YAAA,kBAAA/B,CAAA,KAAAA,CAAA,CAAAgC,QAAA,QAAAhB,MAAA,CAAAa,cAAA,CAAA/B,CAAA,EAAAgC,cAAA,CAAA9B,CAAA,CAAAwC,GAAA,GAAAxC,CAAA;AAAA,SAAAyC,aAAA3C,CAAA,EAAAC,CAAA,EAAAF,CAAA,WAAAE,CAAA,IAAAwC,iBAAA,CAAAzC,CAAA,CAAA4C,SAAA,EAAA3C,CAAA,GAAAF,CAAA,IAAA0C,iBAAA,CAAAzC,CAAA,EAAAD,CAAA,GAAAmB,MAAA,CAAAa,cAAA,CAAA/B,CAAA,iBAAAkC,QAAA,SAAAlC,CAAA;AAAA,SAAAgC,eAAAjC,CAAA,QAAAM,CAAA,GAAAwC,YAAA,CAAA9C,CAAA,gCAAA+C,OAAA,CAAAzC,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAwC,aAAA9C,CAAA,EAAAE,CAAA,oBAAA6C,OAAA,CAAA/C,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAC,CAAA,GAAAD,CAAA,CAAAgD,MAAA,CAAAC,WAAA,kBAAAhD,CAAA,QAAAK,CAAA,GAAAL,CAAA,CAAAsC,IAAA,CAAAvC,CAAA,EAAAE,CAAA,gCAAA6C,OAAA,CAAAzC,CAAA,UAAAA,CAAA,YAAAmC,SAAA,yEAAAvC,CAAA,GAAAgD,MAAA,GAAAC,MAAA,EAAAnD,CAAA;AAAA,SAAAoD,UAAApD,CAAA,EAAAC,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAwC,SAAA,wDAAAzC,CAAA,CAAA6C,SAAA,GAAA1B,MAAA,CAAAkC,MAAA,CAAApD,CAAA,IAAAA,CAAA,CAAA4C,SAAA,IAAAS,WAAA,IAAA9C,KAAA,EAAAR,CAAA,EAAAmC,QAAA,MAAAD,YAAA,WAAAf,MAAA,CAAAa,cAAA,CAAAhC,CAAA,iBAAAmC,QAAA,SAAAlC,CAAA,IAAAsD,eAAA,CAAAvD,CAAA,EAAAC,CAAA;AAAA,SAAAsD,gBAAAvD,CAAA,EAAAC,CAAA,WAAAsD,eAAA,GAAApC,MAAA,CAAAqC,cAAA,GAAArC,MAAA,CAAAqC,cAAA,CAAAC,IAAA,eAAAzD,CAAA,EAAAC,CAAA,WAAAD,CAAA,CAAA0D,SAAA,GAAAzD,CAAA,EAAAD,CAAA,KAAAuD,eAAA,CAAAvD,CAAA,EAAAC,CAAA;AAAA,SAAA0D,aAAA3D,CAAA,QAAAE,CAAA,GAAA0D,yBAAA,6BAAA3D,CAAA,EAAAE,CAAA,GAAA0D,eAAA,CAAA7D,CAAA,OAAAE,CAAA,QAAA4D,CAAA,GAAAD,eAAA,OAAAP,WAAA,EAAArD,CAAA,GAAA8D,OAAA,CAAAC,SAAA,CAAA7D,CAAA,EAAAW,SAAA,EAAAgD,CAAA,UAAA7D,CAAA,GAAAE,CAAA,CAAAY,KAAA,OAAAD,SAAA,UAAAmD,0BAAA,OAAAhE,CAAA;AAAA,SAAAgE,2BAAAjE,CAAA,EAAAC,CAAA,QAAAA,CAAA,iBAAA8C,OAAA,CAAA9C,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAwC,SAAA,qEAAAyB,sBAAA,CAAAlE,CAAA;AAAA,SAAAkE,uBAAAjE,CAAA,mBAAAA,CAAA,YAAAkE,cAAA,sEAAAlE,CAAA;AAAA,SAAA2D,0BAAA,cAAA5D,CAAA,IAAAoE,OAAA,CAAAvB,SAAA,CAAAwB,OAAA,CAAA9B,IAAA,CAAAwB,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAApE,CAAA,aAAA4D,yBAAA,YAAAA,0BAAA,aAAA5D,CAAA;AAAA,SAAA6D,gBAAA7D,CAAA,WAAA6D,eAAA,GAAA1C,MAAA,CAAAqC,cAAA,GAAArC,MAAA,CAAAmD,cAAA,CAAAb,IAAA,eAAAzD,CAAA,WAAAA,CAAA,CAAA0D,SAAA,IAAAvC,MAAA,CAAAmD,cAAA,CAAAtE,CAAA,MAAA6D,eAAA,CAAA7D,CAAA;AAAA,SAAAuE,0BAAAjE,CAAA,EAAAL,CAAA,EAAAC,CAAA,EAAAH,CAAA,EAAAsC,CAAA,QAAAjC,CAAA,cAAAe,MAAA,CAAAC,IAAA,CAAArB,CAAA,EAAA6B,OAAA,WAAAtB,CAAA,IAAAF,CAAA,CAAAE,CAAA,IAAAP,CAAA,CAAAO,CAAA,OAAAF,CAAA,CAAAoB,UAAA,KAAApB,CAAA,CAAAoB,UAAA,EAAApB,CAAA,CAAA8B,YAAA,KAAA9B,CAAA,CAAA8B,YAAA,cAAA9B,CAAA,IAAAA,CAAA,CAAAkC,WAAA,MAAAlC,CAAA,CAAA+B,QAAA,QAAA/B,CAAA,GAAAF,CAAA,CAAAsE,KAAA,GAAAC,OAAA,GAAAC,MAAA,WAAAxE,CAAA,EAAAH,CAAA,WAAAA,CAAA,CAAAO,CAAA,EAAAL,CAAA,EAAAC,CAAA,KAAAA,CAAA,KAAAE,CAAA,GAAAiC,CAAA,eAAAjC,CAAA,CAAAkC,WAAA,KAAAlC,CAAA,CAAAI,KAAA,GAAAJ,CAAA,CAAAkC,WAAA,GAAAlC,CAAA,CAAAkC,WAAA,CAAAC,IAAA,CAAAF,CAAA,YAAAjC,CAAA,CAAAkC,WAAA,uBAAAlC,CAAA,CAAAkC,WAAA,IAAAnB,MAAA,CAAAa,cAAA,CAAA1B,CAAA,EAAAL,CAAA,EAAAG,CAAA,WAAAA,CAAA;AAAA,SAAAuE,0BAAAzE,CAAA,EAAAD,CAAA,UAAA2E,KAAA;AAIpD,IAAMC,wBAAwB,GAAG;EAC/BC,eAAe,EAAE,IAAI;EACrBC,cAAc,EAAE,IAAI;EACpBC,gBAAgB,EAAE,KAAK;EACvBC,eAAe,EAAE;AACnB,CAAC;AAAC,IAoBIC,MAAM,IAAA/F,IAAA,GAlBX,IAAAgG,UAAM,EAAC;EACNC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,CACJ,OAAO,EACP,QAAQ,EACR,SAAS,EACT,UAAU,EACV,UAAU,EACV,YAAY,EACZ,eAAe,EACf,gBAAgB,EAChB,gBAAgB,EAChB,uBAAuB,EACvB;IAAEC,GAAG,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACrC;IAAED,GAAG,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACxC;IAAED,GAAG,EAAE,gBAAgB;IAAEC,QAAQ,EAAE;EAAK,CAAC;AAE7C,CAAC,CAAC,EAAAnG,KAAA,GAkEC,IAAAoG,cAAQ,EAAC,UAACC,IAAY;EAAA,OAAK,CAC1BA,IAAI,CAACC,cAAc,EACnBD,IAAI,CAACE,KAAK,CAACC,aAAa,CAACC,YAAY,CACtC;AAAA,EAAC,EAAAxG,KAAA,GA4CD,IAAAmG,cAAQ,EAAC,UAACC,IAAY;EAAA,OAAK,CAACA,IAAI,CAACE,KAAK,CAACG,MAAM,CAACC,UAAU,EAAEN,IAAI,CAACO,KAAK,CAAC;AAAA,EAAC,EAAA1G,KAAA,GAkDtE,IAAA2G,WAAK,EAAC,UAACR,IAAY;EAAA,OAAK,CACvBS,wBAAW,CAACC,QAAQ,EACpB;IAAE3F,KAAK,EAAEiF,IAAI,CAACE,KAAK,CAACS,cAAc,CAACC;EAAU,CAAC,CAC/C;AAAA,EAAC,EAAAlH,IAAA,CAAAI,MAAA,IAAAC,OAAA,0BAAA8G,UAAA;EAAAlD,SAAA,CAAA8B,MAAA,EAAAoB,UAAA;EAAA,IAAAC,MAAA,GAAA5C,YAAA,CAAAuB,MAAA;EA5JF,SAAAA,OAAYG,IAAU,EAAE;IAAA,IAAAmB,KAAA;IAAAhE,eAAA,OAAA0C,MAAA;IACtBsB,KAAA,GAAAD,MAAA,CAAAhE,IAAA,OAAM;MACJ8C,IAAI,EAAJA,IAAI;MACJoB,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE;IACd,CAAC;IAbH;IAAAF,KAAA,CACAd,cAAc;IAAAc,KAAA,CAEdG,aAAa,GAAG;MACdC,GAAG,EAAE,EAAE;MACPC,GAAG,EAAE;IACP,CAAC;IAAAzE,0BAAA,CAAAoE,KAAA,qBAAA/G,WAAA,EAAAyE,sBAAA,CAAAsC,KAAA;IAAApE,0BAAA,CAAAoE,KAAA,oBAAA9G,YAAA,EAAAwE,sBAAA,CAAAsC,KAAA;IAAApE,0BAAA,CAAAoE,KAAA,sBAAA7G,YAAA,EAAAuE,sBAAA,CAAAsC,KAAA;IAAApE,0BAAA,CAAAoE,KAAA,qBAAA5G,YAAA,EAAAsE,sBAAA,CAAAsC,KAAA;IAAApE,0BAAA,CAAAoE,KAAA,eAAA3G,YAAA,EAAAqE,sBAAA,CAAAsC,KAAA;IAAA,OAAAA,KAAA;EAQD;EAAC5D,YAAA,CAAAsC,MAAA;IAAAvC,GAAA;IAAAnC,KAAA,WAAAsG,aA4DYC,IAAiC,EAAE;MAC9C,IAAI,CAACC,SAAS,GAAAtF,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAACsF,SAAS,GAAKD,IAAI,CAAE;IACjD;EAAC;IAAApE,GAAA;IAAAnC,KAAA,WAAAyG,SAAA,EAGU;MACT,IAAI,CAACnC,eAAe,GAAG,IAAI,CAACkC,SAAS,CAAClC,eAAe;MACrD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACiC,SAAS,CAACjC,cAAc;MACnD,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACgC,SAAS,CAAChC,gBAAgB;MACvD,IAAI,CAACC,eAAe,GAAG,IAAI,CAAC+B,SAAS,CAAC/B,eAAe;IACvD;EAAC;IAAAtC,GAAA;IAAAnC,KAAA,WAAA0G,yBAAA,EAG0B;MACzB,IAAI,CAACpC,eAAe,GAAGD,wBAAwB,CAACC,eAAe;MAC/D,IAAI,CAACC,cAAc,GAAGF,wBAAwB,CAACE,cAAc;MAC7D,IAAI,CAACC,gBAAgB,GAAGH,wBAAwB,CAACG,gBAAgB;MACjE,IAAI,CAACC,eAAe,GAAGJ,wBAAwB,CAACI,eAAe;MAC/D,IAAMkC,eAAe,GAAGC,QAAQ,CAC9B,IAAI,CAACzB,KAAK,CAACG,MAAM,CAACuB,6BAA6B,EAC/C,EACF,CAAC;MACD,IAAI,CAAClE,MAAM,CAACmE,KAAK,CAACH,eAAe,CAAC,EAAE;QAClC,IAAI,CAACH,SAAS,CAAC/B,eAAe,GAAGkC,eAAe;QAChD,IAAI,CAAClC,eAAe,GAAGkC,eAAe;MACxC;IACF;EAAC;IAAAxE,GAAA;IAAAnC,KAAA,WAAA+G,UAAA,EAEW;MACV,IAAI,CAACT,YAAY,CAAC;QAChBhC,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCC,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvCC,eAAe,EAAE,IAAI,CAACA;MACxB,CAAC,CAAC;IACJ;EAAC;IAAAtC,GAAA;IAAAnC,KAAA,WAAAgH,WAAA,EAOqB;MAAA,IAAAC,MAAA;MACpB,IAAAC,WAAK,EACH,IAAI,EACJ;QAAA,OAAMD,MAAI,CAACE,gBAAgB;MAAA,GAC3B,UAACA,gBAAgB,EAAK;QACpB,IAAIA,gBAAgB,EAAE;UACpBF,MAAI,CAACF,SAAS,CAAC,CAAC;QAClB;MACF,CACF,CAAC;MAED,IAAI,CAAC5B,KAAK,CAACC,aAAa,CAACgC,WAAW,CAAC,YAAM;QACzCH,MAAI,CAACI,gBAAgB,CAACC,8BAAe,CAACC,IAAI,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACpC,KAAK,CAACqC,cAAc,CAACC,SAAS,CACjCC,8BAAe,CAACC,oBAAoB,EACpC,UAACpB,IAAI,EAAK;QACR,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,UAAU,CAAC,CAACqB,QAAQ,CAACrB,IAAI,CAACsB,SAAS,CAAC,EAAE;UAC9D;UACA;UACA,IAAI,CAACZ,MAAI,CAAC9B,KAAK,CAAC2C,UAAU,CAACC,eAAe,IAAId,MAAI,CAACe,YAAY,EAAE;YAC/Df,MAAI,CAAC9B,KAAK,CAAC8C,QAAQ,CAACC,WAAW,CAAC,CAAC;UACnC;UACAjB,MAAI,CAACkB,aAAa,CAAC,CAAC;UACpB,IAAI5B,IAAI,CAACsB,SAAS,KAAK,WAAW,EAAE;YAClCZ,MAAI,CAAC9B,KAAK,CAACiD,KAAK,CAACC,IAAI,CAAC;cACpBC,OAAO,EAAEC,mBAAY,CAACC;YACxB,CAAC,CAAC;UACJ;QACF;MACF,CACF,CAAC;MAED,IAAI,CAACrD,KAAK,CAACqC,cAAc,CAACC,SAAS,CAACC,8BAAe,CAACe,YAAY,EAAE,YAAM;QACtExB,MAAI,CAACkB,aAAa,CAAC,CAAC;MACtB,CAAC,CAAC;IACJ;EAAC;IAAAhG,GAAA;IAAAnC,KAAA,WAAA0I,OAAA,EAEiB;MAChB,IAAI,IAAI,CAACvD,KAAK,CAACG,MAAM,CAACqD,YAAY,EAAE;QAClC,IAAI,CAACjC,wBAAwB,CAAC,CAAC;MACjC;IACF;EAAC;IAAAvE,GAAA;IAAAnC,KAAA;MAAA,IAAA4I,QAAA,GAAAvI,iBAAA,eAAAwI,kBAAA,CAAAC,IAAA,UAAAC,QAMaC,WAAmB;QAAA,IAAAC,mBAAA,EAAAC,WAAA;QAAA,OAAAL,kBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA;YAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBAC/B,IAAI,CAACpE,KAAK,CAACqE,QAAQ,CAACC,iBAAiB,CAAC,EAAE,CAAC;gBAAC,KACtC,IAAI,CAACtE,KAAK,CAACS,cAAc,CAAC8D,qBAAqB;kBAAAL,QAAA,CAAAE,IAAA;kBAAA;gBAAA;gBAC3CN,mBAAmB,GAAG,IAAI,CAAC9D,KAAK,CAACwE,qBAAqB;gBAAAN,QAAA,CAAAC,IAAA;gBAAA,KAEtDL,mBAAmB,CAACW,kBAAkB;kBAAAP,QAAA,CAAAE,IAAA;kBAAA;gBAAA;gBAAAF,QAAA,CAAAE,IAAA;gBAAA,OAClCN,mBAAmB,CAACY,kBAAkB,CAAC,KAAK,CAAC;cAAA;gBAAAR,QAAA,CAAAE,IAAA;gBAAA;cAAA;gBAAAF,QAAA,CAAAE,IAAA;gBAAA,OAE7C,IAAI,CAACpE,KAAK,CAACS,cAAc,CAACkE,cAAc,CAAC,CAAC;cAAA;gBAAAT,QAAA,CAAAE,IAAA;gBAAA,OAC1CN,mBAAmB,CAACc,cAAc,CAAC,CAAC;cAAA;gBAAAV,QAAA,CAAAE,IAAA;gBAAA;cAAA;gBAAAF,QAAA,CAAAC,IAAA;gBAAAD,QAAA,CAAAW,EAAA,GAAAX,QAAA;gBAAA,OAAAA,QAAA,CAAAY,MAAA;cAAA;gBAAAZ,QAAA,CAAAC,IAAA;gBAQxCJ,WAAW,GAAG,IAAI,CAACgB,oBAAoB,CAAClB,WAAW,CAAC;gBAAAK,QAAA,CAAAE,IAAA;gBAAA,OACpD,IAAI,CAACY,cAAc,CAAC;kBACxBjB,WAAW,EAAXA,WAAW;kBACXkB,QAAQ,EAAE,IAAI,CAACA,QAAQ;kBACvBC,SAAS,EAAE,IAAI,CAACA,SAAS;kBACzBC,OAAO,EAAE,IAAI,CAACA,OAAO;kBACrBC,QAAQ,EAAE,IAAI,CAACA;gBACjB,CAAC,CAAC;cAAA;gBAAAlB,QAAA,CAAAE,IAAA;gBAAA;cAAA;gBAAAF,QAAA,CAAAC,IAAA;gBAAAD,QAAA,CAAAmB,EAAA,GAAAnB,QAAA;gBAEF,IAAI,CAAClB,aAAa,CAAC,CAAC;cAAC;cAAA;gBAAA,OAAAkB,QAAA,CAAAoB,IAAA;YAAA;UAAA;QAAA,GAAA1B,OAAA;MAAA;MAAA,SAAA2B,QAAAC,EAAA;QAAA,OAAA/B,QAAA,CAAArI,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAoK,OAAA;IAAA;EAAA;IAAAvI,GAAA;IAAAnC,KAAA,WAAA4K,cAAA,EAIT;MACd,IAAI,CAACzF,KAAK,CAAC8C,QAAQ,CAAC4C,mBAAmB,CAAC,IAAI,CAAC1F,KAAK,CAACqE,QAAQ,CAACsB,cAAc,CAAC;IAC7E;EAAC;IAAA3I,GAAA;IAAAnC,KAAA,WAAA+K,qBAAA,EAEsB;MACrB,IAAMtG,eAAe,GAAGuG,IAAI,CAAC5E,GAAG,CAC9B4E,IAAI,CAAC3E,GAAG,CAAC,IAAI,CAACG,SAAS,CAAC/B,eAAe,EAAE,IAAI,CAAC0B,aAAa,CAACC,GAAG,CAAC,EAChE,IAAI,CAACD,aAAa,CAACE,GACrB,CAAC;MACD,IAAI5B,eAAe,KAAK,IAAI,CAAC+B,SAAS,CAAC/B,eAAe,EAAE;QACtD,IAAI,CAAC6B,YAAY,CAAC;UAAE7B,eAAe,EAAfA;QAAgB,CAAC,CAAC;MACxC;IACF;EAAC;IAAAtC,GAAA;IAAAnC,KAAA,WAAAiL,kBAAA,EAEmB;MAClB,IACE,IAAI,CAACC,aAAa,KAAK5D,8BAAe,CAACC,IAAI,IAC3C,IAAI,CAACpC,KAAK,CAACC,aAAa,CAAC+F,QAAQ,IACjC,IAAI,CAAChG,KAAK,CAACiG,cAAc,CAACC,oBAAoB,EAC9C;QACAC,OAAO,CAACC,GAAG,CAAC,4DAA4D,CAAC;QACzE,IAAI,CAAC,IAAI,CAACpG,KAAK,CAACC,aAAa,CAAC+F,QAAQ,EAAE;UACtC,IAAI,CAAChD,aAAa,CAAC,CAAC;QACtB;QACA,IAAI,CAAChD,KAAK,CAACiD,KAAK,CAACoD,MAAM,CAAC;UACtBlD,OAAO,EAAEC,mBAAY,CAACkD,cAAc;UACpCC,GAAG,EAAE;QACP,CAAC,CAAC;QACF,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb;EAAC;IAAAvJ,GAAA;IAAAnC,KAAA,WAAAqH,iBAEgBsE,MAA2B,EAAE;MAC5C,IAAI,CAACxG,KAAK,CAACqE,QAAQ,CAACnC,gBAAgB,CAACsE,MAAM,CAAC;IAC9C;EAAC;IAAAxJ,GAAA;IAAAnC,KAAA,WAAAmI,cAAA,EAEe;MACd,IAAI,CAACd,gBAAgB,CAACC,8BAAe,CAACC,IAAI,CAAC;IAC7C;EAAC;IAAApF,GAAA;IAAAnC,KAAA,WAAA4L,iBAAA,EAEkB;MACjB,IAAI,CAACvE,gBAAgB,CAACC,8BAAe,CAACuE,OAAO,CAAC;IAChD;EAAC;IAAA1J,GAAA;IAAAnC,KAAA,WAAAkK,qBAE4BlB,WAAmB,EAAE;MAChD,IAAI;QACF,IAAA8C,kCAAgB,EAAC9C,WAAW,CAAC;QAE7B,OAAO,IAAA+C,wBAAW,EAAC/C,WAAW,CAAC;MACjC,CAAC,CAAC,OAAOgD,KAAK,EAAE;QACd,QAAQA,KAAK,CAACC,IAAI;UAChB,KAAK1D,mBAAY,CAAC2D,kBAAkB;YAClC,IAAI,CAAC/G,KAAK,CAACiD,KAAK,CAACoD,MAAM,CAAC;cACtBlD,OAAO,EAAEC,mBAAY,CAAC2D,kBAAkB;cACxCR,GAAG,EAAE;YACP,CAAC,CAAC;YACF;UACF,KAAKS,gBAAU,CAACC,eAAe;YAC7B,IAAI,CAACjH,KAAK,CAACiD,KAAK,CAACoD,MAAM,CAAC;cACtBlD,OAAO,EAAE6D,gBAAU,CAACC;YACtB,CAAC,CAAC;YACF;UACF;YACE,IAAI,CAACjH,KAAK,CAACiD,KAAK,CAACoD,MAAM,CAAC;cACtBlD,OAAO,EAAE6D,gBAAU,CAACE;YACtB,CAAC,CAAC;YACF;QACJ;QAEA,MAAML,KAAK;MACb;IACF;EAAC;IAAA7J,GAAA;IAAAnC,KAAA;MAAA,IAAAsM,eAAA,GAAAjM,iBAAA,eAAAwI,kBAAA,CAAAC,IAAA,UAAAyD,SAAAC,IAAA;QAAA,IAAAC,aAAA,EAAArC,QAAA,EAAAlB,WAAA,EAAAwD,aAAA,EAAAnC,QAAA,EAAAoC,YAAA,EAAArC,OAAA,EAAAsC,cAAA,EAAAvC,SAAA,EAAAwC,iBAAA,EAAAC,oBAAA;QAAA,OAAAjE,kBAAA,CAAAM,IAAA,UAAA4D,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAA1D,IAAA,GAAA0D,SAAA,CAAAzD,IAAA;cAAA;gBAAAkD,aAAA,GAAAD,IAAA,CAGCpC,QAAQ,EAARA,QAAQ,GAAAqC,aAAA,cAAG,EAAE,GAAAA,aAAA,EACbvD,WAAW,GAAAsD,IAAA,CAAXtD,WAAW,EAAAwD,aAAA,GAAAF,IAAA,CACXjC,QAAQ,EAARA,QAAQ,GAAAmC,aAAA,cAAGrI,wBAAwB,CAACI,eAAe,GAAAiI,aAAA,EAAAC,YAAA,GAAAH,IAAA,CACnDlC,OAAO,EAAPA,OAAO,GAAAqC,YAAA,cAAG,EAAE,GAAAA,YAAA,EAAAC,cAAA,GAAAJ,IAAA,CACZnC,SAAS,EAATA,SAAS,GAAAuC,cAAA,cAAG,KAAK,GAAAA,cAAA;gBAGjB,IAAI,IAAI,CAAC1B,aAAa,KAAK5D,8BAAe,CAACuE,OAAO,EAAE;kBAClD,IAAI,CAACD,gBAAgB,CAAC,CAAC;gBACzB;gBAACoB,SAAA,CAAA1D,IAAA;gBAAA,IAGM,IAAI,CAACnE,KAAK,CAAC2C,UAAU,CAACmF,SAAS;kBAAAD,SAAA,CAAAzD,IAAA;kBAAA;gBAAA;gBAClC;gBACMuD,oBAAoB,GAAG,IAAI,CAACI,qBAAqB,CAAC,CAAC;gBACzD,IAAI,CAAC/H,KAAK,CAAC8C,QAAQ,CAACkF,WAAW,CAAC,CAAC;gBAACH,SAAA,CAAAzD,IAAA;gBAAA,OAERuD,oBAAoB;cAAA;gBAA9CD,iBAAiB,GAAAG,SAAA,CAAAI,IAAA;cAAA;gBAAA,MAIjB,IAAI,CAACjI,KAAK,CAAC2C,UAAU,CAACmF,SAAS,IAC9BJ,iBAAiB,IAAIA,iBAAiB,CAAClB,MAAM,KAAK,IAAK;kBAAAqB,SAAA,CAAAzD,IAAA;kBAAA;gBAAA;gBAExD+B,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;gBAACyB,SAAA,CAAAzD,IAAA;gBAAA,OACzB,IAAI,CAACpE,KAAK,CAAC8C,QAAQ,CAACoF,aAAa,CAAC;kBACtCjD,QAAQ,EAARA,QAAQ;kBACRC,SAAS,EAATA,SAAS;kBACTnB,WAAW,EAAXA,WAAW;kBACXoB,OAAO,EAAPA,OAAO;kBACPC,QAAQ,EAARA;gBACF,CAAC,CAAC;cAAA;gBAAAyC,SAAA,CAAAzD,IAAA;gBAAA;cAAA;gBAAA,MAEI,IAAInF,KAAK,gCAAgC,CAAC;cAAA;gBAAA4I,SAAA,CAAAzD,IAAA;gBAAA;cAAA;gBAAAyD,SAAA,CAAA1D,IAAA;gBAAA0D,SAAA,CAAAhD,EAAA,GAAAgD,SAAA;gBAGlD,IAAI,CAAC,IAAI,CAAC7H,KAAK,CAAC2C,UAAU,CAACC,eAAe,EAAE;kBAC1C,IAAI,CAAC5C,KAAK,CAAC8C,QAAQ,CAACC,WAAW,CAAC,CAAC;gBACnC;gBAAC,MAAA8E,SAAA,CAAAhD,EAAA;cAAA;cAAA;gBAAA,OAAAgD,SAAA,CAAAvC,IAAA;YAAA;UAAA;QAAA,GAAA8B,QAAA;MAAA;MAAA,SAAApC,eAAAmD,GAAA;QAAA,OAAAhB,eAAA,CAAA/L,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA6J,cAAA;IAAA;EAAA;IAAAhI,GAAA;IAAAnC,KAAA,WAAAkN,sBAAA,EAM2B;MAAA,IAAAK,MAAA;MAC9B,OAAO,IAAIrN,OAAO,CAAwB,UAACC,OAAO,EAAEqN,MAAM,EAAK;QAC7DD,MAAI,CAACpI,KAAK,CAACqE,QAAQ,CAACiE,gBAAgB,CAACC,IAAI,CACvChG,8BAAe,CAACiG,YAAY,EAC5B,UAACpH,IAA2B,EAAK;UAC/B,IAAIA,IAAI,CAACoF,MAAM,KAAK,IAAI,EAAE;YACxBxL,OAAO,CAACoG,IAAI,CAAC;UACf,CAAC,MAAM;YACLiH,MAAM,CAACjH,IAAI,CAAC;UACd;QACF,CACF,CAAC;MACH,CAAC,CAAC;IACJ;EAAC;IAAApE,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAnSc;MACb,OAAO,IAAI,CAACnJ,eAAe;IAC7B;EAAC;IAAAtC,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAEa;MACZ,OAAO,IAAI,CAACrJ,cAAc,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAACA,cAAc;IAClE;EAAC;IAAApC,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAEc;MACb,OAAO,IAAI,CAACtJ,eAAe,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAACA,eAAe;IACpE;EAAC;IAAAnC,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAEe;MACd,OAAO,IAAI,CAACpJ,gBAAgB;IAC9B;EAAC;IAAArC,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAEmB;MAClB,OAAO,IAAI,CAACzI,KAAK,CAACqE,QAAQ,CAAC0B,aAAa;IAC1C;EAAC;IAAA/I,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAEe;MACd,OAAO,IAAI,CAACzI,KAAK,CAACqE,QAAQ,CAAC0B,aAAa,KAAK,SAAS;IACxD;EAAC;IAAA/I,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAE0B;MACzB,OAAO,CAAC,IAAI,CAACzI,KAAK,CAAC0I,UAAU,IAAI,IAAI,CAAC1I,KAAK,CAAC0I,UAAU,CAACC,MAAM;IAC/D;EAAC;IAAA3L,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAMiB;MAChB,IAAM7L,IAAI,GAAG,IAAI,CAACoD,KAAK,CAACC,aAAa,CAACC,YAAY,CAAC,IAAI,CAACH,cAAc,CAAC;MACvE,OAAO,IAAI,CAACA,cAAc,IAAInD,IAAI,GAAGA,IAAI,GAAG,IAAI;IAClD;EAAC;IAAAI,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAyCsB;MACrB,OAAO,IAAI,CAACpI,KAAK,IAAI,IAAI,CAACL,KAAK,CAACG,MAAM,CAACC,UAAU;IACnD;EAAC;IAAApD,GAAA;IAAAyL,GAAA,WAAAA,IAAA,EAuNe;MAAA,IAAAG,iBAAA;MACd,OAAO,EAAAA,iBAAA,OAAI,CAACC,WAAW,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,QAAQ,MAAK,SAAS;IACjD;EAAC;EAAA,OAAAvJ,MAAA;AAAA,EA5UkBwJ,gBAAU,IAAAjP,WAAA,GAAA8E,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,sBAiB5B8L,aAAO,EACPC,WAAK;EAAA1M,YAAA;EAAAV,UAAA;EAAAW,QAAA;EAAAG,WAAA,WAAAA,YAAA;IAAA,OACYuC,wBAAwB,CAACC,eAAe;EAAA;AAAA,IAAApF,YAAA,GAAA6E,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,qBAEzD8L,aAAO,EACPC,WAAK;EAAA1M,YAAA;EAAAV,UAAA;EAAAW,QAAA;EAAAG,WAAA,WAAAA,YAAA;IAAA,OACWuC,wBAAwB,CAACE,cAAc;EAAA;AAAA,IAAApF,YAAA,GAAA4E,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,uBAEvD8L,aAAO,EACPC,WAAK;EAAA1M,YAAA;EAAAV,UAAA;EAAAW,QAAA;EAAAG,WAAA,WAAAA,YAAA;IAAA,OACauC,wBAAwB,CAACG,gBAAgB;EAAA;AAAA,IAAApF,YAAA,GAAA2E,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,sBAE3D8L,aAAO,EACPC,WAAK;EAAA1M,YAAA;EAAAV,UAAA;EAAAW,QAAA;EAAAG,WAAA,WAAAA,YAAA;IAAA,OACoBuC,wBAAwB,CAACI,eAAe;EAAA;AAAA,IAAApF,YAAA,GAAA0E,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,gBAEjE8L,aAAO,EACPC,WAAK;EAAA1M,YAAA;EAAAV,UAAA;EAAAW,QAAA;EAAAG,WAAA,WAAAA,YAAA;IAAA,OAC0BuC,wBAAwB;EAAA;AAAA,IAAAN,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,kBAAAzD,KAAA,GAAA+B,MAAA,CAAAI,wBAAA,CAAA/B,OAAA,CAAAqD,SAAA,kBAAArD,OAAA,CAAAqD,SAAA,GAAA0B,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,mBAuCvDgM,YAAM,GAAA1N,MAAA,CAAAI,wBAAA,CAAA/B,OAAA,CAAAqD,SAAA,mBAAArD,OAAA,CAAAqD,SAAA,GAAA0B,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,eAKNgM,YAAM,GAAA1N,MAAA,CAAAI,wBAAA,CAAA/B,OAAA,CAAAqD,SAAA,eAAArD,OAAA,CAAAqD,SAAA,GAAA0B,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,+BAQNgM,YAAM,GAAA1N,MAAA,CAAAI,wBAAA,CAAA/B,OAAA,CAAAqD,SAAA,+BAAArD,OAAA,CAAAqD,SAAA,GAAA0B,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,uBAAAxD,KAAA,GAAA8B,MAAA,CAAAI,wBAAA,CAAA/B,OAAA,CAAAqD,SAAA,uBAAArD,OAAA,CAAAqD,SAAA,GAAA0B,yBAAA,CAAA/E,OAAA,CAAAqD,SAAA,cAAAvD,KAAA,GAAA6B,MAAA,CAAAI,wBAAA,CAAA/B,OAAA,CAAAqD,SAAA,cAAArD,OAAA,CAAAqD,SAAA,IAAArD,OAAA,MAAAD,MAAA;AAAAuP,OAAA,CAAA5J,MAAA,GAAAA,MAAA","ignoreList":[]}