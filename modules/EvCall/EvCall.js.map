{"version":3,"file":"EvCall.js","names":["_di","require","_Call","_core","_enums","_dialoutStatus","_checkCountryCode","_callbackTypes","_parseNumber","_trackEvents","_dec","_dec2","_dec3","_dec4","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","_toPropertyKey","configurable","writable","_initializerDefineProperty","property","descriptor","context","initializer","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","desc","slice","reverse","reduce","decorator","_initializerWarningHelper","Error","DEFAULT_OUTBOUND_SETTING","dialoutCallerId","dialoutQueueId","dialoutCountryId","dialoutRingTime","EvCall","Module","name","deps","dep","optional","computed","that","activityCallId","_deps","evCallMonitor","callsMapping","evAuth","isEvLogged","ready","track","trackEvents","outbound","evAgentSession","loginType","_RcModuleV","_super","_this","enableCache","storageKey","ringTimeLimit","min","max","setFormGroup","data","formGroup","saveForm","resetOutBoundDialSetting","defaultRingTime","parseInt","outboundManualDefaultRingtime","isNaN","resetForm","onInitOnce","_this2","watch","isOnLoginSuccess","onCallEnded","setDialoutStatus","dialoutStatuses","idle","evSubscription","subscribe","EvCallbackTypes","TCPA_SAFE_LEAD_STATE","includes","leadState","evSettings","isManualOffhook","_isTabActive","evClient","offhookTerm","setPhonedIdle","alert","message","messageTypes","INTERCEPT","OFFHOOK_TERM","onInit","isFreshLogin","_dialout","regeneratorRuntime","mark","_callee","phoneNumber","integratedSoftphone","destination","wrap","_callee$","_context","prev","next","presence","setCurrentCallUii","isIntegratedSoftphone","evIntegratedSoftphone","sipRegisterSuccess","askAudioPermission","configureAgent","onceRegistered","t0","abrupt","_checkAndParseNumber","_manualOutdial","callerId","countryId","queueId","ringTime","t1","stop","dialout","_x","outdialCancel","manualOutdialCancel","currentCallUii","checkDialoutRingTime","Math","checkIsAbleToCall","dialoutStatus","isOnCall","evWorkingState","isPendingDisposition","console","log","danger","FAILED_TO_CALL","ttl","status","setPhonedDialing","dialing","checkCountryCode","parseNumber","type","NO_SUPPORT_COUNTRY","callErrors","emergencyNumber","noToNumber","_manualOutdial2","_callee2","_ref","_ref$callerId","_ref$ringTime","_ref$queueId","_ref$countryId","offhookInitResult","getOffhookInitResult","_callee2$","_context2","isOffhook","_getOffhookInitResult","offhookInit","sent","manualOutdial","_x2","_this3","evPresenceEvents","once","OFFHOOK_INIT","get","tabManager","active","_this$currentCall","currentCall","callType","RcModuleV2","storage","state","action","exports"],"sources":["modules/EvCall/EvCall.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { callErrors } from '@ringcentral-integration/commons/modules/Call';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  track,\n  watch,\n} from '@ringcentral-integration/core';\n\nimport { messageTypes } from '../../enums';\nimport type { DialoutStatusesType } from '../../enums/dialoutStatus';\nimport { dialoutStatuses } from '../../enums/dialoutStatus';\nimport { checkCountryCode } from '../../lib/checkCountryCode';\nimport type {\n  EvClientManualOutdialParams,\n  EvOffhookInitResponse,\n} from '../../lib/EvClient';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums/callbackTypes';\nimport { parseNumber } from '../../lib/parseNumber';\nimport { trackEvents } from '../../lib/trackEvents';\nimport type { Call, Deps, State } from './EvCall.interface';\n\nconst DEFAULT_OUTBOUND_SETTING = {\n  dialoutCallerId: '-1',\n  dialoutQueueId: '-1',\n  dialoutCountryId: 'USA',\n  dialoutRingTime: 30,\n};\n\n@Module({\n  name: 'EvCall',\n  deps: [\n    'Alert',\n    'EvAuth',\n    'Storage',\n    'EvClient',\n    'Presence',\n    'EvSettings',\n    'EvCallMonitor',\n    'EvSubscription',\n    'EvAgentSession',\n    'EvIntegratedSoftphone',\n    { dep: 'TabManager', optional: true },\n    { dep: 'EvCallOptions', optional: true },\n    { dep: 'EvWorkingState', optional: true },\n  ],\n})\nclass EvCall extends RcModuleV2<Deps> implements Call {\n  /** this id is get from route, set from EvActivityCallUI */\n  activityCallId: string;\n\n  ringTimeLimit = {\n    min: 20,\n    max: 120,\n  };\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvCall',\n    });\n  }\n\n  @storage\n  @state\n  dialoutCallerId = DEFAULT_OUTBOUND_SETTING.dialoutCallerId;\n\n  @storage\n  @state\n  dialoutQueueId = DEFAULT_OUTBOUND_SETTING.dialoutQueueId;\n\n  @storage\n  @state\n  dialoutCountryId = DEFAULT_OUTBOUND_SETTING.dialoutCountryId;\n\n  @storage\n  @state\n  dialoutRingTime: number = DEFAULT_OUTBOUND_SETTING.dialoutRingTime;\n\n  @storage\n  @state\n  formGroup: State['formGroup'] = DEFAULT_OUTBOUND_SETTING;\n\n  get ringTime() {\n    return this.dialoutRingTime;\n  }\n\n  get queueId() {\n    return this.dialoutQueueId === '-1' ? null : this.dialoutQueueId;\n  }\n\n  get callerId() {\n    return this.dialoutCallerId === '-1' ? null : this.dialoutCallerId;\n  }\n\n  get countryId() {\n    return this.dialoutCountryId;\n  }\n\n  get dialoutStatus() {\n    return this._deps.presence.dialoutStatus;\n  }\n\n  get isDialing() {\n    return this._deps.presence.dialoutStatus === 'dialing';\n  }\n\n  private get _isTabActive() {\n    return !this._deps.tabManager || this._deps.tabManager.active;\n  }\n\n  @computed((that: EvCall) => [\n    that.activityCallId,\n    that._deps.evCallMonitor.callsMapping,\n  ])\n  get currentCall() {\n    const call = this._deps.evCallMonitor.callsMapping[this.activityCallId];\n    return this.activityCallId && call ? call : null;\n  }\n\n  @action\n  setFormGroup(data: Partial<State['formGroup']>) {\n    this.formGroup = { ...this.formGroup, ...data };\n  }\n\n  @action\n  saveForm() {\n    this.dialoutCallerId = this.formGroup.dialoutCallerId;\n    this.dialoutQueueId = this.formGroup.dialoutQueueId;\n    this.dialoutCountryId = this.formGroup.dialoutCountryId;\n    this.dialoutRingTime = this.formGroup.dialoutRingTime;\n  }\n\n  @action\n  resetOutBoundDialSetting() {\n    this.dialoutCallerId = DEFAULT_OUTBOUND_SETTING.dialoutCallerId;\n    this.dialoutQueueId = DEFAULT_OUTBOUND_SETTING.dialoutQueueId;\n    this.dialoutCountryId = DEFAULT_OUTBOUND_SETTING.dialoutCountryId;\n    this.dialoutRingTime = DEFAULT_OUTBOUND_SETTING.dialoutRingTime;\n    const defaultRingTime = parseInt(\n      this._deps.evAuth.outboundManualDefaultRingtime,\n      10,\n    );\n    if (!Number.isNaN(defaultRingTime)) {\n      this.formGroup.dialoutRingTime = defaultRingTime;\n      this.dialoutRingTime = defaultRingTime;\n    }\n  }\n\n  resetForm() {\n    this.setFormGroup({\n      dialoutCallerId: this.dialoutCallerId,\n      dialoutQueueId: this.dialoutQueueId,\n      dialoutCountryId: this.dialoutCountryId,\n      dialoutRingTime: this.dialoutRingTime,\n    });\n  }\n\n  @computed((that: EvCall) => [that._deps.evAuth.isEvLogged, that.ready])\n  get isOnLoginSuccess() {\n    return this.ready && this._deps.evAuth.isEvLogged;\n  }\n\n  override onInitOnce() {\n    watch(\n      this,\n      () => this.isOnLoginSuccess,\n      (isOnLoginSuccess) => {\n        if (isOnLoginSuccess) {\n          this.resetForm();\n        }\n      },\n    );\n\n    this._deps.evCallMonitor.onCallEnded(() => {\n      this.setDialoutStatus(dialoutStatuses.idle);\n    });\n\n    this._deps.evSubscription.subscribe(\n      EvCallbackTypes.TCPA_SAFE_LEAD_STATE,\n      (data) => {\n        if (['INTERCEPT', 'BUSY', 'NOANSWER'].includes(data.leadState)) {\n          // TCPA_SAFE_LEAD_STATE -> BUSY\n          // TODO: alert message info about busy call.\n          if (!this._deps.evSettings.isManualOffhook && this._isTabActive) {\n            this._deps.evClient.offhookTerm();\n          }\n          this.setPhonedIdle();\n          if (data.leadState === 'INTERCEPT') {\n            this._deps.alert.info({\n              message: messageTypes.INTERCEPT,\n            });\n          }\n        }\n      },\n    );\n\n    this._deps.evSubscription.subscribe(EvCallbackTypes.OFFHOOK_TERM, () => {\n      this.setPhonedIdle();\n    });\n  }\n\n  override onInit() {\n    if (this._deps.evAuth.isFreshLogin) {\n      this.resetOutBoundDialSetting();\n    }\n  }\n\n  @track((that: EvCall) => [\n    trackEvents.outbound,\n    { value: that._deps.evAgentSession.loginType },\n  ])\n  async dialout(phoneNumber: string) {\n    this._deps.presence.setCurrentCallUii('');\n    if (this._deps.evAgentSession.isIntegratedSoftphone) {\n      const integratedSoftphone = this._deps.evIntegratedSoftphone;\n      try {\n        if (integratedSoftphone.sipRegisterSuccess) {\n          await integratedSoftphone.askAudioPermission(false);\n        } else {\n          await this._deps.evAgentSession.configureAgent();\n          await integratedSoftphone.onceRegistered();\n        }\n      } catch (error) {\n        return;\n      }\n    }\n\n    try {\n      const destination = this._checkAndParseNumber(phoneNumber);\n      await this._manualOutdial({\n        destination,\n        callerId: this.callerId,\n        countryId: this.countryId,\n        queueId: this.queueId,\n        ringTime: this.ringTime,\n      });\n    } catch (error) {\n      this.setPhonedIdle();\n    }\n  }\n\n  outdialCancel() {\n    this._deps.evClient.manualOutdialCancel(this._deps.presence.currentCallUii);\n  }\n\n  checkDialoutRingTime() {\n    const dialoutRingTime = Math.min(\n      Math.max(this.formGroup.dialoutRingTime, this.ringTimeLimit.min),\n      this.ringTimeLimit.max,\n    );\n    if (dialoutRingTime !== this.formGroup.dialoutRingTime) {\n      this.setFormGroup({ dialoutRingTime });\n    }\n  }\n\n  checkIsAbleToCall() {\n    if (\n      this.dialoutStatus !== dialoutStatuses.idle ||\n      this._deps.evCallMonitor.isOnCall ||\n      this._deps.evWorkingState.isPendingDisposition\n    ) {\n      console.log('Unavailable to call, have a call or is PendingDisposition.');\n      if (!this._deps.evCallMonitor.isOnCall) {\n        this.setPhonedIdle();\n      }\n      this._deps.alert.danger({\n        message: messageTypes.FAILED_TO_CALL,\n        ttl: 0,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  setDialoutStatus(status: DialoutStatusesType) {\n    this._deps.presence.setDialoutStatus(status);\n  }\n\n  setPhonedIdle() {\n    this.setDialoutStatus(dialoutStatuses.idle);\n  }\n\n  setPhonedDialing() {\n    this.setDialoutStatus(dialoutStatuses.dialing);\n  }\n\n  private _checkAndParseNumber(phoneNumber: string) {\n    try {\n      checkCountryCode(phoneNumber);\n\n      return parseNumber(phoneNumber);\n    } catch (error) {\n      switch (error.type) {\n        case messageTypes.NO_SUPPORT_COUNTRY:\n          this._deps.alert.danger({\n            message: messageTypes.NO_SUPPORT_COUNTRY,\n            ttl: 0,\n          });\n          break;\n        case callErrors.emergencyNumber:\n          this._deps.alert.danger({\n            message: callErrors.emergencyNumber,\n          });\n          break;\n        default:\n          this._deps.alert.danger({\n            message: callErrors.noToNumber,\n          });\n          break;\n      }\n\n      throw error;\n    }\n  }\n\n  private async _manualOutdial({\n    callerId = '',\n    destination,\n    ringTime = DEFAULT_OUTBOUND_SETTING.dialoutRingTime,\n    queueId = '',\n    countryId = 'USA',\n  }: EvClientManualOutdialParams) {\n    let offhookInitResult: EvOffhookInitResponse;\n    if (this.dialoutStatus !== dialoutStatuses.dialing) {\n      this.setPhonedDialing();\n    }\n\n    try {\n      if (!this._deps.evSettings.isOffhook) {\n        // bind init hook first, and then call offhookInit\n        const getOffhookInitResult = this._getOffhookInitResult();\n        this._deps.evClient.offhookInit();\n\n        offhookInitResult = await getOffhookInitResult;\n      }\n\n      if (\n        this._deps.evSettings.isOffhook ||\n        (offhookInitResult && offhookInitResult.status === 'OK')\n      ) {\n        console.log('manualOutdial~~');\n        await this._deps.evClient.manualOutdial({\n          callerId,\n          countryId,\n          destination,\n          queueId,\n          ringTime,\n        });\n      } else {\n        throw new Error(`'offhookInit' exception error`);\n      }\n    } catch (e) {\n      if (!this._deps.evSettings.isManualOffhook) {\n        this._deps.evClient.offhookTerm();\n      }\n\n      throw e;\n    }\n  }\n\n  private _getOffhookInitResult() {\n    return new Promise<EvOffhookInitResponse>((resolve, reject) => {\n      this._deps.presence.evPresenceEvents.once(\n        EvCallbackTypes.OFFHOOK_INIT,\n        (data: EvOffhookInitResponse) => {\n          if (data.status === 'OK') {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        },\n      );\n    });\n  }\n\n  get isInbound() {\n    return this.currentCall?.callType === 'INBOUND';\n  }\n}\n\nexport { EvCall };\n"],"mappings":"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"}