{"version":3,"sources":["modules/Webphone/getWebphoneReducer.ts"],"names":["DEFAULT_AUDIO","getVideoElementPreparedReducer","types","state","type","videoElementPrepared","getConnectionStatusReducer","connectionStatus","disconnected","connect","connecting","reconnect","reconnecting","registered","connected","connectFailed","connectError","unregistered","disconnectOnInactive","inactiveDisconnecting","unregisteredOnInactive","inactive","disconnect","disconnecting","getWebphoneDeviceReducer","device","getErrorCodeReducer","errorCode","getStatusCodeReducer","statusCode","getConnectRetryCountsReducer","retryCounts","setRetryCounts","getActiveSessionIdReducer","session","sessions","callInit","callStart","callResume","id","callEnd","activeSessions","filter","x","sort","sortByLastActiveTimeDesc","clearSessionCaching","cached","getRingSessionIdReducer","callRing","ringSessions","getLastEndedSessionsReducer","startTime","isToVoicemail","isForwarded","isReplied","lastSessions","concat","slice","getSessionsReducer","cachingSessionIds","updateSessions","cachedSessions","forEach","cachedSession","find","removed","push","setSessionCaching","needUpdate","sessionId","onholdCachedSession","callStatus","sessionStatus","onHold","isOnHold","destroySessions","getIncomingAudioFileReducer","incomingAudioFile","fileName","setRingtone","setIncomingAudio","resetIncomingAudio","getIncomingAudioDataUrlReducer","incomingAudio","dataUrl","getOutgoingAudioFileReducer","outgoingAudioFile","setOutgoingAudio","resetOutgoingAudio","getOutgoingAudioDataUrlReducer","outgoingAudio","getWebphoneStorageReducer","incomingAudioDataUrl","outgoingAudioDataUrl","getWebphoneReducer","status","connectRetryCounts","activeSessionId","ringSessionId","lastEndedSessions"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport { isRing, sortByLastActiveTimeDesc } from './webphoneHelper';\n\nexport const DEFAULT_AUDIO = 'default';\n\nexport function getVideoElementPreparedReducer(types) {\n  return (state = false, { type }) => {\n    if (type === types.videoElementPrepared) return true;\n    return state;\n  };\n}\n\nexport function getConnectionStatusReducer(types) {\n  return (state = connectionStatus.disconnected, { type }) => {\n    switch (type) {\n      case types.connect: // trigger by first 3 connect from disconnected or connectFailed status\n        return connectionStatus.connecting;\n      case types.reconnect: // trigger by connect from connectError status\n        return connectionStatus.reconnecting;\n      case types.registered: // trigger when register success\n        return connectionStatus.connected;\n      case types.connectFailed: // trigger when connect failed (retry time <=2)\n        return connectionStatus.connectFailed;\n      case types.connectError: // trigger when connect failed (retry time > 2)\n        return connectionStatus.connectError;\n      case types.unregistered: // trigger by user disconnect success\n        return connectionStatus.disconnected;\n      case types.disconnectOnInactive:\n        return connectionStatus.inactiveDisconnecting;\n      case types.unregisteredOnInactive:\n        return connectionStatus.inactive;\n      case types.disconnect: // trigger by user disconnect\n        return connectionStatus.disconnecting;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getWebphoneDeviceReducer(types) {\n  return (state = null, { type, device }) => {\n    switch (type) {\n      case types.reconnect:\n      case types.connect:\n      case types.connectFailed:\n      case types.connectError:\n      case types.unregistered:\n      case types.disconnectOnInactive:\n      case types.unregisteredOnInactive:\n      case types.disconnect:\n        return null;\n      case types.registered: // trigger when register success\n        return device;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getErrorCodeReducer(types) {\n  return (state = null, { type, errorCode = state }) => {\n    switch (type) {\n      case types.connectError:\n      case types.connectFailed:\n        return errorCode;\n      case types.registered:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getStatusCodeReducer(types) {\n  return (state = null, { type, statusCode = state }) => {\n    switch (type) {\n      case types.connectError:\n      case types.connectFailed:\n        return statusCode;\n      case types.registered:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConnectRetryCountsReducer(types) {\n  return (state = 0, { type, retryCounts }) => {\n    switch (type) {\n      case types.connect:\n      case types.reconnect:\n        return state + 1;\n      case types.unregistered:\n      case types.registered:\n      case types.unregisteredOnInactive:\n        return 0;\n      case types.setRetryCounts:\n        return retryCounts;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getActiveSessionIdReducer(types) {\n  return (state = null, { type, session = {}, sessions = [] }) => {\n    switch (type) {\n      case types.callInit:\n      case types.callStart:\n      case types.callResume:\n        return session.id;\n      case types.callEnd: {\n        if (session.id !== state) {\n          return state;\n        }\n        const activeSessions = sessions.filter((x) => !isRing(x));\n        activeSessions.sort(sortByLastActiveTimeDesc);\n        return (activeSessions[0] && activeSessions[0].id) || null;\n      }\n      case types.clearSessionCaching: {\n        const activeSessions = sessions.filter((x) => !x.cached && !isRing(x));\n        activeSessions.sort(sortByLastActiveTimeDesc);\n        return (activeSessions[0] && activeSessions[0].id) || null;\n      }\n      case types.disconnect:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getRingSessionIdReducer(types) {\n  return (state = null, { type, session = {}, sessions = [] }) => {\n    switch (type) {\n      case types.callRing:\n        return session.id;\n      case types.callStart:\n      case types.callEnd: {\n        if (session.id !== state) {\n          return state;\n        }\n        const ringSessions = sessions.filter((x) => isRing(x));\n        return (ringSessions[0] && ringSessions[0].id) || null;\n      }\n      case types.disconnect:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getLastEndedSessionsReducer(types) {\n  return (state = [], { type, session = {} }) => {\n    switch (type) {\n      case types.callEnd: {\n        if (\n          /**\n           * don't add incoming call that isn't relied by current app\n           *   to end sessions. this call can be answered by other apps\n           */\n          !session.startTime &&\n          !session.isToVoicemail &&\n          !session.isForwarded &&\n          !session.isReplied\n        ) {\n          return state;\n        }\n        const lastSessions = [session].concat(\n          state.filter((x) => x.id !== session.id),\n        );\n        return lastSessions.slice(0, 5);\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSessionsReducer(types) {\n  return (state = [], { type, sessions, cachingSessionIds }) => {\n    switch (type) {\n      case types.updateSessions: {\n        const cachedSessions = state.filter((x) => x.cached);\n        cachedSessions.forEach((cachedSession) => {\n          const session = sessions.find((x) => x.id === cachedSession.id);\n          if (session) {\n            session.cached = true;\n          } else {\n            cachedSession.removed = true;\n            sessions.push(cachedSession);\n          }\n        });\n        return sessions.sort(sortByLastActiveTimeDesc);\n      }\n      case types.setSessionCaching: {\n        let needUpdate = false;\n        cachingSessionIds.forEach((sessionId) => {\n          const session = state.find((x) => x.id === sessionId);\n          if (session) {\n            session.cached = true;\n            needUpdate = true;\n          }\n        });\n        return needUpdate ? [...state] : state;\n      }\n      case types.clearSessionCaching: {\n        let needUpdate = false;\n        state.forEach((session) => {\n          if (session.cached) {\n            session.cached = false;\n            needUpdate = true;\n          }\n        });\n        if (needUpdate) {\n          return state.filter((x) => !x.removed);\n        }\n        return state;\n      }\n      case types.onholdCachedSession: {\n        let needUpdate = false;\n        state.forEach((session) => {\n          if (session.cached) {\n            session.callStatus = sessionStatus.onHold;\n            session.isOnHold = true;\n            needUpdate = true;\n          }\n        });\n        return needUpdate ? [...state] : state;\n      }\n      case types.destroySessions:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getIncomingAudioFileReducer(types) {\n  return (state = DEFAULT_AUDIO, { type, incomingAudioFile, fileName }) => {\n    switch (type) {\n      case types.setRingtone:\n        return incomingAudioFile;\n      case types.setIncomingAudio:\n        return fileName;\n      case types.resetIncomingAudio:\n        return DEFAULT_AUDIO;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getIncomingAudioDataUrlReducer(types) {\n  return (state = null, { type, incomingAudio = null, dataUrl = null }) => {\n    switch (type) {\n      case types.setRingtone:\n        return incomingAudio;\n      case types.setIncomingAudio:\n        return dataUrl;\n      case types.resetIncomingAudio:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getOutgoingAudioFileReducer(types) {\n  return (state = DEFAULT_AUDIO, { type, outgoingAudioFile, fileName }) => {\n    switch (type) {\n      case types.setRingtone:\n        return outgoingAudioFile;\n      case types.setOutgoingAudio:\n        return fileName;\n      case types.resetOutgoingAudio:\n        return DEFAULT_AUDIO;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getOutgoingAudioDataUrlReducer(types) {\n  return (state = null, { type, outgoingAudio, dataUrl = null }) => {\n    switch (type) {\n      case types.setRingtone:\n        return outgoingAudio;\n      case types.setOutgoingAudio:\n        return dataUrl;\n      case types.resetOutgoingAudio:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getWebphoneStorageReducer(types) {\n  return combineReducers({\n    incomingAudioFile: getIncomingAudioFileReducer(types),\n    incomingAudioDataUrl: getIncomingAudioDataUrlReducer(types),\n    outgoingAudioFile: getOutgoingAudioFileReducer(types),\n    outgoingAudioDataUrl: getOutgoingAudioDataUrlReducer(types),\n  });\n}\n\nexport default function getWebphoneReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    videoElementPrepared: getVideoElementPreparedReducer(types),\n    connectionStatus: getConnectionStatusReducer(types),\n    connectRetryCounts: getConnectRetryCountsReducer(types),\n    errorCode: getErrorCodeReducer(types),\n    statusCode: getStatusCodeReducer(types),\n    activeSessionId: getActiveSessionIdReducer(types),\n    ringSessionId: getRingSessionIdReducer(types),\n    sessions: getSessionsReducer(types),\n    lastEndedSessions: getLastEndedSessionsReducer(types),\n    device: getWebphoneDeviceReducer(types),\n  });\n}\n"],"file":"getWebphoneReducer.js"}