{"version":3,"file":"Webphone.interface.js","names":[],"sources":["modules/Webphone/Webphone.interface.ts"],"sourcesContent":["import type { WebPhoneOptions } from 'ringcentral-web-phone';\n\nimport type { NormalizedSession } from '../../interfaces/Webphone.interface';\nimport type { RingCentralClient } from '../../lib/RingCentralClient';\nimport type { Alert } from '../Alert';\nimport type { AppFeatures } from '../AppFeatures';\nimport type { AudioSettings } from '../AudioSettings';\nimport type { Auth } from '../Auth';\nimport type { AvailabilityMonitor } from '../AvailabilityMonitor';\nimport type { Brand } from '../Brand';\nimport type { ContactMatcher } from '../ContactMatcher';\nimport type { ExtensionFeatures } from '../ExtensionFeatures';\nimport type { NumberValidate } from '../NumberValidate';\nimport type { RegionSettings } from '../RegionSettings';\nimport type { Storage } from '../Storage';\nimport type { TabManager } from '../TabManager';\n\nexport interface Deps {\n  prefix: string;\n  alert: Alert;\n  auth: Auth;\n  client: RingCentralClient;\n  numberValidate: NumberValidate;\n  extensionFeatures: ExtensionFeatures;\n  appFeatures: AppFeatures;\n  brand: Brand;\n  regionSettings: RegionSettings;\n  audioSettings: AudioSettings;\n  storage: Storage;\n  availabilityMonitor?: AvailabilityMonitor;\n  tabManager?: TabManager;\n  contactMatcher?: ContactMatcher;\n  webphoneOptions: WebphoneOptions;\n}\n/**\n * Webphone Options\n * appKey: ringcentral client id\n * appName: app name for track\n * appVersion: app version for track\n * webphoneLogLevel: log level\n * onCall*: add handler when call event fired\n * webphoneSDKOptions: web phone sdk options\n * permissionCheck: if check phone number with numberValidate module\n * disconnectOnInactive: for support multiple tabs, disconnect connection in inactive tab\n * connectDelay: delay before creating web phone connection\n */\nexport interface WebphoneOptions {\n  appKey: string;\n  appName: string;\n  appVersion: string;\n  webphoneLogLevel?: number;\n  onCallEnd?: () => CallEndHandler;\n  onCallRing?: () => CallRingHandler;\n  onCallStart?: () => CallStartHandler;\n  onCallResume?: () => CallResumeHandler;\n  onCallHold?: () => CallHoldHandler;\n  onCallInit?: () => CallInitHandler;\n  onBeforeCallResume?: () => BeforeCallResumeHandler;\n  onBeforeCallEnd?: () => BeforeCallEndHandler;\n  webphoneSDKOptions?: WebPhoneOptions;\n  permissionCheck?: boolean;\n  disconnectOnInactive?: boolean;\n  connectDelay?: number;\n  enableContactMatchWhenNewCall?: boolean;\n}\n\nexport interface SwitchCallActiveCallParams {\n  id: string;\n  from: { phoneNumber: string };\n  direction: string;\n  to: { phoneNumber: string };\n  sipData: {\n    fromTag: string;\n    toTag: string;\n  };\n}\n\nexport type OffEventHandler = () => void;\n\nexport type CallStartHandler = (\n  session: NormalizedSession,\n  activeSession: NormalizedSession,\n) => void;\n\nexport type CallRingHandler = (\n  session: NormalizedSession,\n  ringSession: NormalizedSession,\n) => void;\n\nexport type CallInitHandler = CallStartHandler;\nexport type BeforeCallEndHandler = CallStartHandler;\nexport type CallResumeHandler = CallStartHandler;\nexport type BeforeCallResumeHandler = CallStartHandler;\nexport type CallHoldHandler = CallStartHandler;\n\nexport type CallEndHandler = (\n  session: NormalizedSession,\n  activeSession: NormalizedSession,\n  ringSession: NormalizedSession,\n) => void;\n\nexport interface SessionReplyOptions {\n  replyType: number;\n  replyText: string;\n  timeValue: string;\n  timeUnits: string;\n  callbackDirection: string;\n}\n\nexport type WebphoneSessionRequestHeader = {\n  raw: string;\n};\nexport type WebphoneSessionRequestHeaders = {\n  [name: string]: Array<WebphoneSessionRequestHeader>;\n};\nexport type TPickupInboundCall = {\n  sessionId: string;\n  toNumber: string;\n  fromNumber: string;\n  serverId: string;\n  telephonySessionId: string;\n};\n"],"mappings":"","ignoreList":[]}