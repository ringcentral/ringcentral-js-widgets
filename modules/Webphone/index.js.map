{"version":3,"sources":["modules/Webphone/index.js"],"names":["AUTO_RETRIES_DELAY","INACTIVE_SLEEP_DELAY","INCOMING_CALL_INVALID_STATE_ERROR_CODE","extendedControlStatus","ObjectMap","fromKeys","EVENTS","registerErrors","webphoneErrors","sipProvisionError","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","connectFailed","provisionUpdate","serverConnecting","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","storage","appFeatures","extensionFeatures","webphoneLogLevel","contactMatcher","numberValidate","audioSettings","tabManager","onCallEnd","onCallRing","onCallStart","onCallResume","onCallHold","onCallInit","onBeforeCallResume","onBeforeCallEnd","regionSettings","brand","webphoneSDKOptions","permissionCheck","availabilityMonitor","disconnectOnInactive","connectDelay","prefix","options","actionTypes","_regionSettings","_brand","_eventEmitter","EventEmitter","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","ensureExist","call","_client","_extensionFeatures","_appFeatures","_numberValidate","_audioSettings","_storage","_availabilityMonitor","_contactMatcher","_tabManager","_webphoneSDKOptions","_permissionCheck","_reconnectDelays","_connectDelay","_disconnectOnInactive","_activeWebphoneKey","_activeWebphoneActiveCallKey","_storageKey","on","callEnd","callRing","callStart","callResume","callHold","callInit","beforeCallResume","_onBeforeCallEndFunctions","beforeCallEnd","_webphone","_remoteVideo","_localVideo","_sessions","Map","_reducer","registerReducer","key","reducer","_reconnectAfterSessionEnd","_disconnectInactiveAfterSessionEnd","_tabActive","_connectTimeout","_isFirstRegister","_stopWebphoneUserAgentPromise","_sipInstanceId","addQuerySource","getQueriesFn","sessionPhoneNumbers","readyCheckFn","ready","_sipInstanceManager","SipInstanceManager","_removedWebphoneAtBeforeUnload","document","createElement","id","setAttribute","muted","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","sessions","length","_disconnect","setTimeout","connect","force","skipConnectDelay","skipDLCheck","setInstanceInactive","endpointId","_removeCurrentInstanceFromActiveWebphone","subscribe","_onStateChange","addBeforeLogoutHandler","_createOtherWebphoneInstanceListener","_shouldInit","initSuccess","_shouldReset","resetSuccess","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","active","_onTabActive","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","forEach","concat","_waitUnregistered","stop","console","error","removeAllListeners","isConnected","disconnect","reconnectTimer","clearTimeout","undefined","__clearSwitchBackTimer","loadAudio","e","Promise","resolve","reject","timeout","Error","once","provisionData","_removeWebphone","getInstanceId","RingCentralWebphone","uuid","logLevel","enabled","media","remote","local","enableQos","enableMidLinesInSDP","instanceId","connected","_onWebphoneRegistered","log","_onWebphoneUnregistered","cause","message","data","isSipErrorCode","disconnected","disconnecting","errorCode","statusCode","status_code","_onConnectError","session","_onInvite","warning","allowDuplicates","reason","connectError","reconnect","setRetryCounts","retryCounts","ttl","_sipProvision","sipProvision","connectRetryCounts","indexOf","fetchData","_createWebphone","_waitStillTabActive","connecting","inactiveDisconnecting","skipTimeout","skipTabActiveCheck","browserNotSupported","_isAvailableToConnect","_fetchDL","noOutboundCallWithoutDL","checkDLError","_connect","_getConnectTimeoutTtl","paused","pause","srcObject","reconnecting","danger","payload","_hideConnectingAlert","isConnecting","_hideConnectFailedAlert","registered","_hideRegisterErrorAlert","_setCurrentInstanceAsActiveWebphone","emit","webphoneRegistered","inactive","webphoneUnregistered","localStorage","setItem","activeWebphoneInstance","getItem","removeItem","hidden","newValue","_disconnectToInactive","_holdOtherSession","unregisteredOnInactive","alertIds","messages","filter","m","i","len","map","dismiss","hangup","_updateSessions","unregistered","__rc_extendedControlStatus","playing","controls","__rc_extendedControls","slice","_sendDTMF","stopped","incomingResponse","__rc_callStatus","sessionStatus","finished","headers","_onCallStart","_playExtendedControls","_onCallEnd","newSession","replaced","__rc_direction","callDirections","inbound","_addSession","_onAccepted","__rc_isOnMute","onMute","sessionDescriptionHandler","onGetUserMediaError","__rc_creationTime","Date","now","__rc_lastActiveTime","request","_onCallRing","sessionId","sipSession","get","find","accept","acceptOptions","callAnswer","code","unhold","forwardNumber","validatedResult","validPhoneNumber","validateNumbers","result","errors","callErrors","phoneNumber","numbers","e164","__rc_isForwarded","forward","_addTrackAfterForward","forwardError","activeSession","isOnHold","rawActiveSession","_addTrack","_sessionHandleWithId","mute","muteError","unmute","localHold","hold","onHold","_onCallHold","holdError","currentSessionId","all","Array","from","onholdCachedSession","_onBeforeCallResume","_onCallResume","__rc_recordStatus","recordStatus","startRecord","recording","idle","recordDisabled","noAccess","recordError","stopRecord","park","success","webphoneMessages","parked","parkedNumber","transferNumber","__rc_isOnTransfer","numberResult","transfer","transferError","fromNumber","outbound","uri","user","to","makeCall","toNumber","homeCountryId","extendedControls","transferSessionId","newSessionId","oldSessionId","__rc_transferSessionId","oldSession","warmTransfer","flipValue","flip","__rc_isOnFlip","flipError","dtmfValue","dtmf","_onBeforeCallEnd","terminate","__rc_isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","__rc_isReplied","replyWithMessage","rawSession","addTrack","func","inviteOptions","isVoIPOnlyMode","invite","__rc_fromNumber","_onCallInit","sessionDescriptionHandlerOptions","_invite","direction","sipData","extraHeaders","push","fromTag","toTag","contact","__rc_contactMatch","sessionIds","setSessionCaching","cachingSessionIds","clearSessionCaching","values","normalizeSession","updateSessions","set","__rc_minimized","currentId","normalizedSession","x","triggerMatch","_setActiveWebphoneActiveCallId","playIncoming","ringSession","transferSession","_removeSession","_releaseVideoElementsOnSessionsEmpty","_reconnectWebphoneIfNecessaryOnSessionsEmpty","_makeWebphoneInactiveOnSessionsEmpty","handler","off","incoming","incomingAudio","outgoing","outgoingAudio","fileName","dataUrl","setOutgoingAudio","resetOutgoingAudio","setIncomingAudio","resetIncomingAudio","incomingAudioFile","outgoingAudioFile","isIncomingDefault","DEFAULT_AUDIO","defaultIncomingAudio","isOutgoingDefault","defaultOutgoingAudio","setRingtone","state","status","moduleStatuses","ringSessionId","activeSessionId","lastEndedSessions","isWebPhoneEnabled","connectionStatus","constraints","audio","deviceId","inputDeviceId","video","isOnTransfer","userMedia","incomingAudioDataUrl","outgoingAudioDataUrl","RcModule","proxify","selector","outputs","cached","ringSessions","minimized"],"mappings":"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","sourcesContent":["import { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { EventEmitter } from 'events';\nimport { filter, find } from 'ramda';\nimport RingCentralWebphone from 'ringcentral-web-phone';\nimport defaultIncomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport defaultOutgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\nimport callDirections from '../../enums/callDirections';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport { selector } from '../../lib/selector';\nimport sleep from '../../lib/sleep';\nimport validateNumbers from '../../lib/validateNumbers';\nimport { SipInstanceManager } from '../../lib/SipInstanceManager';\nimport callErrors from '../Call/callErrors';\nimport actionTypes from './actionTypes';\nimport connectionStatus from './connectionStatus';\nimport getWebphoneReducer, {\n  DEFAULT_AUDIO,\n  getWebphoneStorageReducer,\n} from './getWebphoneReducer';\nimport recordStatus from './recordStatus';\nimport sessionStatus from './sessionStatus';\nimport webphoneErrors from './webphoneErrors';\nimport {\n  extractHeadersData,\n  isBrowserSupport,\n  isChrome,\n  isEnableMidLinesInSDP,\n  isOnHold,\n  isRing,\n  normalizeSession,\n} from './webphoneHelper';\nimport webphoneMessages from './webphoneMessages';\n\nconst AUTO_RETRIES_DELAY = [\n  0,\n  5 * 1000,\n  10 * 1000,\n  30 * 1000,\n  2 * 60 * 1000,\n  5 * 60 * 1000,\n  15 * 60 * 1000,\n  30 * 60 * 1000,\n];\n\nconst INACTIVE_SLEEP_DELAY = 1000;\nconst INCOMING_CALL_INVALID_STATE_ERROR_CODE = 2;\n\nconst extendedControlStatus = ObjectMap.fromKeys([\n  'pending',\n  'playing',\n  'stopped',\n]);\n\nconst EVENTS = ObjectMap.fromKeys([\n  'callRing',\n  'callStart',\n  'callEnd',\n  'callHold',\n  'callResume',\n  'beforeCallResume',\n  'beforeCallEnd',\n  'callInit',\n  'webphoneRegistered',\n  'webphoneUnregistered',\n]);\n\nconst registerErrors = [\n  webphoneErrors.sipProvisionError,\n  webphoneErrors.webphoneCountOverLimit,\n  webphoneErrors.webphoneForbidden,\n  webphoneErrors.requestTimeout,\n  webphoneErrors.internalServerError,\n  webphoneErrors.serverTimeout,\n  webphoneErrors.unknownError,\n  webphoneErrors.connectFailed,\n  webphoneErrors.provisionUpdate,\n  webphoneErrors.serverConnecting,\n];\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    'NumberValidate',\n    'ExtensionFeatures',\n    'AppFeatures',\n    'Brand',\n    'RegionSettings',\n    'AudioSettings',\n    'Storage',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'WebphoneOptions', optional: true },\n  ],\n})\nexport default class Webphone extends RcModule {\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    storage,\n    appFeatures,\n    extensionFeatures,\n    webphoneLogLevel = 1,\n    contactMatcher,\n    numberValidate,\n    audioSettings,\n    tabManager,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    onCallResume,\n    onCallHold,\n    onCallInit,\n    onBeforeCallResume,\n    onBeforeCallEnd,\n    regionSettings,\n    brand,\n    webphoneSDKOptions,\n    permissionCheck = true,\n    availabilityMonitor,\n    disconnectOnInactive = false,\n    connectDelay = 0,\n    prefix,\n    ...options\n  }) {\n    super({\n      ...options,\n      prefix,\n      actionTypes,\n    });\n\n    this._regionSettings = regionSettings;\n    this._brand = brand;\n    this._eventEmitter = new EventEmitter();\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = ensureExist.call(this, auth, 'auth');\n    this._client = ensureExist.call(this, client, 'client');\n    this._extensionFeatures = extensionFeatures;\n    this._appFeatures = appFeatures;\n    this._numberValidate = ensureExist.call(\n      this,\n      numberValidate,\n      'numberValidate',\n    );\n    this._audioSettings = ensureExist.call(\n      this,\n      audioSettings,\n      'audioSettings',\n    );\n    this._storage = storage;\n\n    this._availabilityMonitor = availabilityMonitor;\n    this._contactMatcher = contactMatcher;\n    this._tabManager = tabManager;\n    this._webphoneSDKOptions = webphoneSDKOptions || {};\n\n    this._permissionCheck = permissionCheck;\n    this._reconnectDelays = AUTO_RETRIES_DELAY;\n    this._connectDelay = connectDelay;\n    this._disconnectOnInactive = disconnectOnInactive;\n    this._activeWebphoneKey = `${prefix}-active-webphone-key`;\n    this._activeWebphoneActiveCallKey = `${prefix}-active-webphone-active-call-key`;\n    this._storageKey = `${prefix}-webphone`;\n\n    if (typeof onCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, onCallEnd);\n    }\n    if (typeof onCallRing === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, onCallRing);\n    }\n    if (typeof onCallStart === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, onCallStart);\n    }\n    if (typeof onCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, onCallResume);\n    }\n    if (typeof onCallHold === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, onCallHold);\n    }\n    if (typeof onCallInit === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, onCallInit);\n    }\n    if (typeof onBeforeCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, onBeforeCallResume);\n    }\n    this._onBeforeCallEndFunctions = [];\n    if (typeof onBeforeCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, onBeforeCallEnd);\n    }\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._sessions = new Map();\n    this._reducer = getWebphoneReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getWebphoneStorageReducer(this.actionTypes),\n    });\n    this._reconnectAfterSessionEnd = null;\n    this._disconnectInactiveAfterSessionEnd = false;\n    this._tabActive = false;\n    this._connectTimeout = null;\n    this._isFirstRegister = true;\n    this._stopWebphoneUserAgentPromise = null;\n    this._sipInstanceId = null;\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: () => this.sessionPhoneNumbers,\n        readyCheckFn: () => this.ready,\n      });\n    }\n    this._sipInstanceManager = new SipInstanceManager(\n      `${prefix}-webphone-inactive-sip-instance`,\n    );\n    this._removedWebphoneAtBeforeUnload = false;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.id = 'remoteVideo';\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.id = 'localVideo';\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      if (this._remoteVideo.setSinkId && this._audioSettings.outputDeviceId) {\n        this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n      }\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('beforeunload', () => {\n        if (!this._webphone) {\n          return;\n        }\n        if (this.sessions.length > 0) {\n          return;\n        }\n        this._removedWebphoneAtBeforeUnload = true;\n        // disconnect webphone at beforeunload if there are not active sessions\n        this._disconnect();\n        // set timeout to reconnect web phone is before unload cancel\n        setTimeout(() => {\n          this._removedWebphoneAtBeforeUnload = false;\n          this.connect({\n            force: true,\n            skipConnectDelay: true,\n            skipDLCheck: true,\n          });\n        }, 4000);\n      });\n      window.addEventListener('unload', () => {\n        // mark current instance id as inactive, so app can reuse it after refresh\n        if (this._sipInstanceId) {\n          this._sipInstanceManager.setInstanceInactive(\n            this._sipInstanceId,\n            this._auth.endpointId,\n          );\n          this._sipInstanceId = null;\n        }\n        // disconnect if web phone is not disconnected at beforeunload\n        if (!this._removedWebphoneAtBeforeUnload) {\n          this._disconnect();\n        }\n        this._removeCurrentInstanceFromActiveWebphone();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n    this._auth.addBeforeLogoutHandler(async () => {\n      this._sipInstanceId = null;\n      this._disconnect();\n      await this._disconnect();\n    });\n    this._createOtherWebphoneInstanceListener();\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n    if (\n      this.ready &&\n      (this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted)\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (this._webphone && this._webphone.userAgent) {\n        this._webphone.userAgent.audioHelper.setVolume(\n          this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume,\n        );\n      }\n    }\n    if (this.ready && this._callVolume !== this._audioSettings.callVolume) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (this._remoteVideo) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (this._remoteVideo && this._remoteVideo.setSinkId) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n    if (\n      this.ready &&\n      this._tabManager &&\n      this._tabManager.ready &&\n      this._tabActive !== this._tabManager.active\n    ) {\n      this._tabActive = this._tabManager.active;\n      if (this._tabActive) {\n        this._onTabActive();\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._appFeatures.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      this._storage.ready &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (!this._auth.loggedIn ||\n        !this._appFeatures.ready ||\n        !this._numberValidate.ready ||\n        (!!this._tabManager && !this._tabManager.ready) ||\n        !this._audioSettings.ready) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service\n      .platform()\n      .post('/restapi/v1.0/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }],\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  async _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._stopWebphoneUserAgentPromise = this._waitUnregistered(\n      this._webphone.userAgent,\n    );\n    this._webphone.userAgent.stop();\n    try {\n      await this._stopWebphoneUserAgentPromise;\n    } catch (e) {\n      console.error(e);\n    }\n    this._stopWebphoneUserAgentPromise = null;\n    try {\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone.userAgent.transport.removeAllListeners();\n      if (this._webphone.userAgent.transport.isConnected()) {\n        this._webphone.userAgent.transport.disconnect();\n      }\n      if (this._webphone.userAgent.transport.reconnectTimer) {\n        clearTimeout(this._webphone.userAgent.transport.reconnectTimer);\n        this._webphone.userAgent.transport.reconnectTimer = undefined;\n      }\n      if (this._webphone.userAgent.transport.__clearSwitchBackTimer) {\n        this._webphone.userAgent.transport.__clearSwitchBackTimer();\n      }\n      // clean audio instances at web phone sdk\n      this._webphone.userAgent.audioHelper.loadAudio({});\n    } catch (e) {\n      console.error(e);\n      // ignore clean listener error\n    }\n    this._webphone = null;\n  }\n\n  _waitUnregistered(userAgent) {\n    return new Promise((resolve, reject) => {\n      let timeout = setTimeout(() => {\n        timeout = null;\n        reject(new Error('unregistered timeout'));\n      }, 2000);\n      userAgent.once('unregistered', (e) => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n        resolve(e);\n      });\n    });\n  }\n\n  async _createWebphone(provisionData) {\n    await this._removeWebphone();\n    if (!this._sipInstanceId) {\n      this._sipInstanceId = this._sipInstanceManager.getInstanceId(\n        this._auth.endpointId,\n      );\n    }\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n      },\n      media: {\n        remote: this._remoteVideo,\n        local: this._localVideo,\n      },\n      enableQos: isChrome(),\n      enableMidLinesInSDP: isEnableMidLinesInSDP(),\n      instanceId: this._sipInstanceId, // reuse sip instance id to avoid 603 issue at reconnection\n      ...this._webphoneSDKOptions,\n    });\n    this.loadAudio();\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted\n        ? 0\n        : this._audioSettings.ringtoneVolume,\n    );\n    // Webphone userAgent registered event\n    this._webphone.userAgent.on('registered', () => {\n      if (!this.connected) {\n        this._onWebphoneRegistered(provisionData);\n      }\n    });\n    this._webphone.userAgent.on('unregistered', (e) => {\n      console.log('web phone unregistered event', e);\n      this._onWebphoneUnregistered();\n    });\n    this._webphone.userAgent.on('registrationFailed', (response, cause) => {\n      console.error('Webphone Register Error:', response, cause);\n      // For 401\n      if (!response && cause === 'Connection Error') {\n        return;\n      }\n      const message = (response && response.data) || response;\n      if (\n        message &&\n        typeof message === 'string' &&\n        this._webphone.userAgent.transport.isSipErrorCode(message)\n      ) {\n        // error is handled in webphone sdk;\n        return;\n      }\n      // don't handled in connection is disconnecting\n      if (this.disconnected || this.disconnecting) {\n        return;\n      }\n      let errorCode;\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blocklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blocklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from block list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blocklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response\n        ? response.statusCode || response.status_code\n        : null;\n      switch (statusCode) {\n        // Webphone account over limit\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._onConnectError({ errorCode, statusCode });\n    });\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n    // sip provision expired\n    this._webphone.userAgent.on('provisionUpdate', () => {\n      if (this.sessions.length === 0) {\n        this._alert.warning({\n          message: webphoneErrors.provisionUpdate,\n          allowDuplicates: false,\n        });\n        this.connect({\n          force: true,\n          skipDLCheck: true,\n          skipConnectDelay: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: webphoneErrors.provisionUpdate,\n      };\n    });\n    // websocket transport connecting event\n    this._webphone.userAgent.transport.on('connecting', () => {\n      // reconnecting event\n      console.log('web phone connecting event');\n      if (this.connected || this.connectError) {\n        this._alert.warning({\n          message: webphoneErrors.serverConnecting,\n          allowDuplicates: false,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.reconnect,\n        });\n      }\n    });\n    // Server connection closed event after 10 time retry with primary server and backup server\n    this._webphone.userAgent.transport.on('closed', () => {\n      console.log('web phone closed event');\n      this.store.dispatch({\n        type: this.actionTypes.setRetryCounts,\n        retryCounts: 20,\n      });\n      this._onConnectError({\n        errorCode: webphoneErrors.connectFailed,\n        ttl: 0,\n      });\n    });\n    this._webphone.userAgent.transport.on('transportError', () => {\n      console.log('WebSocket transportError occurred');\n    });\n    this._webphone.userAgent.transport.on('wsConnectionError', () => {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n      });\n    });\n    // Timeout to switch back to primary server\n    this._webphone.userAgent.transport.on('switchBackProxy', () => {\n      if (this.sessions.length === 0) {\n        this.connect({\n          skipConnectDelay: true,\n          force: true,\n          skipDLCheck: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: null,\n      };\n    });\n  }\n\n  @proxify\n  async _connect() {\n    if (!this._auth.loggedIn) {\n      return;\n    }\n    let sipProvision;\n    try {\n      sipProvision = await this._sipProvision();\n    } catch (error) {\n      console.error(error, this.connectRetryCounts);\n      if (\n        error &&\n        error.message &&\n        error.message.indexOf('Feature [WebPhone] is not available') > -1\n      ) {\n        this._extensionFeatures.fetchData();\n        return;\n      }\n      this._onConnectError({\n        errorCode: webphoneErrors.sipProvisionError,\n        statusCode: null,\n        ttl: 0,\n      });\n      return;\n    }\n    await this._createWebphone(sipProvision);\n  }\n\n  async _waitStillTabActive() {\n    if (!this._tabManager || this._tabManager.active) {\n      return;\n    }\n    await sleep(INACTIVE_SLEEP_DELAY);\n    await this._waitStillTabActive();\n  }\n\n  _isAvailableToConnect({ force }) {\n    if (!this.enabled || !this._auth.loggedIn) {\n      return false;\n    }\n    // do not connect if it is connecting\n    // do not reconnect when user disconnected\n    if (this.connecting || this.disconnecting || this.inactiveDisconnecting) {\n      return false;\n    }\n    // do not connect when connected unless force\n    if (!force && this.connected) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect({\n    force = false,\n    skipTimeout = true,\n    skipConnectDelay = false,\n    skipDLCheck = false,\n    skipTabActiveCheck = false,\n  } = {}) {\n    if (!isBrowserSupport()) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode: webphoneErrors.browserNotSupported,\n      });\n      this._alert.warning({\n        message: webphoneErrors.browserNotSupported,\n        ttl: 0,\n      });\n      return;\n    }\n    if (!this._isAvailableToConnect({ force })) {\n      return;\n    }\n    if (!skipTabActiveCheck) {\n      await this._waitStillTabActive();\n    }\n    if (!this._isAvailableToConnect({ force })) {\n      return;\n    }\n    // when last connect is connect error, use reconnect (will show connecting badge)\n    this.store.dispatch({\n      type:\n        this.connectError || force\n          ? this.actionTypes.reconnect\n          : this.actionTypes.connect,\n    });\n    if (!skipConnectDelay && this._connectDelay > 0) {\n      await sleep(this._connectDelay);\n    }\n    if (!skipDLCheck) {\n      try {\n        if (!this._auth.loggedIn) {\n          return;\n        }\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this._alert.warning({\n            message: webphoneErrors.noOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.error('fetch DL failed', error);\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n          allowDuplicates: false,\n        });\n      }\n    }\n    if (this.disconnected || this.disconnecting || !this._auth.loggedIn) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    if (force || skipTimeout) {\n      await this._connect();\n      return;\n    }\n    this._connectTimeout = setTimeout(() => {\n      this._connectTimeout = null;\n      this._connect();\n    }, this._getConnectTimeoutTtl());\n  }\n\n  _releaseVideoElementsOnSessionsEmpty() {\n    if (this.videoElementPrepared && this.sessions.length === 0) {\n      // Pause video elements to release system Video Wake Lock RCINT-15582\n      if (!this._remoteVideo.paused) {\n        this._remoteVideo.pause();\n        this._remoteVideo.srcObject = null;\n      }\n      if (!this._localVideo.paused) {\n        this._localVideo.pause();\n      }\n    }\n  }\n\n  _reconnectWebphoneIfNecessaryOnSessionsEmpty() {\n    if (this._reconnectAfterSessionEnd && this.sessions.length === 0) {\n      if (this._reconnectAfterSessionEnd.reason) {\n        this._alert.warning({\n          message: this._reconnectAfterSessionEnd.reason,\n          allowDuplicates: false,\n        });\n      }\n      this._reconnectAfterSessionEnd = null;\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n    }\n  }\n\n  _getConnectTimeoutTtl() {\n    if (this.connectRetryCounts < 7) {\n      return this._reconnectDelays[this.connectRetryCounts];\n    }\n    return this._reconnectDelays[6];\n  }\n\n  async _onConnectError({ errorCode, statusCode, ttl }) {\n    if (statusCode === 403 && this._sipInstanceId) {\n      // recreate sip instance id if server send 403\n      this._sipInstanceId = null;\n    }\n    if (\n      this.connectRetryCounts > 2 ||\n      this.reconnecting ||\n      this.connected ||\n      this.connectError\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        statusCode,\n      });\n      this._alert.danger({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n        },\n      });\n      this._hideConnectingAlert();\n      // Need to show unavailable badge and reconnect in background when third retry\n      // sleep before next reconnect for slient reconnect in background\n      await sleep(this._getConnectTimeoutTtl());\n      if (!this.connectError) {\n        return;\n      }\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.connectFailed,\n      errorCode,\n      statusCode,\n    });\n    if (this.connectRetryCounts === 1) {\n      this._alert.warning({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n          isConnecting: true,\n        },\n      });\n      this._hideConnectFailedAlert();\n    }\n    this.connect({\n      skipDLCheck: true,\n      skipConnectDelay: true,\n      skipTimeout: false,\n    });\n  }\n\n  _onWebphoneRegistered(provisionData) {\n    this.store.dispatch({\n      type: this.actionTypes.registered,\n      device: provisionData.device,\n    });\n    this._hideRegisterErrorAlert();\n    this._setCurrentInstanceAsActiveWebphone();\n    this._eventEmitter.emit(EVENTS.webphoneRegistered);\n  }\n\n  _onWebphoneUnregistered() {\n    this._removeCurrentInstanceFromActiveWebphone();\n    if (\n      this.disconnecting ||\n      this.inactiveDisconnecting ||\n      this.disconnected ||\n      this.inactive ||\n      !!this._stopWebphoneUserAgentPromise\n    ) {\n      // unregister by our app\n      return;\n    }\n    // unavailable, unregistered by some errors\n    this.store.dispatch({\n      type: this.actionTypes.connectError,\n    });\n    this._eventEmitter.emit(EVENTS.webphoneUnregistered);\n  }\n\n  _setCurrentInstanceAsActiveWebphone() {\n    if (this._disconnectOnInactive && this._tabManager) {\n      localStorage.setItem(this._activeWebphoneKey, this._tabManager.id);\n    }\n  }\n\n  _removeCurrentInstanceFromActiveWebphone() {\n    if (this._disconnectOnInactive && this._tabManager) {\n      const activeWebphoneInstance = localStorage.getItem(\n        this._activeWebphoneKey,\n      );\n      if (activeWebphoneInstance === this._tabManager.id) {\n        localStorage.removeItem(this._activeWebphoneKey);\n      }\n    }\n  }\n\n  _createOtherWebphoneInstanceListener() {\n    if (!this._disconnectOnInactive || !this._tabManager) {\n      return;\n    }\n    window.addEventListener('storage', (e) => {\n      // disconnect to inactive when other tabs' web phone connected\n      if (e.key === this._activeWebphoneKey) {\n        if (!this.connected || !document.hidden) {\n          return;\n        }\n        if (e.newValue === this._tabManager.id) {\n          return;\n        }\n        if (this.sessions.length === 0) {\n          this._disconnectToInactive();\n          return;\n        }\n        this._disconnectInactiveAfterSessionEnd = true;\n      }\n      // unhold active calls in current tab\n      if (e.key === this._activeWebphoneActiveCallKey) {\n        this._holdOtherSession(e.newValue);\n      }\n    });\n  }\n\n  async _disconnectToInactive() {\n    this.store.dispatch({\n      type: this.actionTypes.disconnectOnInactive,\n    });\n    await this._removeWebphone();\n    this.store.dispatch({\n      type: this.actionTypes.unregisteredOnInactive,\n    });\n  }\n\n  _makeWebphoneInactiveOnSessionsEmpty() {\n    if (this._disconnectInactiveAfterSessionEnd && this.sessions.length === 0) {\n      this._disconnectInactiveAfterSessionEnd = false;\n      if (!document.hidden) {\n        // set to active\n        if (this._tabManager && this._tabManager.active) {\n          this._setCurrentInstanceAsActiveWebphone();\n        }\n        return;\n      }\n      this._disconnectToInactive();\n    }\n  }\n\n  async _onTabActive() {\n    if (!this._disconnectOnInactive) {\n      return;\n    }\n    if (this.connected) {\n      this._setCurrentInstanceAsActiveWebphone();\n      return;\n    }\n    await sleep(500);\n    if (!this._tabManager.active) {\n      return;\n    }\n    if (this.inactive) {\n      this.connect({\n        skipDLCheck: true,\n        force: true,\n        skipTabActiveCheck: true,\n      });\n    }\n  }\n\n  _hideConnectingAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (\n            m.message === registerErrors[i] &&\n            m.payload &&\n            m.payload.isConnecting === true\n          )\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  async _hideConnectFailedAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i] && !m.payload.isConnecting)\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  _hideRegisterErrorAlert() {\n    const alertIds = this._alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i]) return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  async _disconnect() {\n    if (this.disconnected || this.disconnecting) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.disconnect,\n    });\n    if (this._webphone) {\n      this._sessions.forEach((session) => {\n        this.hangup(session);\n      });\n      await this._removeWebphone();\n      this._sessions = new Map();\n      this._updateSessions();\n    }\n    this.store.dispatch({\n      type: this.actionTypes.unregistered,\n    });\n  }\n\n  @proxify\n  async disconnect() {\n    this._sipInstanceId = null;\n    await this._disconnect();\n  }\n\n  async _playExtendedControls(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.playing;\n    const controls = session.__rc_extendedControls.slice();\n    for (let i = 0, len = controls.length; i < len; i += 1) {\n      if (\n        session.__rc_extendedControlStatus === extendedControlStatus.playing\n      ) {\n        if (controls[i] === ',') {\n          await sleep(2000);\n        } else {\n          await this._sendDTMF(controls[i], session);\n        }\n      } else {\n        return;\n      }\n    }\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.__rc_callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.__rc_callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      this._onCallStart(session);\n      if (\n        session.__rc_extendedControls &&\n        session.__rc_extendedControlStatus === extendedControlStatus.pending\n      ) {\n        this._playExtendedControls(session);\n      }\n    });\n    session.on('progress', (incomingResponse) => {\n      console.log('progress...');\n      session.__rc_callStatus = sessionStatus.connecting;\n      extractHeadersData(session, incomingResponse.headers);\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      console.log('Event: replaced', newSession);\n      session.__rc_callStatus = sessionStatus.replaced;\n      newSession.__rc_callStatus = sessionStatus.connected;\n      newSession.__rc_direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.__rc_isOnMute = true;\n      session.__rc_callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.__rc_isOnMute = false;\n      session.__rc_callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('SessionDescriptionHandler-created', () => {\n      session.sessionDescriptionHandler.on('userMediaFailed', () => {\n        this._audioSettings.onGetUserMediaError();\n      });\n    });\n  }\n\n  _onInvite(session) {\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_direction = callDirections.inbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const sipSession = this._sessions.get(sessionId);\n    const session = this.sessions.find((session) => session.id === sessionId);\n    if (!session || !isRing(session)) {\n      return;\n    }\n    try {\n      await this._holdOtherSession(sessionId);\n      this._onAccepted(sipSession, 'inbound');\n      await sipSession.accept(this.acceptOptions);\n      this.store.dispatch({\n        // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      if (e.code !== INCOMING_CALL_INVALID_STATE_ERROR_CODE) {\n        // FIXME:\n        // 2 means the call is answered\n        this._onCallEnd(sipSession);\n      }\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session || session.__rc_callStatus === sessionStatus.finished) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      let validatedResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        validatedResult = validateNumbers(\n          [forwardNumber],\n          this._regionSettings,\n          this._brand.id,\n        );\n        validPhoneNumber = validatedResult[0];\n      } else {\n        validatedResult = await this._numberValidate.validateNumbers([\n          forwardNumber,\n        ]);\n        if (!validatedResult.result) {\n          validatedResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          return false;\n        }\n        validPhoneNumber =\n          validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      }\n      session.__rc_isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      this._addTrackAfterForward();\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError,\n      });\n      this._addTrackAfterForward();\n      return false;\n    }\n  }\n\n  _addTrackAfterForward() {\n    if (this.activeSession && !this.activeSession.isOnHold) {\n      const rawActiveSession = this._sessions.get(this.activeSession.id);\n      this._addTrack(rawActiveSession);\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.__rc_isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError,\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.localHold) {\n      return true;\n    }\n    try {\n      await session.hold();\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._updateSessions();\n      this._onCallHold(session);\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError,\n      });\n      return false;\n    }\n  }\n\n  async _holdOtherSession(currentSessionId) {\n    await Promise.all(\n      Array.from(this._sessions, async ([sessionId, session]) => {\n        if (currentSessionId === sessionId) {\n          return;\n        }\n        if (session.localHold) {\n          return;\n        }\n        if (session.__rc_callStatus === sessionStatus.connecting) {\n          return;\n        }\n        try {\n          await session.hold();\n        } catch (e) {\n          console.error('Hold call fail');\n          throw e;\n        }\n        session.__rc_callStatus = sessionStatus.onHold;\n        this._onCallHold(session);\n      }),\n    );\n    this._updateSessions();\n    // update cached sessions\n    this.store.dispatch({\n      type: this.actionTypes.onholdCachedSession,\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.localHold) {\n        await this._holdOtherSession(session.id);\n        this._onBeforeCallResume(session);\n        await session.unhold();\n        session.__rc_callStatus = sessionStatus.connected;\n        this._updateSessions();\n        this._onCallResume(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.__rc_callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled,\n        });\n        // Disabled phone recording\n        session.__rc_recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code,\n        },\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      const result = await session.park();\n      console.log('Parked');\n      if (result['park extension']) {\n        this._alert.success({\n          message: webphoneMessages.parked,\n          payload: {\n            parkedNumber: `*${result['park extension']}`,\n          },\n          ttl: 0,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      let numberResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        numberResult = validateNumbers(\n          [transferNumber],\n          this._regionSettings,\n          this._brand.id,\n        );\n        validPhoneNumber = numberResult && numberResult[0];\n      } else {\n        numberResult = await this._numberValidate.validateNumbers([\n          transferNumber,\n        ]);\n        if (!numberResult.result) {\n          numberResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          session.__rc_isOnTransfer = false;\n          this._updateSessions();\n          return;\n        }\n        validPhoneNumber =\n          numberResult.numbers[0] && numberResult.numbers[0].e164;\n      }\n      await session.transfer(validPhoneNumber);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async startWarmTransfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      const numberResult = validateNumbers(\n        [transferNumber],\n        this._regionSettings,\n        this._brand.id,\n      );\n      const validPhoneNumber = numberResult && numberResult[0];\n      const fromNumber =\n        session.__rc_direction === callDirections.outbound\n          ? session.request.from.uri.user\n          : session.request.to.uri.user;\n      await this.makeCall({\n        toNumber: validPhoneNumber,\n        fromNumber,\n        homeCountryId: this._regionSettings.homeCountryId,\n        extendedControls: '',\n        transferSessionId: sessionId,\n      });\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async completeWarmTransfer(newSessionId) {\n    const newSession = this._sessions.get(newSessionId);\n    if (!newSession) {\n      return;\n    }\n    const oldSessionId = newSession.__rc_transferSessionId;\n    const oldSession = this._sessions.get(oldSessionId);\n    if (!oldSession) {\n      return;\n    }\n    newSession.__rc_isOnTransfer = true;\n    this._updateSessions();\n    try {\n      await oldSession.warmTransfer(newSession);\n    } catch (e) {\n      console.error(e);\n      newSession.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.__rc_isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.__rc_isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError,\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async _sendDTMF(dtmfValue, session) {\n    try {\n      await session.dtmf(dtmfValue, 100);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (session) {\n      await this._sendDTMF(dtmfValue, session);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._onBeforeCallEnd(session);\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError,\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _addTrack(rawSession) {\n    if (rawSession) {\n      rawSession.addTrack(this._remoteVideo, this._localVideo);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  async _invite(\n    toNumber,\n    { inviteOptions, extendedControls, transferSessionId },\n  ) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n\n    if (\n      toNumber.length > 6 &&\n      (!this._availabilityMonitor || !this._availabilityMonitor.isVoIPOnlyMode)\n    ) {\n      const phoneLines = await this._fetchDL();\n      if (phoneLines.length === 0) {\n        this._alert.warning({\n          message: webphoneErrors.noOutboundCallWithoutDL,\n        });\n        return null;\n      }\n    }\n\n    await this._holdOtherSession();\n    const session = this._webphone.userAgent.invite(toNumber, inviteOptions);\n    session.__rc_direction = callDirections.outbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_fromNumber = inviteOptions.fromNumber;\n    session.__rc_extendedControls = extendedControls;\n    session.__rc_extendedControlStatus = extendedControlStatus.pending;\n    session.__rc_transferSessionId = transferSessionId;\n    this._onAccepted(session);\n    this._onCallInit(session);\n    return session;\n  }\n\n  /**\n   * start an outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({\n    toNumber,\n    fromNumber,\n    homeCountryId,\n    extendedControls,\n    transferSessionId,\n  }) {\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n    };\n    const result = await this._invite(toNumber, {\n      inviteOptions,\n      extendedControls,\n      transferSessionId,\n    });\n    return result;\n  }\n\n  /**\n   * switch a active call into web phone session.\n   */\n  @proxify\n  async switchCall({ id, from, direction, to, sipData }, homeCountryId) {\n    const extraHeaders = [];\n    extraHeaders.push(\n      `Replaces: ${id};to-tag=${sipData.fromTag};from-tag=${sipData.toTag}`,\n    );\n    extraHeaders.push('RC-call-type: replace');\n    const toNumber =\n      direction === callDirections.outbound ? to.phoneNumber : from.phoneNumber;\n    const fromNumber =\n      direction === callDirections.outbound ? from.phoneNumber : to.phoneNumber;\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n      extraHeaders,\n    };\n    const session = await this._invite(toNumber, {\n      inviteOptions,\n    });\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  setSessionCaching(sessionIds) {\n    this.store.dispatch({\n      type: this.actionTypes.setSessionCaching,\n      cachingSessionIds: sessionIds,\n    });\n  }\n\n  @proxify\n  clearSessionCaching() {\n    this.store.dispatch({\n      type: this.actionTypes.clearSessionCaching,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_minimized = !session.__rc_minimized;\n      this._updateSessions();\n    });\n  }\n\n  _setActiveWebphoneActiveCallId(session) {\n    if (!this._disconnectOnInactive) {\n      return;\n    }\n    const currentId = localStorage.getItem(this._activeWebphoneActiveCallKey);\n    if (currentId !== session.id) {\n      localStorage.setItem(this._activeWebphoneActiveCallKey, session.id);\n    }\n  }\n\n  _onCallInit(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callInit,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    this._eventEmitter.emit(\n      EVENTS.callInit,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callStart,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    this._eventEmitter.emit(\n      EVENTS.callRing,\n      normalizedSession,\n      this.ringSession,\n    );\n  }\n\n  _onBeforeCallEnd(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallEnd,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallEnd(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    if (!normalizedSession) {\n      return;\n    }\n    if (session.__rc_transferSessionId) {\n      const transferSession = this._sessions.get(\n        session.__rc_transferSessionId,\n      );\n      if (transferSession) {\n        transferSession.__rc_isOnTransfer = false;\n      }\n    }\n    this._removeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callEnd,\n      normalizedSession,\n      this.activeSession,\n      this.ringSession,\n    );\n    this._releaseVideoElementsOnSessionsEmpty();\n    this._reconnectWebphoneIfNecessaryOnSessionsEmpty();\n    this._makeWebphoneInactiveOnSessionsEmpty();\n  }\n\n  _onBeforeCallResume(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallResume,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallResume(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callResume,\n      session: normalizedSession,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callResume,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallHold(session) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.callHold,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) {\n      return;\n    }\n    this._alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode,\n      },\n    });\n  }\n\n  onCallStart(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, handler);\n    }\n  }\n\n  onCallInit(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, handler);\n    }\n  }\n\n  onCallRing(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, handler);\n    }\n  }\n\n  onCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, handler);\n    }\n  }\n\n  onBeforeCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, handler);\n    }\n  }\n\n  onCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, handler);\n    }\n  }\n\n  onCallHold(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, handler);\n    }\n  }\n\n  onBeforeCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, handler);\n    }\n  }\n\n  onWebphoneRegistered(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.webphoneRegistered, handler);\n      return () => {\n        this._eventEmitter.off(EVENTS.webphoneRegistered, handler);\n      };\n    }\n  }\n\n  onWebphoneUnregistered(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.webphoneUnregistered, handler);\n      return () => {\n        this._eventEmitter.off(EVENTS.webphoneUnregistered, handler);\n      };\n    }\n  }\n\n  loadAudio() {\n    if (\n      this._webphone &&\n      this._webphone.userAgent &&\n      this._webphone.userAgent.audioHelper\n    ) {\n      this._webphone.userAgent.audioHelper.loadAudio({\n        incoming: this.incomingAudio,\n        outgoing: this.outgoingAudio,\n      });\n    }\n  }\n\n  @proxify\n  setOutgoingAudio({ fileName, dataUrl }) {\n    // TODO validate filePath?\n    this.store.dispatch({\n      type: this.actionTypes.setOutgoingAudio,\n      fileName,\n      dataUrl,\n    });\n    this.loadAudio();\n  }\n\n  @proxify\n  resetOutgoingAudio() {\n    this.store.dispatch({\n      type: this.actionTypes.resetOutgoingAudio,\n    });\n    this.loadAudio();\n  }\n\n  @proxify\n  setIncomingAudio({ fileName, dataUrl }) {\n    // TODO validate filePath?\n    this.store.dispatch({\n      type: this.actionTypes.setIncomingAudio,\n      fileName,\n      dataUrl,\n    });\n    this.loadAudio();\n  }\n\n  @proxify\n  resetIncomingAudio() {\n    this.store.dispatch({\n      type: this.actionTypes.resetIncomingAudio,\n    });\n    this.loadAudio();\n  }\n\n  @proxify\n  setRingtone({\n    incomingAudio,\n    incomingAudioFile,\n    outgoingAudio,\n    outgoingAudioFile,\n  }) {\n    const isIncomingDefault =\n      incomingAudioFile === DEFAULT_AUDIO &&\n      incomingAudio === defaultIncomingAudio;\n    const isOutgoingDefault =\n      outgoingAudioFile === DEFAULT_AUDIO &&\n      outgoingAudio === defaultOutgoingAudio;\n    this.store.dispatch({\n      type: this.actionTypes.setRingtone,\n      incomingAudio: isIncomingDefault ? null : incomingAudio,\n      incomingAudioFile: isIncomingDefault ? DEFAULT_AUDIO : incomingAudioFile,\n      outgoingAudio: isOutgoingDefault ? null : outgoingAudio,\n      outgoingAudioFile: isOutgoingDefault ? DEFAULT_AUDIO : outgoingAudioFile,\n    });\n    this.loadAudio();\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  @selector\n  sessionPhoneNumbers = [\n    () => this.sessions,\n    (sessions) => {\n      const outputs = [];\n      sessions.forEach((session) => {\n        outputs.push(session.to);\n        outputs.push(session.from);\n      });\n      return outputs;\n    },\n  ];\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  @selector\n  activeSession = [\n    () => this.activeSessionId,\n    () => this.sessions,\n    (activeSessionId, sessions) => {\n      if (!activeSessionId) {\n        return null;\n      }\n      const activeSession = find(\n        (session) => session.id === activeSessionId,\n        sessions,\n      );\n      return activeSession;\n    },\n  ];\n\n  /**\n   * Current ring session(inbound)\n   */\n  @selector\n  ringSession = [\n    () => this.ringSessionId,\n    () => this.sessions,\n    (ringSessionId, sessions) => {\n      if (!ringSessionId) {\n        return null;\n      }\n      const ringSession = find(\n        (session) => session.id === ringSessionId,\n        sessions,\n      );\n      return ringSession;\n    },\n  ];\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  @selector\n  ringSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => isRing(session), sessions),\n  ];\n\n  @selector\n  onHoldSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => isOnHold(session), sessions),\n  ];\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  @selector\n  cachedSessions = [\n    () => this.sessions,\n    (sessions) => filter((session) => session.cached, sessions),\n  ];\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._appFeatures.isWebPhoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: {\n            deviceId: this._audioSettings.inputDeviceId,\n          },\n          video: false,\n        },\n      },\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get statusCode() {\n    return this.state.statusCode;\n  }\n\n  get device() {\n    return this.state.device;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get inactiveDisconnecting() {\n    return this.connectionStatus === connectionStatus.inactiveDisconnecting;\n  }\n\n  get inactive() {\n    return this.connectionStatus === connectionStatus.inactive;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get reconnecting() {\n    return this.connectionStatus === connectionStatus.reconnecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get disconnected() {\n    return this.connectionStatus === connectionStatus.disconnected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n\n  get connectError() {\n    return this.connectionStatus === connectionStatus.connectError;\n  }\n\n  /*\n   * Together with `CallingSettings` module to check if webphone is\n   * Unavailable.\n   */\n  get isUnavailable() {\n    return (\n      this.ready &&\n      this._auth.loggedIn &&\n      (!this._audioSettings.userMedia ||\n        this.reconnecting ||\n        this.connectError ||\n        this.inactive)\n    );\n  }\n\n  get incomingAudioFile() {\n    return this._storage.getItem(this._storageKey).incomingAudioFile;\n  }\n\n  get incomingAudioDataUrl() {\n    return this._storage.getItem(this._storageKey).incomingAudioDataUrl;\n  }\n\n  get incomingAudio() {\n    return this.incomingAudioDataUrl || defaultIncomingAudio;\n  }\n\n  get outgoingAudioFile() {\n    return this._storage.getItem(this._storageKey).outgoingAudioFile;\n  }\n\n  get outgoingAudioDataUrl() {\n    return this._storage.getItem(this._storageKey).outgoingAudioDataUrl;\n  }\n\n  get outgoingAudio() {\n    return this.outgoingAudioDataUrl || defaultOutgoingAudio;\n  }\n\n  get defaultIncomingAudio() {\n    return defaultIncomingAudio;\n  }\n\n  get defaultOutgoingAudio() {\n    return defaultOutgoingAudio;\n  }\n\n  get defaultIncomingAudioFile() {\n    return DEFAULT_AUDIO;\n  }\n\n  get defaultOutgoingAudioFile() {\n    return DEFAULT_AUDIO;\n  }\n\n  @selector\n  ringingCallOnView = [\n    () => this.ringSessions,\n    (sessions) => find((session) => !session.minimized, sessions),\n  ];\n}\n"],"file":"index.js"}