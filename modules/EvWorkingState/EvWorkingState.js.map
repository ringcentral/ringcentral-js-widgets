{"version":3,"file":"EvWorkingState.js","names":["_di","require","_core","_enums","_callbackTypes","_dec","_dec2","_dec3","_dec4","_dec5","_dec6","_dec7","_class","_class2","_descriptor","_descriptor2","_descriptor3","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","e","n","ownKeys","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","asyncGeneratorStep","c","i","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","_initializerDefineProperty","l","initializer","_classCallCheck","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","toPrimitive","String","Number","_inherits","create","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","reverse","reduce","_initializerWarningHelper","Error","PendingDisposition","rank","agentState","agentAuxState","EvWorkingState","Module","deps","dep","optional","computed","that","agentConfig","agentSettings","workingState","isPendingDisposition","availableAgentStates","agentStates","_RcModuleV","_super","_this","enableCache","storageKey","_deps","evAgentSession","onTriggerConfig","_agentConfig$agentSet","evAuth","agent","initLoginState","evClient","setAgentState","initLoginStateLabel","tabManagerEnabled","tabManager","send","tabManagerEvents","RESET_WORKING_STATE","resetWorkingState","agentStateTypes","breakAfterCall","time","Date","now","setIsPendingDisposition","setTime","onInitOnce","_this2","evCallMonitor","onCallEnded","evSubscription","subscribe","EvCallbackTypes","AGENT_STATE","_ref","currentAuxState","currentState","_onStateChange","regeneratorRuntime","mark","_callee","event","wrap","_callee$","_context","prev","next","ready","t0","abrupt","stop","onStateChange","changeWorkingState","_ref2","isOnCall","transition","engaged","indexOf","presence","calls","onBreak","alert","danger","message","messageTypes","INVALID_STATE_CHANGE","allowDuplicates","ttl","setWorkingStateWorking","state","workingAgentState","alertOverBreakTime","OVER_BREAK_TIME","get","_this$_deps$tabManage","enable","isOnBreakOrAway","parseInt","maxBreakTime","isOnLunch","maxLunchTime","away","lunch","defaultAgentStateTexts","concat","find","working","RcModuleV2","storage","available","action","exports"],"sources":["modules/EvWorkingState/EvWorkingState.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\n\nimport type { DefaultAgentStateTexts } from '../../enums';\nimport {\n  agentStateTypes,\n  defaultAgentStateTexts,\n  messageTypes,\n  tabManagerEvents,\n} from '../../enums';\nimport type { EvAgentState, EvAvailableAgentState } from '../../lib/EvClient';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums/callbackTypes';\n\nimport type { Deps, State, WorkingState } from './EvWorkingState.interface';\n\nconst PendingDisposition: EvAvailableAgentState = {\n  // TODO: here seems need i18n\n  rank: '0',\n  agentState: 'PENDING-DISPOSITION',\n  agentAuxState: 'Pending Disposition',\n};\n\n@Module({\n  name: 'EvWorkingState',\n  deps: [\n    'Auth',\n    'EvAuth',\n    'EvSubscription',\n    'EvClient',\n    'Presence',\n    'EvCallMonitor',\n    'Alert',\n    'Storage',\n    'EvAgentSession',\n    'TabManager',\n    { dep: 'EvWorkingStateOptions', optional: true },\n  ],\n})\nclass EvWorkingState extends RcModuleV2<Deps> implements WorkingState {\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvWorkingState',\n    });\n    this._deps.evAgentSession.onTriggerConfig(() => {\n      const { agentConfig } = this._deps.evAuth.agent;\n      if (agentConfig?.agentSettings?.initLoginState) {\n        // if that tab is not activity, that wi\n        this._deps.evClient.setAgentState(\n          agentConfig.agentSettings.initLoginState,\n          agentConfig.agentSettings.initLoginStateLabel,\n        );\n      }\n\n      if (this.tabManagerEnabled) {\n        this._deps.tabManager.send(tabManagerEvents.RESET_WORKING_STATE);\n      }\n      this.resetWorkingState();\n    });\n  }\n\n  get tabManagerEnabled() {\n    return this._deps.tabManager?.enable;\n  }\n\n  @storage\n  @state\n  time = Date.now();\n\n  @storage\n  @state\n  agentState: EvAgentState = {\n    agentState: agentStateTypes.available,\n    agentAuxState: 'Available',\n  };\n\n  @storage\n  @state\n  isPendingDisposition = false;\n\n  get agentConfig() {\n    return this._deps.evAuth.agent.agentConfig;\n  }\n\n  @computed((that: EvWorkingState) => [\n    that.agentConfig.agentSettings,\n    that.workingState.agentState,\n  ])\n  get maxBreakTime() {\n    if (this.isOnBreakOrAway) {\n      return (\n        parseInt(this.agentConfig.agentSettings.maxBreakTime || '0', 10) *\n        60 *\n        1000\n      );\n    }\n    if (this.isOnLunch) {\n      return (\n        parseInt(this.agentConfig.agentSettings.maxLunchTime || '0', 10) *\n        60 *\n        1000\n      );\n    }\n    return 1000 * 60;\n  }\n\n  @computed((that: EvWorkingState) => [that.workingState.agentState])\n  get isOnBreakOrAway() {\n    return (\n      [agentStateTypes.away, agentStateTypes.onBreak].indexOf(\n        this.workingState.agentState,\n      ) > -1\n    );\n  }\n\n  @computed((that: EvWorkingState) => [that.workingState.agentState])\n  get isOnLunch() {\n    return this.workingState.agentState === agentStateTypes.lunch;\n  }\n\n  @computed((that: EvWorkingState) => [\n    that.agentState,\n    that.isPendingDisposition,\n  ])\n  get workingState() {\n    return this.isPendingDisposition\n      ? PendingDisposition\n      : {\n          ...this.agentState,\n          agentAuxState:\n            this.agentState.agentAuxState ||\n            defaultAgentStateTexts[\n              this.agentState.agentState as DefaultAgentStateTexts\n            ],\n        };\n  }\n\n  @computed((that: EvWorkingState) => [\n    that.agentConfig,\n    that.isPendingDisposition,\n    that.agentConfig.agentSettings.availableAgentStates,\n  ])\n  get agentStates() {\n    const { availableAgentStates } = this.agentConfig.agentSettings;\n\n    const agentStates = this.isPendingDisposition\n      ? [PendingDisposition, ...availableAgentStates]\n      : availableAgentStates;\n\n    return this.agentConfig ? agentStates : [];\n  }\n\n  @computed((that: EvWorkingState) => [that.agentStates])\n  get workingAgentState() {\n    return this.agentStates.find(\n      (state) => state.agentState === agentStateTypes.working,\n    );\n  }\n\n  @action\n  setAgentState(agentState: EvAgentState) {\n    this.agentState = agentState;\n    if (agentState.agentState !== agentStateTypes.breakAfterCall) {\n      this.time = Date.now();\n    }\n  }\n\n  @action\n  setIsPendingDisposition(isPendingDisposition: State['isPendingDisposition']) {\n    this.isPendingDisposition = isPendingDisposition;\n  }\n\n  @action\n  resetWorkingState() {\n    this.time = Date.now();\n    this.isPendingDisposition = false;\n  }\n\n  @action\n  setTime(time: number) {\n    this.time = time;\n  }\n\n  override onInitOnce() {\n    this._deps.evCallMonitor.onCallEnded(() => {\n      this.setIsPendingDisposition(true);\n    });\n\n    this._deps.evSubscription.subscribe(\n      EvCallbackTypes.AGENT_STATE,\n      ({ currentAuxState, currentState }) => {\n        if (\n          this.agentState.agentState !== currentState ||\n          this.agentState.agentAuxState !== currentAuxState\n        ) {\n          this.setAgentState({\n            agentState: currentState,\n            agentAuxState: currentAuxState,\n          });\n        }\n      },\n    );\n  }\n\n  override async onStateChange() {\n    if (this.ready && this.tabManagerEnabled && this._deps.tabManager.ready) {\n      const { event } = this._deps.tabManager;\n      if (event) {\n        switch (event.name) {\n          case tabManagerEvents.RESET_WORKING_STATE:\n            this.resetWorkingState();\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }\n\n  changeWorkingState({ agentState, agentAuxState }: EvAgentState) {\n    const isOnCall =\n      [agentStateTypes.transition, agentStateTypes.engaged].indexOf(\n        this.agentState.agentState,\n      ) > -1 || this._deps.presence.calls.length > 0;\n\n    if (isOnCall && agentState !== agentStateTypes.onBreak) {\n      return this._deps.alert.danger({\n        message: messageTypes.INVALID_STATE_CHANGE,\n        allowDuplicates: false,\n        ttl: 0,\n      });\n    }\n\n    this._deps.evClient.setAgentState(agentState, agentAuxState);\n  }\n\n  setWorkingStateWorking() {\n    const state = this.workingAgentState;\n    if (state) {\n      this.changeWorkingState(state);\n    }\n  }\n\n  alertOverBreakTime() {\n    this._deps.alert.danger({\n      message: messageTypes.OVER_BREAK_TIME,\n      allowDuplicates: false,\n      ttl: 0,\n    });\n  }\n}\n\nexport { EvWorkingState };\n"],"mappings":"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","ignoreList":[]}