{"version":3,"sources":["modules/FeedbackUI/FeedbackUI.ts"],"names":["FeedbackUI","name","deps","_deps","locale","feedback","brand","brandName","currentLocale","email","topic","subject","description","sendFeedback","routerInteraction","onBackClick","goBack","onEmailChange","value","updateEmail","onTopicChange","updateTopic","onSubjectChange","updateSubject","onDescriptionChange","updateDescription","onRevertClick","clean","mailToUrl","RcUIModuleV2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAeaA,U,WAJZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,YADA;AAENC,EAAAA,IAAI,EAAE,CAAC,mBAAD,EAAsB,UAAtB,EAAkC,QAAlC,EAA4C,OAA5C;AAFA,CAAP,C;;;;;AAKC,sBAAYA,IAAZ,EAAwB;AAAA;;AAAA,6BAChB;AAAEA,MAAAA,IAAI,EAAJA;AAAF,KADgB;AAEvB;;;;iCAEyC;AAAA,wBACJ,KAAKC,KADD;AAAA,UAChCC,MADgC,eAChCA,MADgC;AAAA,UACxBC,QADwB,eACxBA,QADwB;AAAA,UACdC,KADc,eACdA,KADc;AAExC,aAAO;AACLC,QAAAA,SAAS,EAAED,KAAK,CAACL,IADZ;AAELO,QAAAA,aAAa,EAAEJ,MAAM,CAACI,aAFjB;AAGLC,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAHX;AAILC,QAAAA,KAAK,EAAEL,QAAQ,CAACK,KAJX;AAKLC,QAAAA,OAAO,EAAEN,QAAQ,CAACM,OALb;AAMLC,QAAAA,WAAW,EAAEP,QAAQ,CAACO;AANjB,OAAP;AAQD;;;yCAI2D;AAAA,UAD1DC,aAC0D,QAD1DA,YAC0D;AAAA,yBAClB,KAAKV,KADa;AAAA,UAClDE,QADkD,gBAClDA,QADkD;AAAA,UACxCS,iBADwC,gBACxCA,iBADwC;AAE1D,aAAO;AACLC,QAAAA,WAAW,EAAE,uBAAM;AACjBD,UAAAA,iBAAiB,CAACE,MAAlB;AACD,SAHI;AAILC,QAAAA,aAAa,EAAE,uBAACC,KAAD,EAAW;AACxBb,UAAAA,QAAQ,CAACc,WAAT,CAAqBD,KAArB;AACD,SANI;AAOLE,QAAAA,aAAa,EAAE,uBAACF,KAAD,EAAW;AACxBb,UAAAA,QAAQ,CAACgB,WAAT,CAAqBH,KAArB;AACD,SATI;AAULI,QAAAA,eAAe,EAAE,yBAACJ,KAAD,EAAW;AAC1Bb,UAAAA,QAAQ,CAACkB,aAAT,CAAuBL,KAAvB;AACD,SAZI;AAaLM,QAAAA,mBAAmB,EAAE,6BAACN,KAAD,EAAW;AAC9Bb,UAAAA,QAAQ,CAACoB,iBAAT,CAA2BP,KAA3B;AACD,SAfI;AAgBLQ,QAAAA,aAAa,EAAE,yBAAM;AACnBrB,UAAAA,QAAQ,CAACsB,KAAT;AACD,SAlBI;AAmBLd,QAAAA,YAAY,EAAE,sBAACe,SAAD,EAAe;AAC3B,cAAIf,aAAJ,EAAkB;AAChBA,YAAAA,aAAY,CAACe,SAAD,CAAZ;;AACA;AACD;;AACDvB,UAAAA,QAAQ,CAACQ,YAAT,CAAsBe,SAAtB;AACD;AAzBI,OAAP;AA2BD;;;;EAhD6BC,kB","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  RcUIModuleV2,\n  UIFunctions,\n  UIProps,\n} from '@ringcentral-integration/core';\nimport {\n  Deps,\n  FeedbackContainerProps,\n  FeedbackPanelProps,\n} from './FeedbackUI.interface';\n\n@Module({\n  name: 'FeedbackUI',\n  deps: ['RouterInteraction', 'Feedback', 'Locale', 'Brand'],\n})\nexport class FeedbackUI extends RcUIModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({ deps });\n  }\n\n  getUIProps(): UIProps<FeedbackPanelProps> {\n    const { locale, feedback, brand } = this._deps;\n    return {\n      brandName: brand.name,\n      currentLocale: locale.currentLocale,\n      email: feedback.email,\n      topic: feedback.topic,\n      subject: feedback.subject,\n      description: feedback.description,\n    };\n  }\n\n  getUIFunctions({\n    sendFeedback,\n  }: FeedbackContainerProps): UIFunctions<FeedbackPanelProps> {\n    const { feedback, routerInteraction } = this._deps;\n    return {\n      onBackClick: () => {\n        routerInteraction.goBack();\n      },\n      onEmailChange: (value) => {\n        feedback.updateEmail(value);\n      },\n      onTopicChange: (value) => {\n        feedback.updateTopic(value);\n      },\n      onSubjectChange: (value) => {\n        feedback.updateSubject(value);\n      },\n      onDescriptionChange: (value) => {\n        feedback.updateDescription(value);\n      },\n      onRevertClick: () => {\n        feedback.clean();\n      },\n      sendFeedback: (mailToUrl) => {\n        if (sendFeedback) {\n          sendFeedback(mailToUrl);\n          return;\n        }\n        feedback.sendFeedback(mailToUrl);\n      },\n    };\n  }\n}\n"],"file":"FeedbackUI.js"}