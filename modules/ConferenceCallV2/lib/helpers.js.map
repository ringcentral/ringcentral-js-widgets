{"version":3,"sources":["modules/ConferenceCallV2/lib/helpers.ts"],"names":["ascendSortParties","parties","last","next","id","split","party","conferenceRole","toLowerCase","host","mergeParty","newParties","oldParties","oldParty","newParty"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AAEO,SAASA,iBAAT,CAA2BC,OAA3B,EAAsD;AAC3D,SAAO,iBACL,UAACC,IAAD,EAAcC,IAAd;AAAA,WACE,CAACD,IAAI,CAACE,EAAL,CAAQC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,GAAyB,CAACF,IAAI,CAACC,EAAL,CAAQC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAD5B;AAAA,GADK,EAGL,mBACE,UAACC,KAAD;AAAA,WAAWA,KAAK,CAACC,cAAN,CAAqBC,WAArB,OAAuCD,0BAAeE,IAAjE;AAAA,GADF,EAEER,OAFF,CAHK,CAAP;AAQD;;AAEM,SAASS,UAAT,CAAoBC,UAApB,EAAyCC,UAAzC,EAA8D;AACnE,SAAO,gBAAI,UAACC,QAAD,EAAc;AACvB,QAAMC,QAAQ,GAAG,iBAAK,UAACA,QAAD,EAAc;AAClC,UAAIA,QAAQ,CAACV,EAAT,KAAgBS,QAAQ,CAACT,EAA7B,EAAiC;AAC/B,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KALgB,EAKdO,UALc,CAAjB;;AAMA,QAAIG,QAAJ,EAAc;AACZ,aAAOA,QAAP;AACD;;AACD,WAAOD,QAAP;AACD,GAXM,EAWJD,UAXI,CAAP;AAYD","sourcesContent":["import { filter, find, map, sort } from 'ramda';\n\nimport { Party } from '../ConferenceCall.interfaces';\nimport { conferenceRole } from './constants';\n\nexport function ascendSortParties(parties: Party[]): Party[] {\n  return sort(\n    (last: Party, next: Party) =>\n      +last.id.split('-')[1] - +next.id.split('-')[1],\n    filter(\n      (party) => party.conferenceRole.toLowerCase() !== conferenceRole.host,\n      parties,\n    ),\n  );\n}\n\nexport function mergeParty(newParties: Party[], oldParties: Party[]) {\n  return map((oldParty) => {\n    const newParty = find((newParty) => {\n      if (newParty.id === oldParty.id) {\n        return true;\n      }\n      return false;\n    }, newParties);\n    if (newParty) {\n      return newParty;\n    }\n    return oldParty;\n  }, oldParties);\n}\n"],"file":"helpers.js"}