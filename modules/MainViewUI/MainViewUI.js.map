{"version":3,"sources":["modules/MainViewUI/MainViewUI.ts"],"names":["MainViewUI","name","deps","that","_deps","evWorkingState","agentStates","workingState","evSettings","isOffhooking","evCallMonitor","isOnCall","evCall","isDialing","evAuth","agentPermissions","allowOffHook","oldIntervalTime","intervalTime","isBreak","isOverOneMinute","_checkOverTime","agentStatesColors","agentState","maxBreakTime","parseInt","useCeil","alertOverBreakTime","currentStateIndex","currentPath","routerInteraction","stateText","time","disabled","isPendingDisposition","isOffHookDisable","offhookState","isOffhook","isWide","environment","hideOffHookBtn","currentLocale","locale","goTo","path","push","changeWorkingState","state","getTimerText","getStateColor","handleWithIntervalTime","offhook","offHook","map","color","title","agentAuxState","findIndex","isOnBreakOrAway","isOnLunch","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { computed, RcUIModuleV2 } from '@ringcentral-integration/core';\n\nimport { agentStatesColors } from '../../enums';\nimport {\n  EvMainViewUIFunctions,\n  EvMainViewUIProps,\n} from '../../interfaces/EvMainViewUI.interface';\nimport { handleToClockTime } from '../../lib/time';\nimport { Deps, MainView } from './MainViewUI.interface';\n\n@Module({\n  name: 'MainViewUI',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'EvWorkingState',\n    'EvSettings',\n    'EvCallMonitor',\n    'EvAuth',\n    'Environment',\n    'EvCall',\n  ],\n})\nclass MainViewUI extends RcUIModuleV2<Deps> implements MainView {\n  public oldIntervalTime?: number;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  get maxBreakTime() {\n    return this._deps.evWorkingState.maxBreakTime;\n  }\n\n  @computed((that: MainViewUI) => [that._deps.evWorkingState.agentStates])\n  get agentStates() {\n    return this._deps.evWorkingState.agentStates.map((state) => ({\n      ...state,\n      color: agentStatesColors[state.agentState],\n      title: state.agentAuxState,\n    }));\n  }\n\n  @computed((that: MainViewUI) => [\n    that.agentStates,\n    that._deps.evWorkingState.workingState,\n  ])\n  get currentStateIndex() {\n    const { workingState } = this._deps.evWorkingState;\n    return this.agentStates.findIndex(\n      (state) =>\n        state.agentAuxState === workingState.agentAuxState &&\n        state.agentState === workingState.agentState,\n    );\n  }\n\n  @computed((that: MainViewUI) => [that._deps.evWorkingState.workingState])\n  get stateText() {\n    const { workingState } = this._deps.evWorkingState;\n    return workingState.agentAuxState || workingState.agentState;\n  }\n\n  @computed((that: MainViewUI) => [that._deps.evWorkingState.workingState])\n  get isBreak() {\n    const { isOnBreakOrAway, isOnLunch } = this._deps.evWorkingState;\n    return isOnBreakOrAway || isOnLunch;\n  }\n\n  @computed((that: MainViewUI) => [\n    that._deps.evSettings.isOffhooking,\n    that._deps.evCallMonitor.isOnCall,\n    that._deps.evCall.isDialing,\n    that._deps.evAuth.agentPermissions.allowOffHook,\n  ])\n  get isOffHookDisable() {\n    return (\n      this._deps.evSettings.isOffhooking ||\n      this._deps.evCallMonitor.isOnCall ||\n      this._deps.evCall.isDialing ||\n      !this._deps.evAuth.agentPermissions.allowOffHook\n    );\n  }\n\n  @computed((that: MainViewUI) => [\n    that._deps.evAuth.agentPermissions.allowOffHook,\n  ])\n  get hideOffHookBtn() {\n    return !this._deps.evAuth.agentPermissions.allowOffHook;\n  }\n\n  getStateColor(intervalTime: number) {\n    if (this.isBreak) {\n      const isOverOneMinute = this._checkOverTime(intervalTime);\n\n      if (isOverOneMinute) {\n        return 'red';\n      }\n    }\n\n    return (\n      agentStatesColors[this._deps.evWorkingState.workingState.agentState] ||\n      'grey'\n    );\n  }\n\n  getTimerText(intervalTime: number) {\n    if (this._checkOverTime(intervalTime)) {\n      return `-${handleToClockTime(intervalTime - this.maxBreakTime)}`;\n    }\n    if (this.isBreak && this.maxBreakTime > 0) {\n      intervalTime = parseInt(`${this.maxBreakTime - intervalTime}`, 10);\n      return handleToClockTime(intervalTime, { useCeil: true });\n    }\n    return handleToClockTime(intervalTime);\n  }\n\n  handleWithIntervalTime(intervalTime: number) {\n    const isOverOneMinute = this._checkOverTime(intervalTime);\n    // TODO think about when browser is block.\n    if (\n      this.oldIntervalTime < this.maxBreakTime &&\n      isOverOneMinute &&\n      this.isBreak\n    ) {\n      this._deps.evWorkingState.alertOverBreakTime();\n    }\n    this.oldIntervalTime = intervalTime;\n  }\n\n  private _checkOverTime(intervalTime: number) {\n    return (\n      this.isBreak && this.maxBreakTime > 0 && intervalTime > this.maxBreakTime\n    );\n  }\n\n  getUIProps(): EvMainViewUIProps {\n    return {\n      agentStates: this.agentStates,\n      agentState: this._deps.evWorkingState.agentState,\n      currentStateIndex: this.currentStateIndex,\n      currentPath: this._deps.routerInteraction.currentPath,\n      stateText: this.stateText,\n      time: this._deps.evWorkingState.time,\n      disabled: this._deps.evWorkingState.isPendingDisposition,\n      isOffHookDisable: this.isOffHookDisable,\n      offhookState: this._deps.evSettings.offhookState,\n      isOffhook: this._deps.evSettings.isOffhook,\n      isOffhooking: this._deps.evSettings.isOffhooking,\n      isWide: this._deps.environment.isWide,\n      hideOffHookBtn: this.hideOffHookBtn,\n      currentLocale: this._deps.locale.currentLocale,\n    };\n  }\n\n  getUIFunctions(): EvMainViewUIFunctions {\n    return {\n      goTo: (path: string) => {\n        if (path) {\n          this._deps.routerInteraction.push(path);\n        }\n      },\n      changeWorkingState: (state) =>\n        this._deps.evWorkingState.changeWorkingState(state),\n      getTimerText: (intervalTime: number) => this.getTimerText(intervalTime),\n      getStateColor: (intervalTime: number) => this.getStateColor(intervalTime),\n      handleWithIntervalTime: (intervalTime: number) =>\n        this.handleWithIntervalTime(intervalTime),\n      offhook: () => {\n        if (!this.isOffHookDisable) {\n          this._deps.evSettings.offHook();\n        }\n      },\n    };\n  }\n}\n\nexport { MainViewUI };\n"],"file":"MainViewUI.js"}