{"version":3,"sources":["modules/AddressBookV2/helpers.ts"],"names":["REGX_DECODE","DECODE","decodeName","str","replace","$0","handleText","processAddressBookResponse","data","Array","isArray","records","record","firstName","lastName","uri","getSyncParams","perPage","syncToken","pageId","params","syncType","syncTypes","iSync","fSync"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAIA;;AAGA,IAAMA,WAAW,GAAG,QAApB;AACA,IAAMC,MAA8B,GAAG;AACrC,WAAS,GAD4B;AAErC,YAAU,IAF2B;AAGrC,WAAS,GAH4B;AAIrC,YAAU;AAJ2B,CAAvC;;AAOO,SAASC,UAAT,CAAoBC,GAApB,EAAiC;AACtC,SAAOA,GAAG,CAACC,OAAJ,CAAYJ,WAAZ,EAAyB,UAACK,EAAD,EAAgB;AAC9C,QAAIC,UAAU,GAAGD,EAAjB;;AACA,QAAIJ,MAAM,CAACI,EAAD,CAAV,EAAgB;AACdC,MAAAA,UAAU,GAAGL,MAAM,CAACI,EAAD,CAAnB;AACD;;AACD,WAAOC,UAAP;AACD,GANM,CAAP;AAOD;;AAEM,SAASC,0BAAT,CAAoCC,IAApC,EAA2D;AAChE,MAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,aAAcA,IAAd,uBAAcA,IAAI,CAAEG,OAApB,CAAJ,EAAkC;AAChC,wBAAQ,UAACC,MAAD,EAAY;AAClB,UAAIA,MAAM,CAACC,SAAX,EAAsB;AACpBD,QAAAA,MAAM,CAACC,SAAP,GAAmBX,UAAU,CAACU,MAAM,CAACC,SAAR,CAA7B;AACD;;AACD,UAAID,MAAM,CAACE,QAAX,EAAqB;AACnBF,QAAAA,MAAM,CAACE,QAAP,GAAkBZ,UAAU,CAACU,MAAM,CAACE,QAAR,CAA5B;AACD,OANiB,CAOlB;;;AACA,aAAOF,MAAM,CAACG,GAAd;AACD,KATD,EASGP,IAAI,CAACG,OATR;AAUD;;AACD,SAAOH,IAAP;AACD;;AACM,SAASQ,aAAT;AAI4B;AAAgC;AAAA,MAHjEC,OAGiE,QAHjEA,OAGiE;AAAA,MAFjEC,SAEiE,QAFjEA,SAEiE;AAAA,MADjEC,MACiE,QADjEA,MACiE;AACjE,MAAMC,MAAsB,GAAG;AAC7BH,IAAAA,OAAO,EAAPA;AAD6B,GAA/B;;AAGA,MAAIC,SAAJ,EAAe;AACbE,IAAAA,MAAM,CAACF,SAAP,GAAmBA,SAAnB;AACAE,IAAAA,MAAM,CAACC,QAAP,GAAkBC,qBAAUC,KAA5B;AACD,GAHD,MAGO;AACLH,IAAAA,MAAM,CAACC,QAAP,GAAkBC,qBAAUE,KAA5B;AACD;;AACD,MAAIL,MAAJ,EAAY;AACVC,IAAAA,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AACD;;AACD,SAAOC,MAAP;AACD","sourcesContent":["import { forEach } from 'ramda';\n\nimport { AddressBookSync } from '@rc-ex/core/definitions';\n\nimport { syncTypes } from '../../enums/syncTypes';\nimport { SyncParameters } from './AddressBook.interface';\n\nconst REGX_DECODE = /&\\w+;/g;\nconst DECODE: Record<string, string> = {\n  '&amp;': '&',\n  '&bsol;': '\\\\',\n  '&sol;': '/',\n  '&apos;': \"'\",\n};\n\nexport function decodeName(str: string) {\n  return str.replace(REGX_DECODE, ($0: string) => {\n    let handleText = $0;\n    if (DECODE[$0]) {\n      handleText = DECODE[$0];\n    }\n    return handleText;\n  });\n}\n\nexport function processAddressBookResponse(data: AddressBookSync) {\n  if (Array.isArray(data?.records)) {\n    forEach((record) => {\n      if (record.firstName) {\n        record.firstName = decodeName(record.firstName);\n      }\n      if (record.lastName) {\n        record.lastName = decodeName(record.lastName);\n      }\n      // remove uri from record to reduce size\n      delete record.uri;\n    }, data.records);\n  }\n  return data;\n}\nexport function getSyncParams({\n  perPage,\n  syncToken,\n  pageId,\n}: SyncParameters): SyncParameters /* SyncAddressBookParameters */ {\n  const params: SyncParameters = {\n    perPage,\n  };\n  if (syncToken) {\n    params.syncToken = syncToken;\n    params.syncType = syncTypes.iSync;\n  } else {\n    params.syncType = syncTypes.fSync;\n  }\n  if (pageId) {\n    params.pageId = pageId;\n  }\n  return params;\n}\n"],"file":"helpers.js"}