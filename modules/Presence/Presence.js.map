{"version":3,"file":"Presence.js","names":["_ramda","require","_core","_presenceStatus2","_subscriptionFilters","_callLogHelpers","_debounceThrottle","_di","_proxify","_DataFetcherV","_dndStatus2","_removeIntermediateCall","_dec","_dec2","_dec3","_dec4","_class","_class2","_descriptor","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","_toPropertyKey","configurable","writable","_initializerDefineProperty","property","descriptor","context","initializer","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","desc","slice","reverse","reduce","decorator","_initializerWarningHelper","Error","DEFAULT_TTL","exports","DEFAULT_POLLING_INTERVAL","DEFAULT_FETCH_DELAY","DEFAULT_MAX_FETCH_DELAY","presenceRegExp","detailedPresenceRegExp","acceptCallQueueToggles","dndStatus","takeAllCalls","doNotAcceptDepartmentCalls","Presence","Module","name","deps","dep","optional","computed","_ref","data","_ref2","activeCalls","_ref3","calls","_DataFetcherV2Consume","_super","_deps$presenceOptions","_this","enableCache","storageKey","_debouncedFetchData","_stopWatchingConnectivity","_stopWatchingSubscription","presenceOptions","_presenceOptions$ttl","ttl","_presenceOptions$poll","pollingInterval","_source","DataSource","cleanOnReset","fetchFunction","_fetchFunction","regeneratorRuntime","mark","_callee","response","_data$dndStatus","_data$meetingStatus","meetingStatus","_data$presenceStatus","presenceStatus","_data$telephonyStatus","telephonyStatus","_data$userStatus","userStatus","wrap","_callee$","_context","prev","next","_deps","client","service","platform","get","_endPoint","sent","json","_processRawActiveCalls","totalActiveCalls","Date","now","abrupt","sequence","_sequence","stop","readyCheckFunction","auth","ready","loggedIn","subscription","extensionFeatures","connectivityMonitor","dataFetcherV2","permissionCheckFunction","_checkPermission","register","debounce","fetchData","threshold","_fetchDelay","maxThreshold","_maxFetchDelay","_setLastDndStatus","lastDndStatus","_this$_deps$extension","_this$_deps$extension2","_this$_deps$extension3","features","ReadPresenceStatus","available","_this2","timestamp","map","activeCall","existingCall","find","sessionId","normalizedCall","normalizeStartTime","normalizeFromTo","startTime","offset","Math","min","removeIntermediateCall","_handleSubscription","message","_this$_deps$tabManage","_this$_deps$tabManage2","regExp","_detailed","disableCache","tabManager","active","test","event","body","_message$body$activeC","_message$body$activeC2","_message$body$totalAc","_message$body","_message$body$sequenc","_message$body$dndStat","_message$body$meeting","_message$body$presenc","_message$body$telepho","_message$body$userSta","_calculateLastDndStatus","_updateData","activeCallsLength","onInit","_this3","subscribe","watch","connectivity","_handleConnectivity","_this$_deps$tabManage3","_this$_deps$tabManage4","onReset","_this$_stopWatchingCo","_this$_stopWatchingSu","cancel","newDndStatus","doNotAcceptAnyCalls","_update2","_callee2","params","_this$_deps$extension4","_this$_deps$extension5","ownerId","_ref4","_callee2$","_context2","EditPresenceStatus","put","_update","_x","_updateData2","_callee3","_args3","_callee3$","_context3","updateData","_x2","_getUpdateStatusParams","_this$lastDndStatus","_setAvailable","_callee4","_callee4$","_context4","setAvailable","_setBusy","_callee5","_callee5$","_context5","busy","setBusy","_setDoNotDisturb","_callee6","_callee6$","_context6","setDoNotDisturb","_setInvisible","_callee7","_callee7$","_context7","offline","setInvisible","_setPresence","_callee8","presenceData","_callee8$","_context8","t0","setPresence","_x3","_toggleAcceptCallQueueCalls","_callee9","_this4","index","_callee9$","_context9","findIndex","queueStatus","toggleAcceptCallQueueCalls","_fetchData","_callee10","_callee10$","_context10","subscriptionFilters","detailedPresence","presence","_this$_deps$presenceO","_this$_deps$presenceO2","detailed","_this$_deps$presenceO3","_this$_deps$presenceO4","max","fetchDelay","_this$_deps$presenceO5","_this$_deps$presenceO6","maxFetchDelay","_this$data$sequence","_this$data","_this$data$activeCall","_this$data2","isEnded","removeInboundRingOutLegs","_this$data$telephonyS","_this$data3","_this$data$dndStatus","_this$data4","_this$data$userStatus","_this$data5","_this$data$presenceSt","_this$data6","_this$data$meetingSta","_this$data7","DataFetcherV2Consumer","storage","state","action","proxify"],"sources":["modules/Presence/Presence.ts"],"sourcesContent":["import { filter, map } from 'ramda';\nimport type { Unsubscribe } from 'redux';\nimport type DetailedExtensionPresenceEvent from '@rc-ex/core/lib/definitions/DetailedExtensionPresenceEvent';\nimport type GetPresenceInfo from '@rc-ex/core/lib/definitions/GetPresenceInfo';\nimport type PresenceInfoResponse from '@rc-ex/core/lib/definitions/PresenceInfoResponse';\nimport {\n  computed,\n  state,\n  action,\n  watch,\n  storage,\n} from '@ringcentral-integration/core';\nimport type { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\n\nimport { presenceStatus } from '../../enums/presenceStatus.enum';\nimport { subscriptionFilters } from '../../enums/subscriptionFilters';\nimport type { PresenceInfoModel } from '../../interfaces/Presence.model';\nimport {\n  isEnded,\n  normalizeFromTo,\n  normalizeStartTime,\n  removeInboundRingOutLegs,\n} from '../../lib/callLogHelpers';\nimport type { DebouncedFunction } from '../../lib/debounce-throttle';\nimport { debounce } from '../../lib/debounce-throttle';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { dndStatus } from './dndStatus';\nimport type { Deps, UpdatePresenceParams } from './Presence.interface';\nimport { removeIntermediateCall } from './removeIntermediateCall';\n\nexport const DEFAULT_TTL = 62 * 1000;\nexport const DEFAULT_POLLING_INTERVAL = 3 * 60 * 1000;\nexport const DEFAULT_FETCH_DELAY = 2 * 1000;\nexport const DEFAULT_MAX_FETCH_DELAY = 4 * 1000;\n\nexport const presenceRegExp = /.*\\/presence(\\?.*)?/;\nexport const detailedPresenceRegExp =\n  /.*\\/presence\\?detailedTelephonyState=true&sipData=true/;\n\nconst acceptCallQueueToggles = [\n  dndStatus.takeAllCalls,\n  dndStatus.doNotAcceptDepartmentCalls,\n];\n\n@Module({\n  name: 'Presence',\n  deps: [\n    'Auth',\n    'Client',\n    'ConnectivityMonitor',\n    'DataFetcherV2',\n    'ExtensionFeatures',\n    'Subscription',\n    'Storage',\n    { dep: 'TabManager', optional: true },\n    { dep: 'PresenceOptions', optional: true },\n  ],\n})\nexport class Presence extends DataFetcherV2Consumer<Deps, PresenceInfoModel> {\n  protected _debouncedFetchData: DebouncedFunction<Presence['fetchData']>;\n\n  // @ts-expect-error\n  protected _stopWatchingConnectivity: Unsubscribe = null;\n  // @ts-expect-error\n  protected _stopWatchingSubscription: Unsubscribe = null;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'Presence',\n    });\n    const presenceOptions = deps.presenceOptions ?? {};\n    const { ttl = DEFAULT_TTL, pollingInterval = DEFAULT_POLLING_INTERVAL } =\n      presenceOptions;\n    this._source = new DataSource({\n      ...presenceOptions,\n      key: 'presence',\n      cleanOnReset: true,\n      ttl,\n      pollingInterval,\n      fetchFunction: async (): Promise<PresenceInfoModel> => {\n        const response = await this._deps.client.service\n          .platform()\n          .get(this._endPoint);\n        const data = await response.json();\n        const {\n          dndStatus = this.dndStatus,\n          meetingStatus = this.meetingStatus,\n          presenceStatus = this.presenceStatus,\n          telephonyStatus = this.telephonyStatus,\n          userStatus = this.userStatus,\n        } = data;\n        const activeCalls = this._processRawActiveCalls(\n          data.activeCalls,\n          data.totalActiveCalls,\n          Date.now(),\n        );\n        return {\n          sequence: this._sequence,\n          // @ts-expect-error\n          activeCalls,\n          dndStatus,\n          meetingStatus,\n          presenceStatus,\n          telephonyStatus,\n          userStatus,\n        };\n      },\n      readyCheckFunction: () =>\n        this._deps.auth.ready &&\n        this._deps.auth.loggedIn &&\n        this._deps.subscription.ready &&\n        this._deps.extensionFeatures.ready &&\n        this._deps.connectivityMonitor.ready &&\n        this._deps.dataFetcherV2.ready,\n      permissionCheckFunction: () => this._checkPermission(),\n    });\n    this._deps.dataFetcherV2.register(this._source);\n    this._debouncedFetchData = debounce({\n      fn: this.fetchData,\n      threshold: this._fetchDelay,\n      maxThreshold: this._maxFetchDelay,\n    });\n  }\n\n  @storage\n  @state\n  lastDndStatus: PresenceInfoModel['dndStatus'] | null = null;\n\n  @action\n  _setLastDndStatus(dndStatus: PresenceInfoModel['dndStatus'] | null) {\n    this.lastDndStatus = dndStatus;\n  }\n\n  get _endPoint() {\n    return this._detailed\n      ? subscriptionFilters.detailedPresence\n      : subscriptionFilters.presence;\n  }\n\n  get _detailed() {\n    return !!(this._deps.presenceOptions?.detailed ?? true);\n  }\n\n  get _fetchDelay() {\n    return Math.max(\n      0,\n      this._deps.presenceOptions?.fetchDelay ?? DEFAULT_FETCH_DELAY,\n    );\n  }\n\n  get _maxFetchDelay() {\n    return Math.max(\n      this._fetchDelay,\n      this._deps.presenceOptions?.maxFetchDelay ?? DEFAULT_MAX_FETCH_DELAY,\n    );\n  }\n\n  protected _checkPermission() {\n    return (\n      this._deps.extensionFeatures.features?.ReadPresenceStatus?.available ??\n      false\n    );\n  }\n\n  _processRawActiveCalls(\n    activeCalls: GetPresenceInfo['activeCalls'] = [],\n    totalActiveCalls = 0,\n    timestamp: number,\n  ) {\n    if (activeCalls.length < totalActiveCalls) {\n      return this.activeCalls;\n    }\n    // @ts-expect-error\n    return map((activeCall) => {\n      const existingCall = this.activeCalls.find(\n        // @ts-expect-error\n        (call) => call.sessionId === activeCall.sessionId,\n      );\n      if (!existingCall) {\n        const normalizedCall = normalizeStartTime(normalizeFromTo(activeCall));\n        const startTime = Number(normalizedCall.startTime || timestamp);\n        const offset = Math.min(timestamp - startTime, 0);\n        return {\n          ...normalizedCall,\n          startTime,\n          offset,\n        };\n      }\n      return {\n        ...existingCall,\n        ...normalizeStartTime(normalizeFromTo(activeCall)),\n      };\n      // @ts-expect-error\n    }, removeIntermediateCall([], activeCalls));\n  }\n\n  protected _handleSubscription(message: DetailedExtensionPresenceEvent) {\n    const regExp = this._detailed ? detailedPresenceRegExp : presenceRegExp;\n    if (\n      this.ready &&\n      (this._source.disableCache || (this._deps.tabManager?.active ?? true)) &&\n      // @ts-expect-error\n      regExp.test(message.event) &&\n      message.body\n    ) {\n      if (message.body.sequence && message.body.sequence < this._sequence) {\n        return;\n      }\n      const timestamp = Date.now();\n      const {\n        sequence = this._sequence,\n        dndStatus = this.dndStatus,\n        meetingStatus = this.meetingStatus,\n        presenceStatus = this.presenceStatus,\n        telephonyStatus = this.telephonyStatus,\n        userStatus = this.userStatus,\n      } = message.body;\n      this._setLastDndStatus(this._calculateLastDndStatus(dndStatus));\n      const activeCalls = this._processRawActiveCalls(\n        message.body.activeCalls,\n        message.body.totalActiveCalls,\n        timestamp,\n      );\n      this._updateData(\n        {\n          sequence,\n          // @ts-expect-error\n          activeCalls,\n          dndStatus,\n          meetingStatus,\n          presenceStatus,\n          telephonyStatus,\n          userStatus,\n        },\n        timestamp,\n      );\n      /**\n       * as pointed out by Igor in https://jira_domain/browse/PLA-33391,\n       * when the real calls count larger than the active calls returned by the pubnub,\n       * we need to pulling the calls manually.\n       */\n      const activeCallsLength = message.body.activeCalls?.length ?? 0;\n      const totalActiveCalls = message.body.totalActiveCalls ?? 0;\n      if (this._detailed && activeCallsLength < totalActiveCalls) {\n        this._debouncedFetchData();\n      }\n    }\n  }\n\n  override onInit() {\n    this._deps.subscription.subscribe([this._endPoint]);\n    this._stopWatchingConnectivity = watch(\n      this,\n      () => this._deps.connectivityMonitor.connectivity,\n      (connectivity) => this._handleConnectivity(connectivity),\n    );\n    this._stopWatchingSubscription = watch(\n      this,\n      () => this._deps.subscription.message,\n      (message) => this._handleSubscription(message),\n    );\n  }\n\n  protected _handleConnectivity(connectivity: boolean) {\n    if (\n      this.ready &&\n      (this._source.disableCache || (this._deps.tabManager?.active ?? true)) &&\n      connectivity &&\n      this._checkPermission()\n    ) {\n      this.fetchData();\n    }\n  }\n\n  override onReset() {\n    this._stopWatchingConnectivity?.();\n    // @ts-expect-error\n    this._stopWatchingConnectivity = null;\n    this._stopWatchingSubscription?.();\n    // @ts-expect-error\n    this._stopWatchingSubscription = null;\n    this._debouncedFetchData.cancel();\n  }\n\n  get _sequence() {\n    return this.data?.sequence ?? 0;\n  }\n\n  @computed(({ data }: Presence) => [data])\n  get activeCalls() {\n    return this.data?.activeCalls ?? [];\n  }\n\n  @computed(({ activeCalls }: Presence) => [activeCalls])\n  get calls() {\n    return filter(\n      (call) => !isEnded(call),\n      removeInboundRingOutLegs(this.activeCalls),\n    );\n  }\n\n  _calculateLastDndStatus(\n    newDndStatus: PresenceInfoModel['dndStatus'] | null,\n  ): PresenceInfoModel['dndStatus'] | null {\n    return newDndStatus !== this.dndStatus &&\n      newDndStatus !== dndStatus.doNotAcceptAnyCalls\n      ? newDndStatus\n      : this.lastDndStatus;\n  }\n\n  @proxify\n  async _update(params: UpdatePresenceParams) {\n    if (!this._deps.extensionFeatures.features?.EditPresenceStatus?.available) {\n      return;\n    }\n    const ownerId = this._deps.auth.ownerId;\n    const response = await this._deps.client.service\n      .platform()\n      .put('/restapi/v1.0/account/~/extension/~/presence', params);\n    const data: PresenceInfoResponse = await response.json();\n\n    if (ownerId === this._deps.auth.ownerId) {\n      const newDndStatus = ((data.dndStatus !== 'Unknown' && data.dndStatus) ??\n        this.data.dndStatus) as ObjectMapValue<typeof dndStatus>;\n      this._setLastDndStatus(this._calculateLastDndStatus(newDndStatus));\n      this._updateData({\n        presenceStatus: data.presenceStatus,\n        userStatus: data.userStatus,\n        telephonyStatus: data.telephonyStatus,\n        dndStatus: newDndStatus,\n        meetingStatus: data.meetingStatus,\n      });\n    }\n  }\n\n  @proxify\n  async _updateData(data: PresenceInfoModel, timestamp = Date.now()) {\n    this._deps.dataFetcherV2.updateData(\n      this._source,\n      {\n        ...this.data,\n        ...data,\n      },\n      timestamp,\n    );\n  }\n\n  _getUpdateStatusParams(userStatus: GetPresenceInfo['userStatus']) {\n    const params: UpdatePresenceParams = {\n      // @ts-expect-error\n      dndStatus: this.dndStatus,\n      userStatus,\n    };\n    if (\n      params.dndStatus !== dndStatus.takeAllCalls &&\n      params.dndStatus !== dndStatus.doNotAcceptDepartmentCalls\n    ) {\n      params.dndStatus = this.lastDndStatus ?? dndStatus.takeAllCalls;\n    }\n    return params;\n  }\n\n  async setAvailable() {\n    if (\n      this.userStatus === presenceStatus.available &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.available);\n    await this._update(params);\n  }\n\n  async setBusy() {\n    if (\n      this.userStatus === presenceStatus.busy &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.busy);\n    await this._update(params);\n  }\n\n  async setDoNotDisturb() {\n    if (this.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n      return;\n    }\n    const params = {\n      dndStatus: dndStatus.doNotAcceptAnyCalls,\n    };\n    await this._update(params);\n  }\n\n  async setInvisible() {\n    if (\n      this.userStatus === presenceStatus.offline &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.offline);\n    await this._update(params);\n  }\n\n  async setPresence(\n    presenceData:\n      | ObjectMapValue<typeof presenceStatus>\n      | ObjectMapValue<typeof dndStatus>,\n  ) {\n    switch (presenceData) {\n      case presenceStatus.available:\n        await this.setAvailable();\n        break;\n      case presenceStatus.busy:\n        await this.setBusy();\n        break;\n      case dndStatus.doNotAcceptAnyCalls:\n        await this.setDoNotDisturb();\n        break;\n      case presenceStatus.offline:\n        await this.setInvisible();\n        break;\n      default:\n        await this.setAvailable();\n        break;\n    }\n  }\n\n  async toggleAcceptCallQueueCalls() {\n    const index = acceptCallQueueToggles.findIndex(\n      (queueStatus) => this.dndStatus === queueStatus,\n    );\n\n    if (index > -1) {\n      return this._update({ dndStatus: acceptCallQueueToggles[+!index] });\n    }\n  }\n\n  @computed(({ calls }: Presence) => [calls])\n  get sessionIdList() {\n    return map((call) => call.sessionId, this.calls);\n  }\n\n  get telephonyStatus() {\n    return this.data?.telephonyStatus ?? null;\n  }\n\n  get dndStatus() {\n    return this.data?.dndStatus ?? null;\n  }\n\n  get userStatus() {\n    return this.data?.userStatus ?? null;\n  }\n\n  get presenceStatus() {\n    return this.data?.presenceStatus ?? null;\n  }\n\n  get meetingStatus() {\n    return this.data?.meetingStatus ?? null;\n  }\n\n  get presenceOption() {\n    // doNotDisturb\n    if (this.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n      return dndStatus.doNotAcceptAnyCalls;\n    }\n\n    // busy\n    if (this.userStatus === presenceStatus.busy) {\n      return presenceStatus.busy;\n    }\n\n    // invisible\n    if (this.userStatus === presenceStatus.offline) {\n      return presenceStatus.offline;\n    }\n\n    // available\n    return presenceStatus.available;\n  }\n\n  // @ts-expect-error\n  async fetchData() {\n    this._debouncedFetchData.cancel();\n    return this._deps.dataFetcherV2.fetchData(this._source);\n  }\n}\n"],"mappings":"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"}