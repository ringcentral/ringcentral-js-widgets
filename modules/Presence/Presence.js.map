{"version":3,"file":"Presence.js","names":["_core","require","_ramda","_presenceStatus2","_subscriptionFilters","_callLogHelpers","_debounceThrottle","_di","_proxify","_DataFetcherV","_dndStatus2","_removeIntermediateCall","_dec","_dec2","_dec3","_dec4","_class","_class2","_descriptor","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","_initializerDefineProperty","l","initializer","call","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","slice","reverse","reduce","_initializerWarningHelper","Error","DEFAULT_TTL","exports","DEFAULT_POLLING_INTERVAL","DEFAULT_FETCH_DELAY","DEFAULT_MAX_FETCH_DELAY","presenceRegExp","detailedPresenceRegExp","acceptCallQueueToggles","dndStatus","takeAllCalls","doNotAcceptDepartmentCalls","Presence","Module","name","deps","dep","optional","computed","_ref","data","_ref2","activeCalls","_ref3","calls","_DataFetcherV2Consume","_super","_deps$presenceOptions","_this","enableCache","storageKey","_debouncedFetchData","_stopWatchingConnectivity","_stopWatchingSubscription","presenceOptions","_presenceOptions$ttl","ttl","_presenceOptions$poll","pollingInterval","_source","DataSource","cleanOnReset","fetchFunction","_fetchFunction","regeneratorRuntime","mark","_callee","response","_data$dndStatus","_data$meetingStatus","meetingStatus","_data$presenceStatus","presenceStatus","_data$telephonyStatus","telephonyStatus","_data$userStatus","userStatus","wrap","_callee$","_context","prev","next","_deps","client","service","platform","get","_endPoint","sent","json","_processRawActiveCalls","totalActiveCalls","Date","now","abrupt","sequence","_sequence","stop","readyCheckFunction","auth","ready","loggedIn","subscription","extensionFeatures","connectivityMonitor","dataFetcherV2","permissionCheckFunction","_checkPermission","register","debounce","fn","fetchData","threshold","_fetchDelay","maxThreshold","_maxFetchDelay","_setLastDndStatus","lastDndStatus","_this$_deps$extension","_this$_deps$extension2","_this$_deps$extension3","features","ReadPresenceStatus","available","_this2","undefined","timestamp","map","activeCall","existingCall","find","sessionId","normalizedCall","normalizeStartTime","normalizeFromTo","startTime","offset","Math","min","removeIntermediateCall","_handleSubscription","message","_this$_deps$tabManage","_this$_deps$tabManage2","regExp","_detailed","disableCache","tabManager","active","test","event","body","_message$body$activeC","_message$body$activeC2","_message$body$totalAc","_message$body","_message$body$sequenc","_message$body$dndStat","_message$body$meeting","_message$body$presenc","_message$body$telepho","_message$body$userSta","_calculateLastDndStatus","_updateData","activeCallsLength","onInit","_this3","subscribe","watch","connectivity","_handleConnectivity","_this$_deps$tabManage3","_this$_deps$tabManage4","onReset","_this$_stopWatchingCo","_this$_stopWatchingSu","cancel","newDndStatus","doNotAcceptAnyCalls","_update2","_callee2","params","_this$_deps$extension4","_this$_deps$extension5","ownerId","_ref4","_callee2$","_context2","EditPresenceStatus","put","t0","console","error","_update","_x","_updateData2","_callee3","_args3","_callee3$","_context3","updateData","_x2","_getUpdateStatusParams","_this$lastDndStatus","_setAvailable","_callee4","_callee4$","_context4","setAvailable","_setBusy","_callee5","_callee5$","_context5","busy","setBusy","_setDoNotDisturb","_callee6","_callee6$","_context6","setDoNotDisturb","_setInvisible","_callee7","_callee7$","_context7","offline","setInvisible","_setPresence","_callee8","presenceData","_callee8$","_context8","setPresence","_x3","_toggleAcceptCallQueueCalls","_callee9","_this4","index","_callee9$","_context9","findIndex","queueStatus","toggleAcceptCallQueueCalls","_fetchData","_callee10","_callee10$","_context10","subscriptionFilters","detailedPresence","presence","_this$_deps$presenceO","_this$_deps$presenceO2","detailed","_this$_deps$presenceO3","_this$_deps$presenceO4","max","fetchDelay","_this$_deps$presenceO5","_this$_deps$presenceO6","maxFetchDelay","_this$data$sequence","_this$data","_this$data$activeCall","_this$data2","isEnded","removeInboundRingOutLegs","_this$data3","_this$data4","_this$data5","_this$data6","_this$data7","DataFetcherV2Consumer","storage","state","action","proxify"],"sources":["modules/Presence/Presence.ts"],"sourcesContent":["import type DetailedExtensionPresenceEvent from '@rc-ex/core/lib/definitions/DetailedExtensionPresenceEvent';\nimport type GetPresenceInfo from '@rc-ex/core/lib/definitions/GetPresenceInfo';\nimport type PresenceInfoResponse from '@rc-ex/core/lib/definitions/PresenceInfoResponse';\nimport {\n  computed,\n  state,\n  action,\n  watch,\n  storage,\n} from '@ringcentral-integration/core';\nimport type { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { filter, map } from 'ramda';\nimport type { Unsubscribe } from 'redux';\n\nimport { presenceStatus } from '../../enums/presenceStatus.enum';\nimport { subscriptionFilters } from '../../enums/subscriptionFilters';\nimport type { PresenceInfoModel } from '../../interfaces/Presence.model';\nimport {\n  isEnded,\n  normalizeFromTo,\n  normalizeStartTime,\n  removeInboundRingOutLegs,\n} from '../../lib/callLogHelpers';\nimport type { DebouncedFunction } from '../../lib/debounce-throttle';\nimport { debounce } from '../../lib/debounce-throttle';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\n\nimport type { Deps, UpdatePresenceParams } from './Presence.interface';\nimport { dndStatus } from './dndStatus';\nimport { removeIntermediateCall } from './removeIntermediateCall';\n\nexport const DEFAULT_TTL = 62 * 1000;\nexport const DEFAULT_POLLING_INTERVAL = 3 * 60 * 1000;\nexport const DEFAULT_FETCH_DELAY = 2 * 1000;\nexport const DEFAULT_MAX_FETCH_DELAY = 4 * 1000;\n\nexport const presenceRegExp = /.*\\/presence(\\?.*)?/;\nexport const detailedPresenceRegExp =\n  /.*\\/presence\\?detailedTelephonyState=true&sipData=true/;\n\nconst acceptCallQueueToggles = [\n  dndStatus.takeAllCalls,\n  dndStatus.doNotAcceptDepartmentCalls,\n];\n\n@Module({\n  name: 'Presence',\n  deps: [\n    'Auth',\n    'Client',\n    'ConnectivityMonitor',\n    'DataFetcherV2',\n    'ExtensionFeatures',\n    'Subscription',\n    'Storage',\n    { dep: 'TabManager', optional: true },\n    { dep: 'PresenceOptions', optional: true },\n  ],\n})\nexport class Presence extends DataFetcherV2Consumer<Deps, PresenceInfoModel> {\n  protected _debouncedFetchData: DebouncedFunction<Presence['fetchData']>;\n\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Unsubscribe... Remove this comment to see the full error message\n  protected _stopWatchingConnectivity: Unsubscribe = null;\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Unsubscribe... Remove this comment to see the full error message\n  protected _stopWatchingSubscription: Unsubscribe = null;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'Presence',\n    });\n    const presenceOptions = deps.presenceOptions ?? {};\n    const { ttl = DEFAULT_TTL, pollingInterval = DEFAULT_POLLING_INTERVAL } =\n      presenceOptions;\n    this._source = new DataSource({\n      ...presenceOptions,\n      key: 'presence',\n      cleanOnReset: true,\n      ttl,\n      pollingInterval,\n      fetchFunction: async (): Promise<PresenceInfoModel> => {\n        const response = await this._deps.client.service\n          .platform()\n          .get(this._endPoint);\n        const data = await response.json();\n        const {\n          dndStatus = this.dndStatus,\n          meetingStatus = this.meetingStatus,\n          presenceStatus = this.presenceStatus,\n          telephonyStatus = this.telephonyStatus,\n          userStatus = this.userStatus,\n        } = data;\n        const activeCalls = this._processRawActiveCalls(\n          data.activeCalls,\n          data.totalActiveCalls,\n          Date.now(),\n        );\n        return {\n          sequence: this._sequence,\n          // @ts-expect-error TS(2322): Type 'unknown[]' is not assignable to type 'Active... Remove this comment to see the full error message\n          activeCalls,\n          dndStatus,\n          meetingStatus,\n          presenceStatus,\n          telephonyStatus,\n          userStatus,\n        };\n      },\n      readyCheckFunction: () =>\n        this._deps.auth.ready &&\n        this._deps.auth.loggedIn &&\n        this._deps.subscription.ready &&\n        this._deps.extensionFeatures.ready &&\n        this._deps.connectivityMonitor.ready &&\n        this._deps.dataFetcherV2.ready,\n      permissionCheckFunction: () => this._checkPermission(),\n    });\n    this._deps.dataFetcherV2.register(this._source);\n    this._debouncedFetchData = debounce({\n      fn: this.fetchData,\n      threshold: this._fetchDelay,\n      maxThreshold: this._maxFetchDelay,\n    });\n  }\n\n  @storage\n  @state\n  lastDndStatus: PresenceInfoModel['dndStatus'] | null = null;\n\n  @action\n  _setLastDndStatus(dndStatus: PresenceInfoModel['dndStatus'] | null) {\n    this.lastDndStatus = dndStatus;\n  }\n\n  get _endPoint() {\n    return this._detailed\n      ? subscriptionFilters.detailedPresence\n      : subscriptionFilters.presence;\n  }\n\n  get _detailed() {\n    return !!(this._deps.presenceOptions?.detailed ?? true);\n  }\n\n  get _fetchDelay() {\n    return Math.max(\n      0,\n      this._deps.presenceOptions?.fetchDelay ?? DEFAULT_FETCH_DELAY,\n    );\n  }\n\n  get _maxFetchDelay() {\n    return Math.max(\n      this._fetchDelay,\n      this._deps.presenceOptions?.maxFetchDelay ?? DEFAULT_MAX_FETCH_DELAY,\n    );\n  }\n\n  protected _checkPermission() {\n    return (\n      this._deps.extensionFeatures.features?.ReadPresenceStatus?.available ??\n      false\n    );\n  }\n\n  _processRawActiveCalls(\n    activeCalls: GetPresenceInfo['activeCalls'] = [],\n    totalActiveCalls = 0,\n    timestamp: number,\n  ) {\n    if (activeCalls.length < totalActiveCalls) {\n      return this.activeCalls;\n    }\n    // @ts-expect-error TS(2769): No overload matches this call.\n    return map((activeCall) => {\n      const existingCall = this.activeCalls.find(\n        // @ts-expect-error TS(2339): Property 'sessionId' does not exist on type 'never... Remove this comment to see the full error message\n        (call) => call.sessionId === activeCall.sessionId,\n      );\n      if (!existingCall) {\n        const normalizedCall = normalizeStartTime(normalizeFromTo(activeCall));\n        const startTime = Number(normalizedCall.startTime || timestamp);\n        const offset = Math.min(timestamp - startTime, 0);\n        return {\n          ...normalizedCall,\n          startTime,\n          offset,\n        };\n      }\n      return {\n        ...existingCall,\n        ...normalizeStartTime(normalizeFromTo(activeCall)),\n      };\n      // @ts-expect-error TS(2345): Argument of type 'ActiveCallInfo[]' is not assigna... Remove this comment to see the full error message\n    }, removeIntermediateCall([], activeCalls));\n  }\n\n  protected _handleSubscription(message: DetailedExtensionPresenceEvent) {\n    const regExp = this._detailed ? detailedPresenceRegExp : presenceRegExp;\n    if (\n      this.ready &&\n      (this._source.disableCache || (this._deps.tabManager?.active ?? true)) &&\n      // @ts-expect-error TS(2345): Argument of type 'string | undefined' is not assig... Remove this comment to see the full error message\n      regExp.test(message.event) &&\n      message.body\n    ) {\n      if (message.body.sequence && message.body.sequence < this._sequence) {\n        return;\n      }\n      const timestamp = Date.now();\n      const {\n        sequence = this._sequence,\n        dndStatus = this.dndStatus,\n        meetingStatus = this.meetingStatus,\n        presenceStatus = this.presenceStatus,\n        telephonyStatus = this.telephonyStatus,\n        userStatus = this.userStatus,\n      } = message.body;\n      this._setLastDndStatus(this._calculateLastDndStatus(dndStatus));\n      const activeCalls = this._processRawActiveCalls(\n        message.body.activeCalls,\n        message.body.totalActiveCalls,\n        timestamp,\n      );\n      this._updateData(\n        {\n          sequence,\n          // @ts-expect-error TS(2322): Type 'unknown[]' is not assignable to type 'Active... Remove this comment to see the full error message\n          activeCalls,\n          dndStatus,\n          meetingStatus,\n          presenceStatus,\n          telephonyStatus,\n          userStatus,\n        },\n        timestamp,\n      );\n      /**\n       * as pointed out by Igor in https://jira_domain/browse/PLA-33391,\n       * when the real calls count larger than the active calls returned by the pubnub,\n       * we need to pulling the calls manually.\n       */\n      const activeCallsLength = message.body.activeCalls?.length ?? 0;\n      const totalActiveCalls = message.body.totalActiveCalls ?? 0;\n      if (this._detailed && activeCallsLength < totalActiveCalls) {\n        this._debouncedFetchData();\n      }\n    }\n  }\n\n  override onInit() {\n    this._deps.subscription.subscribe([this._endPoint]);\n    this._stopWatchingConnectivity = watch(\n      this,\n      () => this._deps.connectivityMonitor.connectivity,\n      (connectivity) => this._handleConnectivity(connectivity),\n    );\n    this._stopWatchingSubscription = watch(\n      this,\n      () => this._deps.subscription.message,\n      (message) => this._handleSubscription(message),\n    );\n  }\n\n  protected _handleConnectivity(connectivity: boolean) {\n    if (\n      this.ready &&\n      (this._source.disableCache || (this._deps.tabManager?.active ?? true)) &&\n      connectivity &&\n      this._checkPermission()\n    ) {\n      this.fetchData();\n    }\n  }\n\n  override onReset() {\n    this._stopWatchingConnectivity?.();\n    // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Unsubscribe... Remove this comment to see the full error message\n    this._stopWatchingConnectivity = null;\n    this._stopWatchingSubscription?.();\n    // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Unsubscribe... Remove this comment to see the full error message\n    this._stopWatchingSubscription = null;\n    this._debouncedFetchData.cancel();\n  }\n\n  get _sequence() {\n    return this.data?.sequence ?? 0;\n  }\n\n  @computed(({ data }: Presence) => [data])\n  get activeCalls() {\n    return this.data?.activeCalls ?? [];\n  }\n\n  @computed(({ activeCalls }: Presence) => [activeCalls])\n  get calls() {\n    return filter(\n      (call) => !isEnded(call),\n      removeInboundRingOutLegs(this.activeCalls),\n    );\n  }\n\n  _calculateLastDndStatus(\n    newDndStatus: PresenceInfoModel['dndStatus'] | null,\n  ): PresenceInfoModel['dndStatus'] | null {\n    return newDndStatus !== this.dndStatus &&\n      newDndStatus !== dndStatus.doNotAcceptAnyCalls\n      ? newDndStatus\n      : this.lastDndStatus;\n  }\n\n  @proxify\n  async _update(params: UpdatePresenceParams) {\n    try {\n      if (\n        !this._deps.extensionFeatures.features?.EditPresenceStatus?.available\n      ) {\n        return;\n      }\n      const ownerId = this._deps.auth.ownerId;\n      const response = await this._deps.client.service\n        .platform()\n        .put('/restapi/v1.0/account/~/extension/~/presence', params);\n      const data: PresenceInfoResponse = await response?.json();\n\n      if (ownerId === this._deps.auth.ownerId) {\n        const newDndStatus = ((data.dndStatus !== 'Unknown' &&\n          data.dndStatus) ??\n          this.data.dndStatus) as ObjectMapValue<typeof dndStatus>;\n        this._setLastDndStatus(this._calculateLastDndStatus(newDndStatus));\n        this._updateData({\n          presenceStatus: data.presenceStatus,\n          userStatus: data.userStatus,\n          telephonyStatus: data.telephonyStatus,\n          dndStatus: newDndStatus,\n          meetingStatus: data.meetingStatus,\n        });\n      }\n    } catch (e) {\n      console.error('put presence failed', e);\n    }\n  }\n\n  @proxify\n  async _updateData(data: PresenceInfoModel, timestamp = Date.now()) {\n    this._deps.dataFetcherV2.updateData(\n      this._source,\n      {\n        ...this.data,\n        ...data,\n      },\n      timestamp,\n    );\n  }\n\n  _getUpdateStatusParams(userStatus: GetPresenceInfo['userStatus']) {\n    const params: UpdatePresenceParams = {\n      dndStatus: this.dndStatus,\n      userStatus,\n    };\n    if (\n      params.dndStatus !== dndStatus.takeAllCalls &&\n      params.dndStatus !== dndStatus.doNotAcceptDepartmentCalls\n    ) {\n      params.dndStatus = this.lastDndStatus ?? dndStatus.takeAllCalls;\n    }\n    return params;\n  }\n\n  async setAvailable() {\n    if (\n      this.userStatus === presenceStatus.available &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.available);\n    await this._update(params);\n  }\n\n  async setBusy() {\n    if (\n      this.userStatus === presenceStatus.busy &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.busy);\n    await this._update(params);\n  }\n\n  async setDoNotDisturb() {\n    if (this.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n      return;\n    }\n    const params = {\n      dndStatus: dndStatus.doNotAcceptAnyCalls,\n    };\n    await this._update(params);\n  }\n\n  async setInvisible() {\n    if (\n      this.userStatus === presenceStatus.offline &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.offline);\n    await this._update(params);\n  }\n\n  async setPresence(\n    presenceData:\n      | ObjectMapValue<typeof presenceStatus>\n      | ObjectMapValue<typeof dndStatus>,\n  ) {\n    switch (presenceData) {\n      case presenceStatus.available:\n        await this.setAvailable();\n        break;\n      case presenceStatus.busy:\n        await this.setBusy();\n        break;\n      case dndStatus.doNotAcceptAnyCalls:\n        await this.setDoNotDisturb();\n        break;\n      case presenceStatus.offline:\n        await this.setInvisible();\n        break;\n      default:\n        await this.setAvailable();\n        break;\n    }\n  }\n\n  async toggleAcceptCallQueueCalls() {\n    const index = acceptCallQueueToggles.findIndex(\n      (queueStatus) => this.dndStatus === queueStatus,\n    );\n\n    if (index > -1) {\n      return this._update({ dndStatus: acceptCallQueueToggles[+!index] });\n    }\n  }\n\n  @computed(({ calls }: Presence) => [calls])\n  get sessionIdList() {\n    return map((call) => call.sessionId, this.calls);\n  }\n\n  get telephonyStatus() {\n    return this.data?.telephonyStatus;\n  }\n\n  get dndStatus() {\n    return this.data?.dndStatus;\n  }\n\n  get userStatus() {\n    return this.data?.userStatus;\n  }\n\n  get presenceStatus() {\n    return this.data?.presenceStatus;\n  }\n\n  get meetingStatus() {\n    return this.data?.meetingStatus;\n  }\n\n  get presenceOption() {\n    // doNotDisturb\n    if (this.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n      return dndStatus.doNotAcceptAnyCalls;\n    }\n\n    // busy\n    if (this.userStatus === presenceStatus.busy) {\n      return presenceStatus.busy;\n    }\n\n    // invisible\n    if (this.userStatus === presenceStatus.offline) {\n      return presenceStatus.offline;\n    }\n\n    // available\n    return presenceStatus.available;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  async fetchData() {\n    this._debouncedFetchData.cancel();\n    return this._deps.dataFetcherV2.fetchData(this._source);\n  }\n}\n"],"mappings":"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","ignoreList":[]}