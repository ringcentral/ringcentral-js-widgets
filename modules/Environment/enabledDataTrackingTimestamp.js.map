{"version":3,"file":"enabledDataTrackingTimestamp.js","names":["DATA_TRACKING_TIMESTAMP_STORAGE_KEY","localStorageDataTrackingTimestamp","get","localStorage","value","getItem","set","timestamp","removeItem","setItem","toString","exports"],"sources":["modules/Environment/enabledDataTrackingTimestamp.ts"],"sourcesContent":["const DATA_TRACKING_TIMESTAMP_STORAGE_KEY =\n  'environment.enabledDataTrackingTimestamp';\n\n/**\n * Local storage for data tracking timestamp\n *\n * use local storage to get state be `synchronously`\n */\nexport const localStorageDataTrackingTimestamp = {\n  get: () => {\n    if (typeof localStorage === 'undefined') return null;\n\n    const value = localStorage.getItem(DATA_TRACKING_TIMESTAMP_STORAGE_KEY);\n    return value ? +value : null;\n  },\n  set: (timestamp: number | null) => {\n    if (typeof localStorage === 'undefined') return null;\n\n    if (timestamp === null) {\n      localStorage.removeItem(DATA_TRACKING_TIMESTAMP_STORAGE_KEY);\n      return;\n    }\n\n    localStorage.setItem(\n      DATA_TRACKING_TIMESTAMP_STORAGE_KEY,\n      timestamp.toString(),\n    );\n  },\n};\n"],"mappings":";;;;;;;;;AAAA,IAAMA,mCAAmC,GACvC,0CAA0C;;AAE5C;AACA;AACA;AACA;AACA;AACO,IAAMC,iCAAiC,GAAG;EAC/CC,GAAG,EAAE,SAAAA,IAAA,EAAM;IACT,IAAI,OAAOC,YAAY,KAAK,WAAW,EAAE,OAAO,IAAI;IAEpD,IAAMC,KAAK,GAAGD,YAAY,CAACE,OAAO,CAACL,mCAAmC,CAAC;IACvE,OAAOI,KAAK,GAAG,CAACA,KAAK,GAAG,IAAI;EAC9B,CAAC;EACDE,GAAG,EAAE,SAAAA,IAACC,SAAwB,EAAK;IACjC,IAAI,OAAOJ,YAAY,KAAK,WAAW,EAAE,OAAO,IAAI;IAEpD,IAAII,SAAS,KAAK,IAAI,EAAE;MACtBJ,YAAY,CAACK,UAAU,CAACR,mCAAmC,CAAC;MAC5D;IACF;IAEAG,YAAY,CAACM,OAAO,CAClBT,mCAAmC,EACnCO,SAAS,CAACG,QAAQ,CAAC,CACrB,CAAC;EACH;AACF,CAAC;AAACC,OAAA,CAAAV,iCAAA,GAAAA,iCAAA","ignoreList":[]}