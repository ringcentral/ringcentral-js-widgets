{"version":3,"sources":["modules/Environment/getEnvironmentReducer.ts"],"names":["getChangeCounterReducer","types","state","type","environmentChanged","setData","getServerReducer","defaultServer","server","getRecordingHostReducer","defaultRecordingHost","recordingHost","getEnabledReducer","enabled","getEnvironmentReducer","status","changeCounter"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;;;AAEO,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AAC7C,SAAO,YAA6C;AAAA,QAA5CC,KAA4C,uEAApC,CAAoC;;AAAA;AAAA,QAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,QAAzBC,kBAAyB,QAAzBA,kBAAyB;;AAClD,QAAID,IAAI,KAAKF,KAAK,CAACI,OAAf,IAA0BD,kBAA9B,EAAkD,OAAOF,KAAK,GAAG,CAAf;AAClD,WAAOA,KAAP;AACD,GAHD;AAID;;AAEM,SAASI,gBAAT,QAAoD;AAAA,MAAxBL,KAAwB,SAAxBA,KAAwB;AAAA,MAAjBM,aAAiB,SAAjBA,aAAiB;AACzD,SAAO,YAA6C;AAAA,QAA5CL,KAA4C,uEAApCK,aAAoC;;AAAA;AAAA,QAAnBJ,IAAmB,SAAnBA,IAAmB;AAAA,QAAbK,MAAa,SAAbA,MAAa;;AAClD,QAAIL,IAAI,KAAKF,KAAK,CAACI,OAAnB,EAA4B,OAAOG,MAAP;AAC5B,WAAON,KAAP;AACD,GAHD;AAID;;AAEM,SAASO,uBAAT,QAAkE;AAAA,MAA/BR,KAA+B,SAA/BA,KAA+B;AAAA,MAAxBS,oBAAwB,SAAxBA,oBAAwB;AACvE,SAAO,YAA2D;AAAA,QAA1DR,KAA0D,uEAAlDQ,oBAAkD;;AAAA;AAAA,QAA1BP,IAA0B,SAA1BA,IAA0B;AAAA,QAApBQ,aAAoB,SAApBA,aAAoB;;AAChE,QAAIR,IAAI,KAAKF,KAAK,CAACI,OAAnB,EAA4B,OAAOM,aAAP;AAC5B,WAAOT,KAAP;AACD,GAHD;AAID;;AAEM,SAASU,iBAAT,CAA2BX,KAA3B,EAAkC;AACvC,SAAO,YAAsC;AAAA,QAArCC,KAAqC,uEAA7B,KAA6B;;AAAA;AAAA,QAApBC,IAAoB,SAApBA,IAAoB;AAAA,QAAdU,OAAc,SAAdA,OAAc;;AAC3C,QAAIV,IAAI,KAAKF,KAAK,CAACI,OAAnB,EAA4B,OAAOQ,OAAP;AAC5B,WAAOX,KAAP;AACD,GAHD;AAID;;AAEc,SAASY,qBAAT,CAA+Bb,KAA/B,EAAsC;AACnD,SAAO,4BAAgB;AACrBc,IAAAA,MAAM,EAAE,wCAAuBd,KAAvB,CADa;AAErBe,IAAAA,aAAa,EAAEhB,uBAAuB,CAACC,KAAD;AAFjB,GAAhB,CAAP;AAID","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getChangeCounterReducer(types) {\n  return (state = 0, { type, environmentChanged }) => {\n    if (type === types.setData && environmentChanged) return state + 1;\n    return state;\n  };\n}\n\nexport function getServerReducer({ types, defaultServer }) {\n  return (state = defaultServer, { type, server }) => {\n    if (type === types.setData) return server;\n    return state;\n  };\n}\n\nexport function getRecordingHostReducer({ types, defaultRecordingHost }) {\n  return (state = defaultRecordingHost, { type, recordingHost }) => {\n    if (type === types.setData) return recordingHost;\n    return state;\n  };\n}\n\nexport function getEnabledReducer(types) {\n  return (state = false, { type, enabled }) => {\n    if (type === types.setData) return enabled;\n    return state;\n  };\n}\n\nexport default function getEnvironmentReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    changeCounter: getChangeCounterReducer(types),\n  });\n}\n"],"file":"getEnvironmentReducer.js"}