{"version":3,"sources":["modules/Environment/index.js"],"names":["Environment","deps","dep","optional","client","globalStorage","environmentOptions","sdkConfig","options","actionTypes","_client","_globalStorage","_sdkConfig","_reducer","_serverStorageKey","_recordingHostStoragekey","_enabledStorageKey","_defaultRecordingHost","defaultRecordingHost","registerReducer","key","reducer","types","defaultServer","SDK","server","sandbox","store","subscribe","_onStateChange","_shouldInit","_initClientService","dispatch","type","initSuccess","ready","enabled","service","discoveryServer","newConfig","recordingHost","environmentChanged","_changeEnvironment","setData","state","status","moduleStatuses","getItem","changeCounter","RcModule","proxify"],"mappings":"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","sourcesContent":["import { SDK } from '@ringcentral/sdk';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport proxify from '../../lib/proxy/proxify';\nimport actionTypes from './actionTypes';\nimport getEnvironmentReducer, {\n  getServerReducer,\n  getRecordingHostReducer,\n  getEnabledReducer,\n} from './getEnvironmentReducer';\n\n/**\n * @class\n * @description Environment module manages which api server the app calls.\n */\n@Module({\n  deps: [\n    'Client',\n    'GlobalStorage',\n    'SdkConfig',\n    { dep: 'EnvironmentOptions', optional: true },\n  ],\n})\nexport default class Environment extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {String} params.environmentOptions - default recording host uri\n   * @param {Object} params.sdkConfig - sdk config\n   */\n  constructor({\n    client,\n    globalStorage,\n    environmentOptions = {},\n    sdkConfig,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = client;\n    this._globalStorage = globalStorage;\n    this._sdkConfig = sdkConfig;\n    this._reducer = getEnvironmentReducer(this.actionTypes);\n    this._serverStorageKey = 'environmentServer';\n    this._recordingHostStoragekey = 'environmentRecordingHost';\n    this._enabledStorageKey = 'environmentEnabled';\n    this._defaultRecordingHost =\n      environmentOptions.defaultRecordingHost ??\n      'https://apps.ringcentral.com/integrations/recording/index.html';\n    this._globalStorage.registerReducer({\n      key: this._serverStorageKey,\n      reducer: getServerReducer({\n        types: this.actionTypes,\n        defaultServer: SDK.server.sandbox,\n      }),\n    });\n    this._globalStorage.registerReducer({\n      key: this._recordingHostStoragekey,\n      reducer: getRecordingHostReducer({\n        types: this.actionTypes,\n        defaultRecordingHost: this._defaultRecordingHost,\n      }),\n    });\n    this._globalStorage.registerReducer({\n      key: this._enabledStorageKey,\n      reducer: getEnabledReducer(this.actionTypes),\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._initClientService();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return this._globalStorage.ready && !this.ready;\n  }\n\n  _initClientService() {\n    if (this.enabled) {\n      this._client.service = new SDK({\n        ...this._sdkConfig,\n        discoveryServer: this.server,\n        server: this.server,\n      });\n    }\n  }\n\n  _changeEnvironment(enabled, server) {\n    const newConfig = {\n      ...this._sdkConfig,\n    };\n    if (enabled) {\n      newConfig.server = server;\n      newConfig.discoveryServer = server;\n    }\n    this._client.service = new SDK(newConfig);\n  }\n\n  @proxify\n  async setData({ server, recordingHost, enabled }) {\n    const environmentChanged =\n      this.enabled !== enabled || (enabled && this.server !== server);\n    if (environmentChanged) {\n      // recordingHost changed no need to set to SDK\n      this._changeEnvironment(enabled, server);\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.setData,\n      server,\n      recordingHost,\n      enabled,\n      environmentChanged,\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get server() {\n    return this._globalStorage.getItem(this._serverStorageKey);\n  }\n\n  get recordingHost() {\n    if (this.enabled) {\n      return this._globalStorage.getItem(this._recordingHostStoragekey);\n    }\n    return this._defaultRecordingHost;\n  }\n\n  get enabled() {\n    return this._globalStorage.getItem(this._enabledStorageKey);\n  }\n\n  get changeCounter() {\n    return this.state.changeCounter;\n  }\n}\n"],"file":"index.js"}