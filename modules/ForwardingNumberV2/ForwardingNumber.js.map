{"version":3,"sources":["modules/ForwardingNumberV2/ForwardingNumber.ts"],"names":["ForwardingNumber","name","deps","dep","optional","data","numbers","_source","DataSource","forwardingNumberOptions","key","cleanOnReset","fetchFunction","params","_deps","client","account","extension","forwardingNumber","list","forwardingNumbers","response","status","readyCheckFunction","extensionFeatures","ready","permissionCheckFunction","features","ReadExtensionAnsweringRules","available","dataFetcherV2","register","phoneNumber","indexOf","DataFetcherV2Consumer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYaA,gB,WATZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,kBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ,eAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,yBAAP;AAAkCC,IAAAA,QAAQ,EAAE;AAA5C,GAJI;AAFA,CAAP,C,UA8CE,oBAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAgC,CAACA,IAAD,CAAhC;AAAA,CAAT,C,UAKA,oBAAS;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,SAAmC,CAACA,OAAD,CAAnC;AAAA,CAAT,C,UAYA,oBAAS;AAAA,MAAGA,OAAH,SAAGA,OAAH;AAAA,SAAmC,CAACA,OAAD,CAAnC;AAAA,CAAT,C;;;;;AAlDD,4BAAYJ,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;AAGA,UAAKK,OAAL,GAAe,IAAIC,wBAAJ,iCACVN,IAAI,CAACO,uBADK;AAEbC,MAAAA,GAAG,EAAE,kBAFQ;AAGbC,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,aAAa;AAAA,qFAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEqB,2BAAU,UAACC,MAAD;AAAA,2BACxC,MAAKC,KAAL,CAAWC,MAAX,CACGC,OADH,GAEGC,SAFH,GAGGC,gBAHH,GAIGC,IAJH,CAIQN,MAJR,CADwC;AAAA,mBAAV,CAFrB;;AAAA;AAELO,kBAAAA,iBAFK;AAAA,mDASJA,iBATI;;AAAA;AAAA;AAAA;;AAAA,wBAWP,gCAAMC,QAAN,oEAAgBC,MAAhB,MAA2B,GAXpB;AAAA;AAAA;AAAA;;AAAA,mDAYF,EAZE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAJA;AAqBbC,MAAAA,kBAAkB,EAAE;AAAA,eAAM,MAAKT,KAAL,CAAWU,iBAAX,CAA6BC,KAAnC;AAAA,OArBP;AAsBbC,MAAAA,uBAAuB,EAAE;AAAA;;AAAA,kEACvB,MAAKZ,KAAL,CAAWU,iBAAX,CAA6BG,QADN,qFACvB,uBAAuCC,2BADhB,2DACvB,uBACIC,SAFmB,yEAEN,KAFM;AAAA;AAtBZ,OAAf;;AA0BA,UAAKf,KAAL,CAAWgB,aAAX,CAAyBC,QAAzB,CAAkC,MAAKxB,OAAvC;;AA9BsB;AA+BvB;;;;wBAGa;AAAA;;AACZ,2BAAO,KAAKF,IAAZ,mDAAoB,EAApB;AACD;;;wBAGiB;AAChB,aAAO,mBACL,UAAC2B,WAAD;AAAA;;AAAA,eACE,CAAC,EACC,0BAAAA,WAAW,CAACL,QAAZ,gFAAsBM,OAAtB,CAA8B,UAA9B,OAA8C,CAAC,CAA/C,IACAD,WAAW,CAACA,WAFb,CADH;AAAA,OADK,EAML,KAAK1B,OANA,CAAP;AAQD;;;wBAGuB;AACtB,aAAO,mBACL,UAAC0B,WAAD;AAAA;;AAAA,eACE,CAAC,EACC,2BAAAA,WAAW,CAACL,QAAZ,kFAAsBM,OAAtB,CAA8B,gBAA9B,OAAoD,CAAC,CAArD,IACAD,WAAW,CAACA,WAFb,CADH;AAAA,OADK,EAML,KAAK1B,OANA,CAAP;AAQD;;;;EAhEmC4B,mC","sourcesContent":["import { filter } from 'ramda';\n\nimport { ForwardingNumberInfo } from '@rc-ex/core/definitions';\nimport { computed } from '@ringcentral-integration/core';\n\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './ForwardingNumber.interface';\n\n@Module({\n  name: 'ForwardingNumber',\n  deps: [\n    'Client',\n    'ExtensionFeatures',\n    'DataFetcherV2',\n    { dep: 'ForwardingNumberOptions', optional: true },\n  ],\n})\nexport class ForwardingNumber extends DataFetcherV2Consumer<\n  Deps,\n  ForwardingNumberInfo[]\n> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.forwardingNumberOptions,\n      key: 'forwardingNumber',\n      cleanOnReset: true,\n      fetchFunction: async (): Promise<ForwardingNumberInfo[]> => {\n        try {\n          const forwardingNumbers = await fetchList((params: any) =>\n            this._deps.client\n              .account()\n              .extension()\n              .forwardingNumber()\n              .list(params),\n          );\n          return forwardingNumbers;\n        } catch (error) {\n          if (error.response?.status === 403) {\n            return [];\n          }\n          throw error;\n        }\n      },\n      readyCheckFunction: () => this._deps.extensionFeatures.ready,\n      permissionCheckFunction: () =>\n        this._deps.extensionFeatures.features?.ReadExtensionAnsweringRules\n          ?.available ?? false,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  @computed(({ data }: ForwardingNumber) => [data])\n  get numbers() {\n    return this.data ?? [];\n  }\n\n  @computed(({ numbers }: ForwardingNumber) => [numbers])\n  get flipNumbers() {\n    return filter(\n      (phoneNumber) =>\n        !!(\n          phoneNumber.features?.indexOf('CallFlip') !== -1 &&\n          phoneNumber.phoneNumber\n        ),\n      this.numbers,\n    );\n  }\n\n  @computed(({ numbers }: ForwardingNumber) => [numbers])\n  get forwardingNumbers() {\n    return filter(\n      (phoneNumber) =>\n        !!(\n          phoneNumber.features?.indexOf('CallForwarding') !== -1 &&\n          phoneNumber.phoneNumber\n        ),\n      this.numbers,\n    );\n  }\n}\n"],"file":"ForwardingNumber.js"}