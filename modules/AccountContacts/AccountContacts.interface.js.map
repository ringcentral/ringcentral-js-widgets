{"version":3,"file":"AccountContacts.interface.js","names":[],"sources":["modules/AccountContacts/AccountContacts.interface.ts"],"sourcesContent":["import type PresenceInfoResponse from '@rc-ex/core/lib/definitions/PresenceInfoResponse';\n\nimport type { IContact } from '../../interfaces/Contact.model';\nimport type { AccountInfo } from '../AccountInfo';\nimport type { AppFeatures } from '../AppFeatures';\nimport type { CompanyContacts } from '../CompanyContacts';\nimport type { ExtensionInfo } from '../ExtensionInfo';\n\nexport interface Deps {\n  client: any;\n  extensionInfo: ExtensionInfo;\n  companyContacts: CompanyContacts;\n  appFeatures: AppFeatures;\n  accountContactsOptions?: AccountContactsOptions;\n  accountInfo: AccountInfo;\n}\n\nexport interface AccountContactsOptions {\n  /**\n   * timestamp of avatar local cache, default 2 hour\n   */\n  avatarTtl?: number;\n  /**\n   * timestamp of presence local cache, default 10 mins\n   */\n  presenceTtl?: number;\n  /**\n   * interval of query avatar, default 2 seconds\n   */\n  avatarQueryInterval?: number;\n}\n\nexport interface ProfileImage {\n  imageUrl: string;\n  timestamp: number;\n}\n\nexport type ProfileImages = Record<string, ProfileImage>;\n\nexport interface Presence {\n  presence: Pick<\n    PresenceInfoResponse,\n    | 'dndStatus'\n    | 'presenceStatus'\n    | 'telephonyStatus'\n    | 'userStatus'\n    | 'meetingStatus'\n  >;\n  timestamp: number;\n}\n\nexport type Presences = Record<string, Presence>;\n\nexport interface Contact extends IContact {\n  presence?: Presence['presence'];\n  contactStatus?: string;\n}\n\nexport interface DirectoryContacts {\n  all: Contact[];\n  cdc: Contact[];\n}\n\nexport type GetPresenceContext = {\n  accountId: string;\n  extensionId: string;\n  callbacks: Array<(...args: any) => void>;\n};\n\nexport type PresenceMap = Record<string, Presence['presence']>;\n"],"mappings":""}