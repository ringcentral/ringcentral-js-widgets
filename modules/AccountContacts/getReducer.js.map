{"version":3,"sources":["modules/AccountContacts/getReducer.ts"],"names":["getProfileImagesReducer","types","state","type","imageId","imageUrl","ttl","fetchImageSuccess","data","Object","keys","forEach","key","Date","now","timestamp","URL","revokeObjectURL","resetSuccess","getContactPresencesReducer","presenceMap","batchFetchPresenceSuccess","presence","getContactsReducer","status","profileImages","presences"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;AAEO,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;AAC7C,SAAO,YAAkD;AAAA,QAAjDC,KAAiD,uEAAzC,EAAyC;;AAAA;AAAA,QAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,QAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,QAApBC,QAAoB,QAApBA,QAAoB;AAAA,QAAVC,GAAU,QAAVA,GAAU;;AACvD,YAAQH,IAAR;AACE,WAAKF,KAAK,CAACM,iBAAX;AAA8B;AAC5B,cAAMC,IAAI,GAAG,EAAb;AACAC,UAAAA,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClC,gBAAIC,IAAI,CAACC,GAAL,KAAaZ,KAAK,CAACU,GAAD,CAAL,CAAWG,SAAxB,GAAoCT,GAAxC,EAA6C;AAC3CE,cAAAA,IAAI,CAACI,GAAD,CAAJ,GAAYV,KAAK,CAACU,GAAD,CAAjB;AACD,aAFD,MAEO;AACLI,cAAAA,GAAG,CAACC,eAAJ,CAAoBf,KAAK,CAACU,GAAD,CAAL,CAAWP,QAA/B;AACD;AACF,WAND;AAOAG,UAAAA,IAAI,CAACJ,OAAD,CAAJ,GAAgB;AACdC,YAAAA,QAAQ,EAARA,QADc;AAEdU,YAAAA,SAAS,EAAEF,IAAI,CAACC,GAAL;AAFG,WAAhB;AAIA,iBAAON,IAAP;AACD;;AACD,WAAKP,KAAK,CAACiB,YAAX;AAAyB;AACvBT,UAAAA,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClCI,YAAAA,GAAG,CAACC,eAAJ,CAAoBf,KAAK,CAACU,GAAD,CAAL,CAAWP,QAA/B;AACD,WAFD;AAGA,iBAAO,EAAP;AACD;;AACD;AACE,eAAOH,KAAP;AAvBJ;AAyBD,GA1BD;AA2BD;;AAEM,SAASiB,0BAAT,CAAoClB,KAApC,EAA2C;AAChD,SAAO,YAAiD;AAAA,QAAhDC,KAAgD,uEAAxC,EAAwC;;AAAA;AAAA,QAAlCC,IAAkC,SAAlCA,IAAkC;AAAA,kCAA5BiB,WAA4B;AAAA,QAA5BA,WAA4B,kCAAd,EAAc;AAAA,QAAVd,GAAU,SAAVA,GAAU;;AACtD,YAAQH,IAAR;AACE,WAAKF,KAAK,CAACoB,yBAAX;AAAsC;AACpC,cAAMb,IAAI,GAAG,EAAb;AACAC,UAAAA,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClC,gBAAIC,IAAI,CAACC,GAAL,KAAaZ,KAAK,CAACU,GAAD,CAAL,CAAWG,SAAxB,GAAoCT,GAAxC,EAA6C;AAC3CE,cAAAA,IAAI,CAACI,GAAD,CAAJ,GAAYV,KAAK,CAACU,GAAD,CAAjB;AACD;AACF,WAJD;AAKAH,UAAAA,MAAM,CAACC,IAAP,CAAYU,WAAZ,EAAyBT,OAAzB,CAAiC,UAACC,GAAD,EAAS;AACxCJ,YAAAA,IAAI,CAACI,GAAD,CAAJ,GAAY;AACVU,cAAAA,QAAQ,EAAEF,WAAW,CAACR,GAAD,CADX;AAEVG,cAAAA,SAAS,EAAEF,IAAI,CAACC,GAAL;AAFD,aAAZ;AAID,WALD;AAMA,iBAAON,IAAP;AACD;;AACD,WAAKP,KAAK,CAACiB,YAAX;AACE,eAAO,EAAP;;AACF;AACE,eAAOhB,KAAP;AAnBJ;AAqBD,GAtBD;AAuBD;;AAEc,SAASqB,kBAAT,CAA4BtB,KAA5B,EAAmC;AAChD,SAAO,4BAAgB;AACrBuB,IAAAA,MAAM,EAAE,wCAAuBvB,KAAvB,CADa;AAErBwB,IAAAA,aAAa,EAAEzB,uBAAuB,CAACC,KAAD,CAFjB;AAGrByB,IAAAA,SAAS,EAAEP,0BAA0B,CAAClB,KAAD;AAHhB,GAAhB,CAAP;AAKD","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getProfileImagesReducer(types) {\n  return (state = {}, { type, imageId, imageUrl, ttl }) => {\n    switch (type) {\n      case types.fetchImageSuccess: {\n        const data = {};\n        Object.keys(state).forEach((key) => {\n          if (Date.now() - state[key].timestamp < ttl) {\n            data[key] = state[key];\n          } else {\n            URL.revokeObjectURL(state[key].imageUrl);\n          }\n        });\n        data[imageId] = {\n          imageUrl,\n          timestamp: Date.now(),\n        };\n        return data;\n      }\n      case types.resetSuccess: {\n        Object.keys(state).forEach((key) => {\n          URL.revokeObjectURL(state[key].imageUrl);\n        });\n        return {};\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getContactPresencesReducer(types) {\n  return (state = {}, { type, presenceMap = {}, ttl }) => {\n    switch (type) {\n      case types.batchFetchPresenceSuccess: {\n        const data = {};\n        Object.keys(state).forEach((key) => {\n          if (Date.now() - state[key].timestamp < ttl) {\n            data[key] = state[key];\n          }\n        });\n        Object.keys(presenceMap).forEach((key) => {\n          data[key] = {\n            presence: presenceMap[key],\n            timestamp: Date.now(),\n          };\n        });\n        return data;\n      }\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getContactsReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    profileImages: getProfileImagesReducer(types),\n    presences: getContactPresencesReducer(types),\n  });\n}\n"],"file":"getReducer.js"}