{"version":3,"sources":["modules/ConferenceDialerUI/ConferenceDialerUI.ts"],"names":["ConferenceDialerUI","name","deps","dep","optional","val","lastSessionId","sessionId","clearRecipient","clearToNumberField","_setLastSessionId","fromSessionId","_deps","conferenceCall","mergingPair","setMergeParty","inConference","showFromField","props","params","fromNumber","onBack","routerInteraction","push","_backURL","setLastSessionId","onCallButtonClick","conferenceDialerUIOptions","backURL","DialerUI","state","action","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgBaA,kB,WATZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,oBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,gBAFI,EAGJ,mBAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,2BAAP;AAAoCC,IAAAA,QAAQ,EAAE;AAA9C,GAJI;AAFA,CAAP,C;;;;;;;;;;;;;;;;;;;;;;;sCAkBmBC,G,EAAa;AAC7B,WAAKC,aAAL,GAAqBD,GAArB;AACD;;;;wGAGsBE,S;;;;;AACrB,oBAAI,KAAKD,aAAL,KAAuBC,SAA3B,EAAsC;AACpC,uBAAKC,cAAL;AACA,uBAAKC,kBAAL;AACD;;AAED,qBAAKC,iBAAL,CAAuBH,SAAvB;;;;;;;;;;;;;;;;;;kCAGYI,a,EAAuB;AAAA;;AACnC,UACEA,aAAa,IACb,2BAAC,KAAKC,KAAL,CAAWC,cAAX,CAA0BC,WAA3B,0DAAC,sBAAuCH,aAAxC,CAFF,EAGE;AACA;AACA,aAAKC,KAAL,CAAWC,cAAX,CAA0BE,aAA1B,CAAwC;AACtCJ,UAAAA,aAAa,EAAbA;AADsC,SAAxC;AAGD;AACF;;;iCAEmD;AAClD;AAEEK,QAAAA,YAAY,EAAE,IAFhB;AAGEC,QAAAA,aAAa,EAAE;AAHjB;AAKD;;;mCAGCC,K,EAC2C;AAAA;;AAAA,0BAGvCA,KAHuC,CAEzCC,MAFyC;AAAA,UAE/BC,UAF+B,iBAE/BA,UAF+B;AAAA,UAEnBT,aAFmB,iBAEnBA,aAFmB;AAI3C,oIAC0BO,KAD1B;AAEEG,QAAAA,MAAM,EAAE;AAAA,iBAAM,MAAI,CAACT,KAAL,CAAWU,iBAAX,CAA6BC,IAA7B,CAAkC,MAAI,CAACC,QAAvC,CAAN;AAAA,SAFV;AAGEC,QAAAA,gBAAgB,EAAE;AAAA,iBAAM,MAAI,CAACA,gBAAL,CAAsBd,aAAtB,CAAN;AAAA,SAHpB;AAIEe,QAAAA,iBAAiB,EAAE;AAAA,iBACjB,MAAI,CAACA,iBAAL,CAAuB;AAAEN,YAAAA,UAAU,EAAVA,UAAF;AAAcT,YAAAA,aAAa,EAAbA;AAAd,WAAvB,CADiB;AAAA;AAJrB;AAOD;;;wBAvDsB;AAAA;;AACrB,aAAO,gCAAKC,KAAL,CAAWe,yBAAX,kFAAsCC,OAAtC,KAAiD,eAAxD;AACD;;;;EAHqCC,mB,iFAKrCC,W;;;;;WACuB,E;;uEAEvBC,Y,kKAKAC,gB","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { proxify } from '@ringcentral-integration/commons/lib/proxy/proxify';\nimport {\n  action,\n  state,\n  UIFunctions,\n  UIProps,\n} from '@ringcentral-integration/core';\n\nimport { DialerUI } from '../DialerUI';\nimport {\n  ConferenceDialerUIContainerProps,\n  ConferenceDialerUIPanelProps,\n  Deps,\n} from './ConferenceDialerUI.interface';\n\n@Module({\n  name: 'ConferenceDialerUI',\n  deps: [\n    'Locale',\n    'ConferenceCall',\n    'RouterInteraction',\n    { dep: 'ConferenceDialerUIOptions', optional: true },\n  ],\n})\nexport class ConferenceDialerUI extends DialerUI<Deps> {\n  private get _backURL() {\n    return this._deps.conferenceDialerUIOptions?.backURL || '/calls/active';\n  }\n\n  @state\n  lastSessionId: string = '';\n\n  @action\n  _setLastSessionId(val: string) {\n    this.lastSessionId = val;\n  }\n\n  @proxify\n  async setLastSessionId(sessionId: string) {\n    if (this.lastSessionId !== sessionId) {\n      this.clearRecipient();\n      this.clearToNumberField();\n    }\n\n    this._setLastSessionId(sessionId);\n  }\n\n  _onBeforeCall(fromSessionId: string) {\n    if (\n      fromSessionId &&\n      !this._deps.conferenceCall.mergingPair?.fromSessionId\n    ) {\n      // set mergingPair if has\n      this._deps.conferenceCall.setMergeParty({\n        fromSessionId,\n      });\n    }\n  }\n\n  getUIProps(): UIProps<ConferenceDialerUIPanelProps> {\n    return {\n      ...super.getUIProps(),\n      inConference: true,\n      showFromField: false,\n    };\n  }\n\n  getUIFunctions(\n    props: ConferenceDialerUIContainerProps,\n  ): UIFunctions<ConferenceDialerUIPanelProps> {\n    const {\n      params: { fromNumber, fromSessionId },\n    } = props;\n    return {\n      ...super.getUIFunctions(props),\n      onBack: () => this._deps.routerInteraction.push(this._backURL),\n      setLastSessionId: () => this.setLastSessionId(fromSessionId),\n      onCallButtonClick: () =>\n        this.onCallButtonClick({ fromNumber, fromSessionId }),\n    };\n  }\n}\n"],"file":"ConferenceDialerUI.js"}