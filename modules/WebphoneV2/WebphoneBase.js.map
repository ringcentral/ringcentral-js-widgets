{"version":3,"sources":["modules/WebphoneV2/WebphoneBase.ts"],"names":["DEFAULT_AUDIO","AUTO_RETRIES_DELAY","INACTIVE_SLEEP_DELAY","registerErrors","webphoneErrors","sipProvisionError","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","connectFailed","provisionUpdate","serverConnecting","WebphoneBase","name","deps","dep","optional","trackEvents","webRTCRegistration","that","ready","_deps","audioSettings","ringtoneVolume","ringtoneMuted","supportDevices","outputDeviceId","tabManager","active","enableCache","storageKey","_reconnectDelays","_disconnectOnInactive","_activeWebphoneKey","_webphoneInstanceKey","_webphone","_sipInstanceManager","_remoteVideo","_localVideo","_sipInstanceId","_connectTimeout","_isFirstRegister","_reconnectAfterSessionEnd","_disconnectInactiveAfterSessionEnd","_eventEmitter","_stopWebphoneUserAgentPromise","_removedWebphoneAtBeforeUnload","webphoneOptions","disconnectOnInactive","prefix","EventEmitter","SipInstanceManager","prepared","videoElementPrepared","status","connectionStatus","errorCode","statusCode","connectError","device","connecting","connectRetryCounts","reconnecting","connected","disconnected","inactive","disconnecting","retryCounts","incomingAudioFile","incomingAudioDataUrl","outgoingAudioFile","outgoingAudioDataUrl","data","fileName","dataUrl","document","createElement","id","setAttribute","muted","body","appendChild","volume","callVolume","setSinkId","_setVideoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","Object","keys","originalSessions","length","_disconnect","setTimeout","connect","force","skipConnectDelay","skipDLCheck","setInstanceInactive","auth","endpointId","_removeCurrentInstanceFromActiveWebphone","_createOtherWebphoneInstanceListener","addBeforeLogoutHandler","shouldUpdateRingtoneVolume","userAgent","audioHelper","setVolume","shouldSetSinkId","shouldTriggerOnTabActive","_onTabActive","loggedIn","appFeatures","extensionFeatures","numberValidate","storage","pending","client","service","platform","post","sipInfo","transport","response","json","account","extension","list","devices","records","phoneLines","forEach","concat","_waitUnregistered","stop","console","error","removeAllListeners","isConnected","disconnect","reconnectTimer","clearTimeout","undefined","__clearSwitchBackTimer","e","Promise","resolve","reject","timeout","Error","once","provisionData","_removeWebphone","getInstanceId","RingCentralWebphone","appKey","appName","appVersion","uuid","logLevel","webphoneLogLevel","enabled","media","remote","local","enableQos","enableMidLinesInSDP","instanceId","autoStop","webphoneSDKOptions","loadAudio","on","_onWebphoneRegistered","log","_onWebphoneUnregistered","cause","message","isSipErrorCode","status_code","_onConnectError","session","_onInvite","alert","warning","allowDuplicates","reason","_setStateOnReconnect","_setRetryCounts","ttl","_setConnectionStatus","_sipProvision","sipProvision","indexOf","fetchData","_createWebphone","_waitStillTabActive","inactiveDisconnecting","skipTimeout","skipTabActiveCheck","_setStateOnConnectError","browserNotSupported","_isAvailableToConnect","_setStateOnConnect","connectDelay","_fetchDL","noOutboundCallWithoutDL","checkDLError","_connect","_getConnectTimeoutTtl","danger","payload","_hideConnectingAlert","_setStateOnConnectFailed","isConnecting","_hideConnectFailedAlert","_setStateOnRegistered","_hideRegisterErrorAlert","_setCurrentInstanceAsActiveWebphone","emit","EVENTS","webphoneRegistered","webphoneUnregistered","localStorage","setItem","activeWebphoneInstance","getItem","removeItem","_onStorageChangeEvent","key","hidden","newValue","_disconnectToInactive","_setDevice","_setStateWhenUnregisteredOnInactive","alertIds","messages","filter","m","i","len","map","dismiss","_setStoreOnDisconnect","_setStateOnUnregistered","incoming","incomingAudio","outgoing","outgoingAudio","_setOutgoingAudioIntoStorage","_resetOutgoingAudio","_setIncomingAudioIntoStorage","_resetIncomingAudio","isIncomingDefault","defaultIncomingAudio","isOutgoingDefault","defaultOutgoingAudio","_setRingtoneIntoStorage","sessions","Map","entries","isWebPhoneEnabled","userMedia","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\nimport PhoneLinesInfo from 'ringcentral-client/build/definitions/PhoneLinesInfo';\nimport RingCentralWebphone from 'ringcentral-web-phone';\nimport defaultIncomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport defaultOutgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\nimport { WebPhoneUserAgent } from 'ringcentral-web-phone/lib/userAgent';\n\nimport CreateSipRegistrationResponse from '@rc-ex/core/definitions/CreateSipRegistrationResponse';\nimport SipRegistrationDeviceInfo from '@rc-ex/core/definitions/SipRegistrationDeviceInfo';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  track,\n  watch,\n} from '@ringcentral-integration/core';\nimport { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\n\nimport { WebphoneSession } from '../../interfaces/Webphone.interface';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { SipInstanceManager } from '../../lib/SipInstanceManager';\nimport sleep from '../../lib/sleep';\nimport { trackEvents } from '../Analytics';\nimport { connectionStatus } from './connectionStatus';\nimport { EVENTS } from './events';\nimport { Deps } from './Webphone.interface';\nimport { webphoneErrors } from './webphoneErrors';\nimport {\n  isBrowserSupport,\n  isChrome,\n  isEnableMidLinesInSDP,\n} from './webphoneHelper';\n\nexport const DEFAULT_AUDIO = 'default';\n\nconst AUTO_RETRIES_DELAY = [\n  0,\n  5 * 1000,\n  10 * 1000,\n  30 * 1000,\n  2 * 60 * 1000,\n  5 * 60 * 1000,\n  15 * 60 * 1000,\n  30 * 60 * 1000,\n];\n\nconst INACTIVE_SLEEP_DELAY = 1000;\n\nconst registerErrors = [\n  webphoneErrors.sipProvisionError,\n  webphoneErrors.webphoneCountOverLimit,\n  webphoneErrors.webphoneForbidden,\n  webphoneErrors.requestTimeout,\n  webphoneErrors.internalServerError,\n  webphoneErrors.serverTimeout,\n  webphoneErrors.unknownError,\n  webphoneErrors.connectFailed,\n  webphoneErrors.provisionUpdate,\n  webphoneErrors.serverConnecting,\n];\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  name: 'Webphone',\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    'NumberValidate',\n    'AppFeatures',\n    'ExtensionFeatures',\n    'Brand',\n    'RegionSettings',\n    'AudioSettings',\n    'Storage',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'Prefix', optional: true },\n    { dep: 'WebphoneOptions', optional: true },\n  ],\n})\nexport class WebphoneBase extends RcModuleV2<Deps> {\n  protected _reconnectDelays = AUTO_RETRIES_DELAY;\n  protected _disconnectOnInactive: boolean;\n  protected _activeWebphoneKey: string;\n  protected _webphoneInstanceKey: string;\n\n  protected _webphone?: RingCentralWebphone;\n  protected _sipInstanceManager: WebphoneInstanceManager;\n  protected _remoteVideo?: HTMLVideoElement;\n  protected _localVideo?: HTMLVideoElement;\n  protected _sipInstanceId?: string;\n\n  protected _connectTimeout?: NodeJS.Timeout;\n  protected _isFirstRegister: boolean;\n  protected _reconnectAfterSessionEnd?: { reason?: string };\n  protected _disconnectInactiveAfterSessionEnd: boolean;\n  protected _eventEmitter: EventEmitter;\n  protected _stopWebphoneUserAgentPromise?: Promise<unknown> = null;\n  protected _removedWebphoneAtBeforeUnload: boolean;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'Webphone',\n    });\n    this._disconnectOnInactive =\n      deps.webphoneOptions?.disconnectOnInactive ?? false;\n    this._activeWebphoneKey = `${deps.prefix}-active-webphone-key`;\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._reconnectAfterSessionEnd = null;\n    this._disconnectInactiveAfterSessionEnd = false;\n    this._connectTimeout = null;\n    this._isFirstRegister = true;\n    this._eventEmitter = new EventEmitter();\n    this._sipInstanceManager = new SipInstanceManager(\n      `${deps.prefix}-webphone-inactive-sip-instance`,\n    );\n    this._removedWebphoneAtBeforeUnload = false;\n  }\n\n  @state\n  videoElementPrepared: boolean = false;\n\n  @state\n  connectionStatus: ObjectMapValue<typeof connectionStatus> =\n    connectionStatus.disconnected;\n\n  @state\n  connectRetryCounts: number = 0;\n\n  @state\n  errorCode?: string = null;\n\n  @state\n  statusCode?: number = null;\n\n  @state\n  device?: SipRegistrationDeviceInfo = null;\n\n  @action\n  _setVideoElementPrepared(prepared: boolean) {\n    this.videoElementPrepared = prepared;\n  }\n\n  @action\n  _setConnectionStatus(status: ObjectMapValue<typeof connectionStatus>) {\n    this.connectionStatus = status;\n  }\n\n  @action\n  _setStateOnConnectError(errorCode?: string, statusCode?: number) {\n    this.connectionStatus = connectionStatus.connectError;\n    this.device = null;\n    if (errorCode) {\n      this.errorCode = errorCode;\n    }\n    if (statusCode) {\n      this.statusCode = statusCode;\n    }\n  }\n\n  @action\n  _setStateOnConnectFailed(errorCode?: string, statusCode?: number) {\n    this.connectionStatus = connectionStatus.connectFailed;\n    this.device = null;\n    if (errorCode) {\n      this.errorCode = errorCode;\n    }\n    if (statusCode) {\n      this.statusCode = statusCode;\n    }\n  }\n\n  @action\n  _setStateOnConnect() {\n    this.connectionStatus = connectionStatus.connecting;\n    this.device = null;\n    this.connectRetryCounts += 1;\n  }\n\n  @action\n  _setStateOnReconnect() {\n    this.connectionStatus = connectionStatus.reconnecting;\n    this.device = null;\n    this.connectRetryCounts += 1;\n  }\n\n  @track(trackEvents.webRTCRegistration)\n  @action\n  _setStateOnRegistered(device: SipRegistrationDeviceInfo) {\n    this.connectionStatus = connectionStatus.connected;\n    this.device = device;\n    this.errorCode = null;\n    this.statusCode = null;\n    this.connectRetryCounts = 0;\n  }\n\n  @action\n  _setStateOnUnregistered() {\n    this.connectionStatus = connectionStatus.disconnected;\n    this.device = null;\n    this.connectRetryCounts = 0;\n  }\n\n  @action\n  _setStateWhenUnregisteredOnInactive() {\n    this.connectionStatus = connectionStatus.inactive;\n    this.device = null;\n    this.connectRetryCounts = 0;\n  }\n\n  @action\n  _setStoreOnDisconnect() {\n    this.connectionStatus = connectionStatus.disconnecting;\n    this.device = null;\n  }\n\n  @action\n  _setDevice(device?: { id: string }) {\n    this.device = device;\n  }\n\n  @action\n  _setRetryCounts(retryCounts: number) {\n    this.connectRetryCounts = retryCounts;\n  }\n\n  get incomingAudioFile() {\n    return this.data.incomingAudioFile;\n  }\n\n  get incomingAudioDataUrl() {\n    return this.data.incomingAudioDataUrl;\n  }\n\n  get outgoingAudioFile() {\n    return this.data.outgoingAudioFile;\n  }\n\n  get outgoingAudioDataUrl() {\n    return this.data.outgoingAudioDataUrl;\n  }\n\n  @storage\n  @state\n  data: {\n    incomingAudioFile: string;\n    incomingAudioDataUrl: string;\n    outgoingAudioFile: string;\n    outgoingAudioDataUrl: string;\n  } = {\n    incomingAudioFile: DEFAULT_AUDIO,\n    incomingAudioDataUrl: null,\n    outgoingAudioFile: DEFAULT_AUDIO,\n    outgoingAudioDataUrl: null,\n  };\n\n  @action\n  _setRingtoneIntoStorage(\n    incomingAudioFile?: string,\n    incomingAudioDataUrl?: string,\n    outgoingAudioFile?: string,\n    outgoingAudioDataUrl?: string,\n  ) {\n    this.data.incomingAudioFile = incomingAudioFile;\n    this.data.incomingAudioDataUrl = incomingAudioDataUrl;\n    this.data.outgoingAudioFile = outgoingAudioFile;\n    this.data.outgoingAudioDataUrl = outgoingAudioDataUrl;\n  }\n\n  @action\n  _setIncomingAudioIntoStorage(fileName: string, dataUrl: string) {\n    this.data.incomingAudioFile = fileName;\n    this.data.incomingAudioDataUrl = dataUrl;\n  }\n\n  @action\n  _resetIncomingAudio() {\n    this.data.incomingAudioFile = DEFAULT_AUDIO;\n    this.data.incomingAudioDataUrl = null;\n  }\n\n  @action\n  _setOutgoingAudioIntoStorage(fileName: string, dataUrl: string) {\n    this.data.outgoingAudioFile = fileName;\n    this.data.outgoingAudioDataUrl = dataUrl;\n  }\n\n  @action\n  _resetOutgoingAudio() {\n    this.data.outgoingAudioFile = DEFAULT_AUDIO;\n    this.data.outgoingAudioDataUrl = null;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.id = 'remoteVideo';\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.id = 'localVideo';\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._deps.audioSettings.callVolume;\n    if (this._deps.audioSettings.supportDevices) {\n      if (\n        this._remoteVideo.setSinkId &&\n        this._deps.audioSettings.outputDeviceId\n      ) {\n        this._remoteVideo.setSinkId(this._deps.audioSettings.outputDeviceId);\n      }\n    }\n\n    this._setVideoElementPrepared(true);\n  }\n\n  async _initModule() {\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('beforeunload', () => {\n        if (!this._webphone) {\n          return;\n        }\n        if (Object.keys(this.originalSessions).length > 0) {\n          return;\n        }\n        this._removedWebphoneAtBeforeUnload = true;\n        // disconnect webphone at beforeunload if there are not active sessions\n        this._disconnect();\n        // set timeout to reconnect web phone is before unload cancel\n        setTimeout(() => {\n          this._removedWebphoneAtBeforeUnload = false;\n          this.connect({\n            force: true,\n            skipConnectDelay: true,\n            skipDLCheck: true,\n          });\n        }, 4000);\n      });\n      window.addEventListener('unload', () => {\n        // mark current instance id as inactive, so app can reuse it after refresh\n        if (this._sipInstanceId) {\n          this._sipInstanceManager.setInstanceInactive(\n            this._sipInstanceId,\n            this._deps.auth.endpointId,\n          );\n          this._sipInstanceId = null;\n        }\n        // disconnect if web phone is not disconnected at beforeunload\n        if (!this._removedWebphoneAtBeforeUnload) {\n          this._disconnect();\n        }\n        this._removeCurrentInstanceFromActiveWebphone();\n      });\n    }\n    this._createOtherWebphoneInstanceListener();\n    await super._initModule();\n  }\n\n  onInitOnce() {\n    this._deps.auth.addBeforeLogoutHandler(async () => {\n      this._sipInstanceId = null;\n      await this._disconnect();\n    });\n    watch(\n      this,\n      () => this.shouldUpdateRingtoneVolume,\n      () => {\n        if (this.ready && this._webphone && this._webphone.userAgent) {\n          const ringtoneMuted = this._deps.audioSettings.ringtoneMuted;\n          this._webphone.userAgent.audioHelper.setVolume(\n            ringtoneMuted ? 0 : this._deps.audioSettings.ringtoneVolume,\n          );\n        }\n      },\n    );\n    watch(\n      this,\n      () => this._deps.audioSettings.callVolume,\n      () => {\n        if (this.ready && this._remoteVideo) {\n          this._remoteVideo.volume = this._deps.audioSettings.callVolume;\n        }\n      },\n    );\n    watch(\n      this,\n      () => this.shouldSetSinkId,\n      () => {\n        if (\n          this.ready &&\n          this._deps.audioSettings.supportDevices &&\n          this._remoteVideo &&\n          this._remoteVideo.setSinkId\n        ) {\n          this._remoteVideo.setSinkId(this._deps.audioSettings.outputDeviceId);\n        }\n      },\n    );\n    watch(\n      this,\n      () => this.shouldTriggerOnTabActive,\n      () => {\n        if (\n          this.ready &&\n          this._deps.tabManager?.ready &&\n          this._deps.tabManager?.active\n        ) {\n          this._onTabActive();\n        }\n      },\n    );\n  }\n\n  @computed((that: WebphoneBase) => [\n    that.ready,\n    that._deps.audioSettings.ringtoneVolume,\n    that._deps.audioSettings.ringtoneMuted,\n  ])\n  get shouldUpdateRingtoneVolume(): any[] {\n    return [\n      this.ready,\n      this._deps.audioSettings.ringtoneVolume,\n      this._deps.audioSettings.ringtoneMuted,\n    ];\n  }\n\n  @computed((that: WebphoneBase) => [\n    that.ready,\n    that._deps.audioSettings.supportDevices,\n    that._deps.audioSettings.outputDeviceId,\n  ])\n  get shouldSetSinkId(): any[] {\n    return [\n      this.ready,\n      this._deps.audioSettings.supportDevices,\n      this._deps.audioSettings.outputDeviceId,\n    ];\n  }\n\n  @computed((that: WebphoneBase) => [\n    that.ready,\n    that._deps.tabManager?.ready,\n    that._deps.tabManager?.active,\n  ])\n  get shouldTriggerOnTabActive(): any[] {\n    return [\n      this.ready,\n      this._deps.tabManager?.ready,\n      this._deps.tabManager?.active,\n    ];\n  }\n\n  _shouldInit() {\n    return (\n      this._deps.auth.loggedIn &&\n      this._deps.appFeatures.ready &&\n      this._deps.extensionFeatures.ready &&\n      this._deps.numberValidate.ready &&\n      this._deps.audioSettings.ready &&\n      this._deps.storage.ready &&\n      (!this._deps.tabManager || this._deps.tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (!this._deps.auth.loggedIn ||\n        !this._deps.appFeatures.ready ||\n        !this._deps.extensionFeatures.ready ||\n        !this._deps.numberValidate.ready ||\n        (!!this._deps.tabManager && !this._deps.tabManager.ready) ||\n        !this._deps.audioSettings.ready) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision(): Promise<CreateSipRegistrationResponse> {\n    const response = await this._deps.client.service\n      .platform()\n      .post('/restapi/v1.0/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }],\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._deps.client\n      .account()\n      .extension()\n      .device()\n      .list();\n    const devices = response.records;\n    let phoneLines: PhoneLinesInfo[] = [];\n    devices.forEach((device) => {\n      if (\n        !device.phoneLines ||\n        (device.phoneLines as PhoneLinesInfo[]).length === 0\n      ) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  async _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._stopWebphoneUserAgentPromise = this._waitUnregistered(\n      this._webphone.userAgent,\n    );\n    this._webphone.userAgent.stop();\n    try {\n      await this._stopWebphoneUserAgentPromise;\n    } catch (e) {\n      console.error(e);\n    }\n    this._stopWebphoneUserAgentPromise = null;\n    try {\n      this._webphone.userAgent.removeAllListeners();\n      this._webphone.userAgent.transport.removeAllListeners();\n      if (this._webphone.userAgent.transport.isConnected()) {\n        this._webphone.userAgent.transport.disconnect();\n      }\n      if (this._webphone.userAgent.transport.reconnectTimer) {\n        clearTimeout(this._webphone.userAgent.transport.reconnectTimer);\n        this._webphone.userAgent.transport.reconnectTimer = undefined;\n      }\n      if (this._webphone.userAgent.transport.__clearSwitchBackTimer) {\n        this._webphone.userAgent.transport.__clearSwitchBackTimer();\n      }\n    } catch (e) {\n      console.error(e);\n      // ignore clean listener error\n    }\n    this._webphone = null;\n  }\n\n  _waitUnregistered(userAgent: WebPhoneUserAgent) {\n    return new Promise((resolve, reject) => {\n      let timeout = setTimeout(() => {\n        timeout = null;\n        reject(new Error('unregistered timeout'));\n      }, 2000);\n      userAgent.once('unregistered', () => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n        resolve();\n      });\n    });\n  }\n\n  async _createWebphone(provisionData: CreateSipRegistrationResponse) {\n    await this._removeWebphone();\n    if (!this._sipInstanceId) {\n      this._sipInstanceId = this._sipInstanceManager.getInstanceId(\n        this._deps.auth.endpointId,\n      );\n    }\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._deps.webphoneOptions.appKey,\n      appName: this._deps.webphoneOptions.appName,\n      appVersion: this._deps.webphoneOptions.appVersion,\n      uuid: this._deps.auth.endpointId,\n      logLevel: this._deps.webphoneOptions.webphoneLogLevel ?? 1, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n      },\n      media: {\n        remote: this._remoteVideo,\n        local: this._localVideo,\n      },\n      enableQos: isChrome(),\n      enableMidLinesInSDP: isEnableMidLinesInSDP(),\n      instanceId: this._sipInstanceId, // reuse sip instance id to avoid 603 issue at reconnection\n      autoStop: false, // handle auto stop by this module, fix memory leak issue https://github.com/ringcentral/ringcentral-web-phone/pull/332\n      ...(this._deps.webphoneOptions.webphoneSDKOptions ?? {}),\n    });\n    this.loadAudio();\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._deps.audioSettings.ringtoneMuted\n        ? 0\n        : this._deps.audioSettings.ringtoneVolume,\n    );\n    // Webphone userAgent registered event\n    this._webphone.userAgent.on('registered', () => {\n      if (!this.connected) {\n        this._onWebphoneRegistered(provisionData);\n      }\n    });\n    this._webphone.userAgent.on('unregistered', (e) => {\n      console.log('web phone unregistered event', e);\n      this._onWebphoneUnregistered();\n    });\n    this._webphone.userAgent.on('registrationFailed', (response, cause) => {\n      console.error('Webphone Register Error:', response, cause);\n      // For 401\n      if (!response && cause === 'Connection Error') {\n        return;\n      }\n      const message = (response && response.data) || response;\n      if (\n        message &&\n        typeof message === 'string' &&\n        this._webphone.userAgent.transport.isSipErrorCode(message)\n      ) {\n        // error is handled in webphone sdk;\n        return;\n      }\n      // don't handled in connection is disconnecting\n      if (this.disconnected || this.disconnecting) {\n        return;\n      }\n      let errorCode;\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blocklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blocklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from block list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blocklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response\n        ? response.statusCode || response.status_code\n        : null;\n      switch (statusCode) {\n        // Webphone account over limit\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._onConnectError({ errorCode, statusCode });\n    });\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session as WebphoneSession);\n    });\n    // this._webphone.userAgent.on('inviteSent', (session) => {\n    //   console.log('UA invite');\n    //   this._addSession(session as WebphoneSession);\n    // });\n    // sip provision expired\n    this._webphone.userAgent.on('provisionUpdate', () => {\n      if (Object.keys(this.originalSessions).length === 0) {\n        this._deps.alert.warning({\n          message: webphoneErrors.provisionUpdate,\n          allowDuplicates: false,\n        });\n        this.connect({\n          force: true,\n          skipDLCheck: true,\n          skipConnectDelay: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: webphoneErrors.provisionUpdate,\n      };\n    });\n    // websocket transport connecting event\n    this._webphone.userAgent.transport.on('connecting', () => {\n      // reconnecting event\n      console.log('web phone connecting event');\n      if (this.connected || this.connectError) {\n        this._deps.alert.warning({\n          message: webphoneErrors.serverConnecting,\n          allowDuplicates: false,\n        });\n        this._setStateOnReconnect();\n      }\n    });\n    // Server connection closed event after 10 time retry with primary server and backup server\n    this._webphone.userAgent.transport.on('closed', () => {\n      console.log('web phone closed event');\n      this._setRetryCounts(20);\n      this._onConnectError({\n        errorCode: webphoneErrors.connectFailed,\n        ttl: 0,\n      });\n    });\n    this._webphone.userAgent.transport.on('transportError', () => {\n      console.log('WebSocket transportError occurred');\n    });\n    this._webphone.userAgent.transport.on('wsConnectionError', () => {\n      this._setConnectionStatus(connectionStatus.connectError);\n    });\n    // Timeout to switch back to primary server\n    this._webphone.userAgent.transport.on('switchBackProxy', () => {\n      if (Object.keys(this.originalSessions).length === 0) {\n        this.connect({\n          skipConnectDelay: true,\n          force: true,\n          skipDLCheck: true,\n        });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: null,\n      };\n    });\n  }\n\n  // eslint-disable-next-line\n  _onInvite(session: WebphoneSession) {\n    // override\n  }\n\n  @proxify\n  async _connect() {\n    if (!this._deps.auth.loggedIn) {\n      return;\n    }\n    let sipProvision;\n    try {\n      sipProvision = await this._sipProvision();\n    } catch (error) {\n      console.error(error, this.connectRetryCounts);\n      if (\n        error &&\n        error.message &&\n        error.message.indexOf('Feature [WebPhone] is not available') > -1\n      ) {\n        this._deps.extensionFeatures.fetchData();\n        return;\n      }\n      this._onConnectError({\n        errorCode: webphoneErrors.sipProvisionError,\n        statusCode: null,\n        ttl: 0,\n      });\n      return;\n    }\n    await this._createWebphone(sipProvision);\n  }\n\n  async _waitStillTabActive() {\n    if (!this._deps.tabManager || this._deps.tabManager.active) {\n      return;\n    }\n    await sleep(INACTIVE_SLEEP_DELAY);\n    await this._waitStillTabActive();\n  }\n\n  _isAvailableToConnect({ force }: { force: boolean }) {\n    if (!this.enabled || !this._deps.auth.loggedIn) {\n      return false;\n    }\n    // do not connect if it is connecting\n    // do not reconnect when user disconnected\n    if (this.connecting || this.disconnecting || this.inactiveDisconnecting) {\n      return false;\n    }\n    // do not connect when connected unless force\n    if (!force && this.connected) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect({\n    force = false,\n    skipTimeout = true,\n    skipConnectDelay = false,\n    skipDLCheck = false,\n    skipTabActiveCheck = false,\n  } = {}) {\n    if (!isBrowserSupport()) {\n      this._setStateOnConnectError(webphoneErrors.browserNotSupported, null);\n      this._deps.alert.warning({\n        message: webphoneErrors.browserNotSupported,\n        ttl: 0,\n      });\n      return;\n    }\n    if (!this._isAvailableToConnect({ force })) {\n      return;\n    }\n    if (!skipTabActiveCheck) {\n      await this._waitStillTabActive();\n    }\n    if (!this._isAvailableToConnect({ force })) {\n      return;\n    }\n    // when last connect is connect error, use reconnect (will show connecting badge)\n    if (this.connectError || force) {\n      this._setStateOnReconnect();\n    } else {\n      this._setStateOnConnect();\n    }\n    const connectDelay = this._deps.webphoneOptions.connectDelay ?? 0;\n    if (!skipConnectDelay && connectDelay > 0) {\n      await sleep(connectDelay);\n    }\n    if (!skipDLCheck) {\n      try {\n        if (!this._deps.auth.loggedIn) {\n          return;\n        }\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this._deps.alert.warning({\n            message: webphoneErrors.noOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.error('fetch DL failed', error);\n        this._deps.alert.warning({\n          message: webphoneErrors.checkDLError,\n          allowDuplicates: false,\n        });\n      }\n    }\n    if (this.disconnected || this.disconnecting || !this._deps.auth.loggedIn) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    if (force || skipTimeout) {\n      await this._connect();\n      return;\n    }\n    this._connectTimeout = setTimeout(() => {\n      this._connectTimeout = null;\n      this._connect();\n    }, this._getConnectTimeoutTtl());\n  }\n\n  _getConnectTimeoutTtl() {\n    if (this.connectRetryCounts < 7) {\n      return this._reconnectDelays[this.connectRetryCounts];\n    }\n    return this._reconnectDelays[6];\n  }\n\n  async _onConnectError({\n    errorCode,\n    statusCode,\n    ttl,\n  }: {\n    errorCode?: string;\n    statusCode?: number;\n    ttl?: number;\n  }) {\n    if (statusCode === 403 && this._sipInstanceId) {\n      // recreate sip instance id if server send 403\n      this._sipInstanceId = null;\n    }\n    if (\n      this.connectRetryCounts > 2 ||\n      this.reconnecting ||\n      this.connected ||\n      this.connectError\n    ) {\n      this._setStateOnConnectError(errorCode, statusCode);\n      this._deps.alert.danger({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n        },\n      });\n      this._hideConnectingAlert();\n      // Need to show unavailable badge and reconnect in background when third retry\n      // sleep before next reconnect for slient reconnect in background\n      await sleep(this._getConnectTimeoutTtl());\n      if (!this.connectError) {\n        return;\n      }\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n      return;\n    }\n    this._setStateOnConnectFailed(errorCode, statusCode);\n    if (this.connectRetryCounts === 1) {\n      this._deps.alert.warning({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n          isConnecting: true,\n        },\n      });\n      this._hideConnectFailedAlert();\n    }\n    this.connect({\n      skipDLCheck: true,\n      skipConnectDelay: true,\n      skipTimeout: false,\n    });\n  }\n\n  _onWebphoneRegistered(provisionData: CreateSipRegistrationResponse) {\n    this._setStateOnRegistered(provisionData.device);\n    this._hideRegisterErrorAlert();\n    this._setCurrentInstanceAsActiveWebphone();\n    this._eventEmitter.emit(EVENTS.webphoneRegistered);\n  }\n\n  _onWebphoneUnregistered() {\n    this._removeCurrentInstanceFromActiveWebphone();\n    if (\n      this.disconnecting ||\n      this.inactiveDisconnecting ||\n      this.disconnected ||\n      this.inactive ||\n      !!this._stopWebphoneUserAgentPromise\n    ) {\n      // unregister by our app\n      return;\n    }\n    // unavailable, unregistered by some errors\n    this._setStateOnConnectError();\n    this._eventEmitter.emit(EVENTS.webphoneUnregistered);\n  }\n\n  _setCurrentInstanceAsActiveWebphone() {\n    if (this._disconnectOnInactive && this._deps.tabManager) {\n      localStorage.setItem(this._activeWebphoneKey, this._deps.tabManager.id);\n    }\n  }\n\n  _removeCurrentInstanceFromActiveWebphone() {\n    if (this._disconnectOnInactive && this._deps.tabManager) {\n      const activeWebphoneInstance = localStorage.getItem(\n        this._activeWebphoneKey,\n      );\n      if (activeWebphoneInstance === this._deps.tabManager.id) {\n        localStorage.removeItem(this._activeWebphoneKey);\n      }\n    }\n  }\n\n  _createOtherWebphoneInstanceListener() {\n    if (!this._disconnectOnInactive || !this._deps.tabManager) {\n      return;\n    }\n    window.addEventListener('storage', (e) => {\n      this._onStorageChangeEvent(e);\n    });\n  }\n\n  _onStorageChangeEvent(e: StorageEvent) {\n    // disconnect to inactive when other tabs' web phone connected\n    if (e.key === this._activeWebphoneKey) {\n      if (!this.connected || !document.hidden) {\n        return;\n      }\n      if (e.newValue === this._deps.tabManager.id) {\n        return;\n      }\n      if (Object.keys(this.originalSessions).length === 0) {\n        this._disconnectToInactive();\n        return;\n      }\n      this._disconnectInactiveAfterSessionEnd = true;\n    }\n  }\n\n  async _disconnectToInactive() {\n    this._setConnectionStatus(connectionStatus.inactiveDisconnecting);\n    this._setDevice(null);\n    await this._removeWebphone();\n    this._setStateWhenUnregisteredOnInactive();\n  }\n\n  _makeWebphoneInactiveOnSessionsEmpty() {\n    if (\n      this._disconnectInactiveAfterSessionEnd &&\n      Object.keys(this.originalSessions).length === 0\n    ) {\n      this._disconnectInactiveAfterSessionEnd = false;\n      if (!document.hidden) {\n        // set to active\n        if (this._deps.tabManager && this._deps.tabManager.active) {\n          this._setCurrentInstanceAsActiveWebphone();\n        }\n        return;\n      }\n      this._disconnectToInactive();\n    }\n  }\n\n  async _onTabActive() {\n    if (!this._disconnectOnInactive) {\n      return;\n    }\n    if (this.connected) {\n      this._setCurrentInstanceAsActiveWebphone();\n      return;\n    }\n    await sleep(500);\n    if (!this._deps.tabManager.active) {\n      return;\n    }\n    if (this.inactive) {\n      this.connect({\n        skipDLCheck: true,\n        force: true,\n        skipTabActiveCheck: true,\n      });\n    }\n  }\n\n  _hideConnectingAlert() {\n    const alertIds = this._deps.alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (\n            m.message === registerErrors[i] &&\n            m.payload &&\n            m.payload.isConnecting === true\n          )\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._deps.alert.dismiss(alertIds);\n    }\n  }\n\n  async _hideConnectFailedAlert() {\n    const alertIds = this._deps.alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i] && !m.payload.isConnecting)\n            return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._deps.alert.dismiss(alertIds);\n    }\n  }\n\n  _hideRegisterErrorAlert() {\n    const alertIds = this._deps.alert.messages\n      .filter((m) => {\n        for (let i = 0, len = registerErrors.length; i < len; i += 1) {\n          if (m.message === registerErrors[i]) return true;\n        }\n        return false;\n      })\n      .map((m) => m.id);\n    if (alertIds.length) {\n      this._deps.alert.dismiss(alertIds);\n    }\n  }\n\n  async _disconnect() {\n    if (this.disconnected || this.disconnecting) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    this._setStoreOnDisconnect();\n    if (this._webphone) {\n      await this._removeWebphone();\n    }\n    this._setStateOnUnregistered();\n  }\n\n  @proxify\n  async disconnect() {\n    this._sipInstanceId = null;\n    await this._disconnect();\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) {\n      return;\n    }\n    this._deps.alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode,\n      },\n    });\n  }\n\n  loadAudio() {\n    if (\n      this._webphone &&\n      this._webphone.userAgent &&\n      this._webphone.userAgent.audioHelper\n    ) {\n      this._webphone.userAgent.audioHelper.loadAudio({\n        incoming: this.incomingAudio,\n        outgoing: this.outgoingAudio,\n      });\n    }\n  }\n\n  @proxify\n  async setOutgoingAudio({\n    fileName,\n    dataUrl,\n  }: {\n    fileName: string;\n    dataUrl: string;\n  }) {\n    // TODO validate filePath?\n    this._setOutgoingAudioIntoStorage(fileName, dataUrl);\n    this.loadAudio();\n  }\n\n  @proxify\n  async resetOutgoingAudio() {\n    this._resetOutgoingAudio();\n    this.loadAudio();\n  }\n\n  @proxify\n  async setIncomingAudio({\n    fileName,\n    dataUrl,\n  }: {\n    fileName: string;\n    dataUrl: string;\n  }) {\n    // TODO validate filePath?\n    this._setIncomingAudioIntoStorage(fileName, dataUrl);\n    this.loadAudio();\n  }\n\n  @proxify\n  async resetIncomingAudio() {\n    this._resetIncomingAudio();\n    this.loadAudio();\n  }\n\n  @proxify\n  async setRingtone({\n    incomingAudio,\n    incomingAudioFile,\n    outgoingAudio,\n    outgoingAudioFile,\n  }: {\n    incomingAudio: string;\n    incomingAudioFile: string;\n    outgoingAudio: string;\n    outgoingAudioFile: string;\n  }) {\n    const isIncomingDefault =\n      incomingAudioFile === DEFAULT_AUDIO &&\n      incomingAudio === defaultIncomingAudio;\n    const isOutgoingDefault =\n      outgoingAudioFile === DEFAULT_AUDIO &&\n      outgoingAudio === defaultOutgoingAudio;\n    this._setRingtoneIntoStorage(\n      isIncomingDefault ? DEFAULT_AUDIO : incomingAudioFile,\n      isIncomingDefault ? null : incomingAudio,\n      isOutgoingDefault ? DEFAULT_AUDIO : outgoingAudioFile,\n      isOutgoingDefault ? null : outgoingAudio,\n    );\n    this.loadAudio();\n  }\n\n  get originalSessions() {\n    return (this._webphone?.userAgent.sessions ?? {}) as {\n      [key: string]: WebphoneSession;\n    };\n  }\n\n  // for backward compatibility v1\n  get _sessions() {\n    return new Map(Object.entries(this.originalSessions));\n  }\n\n  get enabled() {\n    return this._deps.appFeatures.isWebPhoneEnabled;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get inactiveDisconnecting() {\n    return this.connectionStatus === connectionStatus.inactiveDisconnecting;\n  }\n\n  get inactive() {\n    return this.connectionStatus === connectionStatus.inactive;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get reconnecting() {\n    return this.connectionStatus === connectionStatus.reconnecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get disconnected() {\n    return this.connectionStatus === connectionStatus.disconnected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n\n  get connectError() {\n    return this.connectionStatus === connectionStatus.connectError;\n  }\n\n  /*\n   * Together with `CallingSettings` module to check if webphone is\n   * Unavailable.\n   */\n  get isUnavailable() {\n    return (\n      this.ready &&\n      this._deps.auth.loggedIn &&\n      (!this._deps.audioSettings.userMedia ||\n        this.reconnecting ||\n        this.connectError ||\n        this.inactive)\n    );\n  }\n\n  get incomingAudio() {\n    return this.incomingAudioDataUrl || this.defaultIncomingAudio;\n  }\n\n  get outgoingAudio() {\n    return this.outgoingAudioDataUrl || this.defaultOutgoingAudio;\n  }\n\n  get defaultIncomingAudio() {\n    return defaultIncomingAudio;\n  }\n\n  get defaultOutgoingAudio() {\n    return defaultOutgoingAudio;\n  }\n\n  get defaultIncomingAudioFile() {\n    return DEFAULT_AUDIO;\n  }\n\n  get defaultOutgoingAudioFile() {\n    return DEFAULT_AUDIO;\n  }\n}\n"],"file":"WebphoneBase.js"}