{"version":3,"sources":["modules/WebphoneV2/Webphone.ts"],"names":["INCOMING_CALL_INVALID_STATE_ERROR_CODE","Webphone","name","deps","trackEvents","inboundWebRTCCallConnected","that","isOnTransfer","coldTransferCall","sessions","activeSessionId","ringSessionId","ringSessions","_activeWebphoneActiveCallKey","_permissionCheck","prefix","_deps","webphoneOptions","permissionCheck","onCallEnd","_eventEmitter","on","EVENTS","callEnd","onCallRing","callRing","onCallStart","callStart","onCallResume","callResume","onCallHold","callHold","onCallInit","callInit","onBeforeCallResume","beforeCallResume","onBeforeCallEnd","beforeCallEnd","_reconnectAfterSessionEnd","_disconnectInactiveAfterSessionEnd","enableContactMatchWhenNewCall","contactMatcher","addQuerySource","getQueriesFn","sessionPhoneNumbers","readyCheckFn","ready","cachedSessions","filter","x","cached","forEach","cachedSession","session","find","id","removed","push","sort","sortByLastActiveTimeDesc","sessionId","activeSessions","startTime","isToVoicemail","isForwarded","isReplied","lastSessions","concat","lastEndedSessions","slice","cachingSessionIds","needUpdate","callStatus","sessionStatus","onHold","isOnHold","e","key","_holdOtherSession","newValue","incomingResponse","__rc_callStatus","finished","console","log","connected","headers","_onCallStart","__rc_extendedControls","__rc_extendedControlStatus","extendedControlStatus","pending","_playExtendedControls","connecting","_updateSessions","_onCallEnd","response","cause","newSession","replaced","__rc_direction","callDirections","inbound","_onAccepted","__rc_isOnMute","onMute","sessionDescriptionHandler","audioSettings","onGetUserMediaError","__rc_creationTime","Date","now","__rc_lastActiveTime","request","_onCallRing","playing","controls","i","len","length","_sendDTMF","stopped","sipSession","originalSessions","accept","acceptOptions","_trackCallAnswer","error","code","reject","unhold","forwardNumber","validatedResult","regionSettings","brand","validPhoneNumber","numberValidate","validateNumbers","result","errors","alert","warning","message","callErrors","type","payload","phoneNumber","numbers","e164","__rc_isForwarded","forward","_addTrackAfterForward","webphoneErrors","forwardError","activeSession","rawActiveSession","_addTrack","_sessionHandleWithId","mute","muteError","unmute","localHold","hold","_onCallHold","holdError","currentSessionId","Promise","all","Object","values","map","_onHoldCachedSession","_onBeforeCallResume","_onCallResume","__rc_recordStatus","recordStatus","startRecord","recording","idle","danger","recordDisabled","noAccess","recordError","errorCode","stopRecord","park","success","webphoneMessages","parked","parkedNumber","ttl","transferNumber","__rc_isOnTransfer","numberResult","transfer","transferError","fromNumber","outbound","from","uri","user","to","makeCall","toNumber","homeCountryId","extendedControls","transferSessionId","newSessionId","oldSessionId","__rc_transferSessionId","oldSession","warmTransfer","flipValue","flip","__rc_isOnFlip","flipError","dtmfValue","dtmf","_onBeforeCallEnd","terminate","__rc_isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","__rc_isReplied","replyWithMessage","rawSession","addTrack","_remoteVideo","_localVideo","func","inviteOptions","_webphone","availabilityMonitor","isVoIPOnlyMode","_fetchDL","phoneLines","noOutboundCallWithoutDL","userAgent","invite","__rc_fromNumber","_onCallInit","sessionDescriptionHandlerOptions","_invite","direction","sipData","extraHeaders","fromTag","toTag","contact","__rc_contactMatch","sessionIds","_setSessionCaching","_clearSessionCaching","normalizeSession","_updateSessionsState","__rc_minimized","_disconnectOnInactive","currentId","localStorage","getItem","setItem","normalizedSession","_setActiveSessionId","tabManager","active","triggerMatch","emit","_setActiveWebphoneActiveCallId","_setStateOnCallStart","_setStateOnCallRing","audioHelper","playIncoming","ringSession","videoElementPrepared","paused","pause","srcObject","reason","allowDuplicates","connect","skipConnectDelay","force","skipDLCheck","transferSession","_setStateOnCallEnd","_releaseVideoElementsOnSessionsEmpty","_reconnectWebphoneIfNecessaryOnSessionsEmpty","_makeWebphoneInactiveOnSessionsEmpty","handler","webphoneRegistered","off","webphoneUnregistered","outputs","constraints","audio","deviceId","inputDeviceId","video","minimized","WebphoneBase","state","action","proxify"],"mappings":"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","sourcesContent":["import { action, computed, state, track } from '@ringcentral-integration/core';\nimport { ObjectMapKey } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { filter, find } from 'ramda';\nimport { InviteOptions } from 'ringcentral-web-phone/lib/userAgent';\nimport callDirections from '../../enums/callDirections';\nimport { extendedControlStatus } from '../../enums/extendedControlStatus';\nimport {\n  NormalizedSession,\n  WebphoneSession,\n} from '../../interfaces/Webphone.interface';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport sleep from '../../lib/sleep';\nimport validateNumbers from '../../lib/validateNumbers';\nimport { trackEvents } from '../Analytics';\nimport { callErrors } from '../CallV2/callErrors';\nimport { EVENTS } from './events';\nimport { recordStatus } from './recordStatus';\nimport { sessionStatus } from './sessionStatus';\nimport {\n  BeforeCallEndHandler,\n  BeforeCallResumeHandler,\n  CallEndHandler,\n  CallHoldHandler,\n  CallInitHandler,\n  CallResumeHandler,\n  CallRingHandler,\n  CallStartHandler,\n  Deps,\n  OffEventHandler,\n  SessionReplyOptions,\n  SwitchCallActiveCallParams,\n} from './Webphone.interface';\nimport { WebphoneBase } from './WebphoneBase';\nimport { webphoneErrors } from './webphoneErrors';\nimport {\n  extractHeadersData,\n  isOnHold,\n  isRing,\n  normalizeSession,\n  sortByLastActiveTimeDesc,\n} from './webphoneHelper';\nimport { webphoneMessages } from './webphoneMessages';\n\nexport const INCOMING_CALL_INVALID_STATE_ERROR_CODE = 2;\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  name: 'Webphone',\n  deps: [],\n})\nexport class Webphone extends WebphoneBase {\n  protected _activeWebphoneActiveCallKey: string;\n  protected _permissionCheck: boolean;\n\n  constructor(deps: Deps) {\n    super(deps);\n\n    this._activeWebphoneActiveCallKey = `${deps.prefix}-active-webphone-active-call-key`;\n    this._permissionCheck = this._deps.webphoneOptions?.permissionCheck ?? true;\n\n    if (typeof deps.webphoneOptions?.onCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, deps.webphoneOptions?.onCallEnd);\n    }\n    if (typeof deps.webphoneOptions?.onCallRing === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, deps.webphoneOptions?.onCallRing);\n    }\n    if (typeof deps.webphoneOptions?.onCallStart === 'function') {\n      this._eventEmitter.on(\n        EVENTS.callStart,\n        deps.webphoneOptions?.onCallStart,\n      );\n    }\n    if (typeof deps.webphoneOptions?.onCallResume === 'function') {\n      this._eventEmitter.on(\n        EVENTS.callResume,\n        deps.webphoneOptions?.onCallResume,\n      );\n    }\n    if (typeof deps.webphoneOptions?.onCallHold === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, deps.webphoneOptions?.onCallHold);\n    }\n    if (typeof deps.webphoneOptions?.onCallInit === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, deps.webphoneOptions?.onCallInit);\n    }\n    if (typeof deps.webphoneOptions?.onBeforeCallResume === 'function') {\n      this._eventEmitter.on(\n        EVENTS.beforeCallResume,\n        deps.webphoneOptions?.onBeforeCallResume,\n      );\n    }\n    if (typeof deps.webphoneOptions?.onBeforeCallEnd === 'function') {\n      this._eventEmitter.on(\n        EVENTS.beforeCallEnd,\n        deps.webphoneOptions?.onBeforeCallEnd,\n      );\n    }\n\n    this._reconnectAfterSessionEnd = null;\n    this._disconnectInactiveAfterSessionEnd = false;\n    const enableContactMatchWhenNewCall =\n      this._deps.webphoneOptions?.enableContactMatchWhenNewCall ?? true;\n    if (enableContactMatchWhenNewCall && this._deps.contactMatcher) {\n      this._deps.contactMatcher.addQuerySource({\n        getQueriesFn: () => this.sessionPhoneNumbers,\n        readyCheckFn: () => this.ready,\n      });\n    }\n  }\n\n  @state\n  activeSessionId?: string = null;\n\n  @state\n  ringSessionId?: string = null;\n\n  @state\n  lastEndedSessions: NormalizedSession[] = [];\n\n  @state\n  sessions: NormalizedSession[] = [];\n\n  @action\n  _updateSessionsState(sessions: NormalizedSession[]) {\n    const cachedSessions = this.sessions.filter((x) => x.cached);\n    cachedSessions.forEach((cachedSession) => {\n      const session = sessions.find((x) => x.id === cachedSession.id);\n      if (session) {\n        session.cached = true;\n      } else {\n        cachedSession.removed = true;\n        sessions.push(cachedSession);\n      }\n    });\n    this.sessions = sessions.sort(sortByLastActiveTimeDesc);\n  }\n\n  @action\n  _setActiveSessionId(sessionId: string) {\n    this.activeSessionId = sessionId;\n  }\n\n  @action\n  _setStateOnCallRing(session: NormalizedSession) {\n    this.ringSessionId = session.id;\n  }\n\n  @action\n  _setStateOnCallStart(session: NormalizedSession) {\n    this.activeSessionId = session.id;\n    if (this.ringSessionId === session.id) {\n      const ringSessions = this.sessions.filter((x) => isRing(x));\n      this.ringSessionId = (ringSessions[0] && ringSessions[0].id) || null;\n    }\n  }\n\n  @action\n  _setStateOnCallEnd(session: NormalizedSession) {\n    if (this.activeSessionId === session.id) {\n      const activeSessions = this.sessions.filter((x) => !isRing(x));\n      activeSessions.sort(sortByLastActiveTimeDesc);\n      this.activeSessionId =\n        (activeSessions[0] && activeSessions[0].id) || null;\n    }\n    if (this.ringSessionId === session.id) {\n      const ringSessions = this.sessions.filter((x) => isRing(x));\n      this.ringSessionId = (ringSessions[0] && ringSessions[0].id) || null;\n    }\n    if (\n      /**\n       * don't add incoming call that isn't relied by current app\n       *   to end sessions. this call can be answered by other apps\n       */\n      !session.startTime &&\n      !session.isToVoicemail &&\n      !session.isForwarded &&\n      !session.isReplied\n    ) {\n      return;\n    }\n    const lastSessions = [session].concat(\n      this.lastEndedSessions.filter((x) => x.id !== session.id),\n    );\n    this.lastEndedSessions = lastSessions.slice(0, 5);\n  }\n\n  @action\n  _setSessionCaching(cachingSessionIds: string[]) {\n    cachingSessionIds.forEach((sessionId) => {\n      const session = this.sessions.find((x) => x.id === sessionId);\n      if (session) {\n        session.cached = true;\n      }\n    });\n  }\n\n  @action\n  _clearSessionCaching(sessions: NormalizedSession[]) {\n    let needUpdate = false;\n    this.sessions.forEach((session) => {\n      if (session.cached) {\n        session.cached = false;\n        needUpdate = true;\n      }\n    });\n    if (needUpdate) {\n      this.sessions = this.sessions.filter((x) => !x.removed);\n    }\n    const activeSessions = sessions.filter((x) => !x.cached && !isRing(x));\n    activeSessions.sort(sortByLastActiveTimeDesc);\n    this.activeSessionId = (activeSessions[0] && activeSessions[0].id) || null;\n  }\n\n  @action\n  _onHoldCachedSession() {\n    this.sessions.forEach((session) => {\n      if (session.cached) {\n        session.callStatus = sessionStatus.onHold;\n        session.isOnHold = true;\n      }\n    });\n  }\n\n  _onStorageChangeEvent(e: StorageEvent) {\n    super._onStorageChangeEvent(e);\n    // unhold active calls in current tab\n    if (e.key === this._activeWebphoneActiveCallKey) {\n      this._holdOtherSession(e.newValue);\n    }\n  }\n\n  _onAccepted(session: WebphoneSession) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.__rc_callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.__rc_callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      this._onCallStart(session);\n      if (\n        session.__rc_extendedControls &&\n        session.__rc_extendedControlStatus === extendedControlStatus.pending\n      ) {\n        this._playExtendedControls(session);\n      }\n    });\n    session.on('progress', (incomingResponse) => {\n      console.log('progress...');\n      session.__rc_callStatus = sessionStatus.connecting;\n      extractHeadersData(session, incomingResponse.headers);\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('replaced', (newSession: WebphoneSession) => {\n      console.log('Event: replaced', newSession);\n      session.__rc_callStatus = sessionStatus.replaced;\n      newSession.__rc_callStatus = sessionStatus.connected;\n      newSession.__rc_direction = callDirections.inbound;\n      this._updateSessions();\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.__rc_isOnMute = true;\n      session.__rc_callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.__rc_isOnMute = false;\n      session.__rc_callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('SessionDescriptionHandler-created', () => {\n      session.sessionDescriptionHandler.on('userMediaFailed', () => {\n        this._deps.audioSettings.onGetUserMediaError(null);\n      });\n    });\n  }\n\n  _onInvite(session: WebphoneSession) {\n    super._onInvite(session);\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_direction = callDirections.inbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  async _playExtendedControls(session: WebphoneSession) {\n    session.__rc_extendedControlStatus = extendedControlStatus.playing;\n    const controls = session.__rc_extendedControls.slice();\n    for (let i = 0, len = controls.length; i < len; i += 1) {\n      if (\n        session.__rc_extendedControlStatus === extendedControlStatus.playing\n      ) {\n        if (controls[i] === ',') {\n          await sleep(2000);\n        } else {\n          await this._sendDTMF(controls[i], session);\n        }\n      } else {\n        return;\n      }\n    }\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n  }\n\n  @track(trackEvents.inboundWebRTCCallConnected)\n  _trackCallAnswer() {\n    //\n  }\n\n  @proxify\n  async answer(sessionId: string) {\n    const sipSession = this.originalSessions[sessionId];\n    const session = this.sessions.find((session) => session.id === sessionId);\n    if (!session || !isRing(session)) {\n      return;\n    }\n    try {\n      await this._holdOtherSession(sessionId);\n      this._onAccepted(sipSession);\n      await sipSession.accept(this.acceptOptions);\n      this._trackCallAnswer();\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      if (e.code !== INCOMING_CALL_INVALID_STATE_ERROR_CODE) {\n        // FIXME:\n        // 2 means the call is answered\n        this._onCallEnd(sipSession);\n      }\n    }\n  }\n\n  @proxify\n  async reject(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session || session.__rc_callStatus === sessionStatus.finished) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId: string) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId: string, forwardNumber: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return false;\n    }\n    try {\n      let validatedResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        validatedResult = validateNumbers(\n          [forwardNumber],\n          this._deps.regionSettings,\n          this._deps.brand.id,\n        );\n        validPhoneNumber = validatedResult[0];\n      } else {\n        validatedResult = await this._deps.numberValidate.validateNumbers([\n          forwardNumber,\n        ]);\n        if (!validatedResult.result) {\n          validatedResult.errors.forEach((error) => {\n            this._deps.alert.warning({\n              message:\n                callErrors[error.type as ObjectMapKey<typeof callErrors>],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          return false;\n        }\n        validPhoneNumber =\n          validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      }\n      session.__rc_isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions, {});\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      this._addTrackAfterForward();\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._deps.alert.warning({\n        message: webphoneErrors.forwardError,\n      });\n      this._addTrackAfterForward();\n      return false;\n    }\n  }\n\n  _addTrackAfterForward() {\n    if (this.activeSession && !this.activeSession.isOnHold) {\n      const rawActiveSession = this.originalSessions[this.activeSession.id];\n      this._addTrack(rawActiveSession);\n    }\n  }\n\n  @proxify\n  async mute(sessionId: string) {\n    try {\n      this._sessionHandleWithId(sessionId, (session: WebphoneSession) => {\n        session.__rc_isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._deps.alert.warning({\n        message: webphoneErrors.muteError,\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId: string) {\n    this._sessionHandleWithId(sessionId, (session: WebphoneSession) => {\n      session.__rc_isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return false;\n    }\n    if (session.localHold) {\n      return true;\n    }\n    try {\n      await session.hold();\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._updateSessions();\n      this._onCallHold(session);\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._deps.alert.warning({\n        message: webphoneErrors.holdError,\n      });\n      return false;\n    }\n  }\n\n  async _holdOtherSession(currentSessionId: string) {\n    await Promise.all(\n      Object.values(this.originalSessions).map(\n        async (session: WebphoneSession) => {\n          if (currentSessionId === session.id) {\n            return;\n          }\n          if (session.localHold) {\n            return;\n          }\n          if (session.__rc_callStatus === sessionStatus.connecting) {\n            return;\n          }\n          try {\n            await session.hold();\n          } catch (e) {\n            console.error('Hold call fail');\n            throw e;\n          }\n          session.__rc_callStatus = sessionStatus.onHold;\n          this._onCallHold(session);\n        },\n      ),\n    );\n    this._updateSessions();\n    // update cached sessions\n    this._onHoldCachedSession();\n  }\n\n  @proxify\n  async unhold(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.localHold) {\n        await this._holdOtherSession(session.id);\n        this._onBeforeCallResume(session);\n        await session.unhold();\n        session.__rc_callStatus = sessionStatus.connected;\n        this._updateSessions();\n        this._onCallResume(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.__rc_callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._deps.alert.danger({\n          message: webphoneErrors.recordDisabled,\n        });\n        // Disabled phone recording\n        session.__rc_recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._deps.alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code,\n        },\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      const result = await session.park();\n      console.log('Parked');\n      if (result['park extension']) {\n        this._deps.alert.success({\n          message: webphoneMessages.parked,\n          payload: {\n            parkedNumber: `*${result['park extension']}`,\n          },\n          ttl: 0,\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber: string, sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      let numberResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        numberResult = validateNumbers(\n          [transferNumber],\n          this._deps.regionSettings,\n          this._deps.brand.id,\n        );\n        validPhoneNumber = numberResult && numberResult[0];\n      } else {\n        numberResult = await this._deps.numberValidate.validateNumbers([\n          transferNumber,\n        ]);\n        if (!numberResult.result) {\n          numberResult.errors.forEach((error) => {\n            this._deps.alert.warning({\n              message:\n                callErrors[error.type as ObjectMapKey<typeof callErrors>],\n              payload: {\n                phoneNumber: error.phoneNumber,\n              },\n            });\n          });\n          session.__rc_isOnTransfer = false;\n          this._updateSessions();\n          return;\n        }\n        validPhoneNumber =\n          numberResult.numbers[0] && numberResult.numbers[0].e164;\n      }\n      await session.transfer(validPhoneNumber);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._deps.alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async startWarmTransfer(transferNumber: string, sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      const numberResult = validateNumbers(\n        [transferNumber],\n        this._deps.regionSettings,\n        this._deps.brand.id,\n      );\n      const validPhoneNumber = numberResult && numberResult[0];\n      const fromNumber =\n        session.__rc_direction === callDirections.outbound\n          ? session.request.from.uri.user\n          : session.request.to.uri.user;\n      await this.makeCall({\n        toNumber: validPhoneNumber,\n        fromNumber,\n        homeCountryId: this._deps.regionSettings.homeCountryId,\n        extendedControls: '',\n        transferSessionId: sessionId,\n      });\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._deps.alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async completeWarmTransfer(newSessionId: string) {\n    const newSession = this.originalSessions[newSessionId];\n    if (!newSession) {\n      return;\n    }\n    const oldSessionId = newSession.__rc_transferSessionId;\n    const oldSession = this.originalSessions[oldSessionId];\n    if (!oldSession) {\n      return;\n    }\n    newSession.__rc_isOnTransfer = true;\n    this._updateSessions();\n    try {\n      await oldSession.warmTransfer(newSession);\n    } catch (e) {\n      console.error(e);\n      newSession.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._deps.alert.danger({\n        message: webphoneErrors.transferError,\n      });\n    }\n  }\n\n  @proxify\n  async flip(flipValue: string, sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.__rc_isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.__rc_isOnFlip = false;\n      this._deps.alert.warning({\n        message: webphoneErrors.flipError,\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async _sendDTMF(dtmfValue: string, session: WebphoneSession) {\n    try {\n      await session.dtmf(dtmfValue, 100);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue: string, sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (session) {\n      await this._sendDTMF(dtmfValue, session);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      this._onBeforeCallEnd(session);\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId: string) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._deps.alert.warning({\n        message: webphoneErrors.toVoiceMailError,\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId: string, replyOptions: SessionReplyOptions) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _addTrack(rawSession: WebphoneSession) {\n    if (rawSession) {\n      rawSession.addTrack(this._remoteVideo, this._localVideo);\n    }\n  }\n\n  _sessionHandleWithId(\n    sessionId: string,\n    func: (session: WebphoneSession) => void,\n  ) {\n    const session = this.originalSessions[sessionId];\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  async _invite(\n    toNumber: string,\n    {\n      inviteOptions,\n      extendedControls,\n      transferSessionId,\n    }: {\n      inviteOptions: InviteOptions;\n      extendedControls?: string[];\n      transferSessionId?: string;\n    },\n  ) {\n    if (!this._webphone) {\n      this._deps.alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n\n    if (\n      toNumber.length > 6 &&\n      (!this._deps.availabilityMonitor ||\n        !this._deps.availabilityMonitor.isVoIPOnlyMode)\n    ) {\n      const phoneLines = await this._fetchDL();\n      if (phoneLines.length === 0) {\n        this._deps.alert.warning({\n          message: webphoneErrors.noOutboundCallWithoutDL,\n        });\n        return null;\n      }\n    }\n    await this._holdOtherSession(null);\n    const session = this._webphone.userAgent.invite(\n      toNumber,\n      inviteOptions,\n    ) as WebphoneSession;\n    session.__rc_direction = callDirections.outbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_fromNumber = inviteOptions.fromNumber;\n    session.__rc_extendedControls = extendedControls;\n    session.__rc_extendedControlStatus = extendedControlStatus.pending;\n    session.__rc_transferSessionId = transferSessionId;\n    this._onAccepted(session);\n    this._onCallInit(session);\n    return session;\n  }\n\n  /**\n   * start an outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({\n    toNumber,\n    fromNumber,\n    homeCountryId,\n    extendedControls,\n    transferSessionId,\n  }: {\n    toNumber: string;\n    fromNumber: string;\n    homeCountryId: string;\n    extendedControls?: string[];\n    transferSessionId?: string;\n  }) {\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n    };\n    const result = await this._invite(toNumber, {\n      inviteOptions,\n      extendedControls,\n      transferSessionId,\n    });\n    return result;\n  }\n\n  /**\n   * switch a active call into web phone session.\n   */\n  @proxify\n  async switchCall(\n    { id, from, direction, to, sipData }: SwitchCallActiveCallParams,\n    homeCountryId: string,\n  ) {\n    const extraHeaders = [];\n    extraHeaders.push(\n      `Replaces: ${id};to-tag=${sipData.fromTag};from-tag=${sipData.toTag}`,\n    );\n    extraHeaders.push('RC-call-type: replace');\n    const toNumber =\n      direction === callDirections.outbound ? to.phoneNumber : from.phoneNumber;\n    const fromNumber =\n      direction === callDirections.outbound ? from.phoneNumber : to.phoneNumber;\n    const inviteOptions = {\n      sessionDescriptionHandlerOptions: this.acceptOptions\n        .sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n      extraHeaders,\n    };\n    const session = await this._invite(toNumber, {\n      inviteOptions,\n    });\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(\n    sessionId: string,\n    contact: { id: string },\n  ) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async setSessionCaching(sessionIds: string[]) {\n    this._setSessionCaching(sessionIds);\n  }\n\n  @proxify\n  async clearSessionCaching() {\n    this._clearSessionCaching(\n      [...Object.values(this.originalSessions)].map(normalizeSession),\n    );\n  }\n\n  @track((that: Webphone) =>\n    that.isOnTransfer ? [trackEvents.coldTransferCall] : null,\n  )\n  _updateSessions() {\n    this._updateSessionsState(\n      [...Object.values(this.originalSessions)].map(normalizeSession),\n    );\n  }\n\n  @proxify\n  async toggleMinimized(sessionId: string) {\n    this._sessionHandleWithId(sessionId, (session: WebphoneSession) => {\n      session.__rc_minimized = !session.__rc_minimized;\n      this._updateSessions();\n    });\n  }\n\n  _setActiveWebphoneActiveCallId(session: WebphoneSession) {\n    if (!this._disconnectOnInactive) {\n      return;\n    }\n    const currentId = localStorage.getItem(this._activeWebphoneActiveCallKey);\n    if (currentId !== session.id) {\n      localStorage.setItem(this._activeWebphoneActiveCallKey, session.id);\n    }\n  }\n\n  _onCallInit(session: WebphoneSession) {\n    this._updateSessions();\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._setActiveSessionId(normalizedSession.id);\n    if (\n      this._deps.contactMatcher &&\n      (!this._deps.tabManager || this._deps.tabManager.active)\n    ) {\n      this._deps.contactMatcher.triggerMatch();\n    }\n    this._eventEmitter.emit(\n      EVENTS.callInit,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallStart(session: WebphoneSession) {\n    this._updateSessions();\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._setStateOnCallStart(normalizedSession);\n    this._eventEmitter.emit(\n      EVENTS.callStart,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallRing(session: WebphoneSession) {\n    this._updateSessions();\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._setStateOnCallRing(normalizedSession);\n    if (\n      this._deps.contactMatcher &&\n      (!this._deps.tabManager || this._deps.tabManager.active)\n    ) {\n      this._deps.contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    this._eventEmitter.emit(\n      EVENTS.callRing,\n      normalizedSession,\n      this.ringSession,\n    );\n  }\n\n  _onBeforeCallEnd(session: WebphoneSession) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallEnd,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _releaseVideoElementsOnSessionsEmpty() {\n    if (this.videoElementPrepared && this.sessions.length === 0) {\n      // Pause video elements to release system Video Wake Lock RCINT-15582\n      if (!this._remoteVideo.paused) {\n        this._remoteVideo.pause();\n        this._remoteVideo.srcObject = null;\n      }\n      if (!this._localVideo.paused) {\n        this._localVideo.pause();\n      }\n    }\n  }\n\n  _reconnectWebphoneIfNecessaryOnSessionsEmpty() {\n    if (this._reconnectAfterSessionEnd && this.sessions.length === 0) {\n      if (this._reconnectAfterSessionEnd.reason) {\n        this._deps.alert.warning({\n          message: this._reconnectAfterSessionEnd.reason,\n          allowDuplicates: false,\n        });\n      }\n      this._reconnectAfterSessionEnd = null;\n      this.connect({ skipConnectDelay: true, force: true, skipDLCheck: true });\n    }\n  }\n\n  _onCallEnd(session: WebphoneSession) {\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    if (!normalizedSession) {\n      return;\n    }\n    if (session.__rc_transferSessionId) {\n      const transferSession = this.originalSessions[\n        session.__rc_transferSessionId\n      ];\n      if (transferSession) {\n        transferSession.__rc_isOnTransfer = false;\n      }\n    }\n    this._updateSessions();\n    this._setStateOnCallEnd(normalizedSession);\n    this._eventEmitter.emit(\n      EVENTS.callEnd,\n      normalizedSession,\n      this.activeSession,\n      this.ringSession,\n    );\n    this._releaseVideoElementsOnSessionsEmpty();\n    this._reconnectWebphoneIfNecessaryOnSessionsEmpty();\n    this._makeWebphoneInactiveOnSessionsEmpty();\n  }\n\n  _onBeforeCallResume(session: WebphoneSession) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.beforeCallResume,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  _onCallResume(session: WebphoneSession) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._setActiveSessionId(normalizedSession.id);\n    this._eventEmitter.emit(\n      EVENTS.callResume,\n      normalizedSession,\n      this.activeSession,\n    );\n    this._setActiveWebphoneActiveCallId(session);\n  }\n\n  _onCallHold(session: WebphoneSession) {\n    const normalizedSession = find((x) => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(\n      EVENTS.callHold,\n      normalizedSession,\n      this.activeSession,\n    );\n  }\n\n  onCallStart(handler: CallStartHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, handler);\n    }\n  }\n\n  onCallInit(handler: CallInitHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, handler);\n    }\n  }\n\n  onCallRing(handler: CallRingHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, handler);\n    }\n  }\n\n  onCallEnd(handler: CallEndHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, handler);\n    }\n  }\n\n  onBeforeCallResume(handler: BeforeCallResumeHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, handler);\n    }\n  }\n\n  onCallResume(handler: CallResumeHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, handler);\n    }\n  }\n\n  onCallHold(handler: CallHoldHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, handler);\n    }\n  }\n\n  onBeforeCallEnd(handler: BeforeCallEndHandler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, handler);\n    }\n  }\n\n  onWebphoneRegistered(handler: () => void): OffEventHandler {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.webphoneRegistered, handler);\n      return () => {\n        this._eventEmitter.off(EVENTS.webphoneRegistered, handler);\n      };\n    }\n  }\n\n  onWebphoneUnregistered(handler: () => void): OffEventHandler {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.webphoneUnregistered, handler);\n      return () => {\n        this._eventEmitter.off(EVENTS.webphoneUnregistered, handler);\n      };\n    }\n  }\n\n  async _disconnect() {\n    await super._disconnect();\n    this._updateSessions();\n  }\n\n  @computed(({ sessions }: Webphone) => [sessions])\n  get sessionPhoneNumbers(): string[] {\n    const outputs: string[] = [];\n    this.sessions.forEach((session) => {\n      outputs.push(session.to);\n      outputs.push(session.from);\n    });\n    return outputs;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  @computed(({ activeSessionId, sessions }: Webphone) => [\n    activeSessionId,\n    sessions,\n  ])\n  get activeSession(): NormalizedSession {\n    if (!this.activeSessionId) {\n      return null;\n    }\n    const activeSession = find(\n      (session) => session.id === this.activeSessionId,\n      this.sessions,\n    );\n    return activeSession;\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  @computed(({ ringSessionId, sessions }: Webphone) => [\n    ringSessionId,\n    sessions,\n  ])\n  get ringSession(): NormalizedSession {\n    if (!this.ringSessionId) {\n      return null;\n    }\n    const session = find(\n      (session) => session.id === this.ringSessionId,\n      this.sessions,\n    );\n    return session;\n  }\n\n  @computed(({ sessions }: Webphone) => [sessions])\n  get ringSessions(): NormalizedSession[] {\n    return filter((session) => isRing(session), this.sessions);\n  }\n\n  @computed(({ sessions }: Webphone) => [sessions])\n  get onHoldSessions(): NormalizedSession[] {\n    return filter((session) => isOnHold(session), this.sessions);\n  }\n\n  @computed(({ sessions }: Webphone) => [sessions])\n  get cachedSessions(): NormalizedSession[] {\n    return filter((session) => session.cached, this.sessions);\n  }\n\n  get acceptOptions() {\n    return {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: {\n            deviceId: this._deps.audioSettings.inputDeviceId as string,\n          },\n          video: false,\n        },\n      },\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  @computed(({ ringSessions }: Webphone) => [ringSessions])\n  get ringingCallOnView(): NormalizedSession {\n    return find((session) => !session.minimized, this.ringSessions);\n  }\n}\n"],"file":"Webphone.js"}