{"version":3,"file":"ErrorLogger.js","names":["_core","require","Sentry","_interopRequireWildcard","_tracing","_di","_dec","_class","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","value","configurable","writable","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","DEFAULT_INTERCEPTED_BRANDS","ErrorLogger","Module","name","deps","dep","optional","_RcModuleV","_super","_this","_sentryInitialized","intercepted","errorLoggerOptions","_bootstrap","Promise","resolve","then","_deps","accountInfo","watch","_this$_deps$accountIn","userBrandId","interceptedBrands","includes","toggle","options","appVersion","appRelease","environment","sentryConfig","endpoint","_init","dsn","sampleRate","release","integrations","BrowserTracing","appName","brandConfig","appBrand","code","setTags","_this2","init","ignoreErrors","beforeSend","event","onInitOnce","_this3","auth","_this3$_deps$auth","loggedIn","_this3$_deps$auth2","setUser","id","ownerId","_ref","user","configureScope","scope","tags","log","message","level","eventId","captureMessage","logError","error","captureException","test","undefined","testError","setTimeout","Error","_this$_deps$errorLogg","_this$_deps$errorLogg2","RcModuleV2","exports"],"sources":["modules/ErrorLogger/ErrorLogger.ts"],"sourcesContent":["import { RcModuleV2, watch } from '@ringcentral-integration/core';\nimport * as Sentry from '@sentry/browser';\nimport { BrowserTracing } from '@sentry/tracing';\nimport type { SeverityLevel, User } from '@sentry/types';\n\nimport { Module } from '../../lib/di';\n\nimport type { Deps, ErrorLoggerOptions } from './ErrorLogger.interface';\n\nconst DEFAULT_INTERCEPTED_BRANDS = ['3000.Brightspeed'];\n\n@Module({\n  name: 'ErrorLogger',\n  deps: [\n    'BrandConfig',\n    { dep: 'Auth', optional: true },\n    { dep: 'AccountInfo', optional: true },\n    { dep: 'ErrorLoggerOptions', optional: true },\n  ],\n})\nexport class ErrorLogger extends RcModuleV2<Deps> {\n  private _sentryInitialized = false;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n\n    if (deps.errorLoggerOptions) {\n      this._bootstrap(deps.errorLoggerOptions);\n      Promise.resolve().then(() => {\n        if (this._sentryInitialized && this._deps.accountInfo) {\n          watch(\n            this,\n            () => this._deps.accountInfo?.userBrandId,\n            (userBrandId) => {\n              if (userBrandId && this.interceptedBrands.includes(userBrandId)) {\n                this.toggle({ intercepted: true });\n              } else {\n                this.toggle({ intercepted: false });\n              }\n            },\n          );\n        }\n      });\n    }\n  }\n\n  private _bootstrap(options: ErrorLoggerOptions) {\n    const { appVersion, appRelease, environment, sentryConfig } = options;\n    if (sentryConfig?.endpoint) {\n      // init client\n      this._init({\n        dsn: sentryConfig.endpoint,\n        sampleRate: sentryConfig.sampleRate,\n        environment,\n        release: appRelease ?? appVersion,\n        integrations: [new BrowserTracing()],\n      });\n      // set tags\n      const appName = this._deps.brandConfig.appName;\n      const appBrand = this._deps.brandConfig.code;\n      this.setTags({\n        'app.name': appName as string,\n        'app.brand': appBrand,\n        'app.version': appVersion ?? '',\n      });\n    }\n  }\n\n  private _init(options: Sentry.BrowserOptions) {\n    Sentry.init({\n      ...options,\n      ignoreErrors: [\n        '200 OK',\n        'Failed to fetch',\n        'Request Timeout',\n        'Service is overloaded',\n        'In order to call this API endpoint, user needs to have [ReadCallLog] permission for requested resource',\n        'INVALID_STATE_ERROR: Invalid status: 11',\n        'INVALID_STATE_ERROR: Invalid status: 1',\n        'rateLimiterErrorMessages-rateLimitReached',\n        // chrome error\n        '[executeScript] Cannot access contents of the page. Extension manifest must request permission to access the respective host.',\n        '[executeScript] The extensions gallery cannot be scripted.',\n        '[executeScript] Cannot access contents of url',\n        '[executeScript] This page cannot be scripted due to an ExtensionsSettings policy.',\n        '[executeScript] Cannot access a chrome',\n      ],\n      beforeSend: (event) => {\n        if (this.intercepted) {\n          return null;\n        }\n        return event;\n      },\n    });\n    this._sentryInitialized = true;\n  }\n\n  override onInitOnce() {\n    if (this._sentryInitialized && this._deps.auth) {\n      watch(\n        this,\n        () => this._deps.auth?.loggedIn,\n        (loggedIn) => {\n          if (loggedIn) {\n            // set user\n            this.setUser({\n              id: this._deps.auth?.ownerId,\n            });\n          }\n        },\n      );\n    }\n  }\n\n  get interceptedBrands() {\n    return (\n      this._deps.errorLoggerOptions?.interceptedBrands ??\n      DEFAULT_INTERCEPTED_BRANDS\n    );\n  }\n\n  private intercepted?: boolean;\n\n  toggle({ intercepted }: { intercepted: boolean }) {\n    this.intercepted = intercepted;\n  }\n\n  setUser(user: User | null) {\n    Sentry.configureScope((scope) => {\n      scope.setUser(user);\n    });\n  }\n\n  setTags(tags: Record<string, string>) {\n    Sentry.configureScope((scope) => {\n      scope.setTags(tags);\n    });\n  }\n\n  log(message: string, level?: SeverityLevel) {\n    const eventId = Sentry.captureMessage(message, level);\n    return eventId;\n  }\n\n  logError(error: unknown) {\n    const eventId = Sentry.captureException(error);\n    return eventId;\n  }\n\n  test(message = '[ErrorLogger] test') {\n    const eventId = this.log(message, 'debug');\n    return eventId;\n  }\n\n  testError(message = '[ErrorLogger] test error') {\n    // To support test with devtool console, throw error within a new thread by using setTimeout\n    setTimeout(() => {\n      throw new Error(message);\n    }, 0);\n  }\n}\n"],"mappings":"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","ignoreList":[]}