{"version":3,"sources":["modules/CallHistoryV2/callHistoryHelper.ts"],"names":["RC_EXTENSION_DELIMITER","addIfNotExist","number","output","numberMap","push","pickPhoneNumber","phoneNumber","pickPhoneOrExtensionNumber","extension","formatExt","num","pickFullPhoneNumber","extensionNumber","addNumbersFromCall","pickingFullNumber","call","pickNumber","from","to"],"mappings":";;;;;;;;AAEA,IAAMA,sBAAsB,GAAG,GAA/B;;AAOO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAC3BC,MAD2B,EAE3BC,MAF2B,EAG3BC,SAH2B,EAIxB;AACH,MAAI,CAACA,SAAS,CAACF,MAAD,CAAd,EAAwB;AACtBC,IAAAA,MAAM,CAACE,IAAP,CAAYH,MAAZ;AACAE,IAAAA,SAAS,CAACF,MAAD,CAAT,GAAoB,IAApB;AACD;AACF,CATM,C,CAWP;AACA;AACA;;;;;AACA,IAAMI,eAAkC,GAAG,SAArCA,eAAqC,CAACC,WAAD;AAAA,SAAyBA,WAAzB;AAAA,CAA3C;;AAEO,IAAMC,0BAA6C,GAAG,SAAhDA,0BAAgD,CAC3DD,WAD2D,EAE3DE,SAF2D;AAAA,SAGxDF,WAAW,IAAIE,SAHyC;AAAA,CAAtD;;;;AAKP,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD;AAAA,mBAAoBX,sBAApB,SAA6CW,GAA7C;AAAA,CAAlB;;AAEO,IAAMC,mBAAsC,GAAG,SAAzCA,mBAAyC,CACpDL,WADoD,EAEpDM,eAFoD,EAGjD;AACH,MAAIX,MAAM,GAAGK,WAAb;;AACA,MAAIA,WAAW,IAAIM,eAAnB,EAAoC;AAClCX,IAAAA,MAAM,aAAMK,WAAN,SAAoBG,SAAS,CAACG,eAAD,CAA7B,CAAN;AACD,GAFD,MAEO,IAAIA,eAAJ,EAAqB;AAC1BX,IAAAA,MAAM,GAAGW,eAAT;AACD;;AACD,SAAOX,MAAP;AACD,CAXM;;;;AAaA,IAAMY,kBAAkB,GAC7B,SADWA,kBACX,CACEX,MADF,EAEEC,SAFF;AAAA,MAGEW,iBAHF,uEAGsB,KAHtB;AAAA,SAKA,UAACC,IAAD,EAAgB;AACd,QAAMC,UAAU,GAAGF,iBAAiB,GAChCH,mBADgC,GAEhCN,eAFJ;;AAGA,QAAIU,IAAI,CAACE,IAAL,IAAaF,IAAI,CAACE,IAAL,CAAUX,WAA3B,EAAwC;AACtC,UAAML,MAAM,GAAGe,UAAU,CACvBD,IAAI,CAACE,IAAL,CAAUX,WADa,EAEvBS,IAAI,CAACE,IAAL,CAAUL,eAFa,CAAzB;AAIAZ,MAAAA,aAAa,CAACC,MAAD,EAASC,MAAT,EAAiBC,SAAjB,CAAb;AACD,KAND,MAMO,IAAIY,IAAI,CAACE,IAAL,IAAaF,IAAI,CAACE,IAAL,CAAUL,eAA3B,EAA4C;AACjDZ,MAAAA,aAAa,CAACe,IAAI,CAACE,IAAL,CAAUL,eAAX,EAA4BV,MAA5B,EAAoCC,SAApC,CAAb;AACD;;AACD,QAAIY,IAAI,CAACG,EAAL,IAAWH,IAAI,CAACG,EAAL,CAAQZ,WAAvB,EAAoC;AAClC,UAAML,OAAM,GAAGe,UAAU,CAACD,IAAI,CAACG,EAAL,CAAQZ,WAAT,EAAsBS,IAAI,CAACG,EAAL,CAAQN,eAA9B,CAAzB;;AACAZ,MAAAA,aAAa,CAACC,OAAD,EAASC,MAAT,EAAiBC,SAAjB,CAAb;AACD,KAHD,MAGO,IAAIY,IAAI,CAACG,EAAL,IAAWH,IAAI,CAACG,EAAL,CAAQN,eAAvB,EAAwC;AAC7CZ,MAAAA,aAAa,CAACe,IAAI,CAACG,EAAL,CAAQN,eAAT,EAA0BV,MAA1B,EAAkCC,SAAlC,CAAb;AACD;AACF,GAxBD;AAAA,CADK","sourcesContent":["import { Call } from '../../interfaces/Call.interface';\n\nconst RC_EXTENSION_DELIMITER = '*';\n\nexport type PhoneNumberPicker = (\n  phoneNumber: string,\n  extNumber?: string,\n) => string;\n\nexport const addIfNotExist = (\n  number: string,\n  output: string[],\n  numberMap: Record<string, boolean>,\n) => {\n  if (!numberMap[number]) {\n    output.push(number);\n    numberMap[number] = true;\n  }\n};\n\n// NOTE:\n// business logic for commons for now\n// return phone number only.\nconst pickPhoneNumber: PhoneNumberPicker = (phoneNumber: string) => phoneNumber;\n\nexport const pickPhoneOrExtensionNumber: PhoneNumberPicker = (\n  phoneNumber: string,\n  extension: string,\n) => phoneNumber || extension;\n\nconst formatExt = (num: string) => `${RC_EXTENSION_DELIMITER}${num}`;\n\nexport const pickFullPhoneNumber: PhoneNumberPicker = (\n  phoneNumber: string,\n  extensionNumber: string,\n) => {\n  let number = phoneNumber;\n  if (phoneNumber && extensionNumber) {\n    number = `${phoneNumber}${formatExt(extensionNumber)}`;\n  } else if (extensionNumber) {\n    number = extensionNumber;\n  }\n  return number;\n};\n\nexport const addNumbersFromCall =\n  (\n    output: string[],\n    numberMap: Record<string, boolean>,\n    pickingFullNumber = false,\n  ) =>\n  (call: Call) => {\n    const pickNumber = pickingFullNumber\n      ? pickFullPhoneNumber\n      : pickPhoneNumber;\n    if (call.from && call.from.phoneNumber) {\n      const number = pickNumber(\n        call.from.phoneNumber,\n        call.from.extensionNumber,\n      );\n      addIfNotExist(number, output, numberMap);\n    } else if (call.from && call.from.extensionNumber) {\n      addIfNotExist(call.from.extensionNumber, output, numberMap);\n    }\n    if (call.to && call.to.phoneNumber) {\n      const number = pickNumber(call.to.phoneNumber, call.to.extensionNumber);\n      addIfNotExist(number, output, numberMap);\n    } else if (call.to && call.to.extensionNumber) {\n      addIfNotExist(call.to.extensionNumber, output, numberMap);\n    }\n  };\n"],"file":"callHistoryHelper.js"}