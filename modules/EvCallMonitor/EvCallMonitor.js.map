{"version":3,"file":"EvCallMonitor.js","names":["_di","require","_core","_enums","_callUniqueIdentifies","_contactMatchIdentify","_dec","_dec2","_dec3","_class","_class2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","iter","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","undefined","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","property","decorators","context","desc","initializer","reverse","reduce","decorator","EvCallMonitor","Module","deps","dep","optional","computed","that","callsDataMapping","contactMatches","activityMatches","calls","_RcModuleV","_super","_this$_deps$contactMa","_this$_deps$activityM","_this","_oldCalls","_beforeunloadHandler","_deps","evAgentSession","shouldBlockBrowser","contactMatcher","addQuerySource","getQueriesFn","uniqueIdentifies","readyCheckFn","presence","ready","activityMatcher","callIds","_getMatcher","regeneratorRuntime","mark","_callee","_ref","ani","callType","contactMatchIdentify","wrap","_callee$","_context","prev","contactMatchIdentifyEncode","phoneNumber","forceMatchNumber","stop","getMatcher","getMainCall","uii","id","evClient","getMainId","callsMapping","limitCalls","evCallDataSource","onStateChange","configSuccess","currentCall","mainCall","eventEmitter","emit","callStatus","ANSWERED","clearCalls","ENDED","getCallId","_ref2","sessionId","encodeUii","getActiveCallList","otherCallIds","decodeUii","mainUii","includes","currentOtherCallIds","currentCallIds","concat","map","updateActivityMatches","_ref3","_ref3$forceMatch","forceMatch","match","queries","_getQueries","ignoreCache","onCallRinging","callback","on","RINGING","onCallAnswered","onCallEnded","bindBeforeunload","beforeunload","add","removeBeforeunload","remove","get","otherCalls","callLogs","callLogsIds","dataMapping","_this2","entries","mapping","_ref4","_call$session","_ref5","session","recordingUrl","_ref6","baggage","agentFirstName","agentLastName","agentName","makeCallsUniqueIdentifies","callsLimited","RcModuleV2","exports"],"sources":["modules/EvCallMonitor/EvCallMonitor.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { computed, RcModuleV2 } from '@ringcentral-integration/core';\nimport type { Mapping } from '@ringcentral-integration/widgets/typings';\n\nimport { callStatus } from '../../enums';\nimport type { EvCallData } from '../../interfaces/EvData.interface';\nimport { makeCallsUniqueIdentifies } from '../../lib/callUniqueIdentifies';\nimport { contactMatchIdentifyEncode } from '../../lib/contactMatchIdentify';\nimport type { EvAddSessionNotification } from '../../lib/EvClient/interfaces';\nimport type { CallMonitor, Deps } from './EvCallMonitor.interface';\n\n@Module({\n  name: 'EvCallMonitor',\n  deps: [\n    'Presence',\n    'EvClient',\n    'Beforeunload',\n    'EvAgentSession',\n    'EvIntegratedSoftphone',\n    'EvCallDataSource',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'ActivityMatcher', optional: true },\n  ],\n})\nclass EvCallMonitor extends RcModuleV2<Deps> implements CallMonitor {\n  private _oldCalls: EvCallData[] = [];\n\n  private _beforeunloadHandler = () =>\n    this._deps.evAgentSession.shouldBlockBrowser;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n\n    this._deps.contactMatcher?.addQuerySource({\n      getQueriesFn: () => this.uniqueIdentifies,\n      readyCheckFn: () => this._deps.presence.ready,\n    });\n    this._deps.activityMatcher?.addQuerySource({\n      getQueriesFn: () => this.callIds,\n      readyCheckFn: () => this._deps.presence.ready,\n    });\n  }\n\n  async getMatcher({ ani, callType }: EvCallData) {\n    if (this._deps.contactMatcher) {\n      const contactMatchIdentify = contactMatchIdentifyEncode({\n        phoneNumber: ani,\n        callType,\n      });\n      await this._deps.contactMatcher.forceMatchNumber({\n        phoneNumber: contactMatchIdentify,\n      });\n    }\n  }\n\n  get isOnCall() {\n    return this.calls.length > 0;\n  }\n\n  get calls() {\n    return this._deps.presence.calls || [];\n  }\n\n  get otherCalls() {\n    return this._deps.presence.otherCalls || [];\n  }\n\n  get callLogs() {\n    return this._deps.presence.callLogs || [];\n  }\n\n  get callIds() {\n    return this._deps.presence.callIds || [];\n  }\n\n  get otherCallIds() {\n    return this._deps.presence.otherCallIds || [];\n  }\n\n  get callLogsIds() {\n    return this._deps.presence.callLogsIds || [];\n  }\n\n  get callsDataMapping() {\n    return this._deps.presence.callsMapping || {};\n  }\n\n  get contactMatches(): Mapping<any[]> {\n    return (this._deps.contactMatcher.dataMapping as any) || {};\n  }\n\n  get activityMatches() {\n    return this._deps.activityMatcher.dataMapping || {};\n  }\n\n  @computed((that: EvCallMonitor) => [\n    that.callsDataMapping,\n    that.contactMatches,\n    that.activityMatches,\n  ])\n  get callsMapping() {\n    const { callsDataMapping, contactMatches, activityMatches } = this;\n\n    return Object.entries(callsDataMapping).reduce<Mapping<EvCallData>>(\n      (mapping, [key, call]) => {\n        const contactMatchIdentify = contactMatchIdentifyEncode({\n          phoneNumber: call.ani,\n          callType: call.callType,\n        });\n\n        const id = call.session ? this.getCallId(call.session) : null;\n        const recordingUrl = call.session?.recordingUrl;\n        const { agentFirstName, agentLastName } = call.baggage || {};\n\n        const agentName =\n          agentFirstName && agentLastName\n            ? `${agentFirstName} ${agentLastName}`\n            : null;\n\n        return {\n          ...mapping,\n          [key]: {\n            ...call,\n            recordingUrl,\n            agentName,\n            // TODO: confirm about using `toMatches` & `fromMatches`?\n            contactMatches: contactMatches[contactMatchIdentify] || [],\n            activityMatches:\n              id && activityMatches[id] ? activityMatches[id] : [],\n          } as EvCallData,\n        };\n      },\n      {},\n    );\n  }\n\n  @computed((that: EvCallMonitor) => [that.calls])\n  get uniqueIdentifies() {\n    return makeCallsUniqueIdentifies(this.calls);\n  }\n\n  getMainCall(uii: string) {\n    const id = this._deps.evClient.getMainId(uii);\n    return this._deps.presence.callsMapping[id];\n  }\n\n  get callsLimited() {\n    return this._deps.evCallDataSource.callsLimited;\n  }\n\n  limitCalls() {\n    return this._deps.evCallDataSource.limitCalls();\n  }\n\n  override onStateChange() {\n    if (this._deps.evAgentSession.configSuccess) {\n      if (this.calls.length > this._oldCalls.length) {\n        const currentCall = this.calls[0];\n        const mainCall = this.getMainCall(currentCall.uii);\n\n        if (currentCall && mainCall) {\n          this._oldCalls = this.calls;\n\n          this._deps.presence.eventEmitter.emit(\n            callStatus.ANSWERED,\n            currentCall,\n          );\n        } else {\n          this._deps.presence.clearCalls();\n        }\n      } else if (this.calls.length < this._oldCalls.length) {\n        const call = this._oldCalls[0];\n        this._oldCalls = this.calls;\n\n        this._deps.presence.eventEmitter.emit(callStatus.ENDED, call);\n      }\n    }\n  }\n\n  getCallId({ uii, sessionId }: Partial<EvAddSessionNotification>) {\n    return this._deps.evClient.encodeUii({ uii, sessionId });\n  }\n\n  getActiveCallList(\n    callIds: string[],\n    otherCallIds: string[],\n    callsMapping: Mapping<EvCallData>,\n    id: string,\n  ) {\n    const uii = this._deps.evClient.decodeUii(id);\n    const mainUii = this._deps.evClient.getMainId(uii);\n    if (!otherCallIds.includes(mainUii) || !callIds.includes(id)) return [];\n    const currentOtherCallIds = otherCallIds.filter(\n      (id) => id.includes(uii) && id !== mainUii,\n    );\n    const currentCallIds = [mainUii, id, ...currentOtherCallIds];\n    return currentCallIds.map((id) => callsMapping[id]);\n  }\n\n  updateActivityMatches({ forceMatch = false } = {}) {\n    // it's async function\n    // TODO: fix type in DataMatcher\n    return this._deps.activityMatcher.match({\n      queries: this._deps.activityMatcher._getQueries(),\n      ignoreCache: forceMatch,\n    });\n  }\n\n  onCallRinging(callback: (session?: EvAddSessionNotification) => any) {\n    this._deps.presence.eventEmitter.on(callStatus.RINGING, callback);\n    return this;\n  }\n\n  onCallAnswered(callback: (currentCall?: EvCallData) => any) {\n    this._deps.presence.eventEmitter.on(callStatus.ANSWERED, callback);\n    return this;\n  }\n\n  onCallEnded(callback: (currentCall?: EvCallData) => any) {\n    this._deps.presence.eventEmitter.on(callStatus.ENDED, callback);\n    return this;\n  }\n\n  bindBeforeunload() {\n    this._deps.beforeunload.add(this._beforeunloadHandler);\n  }\n\n  removeBeforeunload() {\n    this._deps.beforeunload.remove(this._beforeunloadHandler);\n  }\n}\n\nexport { EvCallMonitor };\n"],"mappings":"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"}