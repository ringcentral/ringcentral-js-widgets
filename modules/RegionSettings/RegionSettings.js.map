{"version":3,"file":"RegionSettings.js","names":["_core","require","_libphonenumberJs","_ramda","_di","_proxify","_validateAreaCode","_interopRequireDefault","_regionSettingsMessages","_dec","_dec2","_dec3","_dec4","_dec5","_class","_class2","_descriptor","e","__esModule","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_initializerDefineProperty","l","Object","defineProperty","enumerable","configurable","writable","initializer","call","_classCallCheck","TypeError","_defineProperties","length","_toPropertyKey","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","keys","forEach","slice","reverse","reduce","_initializerWarningHelper","Error","RegionSettings","Module","name","deps","dep","optional","computed","that","_deps","dialingPlan","plans","extensionInfo","country","_ref","availableCountries","_ref2","countryCode","areaCode","appFeatures","isEDPEnabled","extensionNumberAreaCode","defaultAreaCode","_RcModuleV","_super","_this","enableCache","storageKey","_setData","_ref3","_ref3$countryCode","data","_ref3$areaCode","onInitOnce","_this2","watch","ready","tabManager","active","checkRegionSettings","onInit","_alertSettingsChanged","alert","warning","allowDuplicates","message","regionSettingsMessages","dialingPlansChanged","ttl","_checkRegionSettings","regeneratorRuntime","mark","_callee","_this3","_this$_deps$brand$bra","_this$_deps$regionSet","wrap","_callee$","_context","prev","next","find","plan","isoCode","brand","brandConfig","allowRegionSettings","regionSettingsOptions","suppressSettingsChangedWarning","includes","stop","_setData2","_callee2","_ref4","_callee2$","_context2","validateAreaCode","danger","areaCodeInvalid","abrupt","trim","success","saveSuccess","setData","_x","setCountryCode","setAreaCode","get","hasMultiplePlans","isUSOrCA","_this4","homeCountry","homeCountryId","id","callingCode","getCountryCallingCode","_this$_deps$extension","extensionPhoneNumber","primaryNumber","mainCompanyNumber","mainNumberCallingCode","phoneNumber","parsePhoneNumber","countryCallingCode","primaryNumberCallingCode","canUseExtensionAreaCode","RcModuleV2","storage","state","_this$_deps$extension2","action","getOwnPropertyDescriptor","proxify","exports"],"sources":["modules/RegionSettings/RegionSettings.ts"],"sourcesContent":["import type CountryInfoShortModel from '@rc-ex/core/lib/definitions/CountryInfoShortModel';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  watch,\n} from '@ringcentral-integration/core';\nimport type { CountryCode } from 'libphonenumber-js';\nimport { getCountryCallingCode, parsePhoneNumber } from 'libphonenumber-js';\nimport { find, includes } from 'ramda';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport validateAreaCode from '../../lib/validateAreaCode';\n\nimport type { Deps, RegionSettingsData } from './RegionSettings.interface';\nimport { regionSettingsMessages } from './regionSettingsMessages';\n\n@Module({\n  name: 'RegionSettings',\n  deps: [\n    'Brand',\n    'Alert',\n    'DialingPlan',\n    'ExtensionInfo',\n    'Storage',\n    'ExtensionPhoneNumber',\n    'AppFeatures',\n    'ExtensionNumberAreaCode',\n    { dep: 'TabManager', optional: true },\n    { dep: 'RegionSettingsOptions', optional: true },\n  ],\n})\nexport class RegionSettings extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'RegionSettings',\n    });\n  }\n\n  @storage\n  @state\n  data = {\n    countryCode: this._deps.extensionInfo?.isoCode || '',\n    areaCode: '',\n  };\n\n  get countryCode(): CountryCode {\n    return (\n      (this.data.countryCode as CountryCode) ||\n      this._deps.extensionInfo.isoCode ||\n      'US'\n    );\n  }\n\n  get areaCode() {\n    return this.data.areaCode || '';\n  }\n\n  @action\n  _setData({\n    countryCode = this.data.countryCode,\n    areaCode = this.data.areaCode,\n  }: RegionSettingsData) {\n    this.data.countryCode = countryCode;\n    this.data.areaCode = areaCode;\n  }\n\n  override onInitOnce() {\n    watch(\n      this,\n      () => this.availableCountries,\n      () => {\n        if (\n          this.ready &&\n          (!this._deps.tabManager || this._deps.tabManager.active)\n        ) {\n          this.checkRegionSettings();\n        }\n      },\n    );\n  }\n\n  override onInit() {\n    if (!this._deps.tabManager || this._deps.tabManager.active) {\n      this.checkRegionSettings();\n    }\n  }\n\n  @computed((that: RegionSettings) => [\n    that._deps.dialingPlan.plans,\n    that._deps.extensionInfo.country,\n  ])\n  get availableCountries(): CountryInfoShortModel[] {\n    const plans = this._deps.dialingPlan.plans;\n    const country = this._deps.extensionInfo.country;\n    if (plans && plans.length > 0) {\n      return plans;\n    }\n    return country ? [country] : [];\n  }\n\n  _alertSettingsChanged() {\n    this._deps.alert.warning({\n      allowDuplicates: false,\n      message: regionSettingsMessages.dialingPlansChanged,\n      ttl: 0,\n    });\n  }\n\n  @proxify\n  async checkRegionSettings() {\n    let countryCode: CountryCode | null = this.countryCode;\n\n    if (\n      countryCode &&\n      !find((plan) => plan.isoCode === countryCode, this.availableCountries)\n    ) {\n      countryCode = null;\n      if (\n        this._deps.brand.brandConfig?.allowRegionSettings &&\n        !this._deps.regionSettingsOptions?.suppressSettingsChangedWarning\n      ) {\n        this._alertSettingsChanged();\n      }\n    }\n\n    if (!countryCode) {\n      const country =\n        find(\n          (plan) => plan.isoCode === this._deps.extensionInfo.country.isoCode,\n          this.availableCountries,\n        ) || this.availableCountries[0];\n\n      this._setData({\n        countryCode: country?.isoCode,\n        areaCode: '',\n      });\n    }\n\n    const isEDPEnabled = this._deps.appFeatures.isEDPEnabled;\n    if (isEDPEnabled && includes(this.countryCode, ['US', 'PR', 'CA'])) {\n      this._setData({\n        areaCode: '',\n      });\n    }\n  }\n\n  @proxify\n  async setData({ areaCode, countryCode }: RegionSettingsData) {\n    const isEDPEnabled = this._deps.appFeatures.isEDPEnabled;\n    if (!isEDPEnabled && !validateAreaCode(areaCode)) {\n      this._deps.alert.danger({\n        message: regionSettingsMessages.areaCodeInvalid,\n      });\n      return;\n    }\n    this._setData({\n      countryCode,\n      areaCode: areaCode && areaCode.trim(),\n    });\n    this._deps.alert.success({\n      message: regionSettingsMessages.saveSuccess,\n    });\n  }\n\n  setCountryCode(countryCode: RegionSettingsData['countryCode']) {\n    this.setData({\n      countryCode,\n    });\n  }\n\n  setAreaCode(areaCode: RegionSettingsData['areaCode']) {\n    this.setData({\n      areaCode,\n    });\n  }\n\n  @computed(({ availableCountries }: RegionSettings) => [availableCountries])\n  get showRegionSettings() {\n    const allowRegionSettings =\n      !!this._deps.brand.brandConfig.allowRegionSettings;\n    const hasMultiplePlans = this.availableCountries.length > 1;\n    const isUSOrCA =\n      this.availableCountries.length === 1 &&\n      (this.availableCountries[0].isoCode === 'US' ||\n        this.availableCountries[0].isoCode === 'CA');\n    const isEDPEnabled = this._deps.appFeatures.isEDPEnabled;\n\n    return (\n      allowRegionSettings && (hasMultiplePlans || isEDPEnabled || isUSOrCA)\n    );\n  }\n\n  @computed(({ availableCountries, countryCode }: RegionSettings) => [\n    availableCountries,\n    countryCode,\n  ])\n  get homeCountryId() {\n    const homeCountry = this.availableCountries.find(\n      (country) => country.isoCode === this.countryCode,\n    );\n    const homeCountryId = (homeCountry && homeCountry.id) || '1';\n    return homeCountryId;\n  }\n\n  @computed((that: RegionSettings) => [\n    that.areaCode,\n    that.countryCode,\n    that._deps.appFeatures.isEDPEnabled,\n    that._deps.extensionNumberAreaCode.defaultAreaCode,\n  ])\n  get defaultAreaCode() {\n    const isEDPEnabled = this._deps.appFeatures.isEDPEnabled;\n    if (isEDPEnabled && includes(this.countryCode, ['US', 'PR', 'CA'])) {\n      return;\n    }\n\n    if (this.areaCode) {\n      return this.areaCode;\n    }\n\n    const callingCode = getCountryCallingCode(this.countryCode as CountryCode);\n    const { primaryNumber, mainCompanyNumber } =\n      this._deps.extensionPhoneNumber;\n\n    const mainNumberCallingCode =\n      mainCompanyNumber?.phoneNumber &&\n      parsePhoneNumber(mainCompanyNumber.phoneNumber).countryCallingCode;\n    const primaryNumberCallingCode =\n      primaryNumber?.phoneNumber &&\n      parsePhoneNumber(primaryNumber.phoneNumber).countryCallingCode;\n\n    const canUseExtensionAreaCode =\n      primaryNumberCallingCode === callingCode ||\n      mainNumberCallingCode === callingCode;\n    if (canUseExtensionAreaCode) {\n      return this._deps.extensionNumberAreaCode.defaultAreaCode;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;AACA,IAAAA,KAAA,GAAAC,OAAA;AASA,IAAAC,iBAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAEA,IAAAG,GAAA,GAAAH,OAAA;AACA,IAAAI,QAAA,GAAAJ,OAAA;AACA,IAAAK,iBAAA,GAAAC,sBAAA,CAAAN,OAAA;AAGA,IAAAO,uBAAA,GAAAP,OAAA;AAAkE,IAAAQ,IAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,WAAA;AAAA,SAAAT,uBAAAU,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAAA,SAAAE,mBAAAC,CAAA,EAAAC,CAAA,EAAAJ,CAAA,EAAAK,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,cAAAC,CAAA,GAAAN,CAAA,CAAAI,CAAA,EAAAC,CAAA,GAAAE,CAAA,GAAAD,CAAA,CAAAE,KAAA,WAAAR,CAAA,gBAAAH,CAAA,CAAAG,CAAA,KAAAM,CAAA,CAAAG,IAAA,GAAAR,CAAA,CAAAM,CAAA,IAAAG,OAAA,CAAAC,OAAA,CAAAJ,CAAA,EAAAK,IAAA,CAAAV,CAAA,EAAAC,CAAA;AAAA,SAAAU,kBAAAb,CAAA,6BAAAC,CAAA,SAAAJ,CAAA,GAAAiB,SAAA,aAAAJ,OAAA,WAAAR,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAJ,CAAA,CAAAe,KAAA,CAAAd,CAAA,EAAAJ,CAAA,YAAAmB,MAAAhB,CAAA,IAAAD,kBAAA,CAAAK,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,UAAAjB,CAAA,cAAAiB,OAAAjB,CAAA,IAAAD,kBAAA,CAAAK,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,WAAAjB,CAAA,KAAAgB,KAAA;AAAA,SAAAE,2BAAArB,CAAA,EAAAS,CAAA,EAAAJ,CAAA,EAAAiB,CAAA,IAAAjB,CAAA,IAAAkB,MAAA,CAAAC,cAAA,CAAAxB,CAAA,EAAAS,CAAA,IAAAgB,UAAA,EAAApB,CAAA,CAAAoB,UAAA,EAAAC,YAAA,EAAArB,CAAA,CAAAqB,YAAA,EAAAC,QAAA,EAAAtB,CAAA,CAAAsB,QAAA,EAAAhB,KAAA,EAAAN,CAAA,CAAAuB,WAAA,GAAAvB,CAAA,CAAAuB,WAAA,CAAAC,IAAA,CAAAP,CAAA;AAAA,SAAAQ,gBAAAvB,CAAA,EAAAJ,CAAA,UAAAI,CAAA,YAAAJ,CAAA,aAAA4B,SAAA;AAAA,SAAAC,kBAAAhC,CAAA,EAAAK,CAAA,aAAAD,CAAA,MAAAA,CAAA,GAAAC,CAAA,CAAA4B,MAAA,EAAA7B,CAAA,UAAAE,CAAA,GAAAD,CAAA,CAAAD,CAAA,GAAAE,CAAA,CAAAmB,UAAA,GAAAnB,CAAA,CAAAmB,UAAA,QAAAnB,CAAA,CAAAoB,YAAA,kBAAApB,CAAA,KAAAA,CAAA,CAAAqB,QAAA,QAAAJ,MAAA,CAAAC,cAAA,CAAAxB,CAAA,EAAAkC,cAAA,CAAA5B,CAAA,CAAA6B,GAAA,GAAA7B,CAAA;AAAA,SAAA8B,aAAApC,CAAA,EAAAK,CAAA,EAAAD,CAAA,WAAAC,CAAA,IAAA2B,iBAAA,CAAAhC,CAAA,CAAAqC,SAAA,EAAAhC,CAAA,GAAAD,CAAA,IAAA4B,iBAAA,CAAAhC,CAAA,EAAAI,CAAA,GAAAmB,MAAA,CAAAC,cAAA,CAAAxB,CAAA,iBAAA2B,QAAA,SAAA3B,CAAA;AAAA,SAAAkC,eAAA9B,CAAA,QAAAK,CAAA,GAAA6B,YAAA,CAAAlC,CAAA,gCAAAmC,OAAA,CAAA9B,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAA6B,aAAAlC,CAAA,EAAAC,CAAA,oBAAAkC,OAAA,CAAAnC,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAJ,CAAA,GAAAI,CAAA,CAAAoC,MAAA,CAAAC,WAAA,kBAAAzC,CAAA,QAAAS,CAAA,GAAAT,CAAA,CAAA6B,IAAA,CAAAzB,CAAA,EAAAC,CAAA,gCAAAkC,OAAA,CAAA9B,CAAA,UAAAA,CAAA,YAAAsB,SAAA,yEAAA1B,CAAA,GAAAqC,MAAA,GAAAC,MAAA,EAAAvC,CAAA;AAAA,SAAAwC,UAAAxC,CAAA,EAAAJ,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAA+B,SAAA,wDAAA3B,CAAA,CAAAiC,SAAA,GAAAd,MAAA,CAAAsB,MAAA,CAAA7C,CAAA,IAAAA,CAAA,CAAAqC,SAAA,IAAAS,WAAA,IAAAnC,KAAA,EAAAP,CAAA,EAAAuB,QAAA,MAAAD,YAAA,WAAAH,MAAA,CAAAC,cAAA,CAAApB,CAAA,iBAAAuB,QAAA,SAAA3B,CAAA,IAAA+C,eAAA,CAAA3C,CAAA,EAAAJ,CAAA;AAAA,SAAA+C,gBAAA3C,CAAA,EAAAJ,CAAA,WAAA+C,eAAA,GAAAxB,MAAA,CAAAyB,cAAA,GAAAzB,MAAA,CAAAyB,cAAA,CAAAC,IAAA,eAAA7C,CAAA,EAAAJ,CAAA,WAAAI,CAAA,CAAA8C,SAAA,GAAAlD,CAAA,EAAAI,CAAA,KAAA2C,eAAA,CAAA3C,CAAA,EAAAJ,CAAA;AAAA,SAAAmD,aAAA/C,CAAA,QAAAC,CAAA,GAAA+C,yBAAA,6BAAApD,CAAA,EAAAM,CAAA,GAAA+C,eAAA,CAAAjD,CAAA,OAAAC,CAAA,QAAAiD,CAAA,GAAAD,eAAA,OAAAP,WAAA,EAAA9C,CAAA,GAAAuD,OAAA,CAAAC,SAAA,CAAAlD,CAAA,EAAAW,SAAA,EAAAqC,CAAA,UAAAtD,CAAA,GAAAM,CAAA,CAAAY,KAAA,OAAAD,SAAA,UAAAwC,0BAAA,OAAAzD,CAAA;AAAA,SAAAyD,2BAAArD,CAAA,EAAAJ,CAAA,QAAAA,CAAA,iBAAAuC,OAAA,CAAAvC,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAA+B,SAAA,qEAAA2B,sBAAA,CAAAtD,CAAA;AAAA,SAAAsD,uBAAA1D,CAAA,mBAAAA,CAAA,YAAA2D,cAAA,sEAAA3D,CAAA;AAAA,SAAAoD,0BAAA,cAAAhD,CAAA,IAAAwD,OAAA,CAAAvB,SAAA,CAAAwB,OAAA,CAAAhC,IAAA,CAAA0B,OAAA,CAAAC,SAAA,CAAAI,OAAA,iCAAAxD,CAAA,aAAAgD,yBAAA,YAAAA,0BAAA,aAAAhD,CAAA;AAAA,SAAAiD,gBAAAjD,CAAA,WAAAiD,eAAA,GAAA9B,MAAA,CAAAyB,cAAA,GAAAzB,MAAA,CAAAuC,cAAA,CAAAb,IAAA,eAAA7C,CAAA,WAAAA,CAAA,CAAA8C,SAAA,IAAA3B,MAAA,CAAAuC,cAAA,CAAA1D,CAAA,MAAAiD,eAAA,CAAAjD,CAAA;AAAA,SAAA2D,0BAAAtD,CAAA,EAAAT,CAAA,EAAAK,CAAA,EAAAF,CAAA,EAAAmB,CAAA,QAAAf,CAAA,cAAAgB,MAAA,CAAAyC,IAAA,CAAA7D,CAAA,EAAA8D,OAAA,WAAAxD,CAAA,IAAAF,CAAA,CAAAE,CAAA,IAAAN,CAAA,CAAAM,CAAA,OAAAF,CAAA,CAAAkB,UAAA,KAAAlB,CAAA,CAAAkB,UAAA,EAAAlB,CAAA,CAAAmB,YAAA,KAAAnB,CAAA,CAAAmB,YAAA,cAAAnB,CAAA,IAAAA,CAAA,CAAAqB,WAAA,MAAArB,CAAA,CAAAoB,QAAA,QAAApB,CAAA,GAAAF,CAAA,CAAA6D,KAAA,GAAAC,OAAA,GAAAC,MAAA,WAAA/D,CAAA,EAAAF,CAAA,WAAAA,CAAA,CAAAM,CAAA,EAAAT,CAAA,EAAAK,CAAA,KAAAA,CAAA,KAAAE,CAAA,GAAAe,CAAA,eAAAf,CAAA,CAAAqB,WAAA,KAAArB,CAAA,CAAAI,KAAA,GAAAJ,CAAA,CAAAqB,WAAA,GAAArB,CAAA,CAAAqB,WAAA,CAAAC,IAAA,CAAAP,CAAA,YAAAf,CAAA,CAAAqB,WAAA,uBAAArB,CAAA,CAAAqB,WAAA,IAAAL,MAAA,CAAAC,cAAA,CAAAf,CAAA,EAAAT,CAAA,EAAAO,CAAA,WAAAA,CAAA;AAAA,SAAA8D,0BAAAhE,CAAA,EAAAL,CAAA,UAAAsE,KAAA;AAAA,IAiBrDC,cAAc,IAAA/E,IAAA,GAf1B,IAAAgF,UAAM,EAAC;EACNC,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,CACJ,OAAO,EACP,OAAO,EACP,aAAa,EACb,eAAe,EACf,SAAS,EACT,sBAAsB,EACtB,aAAa,EACb,yBAAyB,EACzB;IAAEC,GAAG,EAAE,YAAY;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACrC;IAAED,GAAG,EAAE,uBAAuB;IAAEC,QAAQ,EAAE;EAAK,CAAC;AAEpD,CAAC,CAAC,EAAAnF,KAAA,GA2DC,IAAAoF,cAAQ,EAAC,UAACC,IAAoB;EAAA,OAAK,CAClCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAACC,KAAK,EAC5BH,IAAI,CAACC,KAAK,CAACG,aAAa,CAACC,OAAO,CACjC;AAAA,EAAC,EAAAzF,KAAA,GAsFD,IAAAmF,cAAQ,EAAC,UAAAO,IAAA;EAAA,IAAGC,kBAAkB,GAAAD,IAAA,CAAlBC,kBAAkB;EAAA,OAAuB,CAACA,kBAAkB,CAAC;AAAA,EAAC,EAAA1F,KAAA,GAgB1E,IAAAkF,cAAQ,EAAC,UAAAS,KAAA;EAAA,IAAGD,kBAAkB,GAAAC,KAAA,CAAlBD,kBAAkB;IAAEE,WAAW,GAAAD,KAAA,CAAXC,WAAW;EAAA,OAAuB,CACjEF,kBAAkB,EAClBE,WAAW,CACZ;AAAA,EAAC,EAAA3F,KAAA,GASD,IAAAiF,cAAQ,EAAC,UAACC,IAAoB;EAAA,OAAK,CAClCA,IAAI,CAACU,QAAQ,EACbV,IAAI,CAACS,WAAW,EAChBT,IAAI,CAACC,KAAK,CAACU,WAAW,CAACC,YAAY,EACnCZ,IAAI,CAACC,KAAK,CAACY,uBAAuB,CAACC,eAAe,CACnD;AAAA,EAAC,EAAApG,IAAA,CAAAK,MAAA,IAAAC,OAAA,0BAAA+F,UAAA;EAAAjD,SAAA,CAAA2B,cAAA,EAAAsB,UAAA;EAAA,IAAAC,MAAA,GAAA3C,YAAA,CAAAoB,cAAA;EAnLF,SAAAA,eAAYG,IAAU,EAAE;IAAA,IAAAqB,KAAA;IAAAjE,eAAA,OAAAyC,cAAA;IACtBwB,KAAA,GAAAD,MAAA,CAAAjE,IAAA,OAAM;MACJ6C,IAAI,EAAJA,IAAI;MACJsB,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE;IACd,CAAC;IAAE5E,0BAAA,CAAA0E,KAAA,UAAAhG,WAAA,EAAA2D,sBAAA,CAAAqC,KAAA;IAAA,OAAAA,KAAA;EACL;EAAC3D,YAAA,CAAAmC,cAAA;IAAApC,GAAA;IAAAxB,KAAA,WAAAuF,SAAAC,KAAA,EAyBsB;MAAA,IAAAC,iBAAA,GAAAD,KAAA,CAFrBZ,WAAW;QAAXA,WAAW,GAAAa,iBAAA,cAAG,IAAI,CAACC,IAAI,CAACd,WAAW,GAAAa,iBAAA;QAAAE,cAAA,GAAAH,KAAA,CACnCX,QAAQ;QAARA,QAAQ,GAAAc,cAAA,cAAG,IAAI,CAACD,IAAI,CAACb,QAAQ,GAAAc,cAAA;MAE7B,IAAI,CAACD,IAAI,CAACd,WAAW,GAAGA,WAAW;MACnC,IAAI,CAACc,IAAI,CAACb,QAAQ,GAAGA,QAAQ;IAC/B;EAAC;IAAArD,GAAA;IAAAxB,KAAA,WAAA4F,WAAA,EAEqB;MAAA,IAAAC,MAAA;MACpB,IAAAC,WAAK,EACH,IAAI,EACJ;QAAA,OAAMD,MAAI,CAACnB,kBAAkB;MAAA,GAC7B,YAAM;QACJ,IACEmB,MAAI,CAACE,KAAK,KACT,CAACF,MAAI,CAACzB,KAAK,CAAC4B,UAAU,IAAIH,MAAI,CAACzB,KAAK,CAAC4B,UAAU,CAACC,MAAM,CAAC,EACxD;UACAJ,MAAI,CAACK,mBAAmB,CAAC,CAAC;QAC5B;MACF,CACF,CAAC;IACH;EAAC;IAAA1E,GAAA;IAAAxB,KAAA,WAAAmG,OAAA,EAEiB;MAChB,IAAI,CAAC,IAAI,CAAC/B,KAAK,CAAC4B,UAAU,IAAI,IAAI,CAAC5B,KAAK,CAAC4B,UAAU,CAACC,MAAM,EAAE;QAC1D,IAAI,CAACC,mBAAmB,CAAC,CAAC;MAC5B;IACF;EAAC;IAAA1E,GAAA;IAAAxB,KAAA,WAAAoG,sBAAA,EAeuB;MACtB,IAAI,CAAChC,KAAK,CAACiC,KAAK,CAACC,OAAO,CAAC;QACvBC,eAAe,EAAE,KAAK;QACtBC,OAAO,EAAEC,8CAAsB,CAACC,mBAAmB;QACnDC,GAAG,EAAE;MACP,CAAC,CAAC;IACJ;EAAC;IAAAnF,GAAA;IAAAxB,KAAA;MAAA,IAAA4G,oBAAA,GAAAvG,iBAAA,eAAAwG,kBAAA,CAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA;QAAA,IAAApC,WAAA,EAAAqC,qBAAA,EAAAC,qBAAA,EAAA1C,OAAA,EAAAO,YAAA;QAAA,OAAA8B,kBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA;YAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBAIK3C,WAA+B,GAAG,IAAI,CAACA,WAAW;gBAEtD,IACEA,WAAW,IACX,CAAC,IAAA4C,WAAI,EAAC,UAACC,IAAI;kBAAA,OAAKA,IAAI,CAACC,OAAO,KAAK9C,WAAW;gBAAA,GAAE,IAAI,CAACF,kBAAkB,CAAC,EACtE;kBACAE,WAAW,GAAG,IAAI;kBAClB,IACE,EAAAqC,qBAAA,OAAI,CAAC7C,KAAK,CAACuD,KAAK,CAACC,WAAW,cAAAX,qBAAA,uBAA5BA,qBAAA,CAA8BY,mBAAmB,KACjD,GAAAX,qBAAA,GAAC,IAAI,CAAC9C,KAAK,CAAC0D,qBAAqB,cAAAZ,qBAAA,uBAAhCA,qBAAA,CAAkCa,8BAA8B,GACjE;oBACA,IAAI,CAAC3B,qBAAqB,CAAC,CAAC;kBAC9B;gBACF;gBAEA,IAAI,CAACxB,WAAW,EAAE;kBACVJ,OAAO,GACX,IAAAgD,WAAI,EACF,UAACC,IAAI;oBAAA,OAAKA,IAAI,CAACC,OAAO,KAAKV,MAAI,CAAC5C,KAAK,CAACG,aAAa,CAACC,OAAO,CAACkD,OAAO;kBAAA,GACnE,IAAI,CAAChD,kBACP,CAAC,IAAI,IAAI,CAACA,kBAAkB,CAAC,CAAC,CAAC;kBAEjC,IAAI,CAACa,QAAQ,CAAC;oBACZX,WAAW,EAAEJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEkD,OAAO;oBAC7B7C,QAAQ,EAAE;kBACZ,CAAC,CAAC;gBACJ;gBAEME,YAAY,GAAG,IAAI,CAACX,KAAK,CAACU,WAAW,CAACC,YAAY;gBACxD,IAAIA,YAAY,IAAI,IAAAiD,eAAQ,EAAC,IAAI,CAACpD,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;kBAClE,IAAI,CAACW,QAAQ,CAAC;oBACZV,QAAQ,EAAE;kBACZ,CAAC,CAAC;gBACJ;cAAC;cAAA;gBAAA,OAAAwC,QAAA,CAAAY,IAAA;YAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;MAAA,SAAAb,oBAAA;QAAA,OAAAU,oBAAA,CAAArG,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA4F,mBAAA;IAAA;EAAA;IAAA1E,GAAA;IAAAxB,KAAA;MAAA,IAAAkI,SAAA,GAAA7H,iBAAA,eAAAwG,kBAAA,CAAAC,IAAA,UAAAqB,SAAAC,KAAA;QAAA,IAAAvD,QAAA,EAAAD,WAAA,EAAAG,YAAA;QAAA,OAAA8B,kBAAA,CAAAM,IAAA,UAAAkB,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAhB,IAAA,GAAAgB,SAAA,CAAAf,IAAA;cAAA;gBAIa1C,QAAQ,GAAAuD,KAAA,CAARvD,QAAQ,EAAED,WAAW,GAAAwD,KAAA,CAAXxD,WAAW;gBAC7BG,YAAY,GAAG,IAAI,CAACX,KAAK,CAACU,WAAW,CAACC,YAAY;gBAAA,MACpD,CAACA,YAAY,IAAI,CAAC,IAAAwD,4BAAgB,EAAC1D,QAAQ,CAAC;kBAAAyD,SAAA,CAAAf,IAAA;kBAAA;gBAAA;gBAC9C,IAAI,CAACnD,KAAK,CAACiC,KAAK,CAACmC,MAAM,CAAC;kBACtBhC,OAAO,EAAEC,8CAAsB,CAACgC;gBAClC,CAAC,CAAC;gBAAC,OAAAH,SAAA,CAAAI,MAAA;cAAA;gBAGL,IAAI,CAACnD,QAAQ,CAAC;kBACZX,WAAW,EAAXA,WAAW;kBACXC,QAAQ,EAAEA,QAAQ,IAAIA,QAAQ,CAAC8D,IAAI,CAAC;gBACtC,CAAC,CAAC;gBACF,IAAI,CAACvE,KAAK,CAACiC,KAAK,CAACuC,OAAO,CAAC;kBACvBpC,OAAO,EAAEC,8CAAsB,CAACoC;gBAClC,CAAC,CAAC;cAAC;cAAA;gBAAA,OAAAP,SAAA,CAAAL,IAAA;YAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;MAAA,SAAAW,QAAAC,EAAA;QAAA,OAAAb,SAAA,CAAA3H,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAwI,OAAA;IAAA;EAAA;IAAAtH,GAAA;IAAAxB,KAAA,WAAAgJ,eAGUpE,WAA8C,EAAE;MAC7D,IAAI,CAACkE,OAAO,CAAC;QACXlE,WAAW,EAAXA;MACF,CAAC,CAAC;IACJ;EAAC;IAAApD,GAAA;IAAAxB,KAAA,WAAAiJ,YAEWpE,QAAwC,EAAE;MACpD,IAAI,CAACiE,OAAO,CAAC;QACXjE,QAAQ,EAARA;MACF,CAAC,CAAC;IACJ;EAAC;IAAArD,GAAA;IAAA0H,GAAA,WAAAA,IAAA,EAjI8B;MAC7B,OACG,IAAI,CAACxD,IAAI,CAACd,WAAW,IACtB,IAAI,CAACR,KAAK,CAACG,aAAa,CAACmD,OAAO,IAChC,IAAI;IAER;EAAC;IAAAlG,GAAA;IAAA0H,GAAA,WAAAA,IAAA,EAEc;MACb,OAAO,IAAI,CAACxD,IAAI,CAACb,QAAQ,IAAI,EAAE;IACjC;EAAC;IAAArD,GAAA;IAAA0H,GAAA,WAAAA,IAAA,EAoCiD;MAChD,IAAM5E,KAAK,GAAG,IAAI,CAACF,KAAK,CAACC,WAAW,CAACC,KAAK;MAC1C,IAAME,OAAO,GAAG,IAAI,CAACJ,KAAK,CAACG,aAAa,CAACC,OAAO;MAChD,IAAIF,KAAK,IAAIA,KAAK,CAAChD,MAAM,GAAG,CAAC,EAAE;QAC7B,OAAOgD,KAAK;MACd;MACA,OAAOE,OAAO,GAAG,CAACA,OAAO,CAAC,GAAG,EAAE;IACjC;EAAC;IAAAhD,GAAA;IAAA0H,GAAA,WAAAA,IAAA,EA+EwB;MACvB,IAAMrB,mBAAmB,GACvB,CAAC,CAAC,IAAI,CAACzD,KAAK,CAACuD,KAAK,CAACC,WAAW,CAACC,mBAAmB;MACpD,IAAMsB,gBAAgB,GAAG,IAAI,CAACzE,kBAAkB,CAACpD,MAAM,GAAG,CAAC;MAC3D,IAAM8H,QAAQ,GACZ,IAAI,CAAC1E,kBAAkB,CAACpD,MAAM,KAAK,CAAC,KACnC,IAAI,CAACoD,kBAAkB,CAAC,CAAC,CAAC,CAACgD,OAAO,KAAK,IAAI,IAC1C,IAAI,CAAChD,kBAAkB,CAAC,CAAC,CAAC,CAACgD,OAAO,KAAK,IAAI,CAAC;MAChD,IAAM3C,YAAY,GAAG,IAAI,CAACX,KAAK,CAACU,WAAW,CAACC,YAAY;MAExD,OACE8C,mBAAmB,KAAKsB,gBAAgB,IAAIpE,YAAY,IAAIqE,QAAQ,CAAC;IAEzE;EAAC;IAAA5H,GAAA;IAAA0H,GAAA,WAAAA,IAAA,EAMmB;MAAA,IAAAG,MAAA;MAClB,IAAMC,WAAW,GAAG,IAAI,CAAC5E,kBAAkB,CAAC8C,IAAI,CAC9C,UAAChD,OAAO;QAAA,OAAKA,OAAO,CAACkD,OAAO,KAAK2B,MAAI,CAACzE,WAAW;MAAA,CACnD,CAAC;MACD,IAAM2E,aAAa,GAAID,WAAW,IAAIA,WAAW,CAACE,EAAE,IAAK,GAAG;MAC5D,OAAOD,aAAa;IACtB;EAAC;IAAA/H,GAAA;IAAA0H,GAAA,WAAAA,IAAA,EAQqB;MACpB,IAAMnE,YAAY,GAAG,IAAI,CAACX,KAAK,CAACU,WAAW,CAACC,YAAY;MACxD,IAAIA,YAAY,IAAI,IAAAiD,eAAQ,EAAC,IAAI,CAACpD,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;QAClE;MACF;MAEA,IAAI,IAAI,CAACC,QAAQ,EAAE;QACjB,OAAO,IAAI,CAACA,QAAQ;MACtB;MAEA,IAAM4E,WAAW,GAAG,IAAAC,uCAAqB,EAAC,IAAI,CAAC9E,WAA0B,CAAC;MAAC,IAAA+E,qBAAA,GAEzE,IAAI,CAACvF,KAAK,CAACwF,oBAAoB;QADzBC,aAAa,GAAAF,qBAAA,CAAbE,aAAa;QAAEC,iBAAiB,GAAAH,qBAAA,CAAjBG,iBAAiB;MAGxC,IAAMC,qBAAqB,GACzB,CAAAD,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEE,WAAW,KAC9B,IAAAC,kCAAgB,EAACH,iBAAiB,CAACE,WAAW,CAAC,CAACE,kBAAkB;MACpE,IAAMC,wBAAwB,GAC5B,CAAAN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEG,WAAW,KAC1B,IAAAC,kCAAgB,EAACJ,aAAa,CAACG,WAAW,CAAC,CAACE,kBAAkB;MAEhE,IAAME,uBAAuB,GAC3BD,wBAAwB,KAAKV,WAAW,IACxCM,qBAAqB,KAAKN,WAAW;MACvC,IAAIW,uBAAuB,EAAE;QAC3B,OAAO,IAAI,CAAChG,KAAK,CAACY,uBAAuB,CAACC,eAAe;MAC3D;IACF;EAAC;EAAA,OAAArB,cAAA;AAAA,EAhNiCyG,gBAAU,IAAAjL,WAAA,GAAAgE,yBAAA,CAAAjE,OAAA,CAAAuC,SAAA,WAS3C4I,aAAO,EACPC,WAAK;EAAAxJ,YAAA;EAAAD,UAAA;EAAAE,QAAA;EAAAC,WAAA,WAAAA,YAAA;IAAA,IAAAuJ,sBAAA;IAAA,OACC;MACL5F,WAAW,EAAE,EAAA4F,sBAAA,OAAI,CAACpG,KAAK,CAACG,aAAa,cAAAiG,sBAAA,uBAAxBA,sBAAA,CAA0B9C,OAAO,KAAI,EAAE;MACpD7C,QAAQ,EAAE;IACZ,CAAC;EAAA;AAAA,IAAAzB,yBAAA,CAAAjE,OAAA,CAAAuC,SAAA,eAcA+I,YAAM,GAAA7J,MAAA,CAAA8J,wBAAA,CAAAvL,OAAA,CAAAuC,SAAA,eAAAvC,OAAA,CAAAuC,SAAA,GAAA0B,yBAAA,CAAAjE,OAAA,CAAAuC,SAAA,yBAAA5C,KAAA,GAAA8B,MAAA,CAAA8J,wBAAA,CAAAvL,OAAA,CAAAuC,SAAA,yBAAAvC,OAAA,CAAAuC,SAAA,GAAA0B,yBAAA,CAAAjE,OAAA,CAAAuC,SAAA,0BAmDNiJ,gBAAO,GAAA/J,MAAA,CAAA8J,wBAAA,CAAAvL,OAAA,CAAAuC,SAAA,0BAAAvC,OAAA,CAAAuC,SAAA,GAAA0B,yBAAA,CAAAjE,OAAA,CAAAuC,SAAA,cAsCPiJ,gBAAO,GAAA/J,MAAA,CAAA8J,wBAAA,CAAAvL,OAAA,CAAAuC,SAAA,cAAAvC,OAAA,CAAAuC,SAAA,GAAA0B,yBAAA,CAAAjE,OAAA,CAAAuC,SAAA,yBAAA3C,KAAA,GAAA6B,MAAA,CAAA8J,wBAAA,CAAAvL,OAAA,CAAAuC,SAAA,yBAAAvC,OAAA,CAAAuC,SAAA,GAAA0B,yBAAA,CAAAjE,OAAA,CAAAuC,SAAA,oBAAA1C,KAAA,GAAA4B,MAAA,CAAA8J,wBAAA,CAAAvL,OAAA,CAAAuC,SAAA,oBAAAvC,OAAA,CAAAuC,SAAA,GAAA0B,yBAAA,CAAAjE,OAAA,CAAAuC,SAAA,sBAAAzC,KAAA,GAAA2B,MAAA,CAAA8J,wBAAA,CAAAvL,OAAA,CAAAuC,SAAA,sBAAAvC,OAAA,CAAAuC,SAAA,IAAAvC,OAAA,MAAAD,MAAA;AAAA0L,OAAA,CAAAhH,cAAA,GAAAA,cAAA","ignoreList":[]}