{"version":3,"file":"RegionSettings.js","names":["_libphonenumberJs","require","_ramda","_core","_di","_proxify","_validateAreaCode","_interopRequireDefault","_regionSettingsMessages","_dec","_dec2","_dec3","_dec4","_dec5","_class","_class2","_descriptor","obj","__esModule","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_initializerDefineProperty","target","property","descriptor","context","Object","defineProperty","enumerable","configurable","writable","initializer","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","length","_toPropertyKey","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","desc","keys","forEach","slice","reverse","reduce","decorator","_initializerWarningHelper","Error","RegionSettings","Module","name","deps","dep","optional","computed","that","_deps","dialingPlan","plans","extensionInfo","country","_ref","availableCountries","_ref2","countryCode","_that$_deps$extension","areaCode","appFeatures","isEDPEnabled","extensionNumberAreaCode","defaultAreaCode","_RcModuleV","_super","_this","enableCache","storageKey","_setData","_ref3","_ref3$countryCode","data","_ref3$areaCode","onInitOnce","_this2","watch","ready","tabManager","active","checkRegionSettings","onInit","_alertSettingsChanged","alert","warning","allowDuplicates","message","regionSettingsMessages","dialingPlansChanged","ttl","_checkRegionSettings","regeneratorRuntime","mark","_callee","_this3","_this$_deps$brand$bra","_this$_deps$regionSet","wrap","_callee$","_context","prev","next","find","plan","isoCode","brand","brandConfig","allowRegionSettings","regionSettingsOptions","suppressSettingsChangedWarning","includes","stop","_setData2","_callee2","_ref4","_callee2$","_context2","validateAreaCode","danger","areaCodeInvalid","abrupt","trim","success","saveSuccess","setData","_x","setCountryCode","setAreaCode","get","hasMultiplePlans","isUSOrCA","_this4","homeCountry","homeCountryId","id","callingCode","getCountryCallingCode","_this$_deps$extension","extensionPhoneNumber","primaryNumber","mainCompanyNumber","mainNumberCallingCode","phoneNumber","parsePhoneNumber","countryCallingCode","primaryNumberCallingCode","canUseExtensionAreaCode","_this$_deps$extension2","RcModuleV2","storage","state","_this$_deps$extension3","action","getOwnPropertyDescriptor","proxify","exports"],"sources":["modules/RegionSettings/RegionSettings.ts"],"sourcesContent":["import type CountryInfoShortModel from '@rc-ex/core/lib/definitions/CountryInfoShortModel';\nimport type { CountryCode } from 'libphonenumber-js';\nimport { getCountryCallingCode, parsePhoneNumber } from 'libphonenumber-js';\nimport { find, includes } from 'ramda';\n\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  watch,\n} from '@ringcentral-integration/core';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport validateAreaCode from '../../lib/validateAreaCode';\nimport type { Deps, RegionSettingsData } from './RegionSettings.interface';\nimport { regionSettingsMessages } from './regionSettingsMessages';\n\n@Module({\n  name: 'RegionSettings',\n  deps: [\n    'Brand',\n    'Alert',\n    'DialingPlan',\n    'ExtensionInfo',\n    'Storage',\n    'ExtensionPhoneNumber',\n    'AppFeatures',\n    { dep: 'ExtensionNumberAreaCode', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'RegionSettingsOptions', optional: true },\n  ],\n})\nexport class RegionSettings extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'RegionSettings',\n    });\n  }\n\n  @storage\n  @state\n  data = {\n    countryCode: this._deps.extensionInfo?.isoCode || '',\n    areaCode: '',\n  };\n\n  get countryCode(): CountryCode {\n    return (\n      (this.data.countryCode as CountryCode) ||\n      this._deps.extensionInfo.isoCode ||\n      'US'\n    );\n  }\n\n  get areaCode() {\n    return this.data.areaCode || '';\n  }\n\n  @action\n  _setData({\n    countryCode = this.data.countryCode,\n    areaCode = this.data.areaCode,\n  }: RegionSettingsData) {\n    this.data.countryCode = countryCode;\n    this.data.areaCode = areaCode;\n  }\n\n  override onInitOnce() {\n    watch(\n      this,\n      () => this.availableCountries,\n      () => {\n        if (\n          this.ready &&\n          (!this._deps.tabManager || this._deps.tabManager.active)\n        ) {\n          this.checkRegionSettings();\n        }\n      },\n    );\n  }\n\n  override onInit() {\n    if (!this._deps.tabManager || this._deps.tabManager.active) {\n      this.checkRegionSettings();\n    }\n  }\n\n  @computed((that: RegionSettings) => [\n    that._deps.dialingPlan.plans,\n    that._deps.extensionInfo.country,\n  ])\n  get availableCountries(): CountryInfoShortModel[] {\n    const plans = this._deps.dialingPlan.plans;\n    const country = this._deps.extensionInfo.country;\n    if (plans && plans.length > 0) {\n      return plans;\n    }\n    return country ? [country] : [];\n  }\n\n  _alertSettingsChanged() {\n    this._deps.alert.warning({\n      allowDuplicates: false,\n      message: regionSettingsMessages.dialingPlansChanged,\n      ttl: 0,\n    });\n  }\n\n  @proxify\n  async checkRegionSettings() {\n    let countryCode: CountryCode | null = this.countryCode;\n\n    if (\n      countryCode &&\n      !find((plan) => plan.isoCode === countryCode, this.availableCountries)\n    ) {\n      countryCode = null;\n      if (\n        this._deps.brand.brandConfig?.allowRegionSettings &&\n        !this._deps.regionSettingsOptions?.suppressSettingsChangedWarning\n      ) {\n        this._alertSettingsChanged();\n      }\n    }\n\n    if (!countryCode) {\n      const country =\n        find(\n          (plan) => plan.isoCode === this._deps.extensionInfo.country.isoCode,\n          this.availableCountries,\n        ) || this.availableCountries[0];\n\n      this._setData({\n        countryCode: country?.isoCode,\n        areaCode: '',\n      });\n    }\n\n    const isEDPEnabled = this._deps.appFeatures.isEDPEnabled;\n    if (isEDPEnabled && includes(this.countryCode, ['US', 'PR', 'CA'])) {\n      this._setData({\n        areaCode: '',\n      });\n    }\n  }\n\n  @proxify\n  async setData({ areaCode, countryCode }: RegionSettingsData) {\n    const isEDPEnabled = this._deps.appFeatures.isEDPEnabled;\n    if (!isEDPEnabled && !validateAreaCode(areaCode)) {\n      this._deps.alert.danger({\n        message: regionSettingsMessages.areaCodeInvalid,\n      });\n      return;\n    }\n    this._setData({\n      countryCode,\n      areaCode: areaCode && areaCode.trim(),\n    });\n    this._deps.alert.success({\n      message: regionSettingsMessages.saveSuccess,\n    });\n  }\n\n  setCountryCode(countryCode: RegionSettingsData['countryCode']) {\n    this.setData({\n      countryCode,\n    });\n  }\n\n  setAreaCode(areaCode: RegionSettingsData['areaCode']) {\n    this.setData({\n      areaCode,\n    });\n  }\n\n  @computed(({ availableCountries }: RegionSettings) => [availableCountries])\n  get showRegionSettings() {\n    const allowRegionSettings =\n      !!this._deps.brand.brandConfig.allowRegionSettings;\n    const hasMultiplePlans = this.availableCountries.length > 1;\n    const isUSOrCA =\n      this.availableCountries.length === 1 &&\n      (this.availableCountries[0].isoCode === 'US' ||\n        this.availableCountries[0].isoCode === 'CA');\n    const isEDPEnabled = this._deps.appFeatures.isEDPEnabled;\n\n    return (\n      allowRegionSettings && (hasMultiplePlans || isEDPEnabled || isUSOrCA)\n    );\n  }\n\n  @computed(({ availableCountries, countryCode }: RegionSettings) => [\n    availableCountries,\n    countryCode,\n  ])\n  get homeCountryId() {\n    const homeCountry = this.availableCountries.find(\n      (country) => country.isoCode === this.countryCode,\n    );\n    const homeCountryId = (homeCountry && homeCountry.id) || '1';\n    return homeCountryId;\n  }\n\n  @computed((that: RegionSettings) => [\n    that.areaCode,\n    that.countryCode,\n    that._deps.appFeatures.isEDPEnabled,\n    that._deps.extensionNumberAreaCode?.defaultAreaCode,\n  ])\n  get defaultAreaCode() {\n    const isEDPEnabled = this._deps.appFeatures.isEDPEnabled;\n    if (isEDPEnabled && includes(this.countryCode, ['US', 'PR', 'CA'])) {\n      return;\n    }\n\n    if (this.areaCode) {\n      return this.areaCode;\n    }\n\n    const callingCode = getCountryCallingCode(this.countryCode as CountryCode);\n    const { primaryNumber, mainCompanyNumber } =\n      this._deps.extensionPhoneNumber;\n\n    const mainNumberCallingCode =\n      mainCompanyNumber?.phoneNumber &&\n      parsePhoneNumber(mainCompanyNumber.phoneNumber).countryCallingCode;\n    const primaryNumberCallingCode =\n      primaryNumber?.phoneNumber &&\n      parsePhoneNumber(primaryNumber.phoneNumber).countryCallingCode;\n\n    const canUseExtensionAreaCode =\n      primaryNumberCallingCode === callingCode ||\n      mainNumberCallingCode === callingCode;\n    if (canUseExtensionAreaCode) {\n      return this._deps.extensionNumberAreaCode?.defaultAreaCode;\n    }\n  }\n}\n"],"mappings":"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"}