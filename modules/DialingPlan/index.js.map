{"version":3,"sources":["modules/DialingPlan/index.ts"],"names":["DialingPlan","deps","dep","optional","client","extensionFeatures","options","polling","fetchFunction","params","platform","service","get","response","json","map","p","id","isoCode","callingCode","readyCheckFn","_extensionFeatures","ready","state","status","moduleStatuses","features","ReadCompanyInfo","available","DataFetcher","selector","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaqBA,W;AAXrB;AACA;AACA;AACA;OACC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAHI;AADA,CAAP,C;;;;;AAQC;AACF;AACA;AACA;AACA;AACE,6BAAuD;AAAA;;AAAA,QAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,QAAjCC,iBAAiC,QAAjCA,iBAAiC;AAAA,QAAXC,OAAW;;AAAA;;AACrD;AACEF,MAAAA,MAAM,EAANA,MADF;AAEEG,MAAAA,OAAO,EAAE,IAFX;AAGEC,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEL;AAAA,wFAAU,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,8BAAAA,QADQ,GACGN,MAAM,CAACO,OAAP,CAAeD,QAAf,EADH;AAAA;AAAA,qCAESA,QAAQ,CAACE,GAAT,CACrB,sCADqB,EAErBH,MAFqB,CAFT;;AAAA;AAERI,8BAAAA,QAFQ;AAAA,+DAMPA,QAAQ,CAACC,IAAT,EANO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAV;;AAAA;AAAA;AAAA;AAAA,sBAFK;;AAAA;AAAA,mEAUXC,GAVW,CAUP,UAACC,CAAD;AAAA,2BAAQ;AACZC,sBAAAA,EAAE,EAAED,CAAC,CAACC,EADM;AAEZC,sBAAAA,OAAO,EAAEF,CAAC,CAACE,OAFC;AAGZC,sBAAAA,WAAW,EAAEH,CAAC,CAACG;AAHH,qBAAR;AAAA,mBAVO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAHf;AAkBEC,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,kBAAL,CAAwBC,KAA9B;AAAA;AAlBhB,OAmBKhB,OAnBL;;AADqD;;AAuBrD,UAAKe,kBAAL,GAA0BhB,iBAA1B;AAvBqD;AAwBtD;;;;wBAEW;AACV,aAAO,aAAP;AACD;;;wBAKY;AACX,aAAO,KAAKkB,KAAL,CAAWC,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,KAAL,CAAWC,MAAX,KAAsBC,2BAAeH,KAA5C;AACD;;;wBAEoB;AAAA;;AACnB,aAAO,CAAC,2BAAC,KAAKD,kBAAL,CAAwBK,QAAzB,oFAAC,sBAAkCC,eAAnC,2DAAC,uBAAmDC,SAApD,CAAR;AACD;;;;EAjDsCC,wB,yEAoCtCC,kB;;;;;;;WACO,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C","sourcesContent":["import moduleStatuses from '../../enums/moduleStatuses';\nimport DataFetcher from '../../lib/DataFetcher';\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport { selector } from '../../lib/selector';\n\n/**\n * @class\n * @description Dial plan list managing module\n */\n@Module({\n  deps: [\n    'Client',\n    'ExtensionFeatures',\n    { dep: 'DialingPlanOptions', optional: true },\n  ],\n})\nexport default class DialingPlan extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, extensionFeatures, ...options }) {\n    super({\n      client,\n      polling: true,\n      fetchFunction: async () =>\n        (\n          await fetchList(async (params) => {\n            const platform = client.service.platform();\n            const response = await platform.get(\n              '/restapi/v1.0/account/~/dialing-plan',\n              params,\n            );\n            return response.json();\n          })\n        ).map((p) => ({\n          id: p.id,\n          isoCode: p.isoCode,\n          callingCode: p.callingCode,\n        })),\n      readyCheckFn: () => this._extensionFeatures.ready,\n      ...options,\n    });\n\n    this._extensionFeatures = extensionFeatures;\n  }\n\n  get _name() {\n    return 'dialingPlan';\n  }\n\n  @selector\n  plans = [() => this.data, (data) => data || []];\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get _hasPermission() {\n    return !!this._extensionFeatures.features?.ReadCompanyInfo?.available;\n  }\n}\n"],"file":"index.js"}