{"version":3,"sources":["modules/ConversationUI/ConversationUI.ts"],"names":["ConversationUI","name","deps","dep","optional","params","enableContactFallback","showGroupNumberName","supportAttachment","perPage","inputExpandable","_deps","brand","locale","conversationLogger","dateTimeFormat","contactMatcher","regionSettings","conversations","rateLimiter","connectivityMonitor","appFeatures","disableLinks","throttling","connectivity","showSpinner","ready","currentConversation","hasInputContent","messageText","length","attachments","currentLocale","conversationId","sendButtonDisabled","pushing","areaCode","countryCode","recipients","messages","conversation","autoLog","loadingNextPage","loadingOldMessages","enableCDC","isCDCEnabled","dateTimeFormatter","onLogConversation","conversationsPath","renderExtraButton","routerInteraction","messageStore","getMatcherContactName","getMatcherContactList","getMatcherContactNameList","phoneNumber","matcherNames","dataMapping","map","matcher","phoneNumbers","phoneType","join","replyToReceivers","text","unloadConversation","loadConversation","id","updateMessageText","addAttachment","attachment","removeAttachment","options","formatDateTime","formatPhone","redirect","logConversation","goBack","push","readMessages","loadPreviousMessages","fetchOldMessages","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { formatNumber } from '@ringcentral-integration/commons/lib/formatNumber';\nimport { FormatDateTimeOptions } from '@ringcentral-integration/commons/modules/DateTimeFormatV2';\nimport { Attachment } from '@ringcentral-integration/commons/modules/MessageSenderV2';\nimport {\n  RcUIModuleV2,\n  UIFunctions,\n  UIProps,\n} from '@ringcentral-integration/core';\n\nimport {\n  ConversationContainerProps,\n  ConversationPanelProps,\n  Deps,\n  OnLogConversationOptions,\n} from './ConversationUI.interface';\n\n@Module({\n  name: 'ConversationUI',\n  deps: [\n    'AppFeatures',\n    'Brand',\n    'Locale',\n    'DateTimeFormat',\n    'RegionSettings',\n    'Conversations',\n    'RateLimiter',\n    'ConnectivityMonitor',\n    'MessageStore',\n    'RouterInteraction',\n    { dep: 'ConversationLogger', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'ConversationUIOptions', optional: true },\n  ],\n})\nexport class ConversationUI<T> extends RcUIModuleV2<Deps & T> {\n  constructor(deps: Deps & T) {\n    super({\n      deps,\n    });\n  }\n\n  getUIProps({\n    params,\n    enableContactFallback = false,\n    showGroupNumberName = false,\n    supportAttachment = false,\n    perPage = 20,\n    inputExpandable,\n  }: ConversationContainerProps): UIProps<ConversationPanelProps> {\n    const {\n      brand,\n      locale,\n      conversationLogger,\n      dateTimeFormat,\n      contactMatcher,\n      regionSettings,\n      conversations,\n      rateLimiter,\n      connectivityMonitor,\n      appFeatures,\n    } = this._deps;\n    const disableLinks =\n      rateLimiter.throttling || !connectivityMonitor.connectivity;\n    const showSpinner = !(\n      dateTimeFormat.ready &&\n      (!contactMatcher || contactMatcher.ready) &&\n      regionSettings.ready &&\n      conversations.ready &&\n      rateLimiter.ready &&\n      connectivityMonitor.ready &&\n      (!conversationLogger || conversationLogger.ready)\n    );\n    const currentConversation = conversations.currentConversation;\n    const hasInputContent =\n      conversations.messageText.length > 0 ||\n      (conversations.attachments && conversations.attachments.length > 0);\n    return {\n      brand: brand.name,\n      enableContactFallback,\n      showGroupNumberName,\n      supportAttachment,\n      currentLocale: locale.currentLocale,\n      conversationId: params.conversationId,\n      sendButtonDisabled:\n        conversations.pushing ||\n        disableLinks ||\n        !hasInputContent ||\n        showSpinner,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n      showSpinner,\n      recipients: currentConversation.recipients,\n      messages: currentConversation.messages,\n      messageText: conversations.messageText,\n      attachments: conversations.attachments,\n      conversation: currentConversation,\n      disableLinks,\n      autoLog: !!conversationLogger?.autoLog,\n      perPage,\n      loadingNextPage: conversations.loadingOldMessages,\n      inputExpandable,\n      enableCDC: appFeatures.isCDCEnabled,\n    };\n  }\n\n  getUIFunctions({\n    dateTimeFormatter,\n    onLogConversation,\n    conversationsPath = '/messages',\n    renderExtraButton,\n  }: ConversationContainerProps): UIFunctions<ConversationPanelProps> {\n    const {\n      contactMatcher,\n      dateTimeFormat,\n      routerInteraction,\n      conversationLogger,\n      regionSettings,\n      conversations,\n      messageStore,\n    } = this._deps;\n    let getMatcherContactName: ConversationPanelProps['getMatcherContactName'];\n    let getMatcherContactList: ConversationPanelProps['getMatcherContactList'];\n    let getMatcherContactNameList: ConversationPanelProps['getMatcherContactNameList'];\n    if (contactMatcher && contactMatcher.ready) {\n      getMatcherContactList = (phoneNumber) => {\n        const matcherNames = contactMatcher.dataMapping[phoneNumber];\n        if (matcherNames?.length > 0) {\n          return matcherNames.map(\n            (matcher) =>\n              `${matcher.name} | ${matcher.phoneNumbers[0].phoneType}`,\n          );\n        }\n        return [];\n      };\n      getMatcherContactNameList = (phoneNumber) => {\n        const matcherNames = contactMatcher.dataMapping[phoneNumber];\n        if (matcherNames?.length > 0) {\n          return matcherNames.map((matcher) => matcher.name);\n        }\n        return [];\n      };\n      getMatcherContactName = (phoneNumber) => {\n        const matcherNames = getMatcherContactNameList(phoneNumber);\n        return matcherNames?.length > 0 ? matcherNames.join('&') : null;\n      };\n    }\n\n    return {\n      replyToReceivers: (text: string, attachments?: Attachment[]) =>\n        conversations.replyToReceivers(text, attachments),\n      unloadConversation: () => conversations.unloadConversation(),\n      loadConversation: (id: string) => conversations.loadConversation(id),\n      updateMessageText: (text: string) =>\n        conversations.updateMessageText(text),\n      addAttachment: (attachment: Attachment) =>\n        conversations.addAttachment(attachment),\n      removeAttachment: (attachment: Attachment) =>\n        conversations.removeAttachment(attachment),\n      dateTimeFormatter:\n        dateTimeFormatter ??\n        ((options: Partial<FormatDateTimeOptions>) =>\n          dateTimeFormat.formatDateTime(options)),\n      formatPhone: (phoneNumber: string) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: regionSettings.areaCode,\n          countryCode: regionSettings.countryCode,\n        }),\n      getMatcherContactName,\n      getMatcherContactList,\n      getMatcherContactNameList,\n      onLogConversation:\n        onLogConversation ||\n        (conversationLogger &&\n          (async ({\n            redirect = true,\n            ...options\n          }: OnLogConversationOptions) => {\n            await conversationLogger.logConversation({\n              ...options,\n              redirect,\n            });\n          })),\n      goBack() {\n        routerInteraction.push(conversationsPath);\n      },\n      readMessages(id: string) {\n        messageStore.readMessages(id);\n      },\n      loadPreviousMessages() {\n        conversations.fetchOldMessages();\n      },\n      renderExtraButton,\n    };\n  }\n}\n"],"file":"ConversationUI.js"}