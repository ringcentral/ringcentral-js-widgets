{"version":3,"file":"Auth.js","names":["_core","require","_trackEvents","_createRefreshTokenHelper","_di","_proxify","_authErrors","_authMessages","_loginStatus","_dec","_dec2","_dec3","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_objectWithoutProperties","i","_objectWithoutPropertiesLoose","n","indexOf","propertyIsEnumerable","call","hasOwnProperty","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","s","done","f","TypeError","a","u","next","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","from","_arrayLikeToArray","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","toString","slice","name","test","l","asyncGeneratorStep","c","Promise","resolve","then","_asyncToGenerator","_next","_throw","_initializerDefineProperty","initializer","_classCallCheck","_defineProperties","key","_createClass","_toPrimitive","toPrimitive","String","Number","_inherits","create","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","reverse","reduce","_initializerWarningHelper","Error","LoginStatusChangeEvent","exports","TriggerSyncTokenEvent","Auth","Module","deps","dep","optional","track","analytics","setUserId","trackEvents","authentication","logout","_RcModuleV","_super","_this","_loggedIn","_beforeLogoutHandlers","Set","_afterLoggedInHandlers","_onRefreshErrorHandlers","_unbindEvents","_lastEnvironmentCounter","refreshTokenHelper","createRefreshTokenHelper","_deps","client","service","platform","console","_setToken","token","triggerSyncToken","undefined","ownerId","owner_id","endpointId","endpoint_id","accessToken","access_token","tokenType","token_type","expireTime","expire_time","expiresIn","expires_in","scope","_triggerSyncToken","setLoginSuccess","loginStatus","loggedIn","setLoginError","notLoggedIn","isFreshLogin","setLogoutSuccess","setRefreshSuccess","setRefreshError","refreshTokenValid","setLogoutError","setLogin","loggingIn","setBeforeLogout","beforeLogout","setCancelLogout","setLogout","loggingOut","setInitLogin","_ref","_bindEvents","_this2","onRequestError","_ref2","regeneratorRuntime","mark","_callee","error","matches","logoutRequired","alerts","wrap","_callee$","_context","prev","matchKnownRequestErrors","sent","some","_ref3","_ref4","_0","_1","solutions","map","_ref5","_ref6","alert","x","index","array","warning","message","payload","ttl","stop","_x","onLoginSuccess","_ref7","_callee2","handlers","_iterator","_step","handler","_callee2$","_context2","auth","data","err","onLoginError","onLogoutSuccess","onLogoutError","_cache","clean","onRefreshSuccess","_ref8","_callee3","_callee3$","_context3","onRefreshError","_ref9","_callee5","_yield$_this2$refresh","resStatus","results","_callee5$","_context5","getRefreshTokenState","allSettled","_ref10","_callee4","_callee4$","_context4","abrupt","_x3","status","warn","reason","processRefreshError","onSessionExpired","danger","authMessages","sessionExpired","_x2","addListener","events","loginSuccess","loginError","logoutSuccess","logoutError","refreshSuccess","refreshError","requestError","removeListener","_shouldInit","pending","locale","ready","tabManager","environment","_onStateChange","_callee6","_this$_deps$tabManage","_this$_deps$tabManage2","_callee6$","_context6","send","event","args","fetchToken","changeCounter","onStateChange","_onInit","_callee7","_this3","_callee7$","_context7","watch","_this3$_deps$tabManag","_this3$_deps$tabManag2","_this3$_deps$tabManag3","_this3$_deps$tabManag4","onInit","_fetchToken","_callee8","_callee8$","_context8","t0","_login","_callee9","_ref11","username","password","extension","remember","code","redirectUri","tokenUri","discoveryUri","extensionData","_callee9$","_context9","setData","refresh_token_expires_in","account","get","id","_redirectUri","login","token_uri","discovery_uri","_x4","_refreshToken","_callee10","resp","_callee10$","_context10","refresh","json","refreshToken","getLoginUrl","_ref12","force","_ref12$implicit","implicit","options","concat","loginUrl","usePKCE","_logout","_callee12","_this4","_ref13","_ref13$dismissAllAler","dismissAllAlert","_this$_deps$rateLimit","_iterator2","_step2","_loop","_ret","_args13","_callee12$","_context13","dismissAllExpectSpecified","specifiedAlertIds","rateLimiter","rateLimitAlertId","result","_loop$","_context12","_callee11","_callee11$","_context11","v","reject","delegateYield","t1","finish","t2","isImplicit","addBeforeLogoutHandler","_this5","add","removeBeforeLogoutHandler","addAfterLoggedInHandler","_this6","removeAfterLoggedInHandler","addRefreshErrorHandler","_this7","removeRefreshErrorHandler","_refreshImplicitToken","_callee13","_ref15","newAuthData","_callee13$","_context14","emit","refreshImplicitToken","_x5","_checkIsLoggedIn","_callee14","_callee14$","_context15","checkIsLoggedIn","_clientSecret","_this$_deps$authOptio","_this$_deps$authOptio2","authOptions","RcModuleV2","state","action","proxify"],"sources":["modules/Auth/Auth.ts"],"sourcesContent":["import {\n  action,\n  RcModuleV2,\n  state,\n  track,\n  watch,\n} from '@ringcentral-integration/core';\nimport type { ApiError } from '@ringcentral/sdk';\n\nimport { trackEvents } from '../../enums/trackEvents';\nimport { createRefreshTokenHelper } from '../../lib/createRefreshTokenHelper';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\n\nimport type {\n  Deps,\n  LoginOptions,\n  LoginUrlOptions,\n  Token,\n  TokenInfo,\n  BeforeLogoutHandler,\n  AfterLoggedInHandler,\n  RefreshErrorHandler,\n} from './Auth.interface';\nimport { matchKnownRequestErrors } from './authErrors';\nimport { authMessages } from './authMessages';\nimport { loginStatus } from './loginStatus';\n\nexport const LoginStatusChangeEvent = 'loginStatusChange';\nexport const TriggerSyncTokenEvent = 'triggerSyncTokenEvent';\n\n@Module({\n  name: 'Auth',\n  deps: [\n    'Client',\n    'Alert',\n    'Locale',\n    { dep: 'TabManager', optional: true },\n    { dep: 'RateLimiter', optional: true },\n    { dep: 'Environment', optional: true },\n    { dep: 'AuthOptions', optional: true },\n  ],\n})\nclass Auth extends RcModuleV2<Deps> {\n  private _loggedIn = false;\n  _beforeLogoutHandlers: Set<BeforeLogoutHandler> = new Set();\n  _afterLoggedInHandlers: Set<AfterLoggedInHandler> = new Set();\n  _onRefreshErrorHandlers: Set<RefreshErrorHandler> = new Set();\n  _unbindEvents?: () => void;\n  _lastEnvironmentCounter = 0;\n\n  private refreshTokenHelper = createRefreshTokenHelper(\n    () => this._deps.client.service.platform(),\n    console,\n  );\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  @state\n  loginStatus: string | null = null;\n\n  @state\n  isFreshLogin: boolean | null = null;\n\n  @state\n  token: Token = {};\n\n  @state\n  protected _triggerSyncToken = false;\n\n  @action\n  _setToken(token: TokenInfo, triggerSyncToken = true) {\n    this.token = {\n      ownerId: token.owner_id,\n      endpointId: token.endpoint_id,\n      accessToken: token.access_token,\n      tokenType: token.token_type,\n      expireTime: token.expire_time,\n      expiresIn: token.expires_in,\n      scope: token.scope,\n    };\n    this._triggerSyncToken = triggerSyncToken;\n  }\n\n  @track(() => (analytics) => {\n    // @ts-expect-error TS(2339): Property 'setUserId' does not exist on type 'IAnal... Remove this comment to see the full error message\n    analytics.setUserId();\n    return [trackEvents.authentication];\n  })\n  @action\n  setLoginSuccess(token: TokenInfo) {\n    this.loginStatus = loginStatus.loggedIn;\n    this._setToken(token);\n  }\n\n  @action\n  setLoginError() {\n    this.loginStatus = loginStatus.notLoggedIn;\n    this._setToken({});\n    this.isFreshLogin = null;\n  }\n\n  @action\n  setLogoutSuccess() {\n    this.loginStatus = loginStatus.notLoggedIn;\n    this._setToken({});\n    this.isFreshLogin = null;\n  }\n\n  @action\n  setRefreshSuccess(token: TokenInfo) {\n    this.loginStatus = loginStatus.loggedIn;\n    this._setToken(token);\n  }\n\n  @action\n  setRefreshError(refreshTokenValid: boolean) {\n    this.isFreshLogin = null;\n    if (!refreshTokenValid) {\n      this._setToken({});\n      this.loginStatus = loginStatus.notLoggedIn;\n    }\n  }\n\n  @action\n  setLogoutError() {\n    this.loginStatus = loginStatus.notLoggedIn;\n    this._setToken({});\n    this.isFreshLogin = null;\n  }\n\n  @action\n  setLogin() {\n    this.loginStatus = loginStatus.loggingIn;\n    this.isFreshLogin = true;\n  }\n\n  @action\n  setBeforeLogout() {\n    this.loginStatus = loginStatus.beforeLogout;\n  }\n\n  @action\n  setCancelLogout() {\n    this.loginStatus = loginStatus.loggedIn;\n  }\n\n  @track(trackEvents.logout)\n  @action\n  setLogout() {\n    this.loginStatus = loginStatus.loggingOut;\n  }\n\n  @action\n  setInitLogin({ loggedIn, token }: { loggedIn: boolean; token: TokenInfo }) {\n    this.loginStatus = loggedIn\n      ? loginStatus.loggedIn\n      : loginStatus.notLoggedIn;\n    this.isFreshLogin = loggedIn ? false : null;\n    this._setToken(token ?? {}, false);\n  }\n\n  _bindEvents() {\n    if (this._unbindEvents) this._unbindEvents();\n    const platform = this._deps.client.service.platform();\n    const client = this._deps.client.service.client();\n    const onRequestError = async (error: ApiError) => {\n      const matches = await matchKnownRequestErrors(error);\n      // logout solution\n      const logoutRequired = matches.some(\n        ([_0, _1, solutions]) => solutions?.logout,\n      );\n      if (logoutRequired && this.loginStatus === loginStatus.loggedIn) {\n        await this.logout();\n      }\n      // alert solution\n      const alerts = matches\n        .map(([_0, _1, solutions]) => solutions?.alert)\n        .filter((x) => !!x) // remove empty\n        .filter((x, index, array) => array.indexOf(x) === index); // remove duplicates\n      alerts.forEach((alert) => {\n        this._deps.alert.warning({\n          message: alert!,\n          payload: error,\n          ttl: 0,\n        });\n      });\n    };\n\n    const onLoginSuccess = async () => {\n      const token: TokenInfo = await platform.auth().data();\n      this.setLoginSuccess(token);\n      const handlers = [...this._afterLoggedInHandlers];\n      for (const handler of handlers) {\n        handler();\n      }\n    };\n    const onLoginError = () => {\n      this.setLoginError();\n    };\n    const onLogoutSuccess = () => {\n      this.setLogoutSuccess();\n    };\n    const onLogoutError = () => {\n      platform._cache.clean();\n      this.setLogoutError();\n    };\n    const onRefreshSuccess = async () => {\n      const token: TokenInfo = await platform.auth().data();\n      this.setRefreshSuccess(token);\n    };\n    const onRefreshError = async (error: ApiError) => {\n      // user is still considered logged in if the refreshToken is still valid\n      const { refreshTokenValid, resStatus } =\n        await this.refreshTokenHelper.getRefreshTokenState(error);\n\n      const handlers = [...this._onRefreshErrorHandlers];\n      const results = await Promise.allSettled(\n        handlers.map(async (handler) => await handler(refreshTokenValid)),\n      );\n      results.forEach((x) => {\n        if (x.status === 'rejected') {\n          console.warn('Trigger [RefreshErrorHandler] failed', x.reason);\n        }\n      });\n\n      this.setRefreshError(refreshTokenValid);\n\n      await this.refreshTokenHelper.processRefreshError({\n        error,\n        refreshTokenValid,\n        resStatus,\n        onSessionExpired: () => {\n          this._deps.alert.danger({\n            message: authMessages.sessionExpired,\n            payload: error,\n            ttl: 0,\n          });\n        },\n      });\n    };\n    platform.addListener(platform.events.loginSuccess, onLoginSuccess);\n    platform.addListener(platform.events.loginError, onLoginError);\n    platform.addListener(platform.events.logoutSuccess, onLogoutSuccess);\n    platform.addListener(platform.events.logoutError, onLogoutError);\n    platform.addListener(platform.events.refreshSuccess, onRefreshSuccess);\n    platform.addListener(platform.events.refreshError, onRefreshError);\n    client.addListener(client.events.requestError, onRequestError);\n    this._unbindEvents = () => {\n      platform.removeListener(platform.events.loginSuccess, onLoginSuccess);\n      platform.removeListener(platform.events.loginError, onLoginError);\n      platform.removeListener(platform.events.logoutSuccess, onLogoutSuccess);\n      platform.removeListener(platform.events.logoutError, onLogoutError);\n      platform.removeListener(platform.events.refreshSuccess, onRefreshSuccess);\n      platform.removeListener(platform.events.refreshError, onRefreshError);\n      client.removeListener(client.events.requestError, onRequestError);\n    };\n  }\n\n  override _shouldInit() {\n    return (\n      this.pending &&\n      this._deps.locale.ready &&\n      (!this._deps.tabManager || this._deps.tabManager.ready) &&\n      (!this._deps.environment || this._deps.environment.ready)\n    );\n  }\n\n  override async onStateChange() {\n    if (this._deps.tabManager && this._deps.tabManager.ready && this.ready) {\n      if (\n        (this._loggedIn && this.loginStatus === loginStatus.notLoggedIn) ||\n        (!this._loggedIn && this.loginStatus === loginStatus.loggedIn)\n      ) {\n        this._loggedIn = !this._loggedIn;\n        this._deps.tabManager.send(LoginStatusChangeEvent, this._loggedIn);\n      } else if (\n        this._deps.tabManager.event &&\n        this._deps.tabManager.event.name === LoginStatusChangeEvent &&\n        this._deps.tabManager.event.args?.[0] !== this.loggedIn\n      ) {\n        /* eslint { \"prefer-destructuring\": 0 } */\n        this._loggedIn = this._deps.tabManager.event.args?.[0];\n        await this.fetchToken();\n      }\n    }\n    if (\n      this.ready &&\n      this._deps.environment &&\n      this._deps.environment.changeCounter !== this._lastEnvironmentCounter\n    ) {\n      this._lastEnvironmentCounter = this._deps.environment.changeCounter;\n      this._bindEvents();\n    }\n  }\n\n  override async onInit() {\n    this._loggedIn = await this.refreshTokenHelper.loggedIn();\n    this._bindEvents();\n    watch(\n      this,\n      () => [this.token, this._triggerSyncToken],\n      () => {\n        if (this._triggerSyncToken) {\n          this._deps.tabManager?.send(TriggerSyncTokenEvent);\n        }\n      },\n    );\n    watch(\n      this,\n      () => this._deps.tabManager?.event,\n      () => {\n        if (this._deps.tabManager?.event?.name === TriggerSyncTokenEvent) {\n          this.fetchToken();\n        }\n      },\n    );\n\n    // must check token from storage before that module ready, put that inside onInit lifeCycle\n    await this.fetchToken();\n  }\n\n  async fetchToken() {\n    const platform = this._deps.client.service.platform();\n    const token: TokenInfo = this._loggedIn\n      ? await platform.auth().data()\n      : null;\n    this.setInitLogin({\n      loggedIn: this._loggedIn,\n      token,\n    });\n  }\n\n  get ownerId() {\n    return this.token.ownerId;\n  }\n\n  get endpointId() {\n    return this.token.endpointId;\n  }\n\n  get accessToken() {\n    return this.token.accessToken;\n  }\n\n  /**\n   * @description Login either with username/password or with authorization code\n   */\n  @proxify\n  async login({\n    username,\n    password,\n    extension,\n    remember,\n    code,\n    redirectUri,\n    accessToken,\n    expiresIn,\n    endpointId,\n    tokenType,\n    scope,\n    tokenUri,\n    discoveryUri,\n  }: // TODO: should use SDK Type if that can be work\n  Partial<LoginOptions>) {\n    this.setLogin();\n    let ownerId: number | undefined;\n    if (accessToken) {\n      await this._deps.client.service.platform().auth().setData({\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n        scope,\n      });\n      const extensionData = await this._deps.client.account().extension().get();\n      ownerId = extensionData.id;\n    }\n    // TODO: support to set redirectUri in js sdk v4 login function\n    if (!this._deps.client.service.platform()._redirectUri) {\n      this._deps.client.service.platform()._redirectUri = redirectUri;\n    }\n    return this._deps.client.service.platform().login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n      endpoint_id: endpointId,\n      expires_in: expiresIn,\n      access_token: accessToken,\n      token_type: tokenType,\n      owner_id: ownerId,\n      token_uri: tokenUri,\n      discovery_uri: discoveryUri,\n    });\n  }\n\n  @proxify\n  async refreshToken() {\n    const resp = await this._deps.client.service.platform().refresh();\n    const token = await resp.json();\n    return token;\n  }\n\n  getLoginUrl({\n    redirectUri,\n    force,\n    implicit = false,\n    ...options\n  }: LoginUrlOptions) {\n    // TODO: support to set redirectUri in js sdk v4 login function\n    if (!this._deps.client.service.platform()._redirectUri) {\n      this._deps.client.service.platform()._redirectUri = redirectUri;\n    }\n    return `${this._deps.client.service.platform().loginUrl({\n      ...options,\n      redirectUri,\n      implicit,\n      usePKCE: this.usePKCE,\n    })}${force ? '&force=true' : ''}`;\n  }\n\n  /**\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  @proxify\n  async logout({ dismissAllAlert = true } = {}) {\n    this.setBeforeLogout();\n    if (dismissAllAlert) {\n      // fix bug [https://jira_domain/browse/RCINT-17381]\n      this._deps.alert.dismissAllExpectSpecified({\n        specifiedAlertIds: [this._deps.rateLimiter?.rateLimitAlertId!],\n      });\n    }\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      if (this._deps.tabManager && this._deps.tabManager.ready) {\n        this._deps.tabManager.send(LoginStatusChangeEvent, false);\n      }\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.setCancelLogout();\n          if (this._deps.tabManager && this._deps.tabManager.ready) {\n            this._deps.tabManager.send(LoginStatusChangeEvent, true);\n          }\n          return Promise.reject(result);\n        }\n      }\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      console.error(error);\n    }\n    this.setLogout();\n    if (this.isImplicit) {\n      this._deps.client.service.platform()._cache.clean();\n      this.setLogoutSuccess();\n      return null;\n    }\n    return this._deps.client.service.platform().logout();\n  }\n\n  /**\n   * Add handler on \"before logout\" event\n   * - Return anything not empty in the handler to cancel the logout as needed\n   * @param handler event handler function\n   * @returns cancel current handler, call that will delete the handler from that event\n   */\n  addBeforeLogoutHandler(handler: BeforeLogoutHandler) {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n  /**\n   * Remove handler from \"before logout\" event\n   * @param handler event handler function\n   */\n  removeBeforeLogoutHandler(handler: BeforeLogoutHandler) {\n    this._beforeLogoutHandlers.delete(handler);\n  }\n\n  /**\n   * Add handler on \"after logged in\" event\n   * @param handler event handler function\n   * @returns cancel current handler, call that will delete the handler from that event\n   */\n  addAfterLoggedInHandler(handler: AfterLoggedInHandler) {\n    this._afterLoggedInHandlers.add(handler);\n    return () => {\n      this.removeAfterLoggedInHandler(handler);\n    };\n  }\n\n  /**\n   * Remove handler from \"after logged in\" event\n   * @param handler event handler function\n   */\n  removeAfterLoggedInHandler(handler: AfterLoggedInHandler) {\n    this._afterLoggedInHandlers.delete(handler);\n  }\n\n  /**\n   * Add handler on \"refresh error\" event\n   * @param handler event handler function\n   * @returns cancel current handler, call that will delete the handler from that event\n   */\n  addRefreshErrorHandler(handler: RefreshErrorHandler) {\n    this._onRefreshErrorHandlers.add(handler);\n    return () => {\n      this.removeRefreshErrorHandler(handler);\n    };\n  }\n\n  /**\n   * Remove handler from \"refresh error\" event\n   * @param handler event handler function\n   */\n  removeRefreshErrorHandler(handler: RefreshErrorHandler) {\n    this._onRefreshErrorHandlers.delete(handler);\n  }\n\n  @proxify\n  async refreshImplicitToken({\n    tokenType,\n    accessToken,\n    expiresIn,\n    endpointId,\n  }: {\n    tokenType: TokenInfo['token_type'];\n    accessToken: TokenInfo['access_token'];\n    expiresIn: TokenInfo['expires_in'];\n    endpointId: TokenInfo['endpoint_id'];\n  }) {\n    try {\n      const extensionData = await this._deps.client.account().extension().get();\n      const ownerId = String(extensionData.id);\n      if (ownerId !== String(this.ownerId)) {\n        return;\n      }\n      const platform = this._deps.client.service.platform();\n      const newAuthData = {\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n        endpoint_id: endpointId,\n      };\n      await platform.auth().setData(newAuthData);\n      platform.emit(platform.events.refreshSuccess, newAuthData);\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      console.error('refreshImplicitToken error:', error);\n    }\n  }\n\n  @proxify\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._deps.client.service.platform().loggedIn();\n    return this.loginStatus === loginStatus.loggedIn;\n  }\n\n  get loggedIn() {\n    return (\n      this.loginStatus === loginStatus.loggedIn ||\n      this.loginStatus === loginStatus.beforeLogout\n    );\n  }\n\n  get notLoggedIn() {\n    return this.loginStatus === loginStatus.notLoggedIn;\n  }\n\n  get isImplicit() {\n    return !(\n      this.usePKCE ||\n      (this._deps.client.service.platform()._clientSecret &&\n        this._deps.client.service.platform()._clientSecret.length > 0)\n    );\n  }\n\n  get usePKCE() {\n    return this._deps.authOptions?.usePKCE ?? false;\n  }\n}\n\nexport { Auth };\n"],"mappings":"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","ignoreList":[]}