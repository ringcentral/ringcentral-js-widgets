{"version":3,"sources":["modules/Meeting/Meeting.ts"],"names":["Meeting","deps","dep","optional","_locale","currentLocale","_enableServiceWebSettings","scheduleUserSettings","_enablePersonalMeeting","personalMeeting","scheduleLockedSettings","initialMeetingSetting","defaultLockedSettings","commonUserSettings","commonPersonalMeetingSettings","extensionName","userSettings","lockedSettings","state","loginUser","extensionInfo","brand","alert","client","storage","availabilityMonitor","reducers","meetingProvider","locale","showSaveAsDefault","enableInvitationApi","enablePersonalMeeting","enableReloadAfterSchedule","enableServiceWebSettings","enableScheduleOnBehalf","enableCustomTimezone","options","actionTypes","_brand","_alert","_client","_extensionInfo","_storage","_availabilityMonitor","_lastMeetingSettingKey","_defaultMeetingSettingKey","_showSaveAsDefault","_enableInvitationApi","_personalMeetingKey","_enableReloadAfterSchedule","_enableScheduleOnBehalf","_fetchPersonMeetingTimeout","_meetingProvider","_fetchDelegatorsTimeout","_enableCustomTimezone","_createMeetingPromise","_reducer","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","pending","ready","isRCM","extensionId","Promise","all","_initPersonalMeeting","_updateServiceWebSettings","_initMeeting","dispatch","type","init","_initMeetingSettings","initScheduleFor","initSuccess","resetSuccess","update","defaultMeetingSetting","host","id","_updatePreferences","clearTimeout","fetchPersonalMeeting","meetingInfoResponse","meeting","formatPersonalMeeting","updatePersonalMeeting","console","error","resetPersonalMeeting","warn","setTimeout","setDelegators","_meeting","_combineWithSWSettings","combineWithSettings","updateMeeting","isMeetingPasswordValid","validatePasswordSettings","password","_requireMeetingPassword","_comparePreferences","usePersonalMeetingId","pmiDefaultSettings","getGeneralDefaultSettings","userExtensionId","delegators","length","hostId","user","item","updateMeetingPreferences","preferences","saveMeetingPreferencesState","isPreferencesChanged","getUserSettings","getLockedSettings","updateUserSettings","updateLockedSettings","processedMeeting","requirePwdForPMI","requirePwdIsLockedForPMI","allowJoinBeforeHost","_pmiPassword","pmiRequiresPwd","PMIRequirePassword","NONE","ALL","JBH_ONLY","pmiRequiresPwdLocked","_lockRequireMeetingPassword","usePmi","personalMeetingSettings","requirePasswordForSchedulingNewMeetings","requirePwdForNonPMI","requirePasswordForPmiMeetings","requirePwdIsLockedForNonPMI","telephonyUserSettings","enforcePmiPassword","lockedRequirePasswordForPmiMeetings","getMeetingServiceInfo","serviceInfo","personalMeetingId","externalUserInfo","getMeeting","meetingInfo","shortId","settings","getDelegators","records","updateDelegatorList","isAlertSuccess","initScheduling","_validate","formattedMeeting","_format","saveAsDefault","saveAsDefaultSetting","postMeeting","resp","getMeetingInvitation","invitationInfo","scheduled","_saved","_createDialingNumberTpl","result","success","message","meetingStatus","scheduledSuccess","resetScheduling","_errorHandle","isScheduling","scheduleDirectly","account","extension","get","meetingId","isAlertError","response","clone","json","errorCode","log","isMeetingDeleted","indexOf","danger","meetingIsDeleted","post","put","service","platform","res","DEFAULT_LOCALE","brandConfig","allowMeetingInvitation","language","normalizeLocale","apiResponse","invitation","send","method","url","recording","scheduleMeeting","startParticipantsVideo","startParticipantVideo","restScheduleOptions","processedScheduleMeeting","_isUpdating","_promise","initUpdating","putMeeting","updated","updatedSuccess","resetUpdating","mobileDialingNumberTpl","dialInNumbers","phoneDialingNumberTpl","errors","MeetingErrors","warning","permissionName","insufficientPermissions","payload","checkIfHAError","internalError","updatingStatus","obj","topic","meetingType","startHostVideo","audioOptions","schedule","recurrence","formatted","MeetingType","RECURRING","_schedule","durationInMinutes","timeZone","UTC_TIMEZONE_ID","startTime","moment","utc","format","until","PMI","SCHEDULED","invalidMeetingInfo","push","emptyTopic","noPassword","durationIncorrect","notShowAgain","isSecret","RCM_PASSWORD_REGEX","test","savedSetting","savedDefaultMeetingSetting","lastMeetingSetting","enforcePassword","meetingName","setting","DEFAULT_LOCK_SETTINGS","info","schedulingStatus","scheduleStatus","scheduling","status","COMMON_SETTINGS","settingLock","getInitialMeetingSetting","usePmiForScheduledMeetings","name","telephony","getItem","myself","ASSISTED_USERS_MYSELF","isLoginUser","RcModule","background","proxify","selector","usePmiDefaultFromSW","initialSetting","generalDefaultSettings"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { find, isEmpty, pick } from 'ramda';\nimport Client from 'ringcentral-client';\n\nimport { computed } from '@ringcentral-integration/core';\nimport { DEFAULT_LOCALE } from '@ringcentral-integration/i18n';\n\nimport {\n  comparePreferences,\n  generateRandomPassword,\n  getDefaultMeetingSettings,\n  getDefaultTopic,\n  getInitializedStartTime,\n  getMobileDialingNumberTpl,\n  getPhoneDialingNumberTpl,\n  MeetingType,\n  prunePreferencesObject,\n  UTC_TIMEZONE_ID,\n} from '../../helpers/meetingHelper';\nimport background from '../../lib/background';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport { selector } from '../../lib/selector';\nimport { RcMMeetingModel, RequirePwdTypeForPMI } from '../MeetingV2';\nimport { getExtensionName, getHostId } from '../MeetingV2/helper';\nimport actionTypes, { MeetingActionTypes } from './actionTypes';\nimport {\n  ASSISTED_USERS_MYSELF,\n  COMMON_SETTINGS,\n  DEFAULT_LOCK_SETTINGS,\n  PMIRequirePassword,\n  RCM_PASSWORD_REGEX,\n} from './constants';\nimport getMeetingReducer, {\n  getDefaultMeetingSettingReducer,\n  getMeetingStorageReducer,\n  getPersonalMeetingReducer,\n} from './getMeetingReducer';\nimport {\n  MeetingDelegators,\n  MeetingDelegatorsResponse,\n  MeetingInfoResponse,\n  MeetingInitialExtraData,\n  MeetingScheduleResource,\n  RcmInvitationInfo,\n  ScheduleMeetingResponse,\n} from './interface';\nimport { MeetingErrors } from './meetingErrors';\nimport meetingStatus from './meetingStatus';\nimport scheduleStatus from './scheduleStatus';\n\n// eslint-disable-next-line\n@Module({\n  deps: [\n    'Brand',\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    'MeetingProvider',\n    'Locale',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'MeetingOptions', optional: true },\n  ],\n})\nexport class Meeting extends RcModule<Record<string, any>, MeetingActionTypes> {\n  // TODO: add state interface\n  private _brand: any;\n  public _alert: any;\n  public _client: Client;\n  private _extensionInfo: any;\n  private _storage: any;\n  private _availabilityMonitor: any;\n  private _lastMeetingSettingKey: any;\n  private _defaultMeetingSettingKey: any;\n  private _showSaveAsDefault: boolean;\n  private _enableInvitationApi: boolean;\n  private _personalMeetingKey: string;\n  private _enablePersonalMeeting: boolean;\n  private _enableReloadAfterSchedule: boolean;\n  private _enableServiceWebSettings: boolean;\n  private _enableScheduleOnBehalf: boolean;\n  private _fetchPersonMeetingTimeout: NodeJS.Timeout;\n  private _meetingProvider: any;\n  private _fetchDelegatorsTimeout: NodeJS.Timeout;\n  private _enableCustomTimezone: boolean;\n  private _locale: any;\n  private _createMeetingPromise: Promise<ScheduleMeetingResponse>;\n\n  constructor({\n    brand,\n    alert,\n    client,\n    extensionInfo,\n    storage,\n    availabilityMonitor,\n    reducers,\n    meetingProvider,\n    locale,\n    showSaveAsDefault = false,\n    enableInvitationApi = false,\n    enablePersonalMeeting = false,\n    enableReloadAfterSchedule = true,\n    enableServiceWebSettings = false,\n    enableScheduleOnBehalf = false,\n    enableCustomTimezone = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._brand = brand;\n    this._locale = locale;\n    this._alert = alert;\n    this._client = client;\n    this._storage = storage;\n    this._extensionInfo = extensionInfo;\n    this._meetingProvider = meetingProvider;\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._enableInvitationApi = enableInvitationApi;\n    this._enableCustomTimezone = enableCustomTimezone;\n    this._enableReloadAfterSchedule = enableReloadAfterSchedule;\n    this._enablePersonalMeeting = enablePersonalMeeting;\n    this._enableServiceWebSettings = enableServiceWebSettings;\n    this._enableScheduleOnBehalf = enableScheduleOnBehalf;\n    this._availabilityMonitor = availabilityMonitor;\n    this._lastMeetingSettingKey = 'lastMeetingSetting';\n    this._defaultMeetingSettingKey = 'defaultMeetingSetting';\n    this._personalMeetingKey = 'personalMeeting';\n    this._reducer = getMeetingReducer(this.actionTypes, reducers);\n    this._storage.registerReducer({\n      key: this._lastMeetingSettingKey,\n      reducer: getMeetingStorageReducer(this.actionTypes),\n    });\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultMeetingSettingKey,\n        reducer: getDefaultMeetingSettingReducer(this.actionTypes),\n      });\n    }\n    if (this._enablePersonalMeeting) {\n      this._storage.registerReducer({\n        key: this._personalMeetingKey,\n        reducer: getPersonalMeetingReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      await this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  private _shouldInit() {\n    return (\n      this.pending &&\n      this._alert.ready &&\n      this._storage.ready &&\n      this._extensionInfo.ready &&\n      this._meetingProvider.ready &&\n      this._meetingProvider.isRCM &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready)\n    );\n  }\n\n  private async _initMeetingSettings(extensionId?: string) {\n    await Promise.all([\n      this._initPersonalMeeting(extensionId),\n      this._updateServiceWebSettings(extensionId),\n    ]);\n    await this._initMeeting(extensionId);\n  }\n\n  private async _init() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n\n    await Promise.all([this._initMeetingSettings(), this.initScheduleFor()]);\n\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  private _shouldReset() {\n    return (\n      this.ready &&\n      (!this._alert.ready ||\n        !this._storage.ready ||\n        !this._extensionInfo.ready ||\n        !this._meetingProvider.ready ||\n        !this._meetingProvider.isRCM ||\n        (this._availabilityMonitor && !this._availabilityMonitor.ready))\n    );\n  }\n\n  private _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  init() {\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  private _initMeeting(extensionId?: string) {\n    this.update({\n      ...this.defaultMeetingSetting,\n      host: {\n        id: extensionId || this.loginUser.id,\n      },\n    });\n    this._updatePreferences();\n  }\n\n  async _initPersonalMeeting(extensionId?: string) {\n    if (!this._enablePersonalMeeting) {\n      return;\n    }\n    if (this._fetchPersonMeetingTimeout) {\n      clearTimeout(this._fetchPersonMeetingTimeout);\n    }\n    try {\n      const meetingInfoResponse = await this.fetchPersonalMeeting(extensionId);\n      const meeting = this.formatPersonalMeeting(meetingInfoResponse);\n      this.store.dispatch({\n        type: this.actionTypes.updatePersonalMeeting,\n        meeting,\n      });\n    } catch (e) {\n      console.error('fetch personal meeting error:', e);\n      this.store.dispatch({\n        type: this.actionTypes.resetPersonalMeeting,\n      });\n      console.warn('retry after 10s');\n      this._fetchPersonMeetingTimeout = setTimeout(() => {\n        this._initPersonalMeeting(extensionId);\n      }, 10000);\n    }\n  }\n\n  async initScheduleFor() {\n    if (!this._enableScheduleOnBehalf) {\n      return;\n    }\n\n    if (this._fetchDelegatorsTimeout) {\n      clearTimeout(this._fetchDelegatorsTimeout);\n    }\n\n    try {\n      await this.setDelegators();\n    } catch (e) {\n      console.error('fetch delegators error:', e);\n      console.warn('retry after 10s');\n      this._fetchDelegatorsTimeout = setTimeout(() => {\n        this.setDelegators();\n      }, 10000);\n    }\n  }\n\n  combineWithSettings(_meeting: RcMMeetingModel) {\n    return this._combineWithSWSettings(_meeting);\n  }\n\n  @proxify\n  update(_meeting: RcMMeetingModel) {\n    let meeting = _meeting;\n    if (this._enableServiceWebSettings) {\n      meeting = this.combineWithSettings(_meeting);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting: {\n        ...meeting,\n        isMeetingPasswordValid: this.validatePasswordSettings(\n          _meeting.password,\n          _meeting._requireMeetingPassword,\n        ),\n      },\n    });\n    this._comparePreferences();\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this.update(\n      usePersonalMeetingId\n        ? this.pmiDefaultSettings\n        : this.getGeneralDefaultSettings(),\n    );\n  }\n\n  @proxify\n  async updateScheduleFor(userExtensionId: string | number) {\n    if (!userExtensionId || !this.delegators || this.delegators.length === 0) {\n      return;\n    }\n    const hostId = `${userExtensionId}`;\n    const user = find((item) => item.id === hostId, this.delegators);\n\n    if (user) {\n      await this._initMeetingSettings(hostId);\n    }\n  }\n\n  private _updatePreferences() {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingPreferences,\n      preferences: prunePreferencesObject(this.meeting),\n    });\n  }\n\n  private _comparePreferences() {\n    const { preferences, meeting } = this;\n    this.store.dispatch({\n      type: this.actionTypes.saveMeetingPreferencesState,\n      isPreferencesChanged: comparePreferences(preferences, meeting),\n    });\n  }\n\n  @proxify\n  private async _updateServiceWebSettings(extensionId?: string) {\n    if (!this._enableServiceWebSettings) {\n      return;\n    }\n\n    const [userSettings, lockedSettings] = await Promise.all([\n      this.getUserSettings(extensionId),\n      this.getLockedSettings(),\n    ]);\n    this.store.dispatch({\n      type: this.actionTypes.updateUserSettings,\n      userSettings,\n    });\n    this.store.dispatch({\n      type: this.actionTypes.updateLockedSettings,\n      lockedSettings,\n    });\n  }\n\n  enforcePmiPassword(\n    processedMeeting: RcMMeetingModel,\n    requirePwdForPMI: RequirePwdTypeForPMI,\n    requirePwdIsLockedForPMI: boolean,\n  ) {\n    const { allowJoinBeforeHost, password = '' } = processedMeeting;\n    if (password !== '') {\n      // save this for design\n      processedMeeting._pmiPassword = password;\n    }\n\n    let pmiRequiresPwd;\n    switch (requirePwdForPMI) {\n      case PMIRequirePassword.NONE:\n        pmiRequiresPwd = password !== '';\n        break;\n      case PMIRequirePassword.ALL:\n        pmiRequiresPwd = true;\n        break;\n      case PMIRequirePassword.JBH_ONLY:\n        pmiRequiresPwd = allowJoinBeforeHost || password !== '';\n        break;\n      default:\n        pmiRequiresPwd = processedMeeting._requireMeetingPassword;\n    }\n\n    const pmiRequiresPwdLocked =\n      requirePwdForPMI === PMIRequirePassword.JBH_ONLY\n        ? requirePwdIsLockedForPMI && allowJoinBeforeHost\n        : requirePwdIsLockedForPMI;\n\n    processedMeeting._requireMeetingPassword = pmiRequiresPwd;\n    processedMeeting._lockRequireMeetingPassword = pmiRequiresPwdLocked;\n  }\n\n  enforcePassword(\n    meeting: RcMMeetingModel,\n    { userSettings, personalMeetingSettings }: MeetingInitialExtraData,\n    usePmi: boolean,\n  ): RcMMeetingModel {\n    if (!this._enableServiceWebSettings) {\n      return meeting;\n    }\n    const {\n      requirePasswordForSchedulingNewMeetings: requirePwdForNonPMI = false,\n      requirePasswordForPmiMeetings: requirePwdForPMI,\n    } = this.scheduleUserSettings;\n    const {\n      requirePasswordForSchedulingNewMeetings: requirePwdIsLockedForNonPMI,\n      requirePasswordForPmiMeetings: requirePwdIsLockedForPMI,\n    } = this.scheduleLockedSettings;\n\n    const processedMeeting = {\n      ...meeting,\n      ...(usePmi ? personalMeetingSettings : userSettings),\n      usePersonalMeetingId: usePmi,\n      telephonyUserSettings: this.telephonyUserSettings,\n    };\n\n    // For PMI meetings\n    if (usePmi) {\n      this.enforcePmiPassword(\n        processedMeeting,\n        requirePwdForPMI,\n        requirePwdIsLockedForPMI,\n      );\n    } else {\n      // For non-PMI meetings\n      if (requirePwdForNonPMI) {\n        processedMeeting._requireMeetingPassword = true;\n      }\n      if (requirePwdIsLockedForNonPMI) {\n        processedMeeting._lockRequireMeetingPassword = true;\n      }\n    }\n    return {\n      ...processedMeeting,\n      password:\n        processedMeeting._requireMeetingPassword && !processedMeeting.password\n          ? generateRandomPassword()\n          : processedMeeting.password,\n    };\n  }\n\n  _combineWithSWSettings(meeting: RcMMeetingModel): RcMMeetingModel {\n    if (!meeting.usePersonalMeetingId) {\n      return meeting;\n    }\n\n    const processedMeeting = { ...meeting };\n    const { allowJoinBeforeHost } = processedMeeting;\n    const { requirePasswordForPmiMeetings } = this.scheduleUserSettings;\n    const {\n      requirePasswordForPmiMeetings: lockedRequirePasswordForPmiMeetings,\n    } = this.scheduleLockedSettings;\n\n    if (\n      lockedRequirePasswordForPmiMeetings &&\n      requirePasswordForPmiMeetings === PMIRequirePassword.JBH_ONLY\n    ) {\n      if (allowJoinBeforeHost && !processedMeeting._requireMeetingPassword) {\n        processedMeeting._requireMeetingPassword = true;\n        processedMeeting.password =\n          processedMeeting._pmiPassword || generateRandomPassword();\n      }\n      processedMeeting._lockRequireMeetingPassword = allowJoinBeforeHost;\n    }\n    return processedMeeting;\n  }\n\n  @proxify\n  private async fetchPersonalMeeting(\n    extensionId?: string,\n  ): Promise<MeetingInfoResponse> {\n    const serviceInfo = await this.getMeetingServiceInfo(extensionId);\n    const personalMeetingId = serviceInfo.externalUserInfo.personalMeetingId;\n    const meetingInfoResponse = await this.getMeeting(personalMeetingId);\n    return meetingInfoResponse;\n  }\n\n  private formatPersonalMeeting(\n    meetingInfo: MeetingInfoResponse,\n    shortId?: string,\n  ): RcMMeetingModel {\n    const settings = {\n      ...this.initialMeetingSetting,\n      ...meetingInfo,\n      shortId: shortId || meetingInfo.id,\n      usePersonalMeetingId: true,\n    };\n    return {\n      ...settings,\n      _requireMeetingPassword: !!settings.password,\n    };\n  }\n\n  @proxify\n  private async setDelegators() {\n    const { records } = await this.getDelegators();\n    this.store.dispatch({\n      type: this.actionTypes.updateDelegatorList,\n      delegators: records,\n    });\n  }\n\n  @proxify\n  async scheduleDirectly(\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ): Promise<ScheduleMeetingResponse> {\n    try {\n      meeting = meeting || this.meeting;\n      this.store.dispatch({\n        type: this.actionTypes.initScheduling,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      const [resp, serviceInfo] = await Promise.all([\n        this.postMeeting(formattedMeeting),\n        this.getMeetingServiceInfo(meeting.host?.id),\n      ]);\n\n      const invitationInfo = await this.getMeetingInvitation(\n        resp.id,\n        this.currentLocale,\n      );\n\n      this.store.dispatch({\n        type: this.actionTypes.scheduled,\n        meeting: {\n          ...formattedMeeting,\n          id: resp.id,\n          _saved: meeting._saved,\n        },\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        invitationInfo,\n      );\n\n      // Reload meeting info\n      if (this._enableReloadAfterSchedule) {\n        this._initMeeting();\n      }\n\n      // Update personal meeting setting\n      if (this._enablePersonalMeeting && resp.usePersonalMeetingId) {\n        this.store.dispatch({\n          type: this.actionTypes.updatePersonalMeeting,\n          meeting: this.formatPersonalMeeting(\n            resp,\n            serviceInfo.externalUserInfo.personalMeetingId,\n          ),\n        });\n        if (this._enableServiceWebSettings) {\n          this.update({\n            ...this.meeting,\n            _pmiPassword: resp.password,\n          });\n        }\n      }\n\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetScheduling,\n      });\n      await this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  @proxify\n  async schedule(\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ): Promise<ScheduleMeetingResponse> {\n    if (this.isScheduling) return this._createMeetingPromise;\n\n    this._createMeetingPromise = this.scheduleDirectly(meeting, {\n      isAlertSuccess,\n    });\n\n    const result = await this._createMeetingPromise;\n    this._createMeetingPromise = null;\n    return result;\n  }\n\n  @proxify\n  async getMeetingServiceInfo(extensionId?: string) {\n    return this._client\n      .account()\n      .extension(extensionId)\n      .meeting()\n      .serviceInfo()\n      .get();\n  }\n\n  @proxify\n  async getMeeting(meetingId: string, { isAlertError = true } = {}) {\n    try {\n      const settings = await this._client\n        .account()\n        .extension()\n        .meeting(meetingId)\n        .get();\n      return {\n        ...settings,\n        _requireMeetingPassword: !!settings.password,\n      };\n    } catch (e) {\n      const { errorCode, message } = await e.response.clone().json();\n      console.log(\n        `failed to get meeting info: ${meetingId}, ${errorCode}, ${message}`,\n      );\n      const isMeetingDeleted =\n        errorCode === 'CMN-102' &&\n        message.indexOf('[meetingId] is not found') > -1;\n      if (isAlertError && isMeetingDeleted) {\n        setTimeout(() => {\n          this._alert.danger({\n            message: meetingStatus.meetingIsDeleted,\n          });\n        }, 50);\n      }\n      throw e;\n    }\n  }\n\n  async postMeeting(formattedMeeting: RcMMeetingModel) {\n    return this._client.account().extension().meeting().post(formattedMeeting);\n  }\n\n  @proxify\n  async putMeeting(meetingId: string, formattedMeeting: RcMMeetingModel) {\n    return this._client\n      .account()\n      .extension()\n      .meeting(meetingId)\n      .put(formattedMeeting);\n  }\n\n  @proxify\n  async getDelegators(): Promise<MeetingDelegatorsResponse> {\n    const res = await this._client.service\n      .platform()\n      .get(\n        '/restapi/v1.0/account/~/extension/~/meetings-configuration/assisted',\n      );\n    return res.json();\n  }\n\n  @proxify\n  async getMeetingInvitation(\n    meetingId: string,\n    locale = DEFAULT_LOCALE,\n  ): Promise<RcmInvitationInfo> {\n    if (!this._enableInvitationApi) {\n      return null;\n    }\n    // only rc brand is supported for now\n    if (!this._brand.brandConfig.allowMeetingInvitation) {\n      return null;\n    }\n    try {\n      const apiResponse = await this._client.service\n        .platform()\n        .get(\n          `/restapi/v1.0/account/~/extension/~/meeting/${meetingId}/invitation`,\n          {\n            language: this._locale.normalizeLocale(locale),\n          },\n        );\n      const { invitation } = await apiResponse.json();\n      return {\n        invitation,\n      };\n    } catch (ex) {\n      console.warn(ex);\n      return null;\n    }\n  }\n\n  @proxify\n  async getUserSettings(extensionId = '~') {\n    try {\n      const platform = this._client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: `/restapi/v1.0/account/~/extension/${extensionId}/meeting/user-settings`,\n      });\n      return apiResponse.json();\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  }\n\n  @proxify\n  async getLockedSettings() {\n    try {\n      const platform = this._client.service.platform();\n      const apiResponse = await platform.send({\n        method: 'GET',\n        url: '/restapi/v1.0/account/~/meeting/locked-settings',\n      });\n      const { recording = {}, scheduleMeeting = {} } = await apiResponse.json();\n      const {\n        startParticipantsVideo,\n        startParticipantVideo,\n        ...restScheduleOptions\n      } = scheduleMeeting;\n      const processedScheduleMeeting = {\n        ...restScheduleOptions,\n        startParticipantsVideo:\n          startParticipantsVideo || startParticipantVideo || false,\n      };\n      return {\n        recording,\n        scheduleMeeting: processedScheduleMeeting,\n      };\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcMMeetingModel,\n    { isAlertSuccess = false }: { isAlertSuccess?: boolean } = {},\n  ) {\n    if (this._isUpdating(meetingId)) {\n      return (this.updateMeeting as any)._promise;\n    }\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initUpdating,\n        meetingId,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      (this.updateMeeting as any)._promise = Promise.all([\n        this.putMeeting(meetingId, formattedMeeting),\n        this.getMeetingServiceInfo(meeting.host?.id),\n      ]);\n\n      const [resp, serviceInfo] = await (this.updateMeeting as any)._promise;\n      const invitationInfo = await this.getMeetingInvitation(\n        meetingId,\n        this.currentLocale,\n      );\n\n      this.store.dispatch({\n        type: this.actionTypes.updated,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved,\n        },\n        meetingId,\n      });\n\n      const result = await this._createDialingNumberTpl(\n        serviceInfo,\n        resp,\n        invitationInfo,\n      );\n\n      // Reload meeting info\n      if (this._enableReloadAfterSchedule) {\n        this._initMeeting();\n      }\n\n      // Update personal meeting setting\n      if (this._enablePersonalMeeting && resp.usePersonalMeetingId) {\n        this.store.dispatch({\n          type: this.actionTypes.updatePersonalMeeting,\n          meeting: this.formatPersonalMeeting(\n            resp,\n            serviceInfo.externalUserInfo.personalMeetingId,\n          ),\n        });\n        if (this._enableServiceWebSettings) {\n          this.update({\n            ...this.meeting,\n            _pmiPassword: resp.password,\n          });\n        }\n      }\n\n      // Notify user the meeting has been updated\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetUpdating,\n        meetingId,\n      });\n      await this._errorHandle(errors);\n      return null;\n    } finally {\n      delete (this.updateMeeting as any)._promise;\n    }\n  }\n\n  async _createDialingNumberTpl(\n    serviceInfo: any,\n    resp: any,\n    invitationInfo: RcmInvitationInfo,\n  ) {\n    serviceInfo.mobileDialingNumberTpl = getMobileDialingNumberTpl(\n      serviceInfo.dialInNumbers,\n      resp.id,\n    );\n    serviceInfo.phoneDialingNumberTpl = getPhoneDialingNumberTpl(\n      serviceInfo.dialInNumbers,\n    );\n    const result = {\n      meeting: resp,\n      serviceInfo,\n      extensionInfo: this.extensionInfo,\n      invitationInfo,\n    };\n    return result;\n  }\n\n  async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const { message, errorCode, permissionName } = await errors.response\n        .clone()\n        .json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        errorCode === 'CMN-102' &&\n        message.indexOf('[meetingId] is not found') > -1\n      ) {\n        this._alert.danger({\n          message: meetingStatus.meetingIsDeleted,\n        });\n      } else if (\n        !this._availabilityMonitor ||\n        !(await this._availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._alert.danger({ message: meetingStatus.internalError });\n      }\n    } else {\n      console.log('errors:', errors);\n      this._alert.danger({ message: meetingStatus.internalError });\n    }\n  }\n\n  /**\n   * @param {number} meetingId\n   */\n  _isUpdating(meetingId: string) {\n    return (\n      this.state.updatingStatus &&\n      find((obj: any) => obj.meetingId === meetingId, this.state.updatingStatus)\n    );\n  }\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting: RcMMeetingModel): RcMMeetingModel {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n      recurrence,\n      usePersonalMeetingId,\n      _requireMeetingPassword,\n      host,\n    } = meeting;\n    const formatted = {\n      host,\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password: _requireMeetingPassword ? password : '',\n      recurrence,\n      usePersonalMeetingId,\n    } as RcMMeetingModel;\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule: MeetingScheduleResource = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: {\n          id: this._enableCustomTimezone\n            ? schedule.timeZone.id\n            : UTC_TIMEZONE_ID,\n        },\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = this._enableCustomTimezone\n          ? schedule.startTime\n          : moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n\n      if (recurrence && recurrence.until) {\n        formatted.recurrence.until = moment.utc(recurrence.until).format();\n      }\n    }\n\n    // For PMI\n    formatted.meetingType =\n      formatted.meetingType === MeetingType.PMI\n        ? MeetingType.SCHEDULED\n        : formatted.meetingType;\n    return formatted;\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const { topic, password, schedule, _requireMeetingPassword } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  saveAsDefaultSetting(meeting) {\n    const formattedMeeting = this._format(meeting);\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: {\n        ...formattedMeeting,\n        _saved: meeting.notShowAgain,\n        _requireMeetingPassword: meeting._requireMeetingPassword,\n      },\n    });\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    if (!isSecret) {\n      return true;\n    }\n    if (password && RCM_PASSWORD_REGEX.test(password)) {\n      return true;\n    }\n    return false;\n  }\n\n  get extensionInfo() {\n    return this._extensionInfo.info;\n  }\n\n  @computed(({ _locale }: Meeting) => [_locale.currentLocale])\n  get currentLocale() {\n    return this._locale?.currentLocale || DEFAULT_LOCALE;\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get isScheduling() {\n    return this.state.schedulingStatus === scheduleStatus.scheduling;\n  }\n\n  get isUpdating() {\n    return this.meeting && this.meeting.id && this._isUpdating(this.meeting.id);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get preferences() {\n    return this.state.preferences;\n  }\n\n  @computed(({ _enableServiceWebSettings, scheduleUserSettings }: Meeting) => [\n    _enableServiceWebSettings,\n    scheduleUserSettings,\n  ])\n  get commonUserSettings() {\n    if (!this._enableServiceWebSettings) {\n      return {};\n    }\n    return pick(COMMON_SETTINGS, this.scheduleUserSettings);\n  }\n\n  @computed(({ _enablePersonalMeeting, personalMeeting }: Meeting) => [\n    _enablePersonalMeeting,\n    personalMeeting,\n  ])\n  get commonPersonalMeetingSettings() {\n    if (!this._enablePersonalMeeting) {\n      return {};\n    }\n    return pick([...COMMON_SETTINGS, 'password'], this.personalMeeting);\n  }\n\n  @computed(\n    ({ _enableServiceWebSettings, scheduleLockedSettings }: Meeting) => [\n      _enableServiceWebSettings,\n      scheduleLockedSettings,\n    ],\n  )\n  get defaultLockedSettings() {\n    if (!this._enableServiceWebSettings) {\n      return {};\n    }\n    return {\n      settingLock: pick(COMMON_SETTINGS, this.scheduleLockedSettings),\n    };\n  }\n\n  @computed(\n    ({\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n    }: Meeting) => [\n      initialMeetingSetting,\n      defaultLockedSettings,\n      commonUserSettings,\n      commonPersonalMeetingSettings,\n    ],\n  )\n  get pmiDefaultSettings() {\n    if (!this._enableServiceWebSettings) {\n      return this.personalMeeting;\n    }\n    return this.enforcePassword(\n      {\n        ...this.initialMeetingSetting,\n        ...this.defaultLockedSettings,\n      },\n      {\n        userSettings: this.commonUserSettings,\n        personalMeetingSettings: this.commonPersonalMeetingSettings,\n      },\n      true,\n    );\n  }\n\n  getGeneralDefaultSettings() {\n    if (!this._enableServiceWebSettings) {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultMeetingSetting\n        : this.lastMeetingSetting;\n      return {\n        ...this.initialMeetingSetting,\n        ...savedSetting,\n        meetingType: MeetingType.SCHEDULED,\n      };\n    }\n    return this.enforcePassword(\n      {\n        ...this.initialMeetingSetting,\n        ...this.defaultLockedSettings,\n      },\n      {\n        userSettings: this.commonUserSettings,\n        personalMeetingSettings: this.commonPersonalMeetingSettings,\n      },\n      false,\n    );\n  }\n\n  @selector\n  defaultMeetingSetting: any = [\n    () => this.initialMeetingSetting,\n    () => this.usePmiDefaultFromSW,\n    () => this.userSettings,\n    () => this.pmiDefaultSettings,\n    () => this.getGeneralDefaultSettings(),\n    () => {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultMeetingSetting\n        : this.lastMeetingSetting;\n      return savedSetting;\n    },\n    (\n      initialSetting: RcMMeetingModel,\n      usePmi: boolean,\n      userSettings: Partial<RcMMeetingModel>,\n      pmiDefaultSettings: Partial<RcMMeetingModel>,\n      generalDefaultSettings: Partial<RcMMeetingModel>,\n      savedSetting: Partial<RcMMeetingModel>,\n    ) => {\n      if (this._enableServiceWebSettings) {\n        if (!isEmpty(userSettings)) {\n          return usePmi ? pmiDefaultSettings : generalDefaultSettings;\n        }\n        return initialSetting;\n      }\n      const meeting = {\n        ...initialSetting,\n        ...savedSetting,\n        meetingType: MeetingType.SCHEDULED,\n      };\n      return meeting;\n    },\n  ];\n\n  getInitialMeetingSetting() {\n    const meetingName = getExtensionName({\n      extensionInfo: this._extensionInfo,\n      enableScheduleOnBehalf: this._enableScheduleOnBehalf,\n      meeting: this.meeting,\n      delegators: this.delegators,\n    });\n    const startTime = getInitializedStartTime();\n    const hostId = getHostId({\n      enableScheduleOnBehalf: this._enableScheduleOnBehalf,\n      meeting: this.meeting,\n      extensionInfo: this._extensionInfo,\n    });\n    const setting = getDefaultMeetingSettings(\n      meetingName,\n      this.currentLocale,\n      startTime,\n      hostId,\n    );\n    if (!this._enableServiceWebSettings) {\n      return setting;\n    }\n    return {\n      ...setting,\n      ...DEFAULT_LOCK_SETTINGS,\n      _pmiPassword: '',\n    };\n  }\n\n  get initialMeetingSetting(): RcMMeetingModel {\n    return this.getInitialMeetingSetting();\n  }\n\n  @computed(\n    ({\n      _enablePersonalMeeting,\n      _enableServiceWebSettings,\n      scheduleUserSettings,\n    }: Meeting) => [\n      _enablePersonalMeeting,\n      _enableServiceWebSettings,\n      scheduleUserSettings,\n    ],\n  )\n  get usePmiDefaultFromSW() {\n    return (\n      this._enablePersonalMeeting &&\n      this._enableServiceWebSettings &&\n      this.scheduleUserSettings.usePmiForScheduledMeetings\n    );\n  }\n\n  get extensionName(): string {\n    return this.extensionInfo?.name;\n  }\n\n  @computed(({ extensionName, currentLocale }: Meeting) => [\n    extensionName,\n    currentLocale,\n  ])\n  get defaultTopic(): string {\n    return getDefaultTopic(this.extensionName, this.currentLocale);\n  }\n\n  @computed(({ userSettings }: Meeting) => [userSettings])\n  get recordingUserSettings() {\n    const { recording = {} } = this.userSettings;\n    return recording;\n  }\n\n  @computed(({ userSettings }: Meeting) => [userSettings])\n  get scheduleUserSettings() {\n    const { scheduleMeeting = {} } = this.userSettings;\n    return scheduleMeeting;\n  }\n\n  @computed(({ userSettings }: Meeting) => [userSettings])\n  get telephonyUserSettings() {\n    const { telephony = {} } = this.userSettings;\n    return telephony;\n  }\n\n  @computed(({ lockedSettings }: Meeting) => [lockedSettings])\n  get recordingLockedSettings() {\n    const { recording = {} } = this.lockedSettings;\n    return recording;\n  }\n\n  @computed(({ lockedSettings }: Meeting) => [lockedSettings])\n  get scheduleLockedSettings() {\n    const { scheduleMeeting = {} } = this.lockedSettings;\n    return scheduleMeeting;\n  }\n\n  get savedDefaultMeetingSetting() {\n    return this._storage.getItem(this._defaultMeetingSettingKey);\n  }\n\n  get lastMeetingSetting() {\n    return this._storage.getItem(this._lastMeetingSettingKey);\n  }\n\n  get showSaveAsDefault() {\n    return this._showSaveAsDefault;\n  }\n\n  get isPreferencesChanged() {\n    return this.state.isPreferencesChanged;\n  }\n\n  @computed(({ state }: Meeting) => [state.userSettings])\n  get userSettings() {\n    return this.state.userSettings || {};\n  }\n\n  @computed(({ state }: Meeting) => [state.lockedSettings])\n  get lockedSettings() {\n    return this.state.lockedSettings || {};\n  }\n\n  get enableServiceWebSettings(): boolean {\n    return this._enableServiceWebSettings;\n  }\n\n  get enablePersonalMeeting(): boolean {\n    return this._enablePersonalMeeting;\n  }\n\n  get personalMeeting() {\n    return this._storage.getItem(this._personalMeetingKey);\n  }\n\n  @computed(({ state, loginUser }: Meeting) => [state, loginUser])\n  get delegators(): MeetingDelegators[] {\n    if (this.state.delegators.length === 0) {\n      return [];\n    }\n    return [this.loginUser, ...this.state.delegators];\n  }\n\n  @computed(({ extensionInfo }: Meeting) => [extensionInfo])\n  get loginUser() {\n    const myself: MeetingDelegators = {\n      id: `${this.extensionInfo.id}`,\n      name: ASSISTED_USERS_MYSELF,\n      isLoginUser: true,\n    };\n    return myself;\n  }\n}\n"],"file":"Meeting.js"}