{"version":3,"file":"Meeting.interface.js","names":["AUDIO_OPTIONS","ComputerAudio","Phone","ThirdParty","exports"],"sources":["modules/Meeting/Meeting.interface.ts"],"sourcesContent":["import type Client from 'ringcentral-client';\nimport type TimezoneInfo from '@rc-ex/core/lib/definitions/TimezoneInfo';\n\nimport type { MeetingTypeV } from '../../helpers/meetingHelper.interface';\nimport type { Alert } from '../Alert';\nimport type { AvailabilityMonitor } from '../AvailabilityMonitor';\nimport type { Brand } from '../Brand';\nimport type { ExtensionInfo as ExtensionInfoModule } from '../ExtensionInfo';\nimport type { Locale } from '../Locale';\nimport type { Storage } from '../Storage';\nimport type { VideoConfiguration } from '../VideoConfiguration';\n\nexport interface MeetingScheduleResource {\n  startTime?: number | string;\n  durationInMinutes?: number;\n  timeZone?: TimezoneInfo;\n}\n\nexport interface MeetingOptions {\n  showSaveAsDefault?: boolean;\n  enablePersonalMeeting?: boolean;\n  enableReloadAfterSchedule?: boolean;\n  enableServiceWebSettings?: boolean;\n  enableScheduleOnBehalf?: boolean;\n  enableCustomTimezone?: boolean;\n  enableInvitationApiFailedToast?: boolean;\n}\n\nexport interface Deps {\n  brand: Brand;\n  alert: Alert;\n  client: Client;\n  extensionInfo: ExtensionInfoModule;\n  storage: Storage;\n  videoConfiguration: VideoConfiguration;\n  availabilityMonitor?: AvailabilityMonitor;\n  meetingOptions?: MeetingOptions;\n  locale: Locale;\n}\n\nexport interface MeetingDelegator {\n  id: string;\n  name: string;\n  isLoginUser?: boolean;\n}\n\nexport interface MeetingDelegatorsResponse {\n  records: MeetingDelegator[];\n}\n\nexport type UpdatingStatus = {\n  meetingId: string;\n}[];\n\nexport const AUDIO_OPTIONS = {\n  ComputerAudio: 'ComputerAudio',\n  Phone: 'Phone',\n  ThirdParty: 'ThirdParty',\n} as const;\n\nexport interface RcmInvitationInfo {\n  invitation: string;\n}\n\nexport interface MeetingLinksInfo {\n  startUri: string;\n  joinUri: string;\n}\n\nexport type MeetingStatus = 'NotStarted' | 'Started';\n\nexport type RequirePwdTypeForPMI = 'jbh_only' | 'all' | 'none';\n\nexport interface HostInfo {\n  id: string | null;\n  uri?: string;\n}\n\ntype AudioOptions = (keyof typeof AUDIO_OPTIONS)[];\n\nexport interface MeetingInfoResponse {\n  allowJoinBeforeHost: boolean;\n  audioOptions: AudioOptions;\n  h323Password?: string;\n  host?: HostInfo;\n  id?: string;\n  links: MeetingLinksInfo;\n  meetingType: MeetingTypeV;\n  startHostVideo: boolean;\n  startParticipantsVideo: boolean;\n  status: MeetingStatus;\n  topic: string;\n  uri?: string;\n  password: string;\n  usePersonalMeetingId: boolean;\n  uuid: string;\n}\n\nexport interface DialInNumber {\n  phoneNumber: string;\n  formattedNumber: string;\n  country: Country;\n  location?: string;\n}\n\nexport interface MeetingServiceInfo {\n  uri: string;\n  supportUri: string;\n  intlDialInNumbersUri: string;\n  dialInNumbers: DialInNumber[];\n  domain: string;\n}\n\nexport interface Country {\n  uri: string;\n  id: string;\n  name: string;\n  isoCode: string;\n  callingCode: string;\n}\n\nexport interface RecurrenceOptions {\n  frequency: string;\n  interval: string | number;\n  count?: number;\n  until?: string; // \"2030-12-21T12:00:00Z\"\n}\n\nexport type SavedDefaultMeetingSetting =\n  | Pick<\n      RcMMeetingModel,\n      | 'startHostVideo'\n      | 'startParticipantsVideo'\n      | 'allowJoinBeforeHost'\n      | 'audioOptions'\n      | '_saved'\n      | 'password'\n      | '_requireMeetingPassword'\n    >\n  | {};\n\nexport type EffectiveScheduleUserSettings =\n  | Pick<\n      UserScheduleMeetingSettingResponse,\n      | 'allowJoinBeforeHost'\n      | 'audioOptions'\n      | 'startHostVideo'\n      | 'startParticipantsVideo'\n    >\n  | {};\n\nexport type CommonPersonalMeetingSettings =\n  | Pick<\n      RcMMeetingModel,\n      | 'allowJoinBeforeHost'\n      | 'audioOptions'\n      | 'startHostVideo'\n      | 'startParticipantsVideo'\n      | 'password'\n    >\n  | {};\n\nexport type LastMeetingSetting =\n  | Pick<\n      RcMMeetingModel,\n      | 'startHostVideo'\n      | 'startParticipantsVideo'\n      | 'allowJoinBeforeHost'\n      | 'audioOptions'\n      | '_saved'\n    >\n  | {};\n\nexport interface RcMMeetingModel {\n  allowJoinBeforeHost: boolean;\n  audioOptions: AudioOptions;\n  host: HostInfo;\n  meetingType: MeetingTypeV;\n  password: string;\n  telephonyUserSettings: UserTelephonySettingResponse;\n  // duration: number;\n  startHostVideo: boolean;\n  startParticipantsVideo: boolean;\n  topic: string;\n  _requireMeetingPassword: boolean;\n  _saved: boolean;\n  _showDate: boolean;\n  _showTime: boolean;\n  usePersonalMeetingId: boolean;\n  schedule?: MeetingScheduleResource;\n  _pmiPassword?: string;\n  recurrence?: RecurrenceOptions;\n  settingLock?: DefaultScheduleLockedSettings;\n  _lockRequireMeetingPassword?: boolean;\n  isMeetingPasswordValid?: boolean;\n  saveAsDefault?: boolean;\n}\n\nexport interface MeetingInitialExtraData {\n  userSettings: Partial<RcMMeetingModel>;\n  personalMeetingSettings: Partial<RcMMeetingModel>;\n}\n\nexport interface ExternalUserInfo {\n  userId: string;\n  accountId: string;\n  userType: number;\n  userToken: string;\n  hostKey: string;\n  personalMeetingId: string;\n  usePmiForInstantMeetings: boolean;\n}\n\nexport interface ServiceInfo {\n  uri: string;\n  supportUri: string;\n  intlDialInNumbersUri: string;\n  domain: string;\n  externalUserInfo: ExternalUserInfo;\n  dialInNumbers: DialInNumber[];\n  mobileDialingNumberTpl: string;\n  phoneDialingNumberTpl: string;\n}\n\ninterface ExtensionInfo {\n  id: number;\n  extensionNumber: string;\n  contact: Contact;\n  name: string;\n  type: string;\n  status: string;\n  permissions: Permissions;\n  profileImage: ProfileImage;\n  regionalSettings: RegionalSettings;\n  serviceFeatures: ServiceFeatures;\n}\n\ninterface ServiceFeatures {\n  SMS: Admin;\n  SMSReceiving: Admin;\n  Pager: Admin;\n  PagerReceiving: Admin;\n  Voicemail: Admin;\n  Fax: Admin;\n  FaxReceiving: Admin;\n  DND: Admin;\n  RingOut: Admin;\n  InternationalCalling: Admin;\n  Presence: Admin;\n  VideoConferencing: Admin;\n  SalesForce: Admin;\n  Intercom: Admin;\n  Paging: Admin;\n  Conferencing: Admin;\n  VoipCalling: Admin;\n  FreeSoftPhoneLines: Admin;\n  HipaaCompliance: HipaaCompliance;\n  CallPark: Admin;\n  SharedLines: Admin;\n  OnDemandCallRecording: Admin;\n  Reports: Admin;\n  CallForwarding: Admin;\n  DeveloperPortal: Admin;\n  EncryptionAtRest: HipaaCompliance;\n  BlockedMessageForwarding: HipaaCompliance;\n  EmergencyCalling: HipaaCompliance;\n  HDVoice: Admin;\n  SingleExtensionUI: HipaaCompliance;\n  CallSupervision: Admin;\n  VoicemailToText: Admin;\n  WebPhone: Admin;\n  RCTeams: Admin;\n  UserManagement: Admin;\n  Calendar: Admin;\n  PasswordAuth: Admin;\n  CallerIdControl: HipaaCompliance;\n  AutomaticInboundCallRecording: HipaaCompliance;\n  AutomaticOutboundCallRecording: HipaaCompliance;\n  AutomaticCallRecordingMute: HipaaCompliance;\n  SoftPhoneUpdate: Admin;\n  LinkedSoftphoneLines: HipaaCompliance;\n  CallQualitySurvey: HipaaCompliance;\n  AccountFederation: HipaaCompliance;\n  MMS: Admin;\n  CallParkLocations: Admin;\n  ExternalDirectoryIntegration: HipaaCompliance;\n  CallSwitch: Admin;\n  PromoMessage: Admin;\n  SiteCodes: HipaaCompliance;\n  InternationalSMS: HipaaCompliance;\n  ConferencingNumber: Admin;\n  VoipCallingOnMobile: Admin;\n  DynamicConference: HipaaCompliance;\n  ConfigureDelegates: Admin;\n  Archiver: Admin;\n  EmergencyAddressAutoUpdate: HipaaCompliance;\n  MobileVoipEmergencyCalling: HipaaCompliance;\n}\ninterface RegionalSettings {\n  timezone: Timezone;\n  homeCountry: HomeCountry;\n  language: Language;\n  formattingLocale: Language;\n  timeFormat: string;\n}\n\ninterface Language {\n  localeCode: string;\n}\n\ninterface HomeCountry {\n  id: string;\n  isoCode: string;\n  callingCode: string;\n}\n\ninterface Timezone {\n  id: string;\n  name: string;\n  bias: string;\n}\n\ninterface ProfileImage {\n  uri: string;\n}\n\ninterface Permissions {\n  admin: Admin;\n  internationalCalling: Admin;\n}\n\ninterface Admin {\n  enabled: boolean;\n}\n\ninterface Contact {\n  firstName: string;\n  company: string;\n  email: string;\n  businessPhone: string;\n  businessAddress: BusinessAddress;\n  emailAsLoginName: boolean;\n  pronouncedName: PronouncedName;\n}\n\ninterface PronouncedName {\n  type: string;\n  text: string;\n}\n\ninterface BusinessAddress {\n  street: string;\n  city: string;\n  state: string;\n  zip: string;\n  country: string;\n}\n\ninterface HipaaCompliance {\n  enabled: boolean;\n  reason: string;\n}\n\nexport interface ScheduleMeetingResponse {\n  meeting: MeetingInfoResponse;\n  serviceInfo: ServiceInfo;\n  extensionInfo: ExtensionInfo;\n  invitationInfo?: any;\n}\n\nexport interface UserScheduleMeetingSettingResponse {\n  pstnPasswordProtected: boolean;\n  requirePasswordForSchedulingNewMeetings: boolean;\n  requirePasswordForScheduledMeetings: boolean;\n  defaultPasswordForScheduledMeetings: string;\n  requirePasswordForInstantMeetings: boolean;\n  requirePasswordForPmiMeetings: RequirePwdTypeForPMI;\n  pmiPassword: string;\n  startHostVideo: boolean;\n  startParticipantsVideo: boolean;\n  allowJoinBeforeHost: boolean;\n  usePmiForScheduledMeetings: boolean;\n  usePmiForInstantMeetings: boolean;\n  audioOptions: AudioOptions;\n}\n\nexport interface UserTelephonySettingResponse {\n  audioConferenceInfo: string;\n  thirdPartyAudio: boolean;\n}\n\nexport interface UserSettings {\n  scheduleMeeting: UserScheduleMeetingSettingResponse;\n  telephony: UserTelephonySettingResponse;\n}\n\nexport interface ScheduleMeetingLockedSettings {\n  allowJoinBeforeHost: boolean;\n  audioOptions: boolean;\n  enforceLogin: boolean;\n  requirePasswordForInstantMeetings: boolean;\n  requirePasswordForPmiMeetings: boolean;\n  requirePasswordForSchedulingNewMeetings: boolean;\n  startHostVideo: boolean;\n  startParticipantsVideo: boolean;\n}\n\nexport type Preferences = Pick<\n  RcMMeetingModel,\n  | 'allowJoinBeforeHost'\n  | 'startHostVideo'\n  | 'startParticipantsVideo'\n  | '_requireMeetingPassword'\n>;\n\nexport type DefaultScheduleLockedSettings = Partial<\n  Pick<\n    ScheduleMeetingLockedSettings,\n    | 'allowJoinBeforeHost'\n    | 'audioOptions'\n    | 'startHostVideo'\n    | 'startParticipantsVideo'\n  >\n>;\n\nexport interface LockedSettings {\n  scheduleMeeting: ScheduleMeetingLockedSettings;\n}\n"],"mappings":";;;;;;AAsDO,IAAMA,aAAa,GAAG;EAC3BC,aAAa,EAAE,eAAe;EAC9BC,KAAK,EAAE,OAAO;EACdC,UAAU,EAAE;AACd,CAAU;AAACC,OAAA,CAAAJ,aAAA,GAAAA,aAAA"}