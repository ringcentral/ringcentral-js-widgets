{"version":3,"file":"Softphone.js","names":["_core","require","_utils","_bowser","_interopRequireDefault","_di","_proxify","_callingModes","_softphoneStatus","_dec","_class","_class2","_descriptor","_descriptor2","e","__esModule","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_initializerDefineProperty","l","Object","defineProperty","enumerable","configurable","writable","initializer","call","_classCallCheck","TypeError","_defineProperties","length","_toPropertyKey","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","keys","forEach","slice","reverse","reduce","_initializerWarningHelper","Error","Softphone","Module","name","deps","dep","optional","_RcModuleV","_super","_this$_deps$softphone","_this$_deps$softphone2","_this$_deps$softphone3","_this","_callHandler","_extensionMode","_ignoreModuleReadiness","contactMatcher","_deps","softphoneOptions","extensionMode","callHandler","startToConnect","phoneNumber","softphoneStatus","connecting","connectingPhoneNumber","connectComplete","idle","detectPlatform","bowser","parse","window","navigator","userAgent","platform","type","getMakeCallUri","callingMode","command","concat","encodeURIComponent","protocol","spartanProtocol","isJupiterUniversalLink","isCallWithJupiter","callingModes","jupiter","jupiterUniversalLink","includes","_useJupiterUniversalLink","normalizeUniversalLink","jupiterProtocol","uri","_this$_deps$softphone4","_this$_deps$softphone5","useJupiterUniversalLink","brand","brandConfig","allowJupiterUniversalLink","_makeCall","regeneratorRuntime","mark","_callee","_this$getMakeCallUri","openLink","frame","wrap","_callee$","_context","prev","next","ActiveXObject","open","msLaunchUri","document","createElement","style","display","body","appendChild","sleep","contentWindow","location","href","removeChild","forceMatchNumber","stop","makeCall","_x","_x2","get","callWithSoftphone","_this$_deps$brand$bra","callWithJupiter","link","_this$_deps$brand$bra2","_this$_deps$brand$bra3","RcModuleV2","state","action","getOwnPropertyDescriptor","proxify","exports"],"sources":["modules/Softphone/Softphone.ts"],"sourcesContent":["import { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport { sleep, normalizeUniversalLink } from '@ringcentral-integration/utils';\nimport bowser from 'bowser';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { callingModes } from '../CallingSettings/callingModes';\n\nimport type {\n  CallHandlerContext,\n  CallUriInfo,\n  Deps,\n} from './Softphone.interface';\nimport { softphoneStatus } from './softphoneStatus';\n\n/**\n * @class\n * @description Softphone module to call softphone\n */\n@Module({\n  name: 'Softphone',\n  deps: [\n    'Brand',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'SoftphoneOptions', optional: true },\n  ],\n})\nexport class Softphone<T extends Deps = Deps> extends RcModuleV2<T> {\n  protected _callHandler: (context: CallHandlerContext) => any;\n  protected _extensionMode: boolean;\n\n  constructor(deps: T) {\n    super({\n      deps,\n    });\n    // @ts-expect-error TS(2345): Argument of type 'ContactMatcher<Entity, Deps> | u... Remove this comment to see the full error message\n    this._ignoreModuleReadiness(deps.contactMatcher);\n    this._extensionMode = this._deps.softphoneOptions?.extensionMode ?? false;\n    // @ts-expect-error TS(2322): Type '((context: CallHandlerContext) => any) | und... Remove this comment to see the full error message\n    this._callHandler = this._deps.softphoneOptions?.callHandler;\n  }\n\n  @state\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n  connectingPhoneNumber: string = null;\n\n  @state\n  softphoneStatus = softphoneStatus.idle;\n\n  @action\n  startToConnect(phoneNumber: string) {\n    this.softphoneStatus = softphoneStatus.connecting;\n    this.connectingPhoneNumber = phoneNumber;\n  }\n\n  @action\n  connectComplete() {\n    this.softphoneStatus = softphoneStatus.idle;\n    // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n    this.connectingPhoneNumber = null;\n  }\n\n  detectPlatform() {\n    return bowser.parse(\n      (window.navigator && window.navigator.userAgent) || 'unknown',\n    ).platform.type;\n  }\n\n  get spartanProtocol() {\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    return this._deps.brand.brandConfig.callWithSoftphone.protocol;\n  }\n\n  // currently we only have RingCentral App(rc brand)'s & AT&T universal link\n  get jupiterUniversalLink() {\n    return this._deps.brand.brandConfig.callWithJupiter?.link;\n  }\n\n  get jupiterAppName() {\n    return this._deps.brand.brandConfig.callWithJupiter?.name;\n  }\n\n  // currently we don't have Bt brand uri scheme\n  get jupiterProtocol() {\n    return this._deps.brand.brandConfig.callWithJupiter?.protocol;\n  }\n\n  getMakeCallUri(phoneNumber: string, callingMode: string): CallUriInfo {\n    // spartan\n    let command = `call?number=${encodeURIComponent(phoneNumber)}`;\n    let protocol = this.spartanProtocol;\n    let isJupiterUniversalLink = false;\n\n    // jupiter\n    const isCallWithJupiter = [\n      callingModes.jupiter,\n      callingModes.jupiterUniversalLink,\n    ].includes(callingMode);\n    if (isCallWithJupiter) {\n      // jupiter doesn't recognize encoded string for now\n      command = `r/call?number=${phoneNumber}`;\n      // @ts-expect-error TS(2322): Type 'boolean | undefined' is not assignable to ty... Remove this comment to see the full error message\n      isJupiterUniversalLink = this._useJupiterUniversalLink(callingMode);\n      // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n      protocol = isJupiterUniversalLink\n        ? normalizeUniversalLink(this.jupiterUniversalLink!)\n        : this.jupiterProtocol;\n    }\n    return {\n      command,\n      protocol,\n      isJupiterUniversalLink,\n      uri: `${protocol}${command}`,\n    };\n  }\n\n  private _useJupiterUniversalLink(callingMode: string) {\n    // rc brand: call with jupiter, use scheme\n    // rc brand: call with jupiter web, use universal link\n    // partner brand: use universal link\n    if (callingMode === callingModes.jupiterUniversalLink) {\n      return true;\n    }\n    return (\n      this._deps.softphoneOptions?.useJupiterUniversalLink ??\n      this._deps.brand.brandConfig.allowJupiterUniversalLink\n    );\n  }\n\n  @proxify\n  async makeCall(phoneNumber: string, callingMode: string) {\n    this.startToConnect(phoneNumber);\n\n    const { protocol, command, uri, isJupiterUniversalLink } =\n      this.getMakeCallUri(phoneNumber, callingMode);\n\n    if (this._callHandler) {\n      this._callHandler({\n        callingMode,\n        protocol,\n        command,\n        uri,\n        isJupiterUniversalLink,\n        phoneNumber,\n      });\n    } else {\n      /**\n       * 1. Use window.open in extension background scripts to avoid crashing Browsers\n       * 2. Use window.open in non-desktop platforms\n       * 3. to support ie on Windows < 8\n       * 4. for Jupiter universal link, should open link directly\n       */\n      const openLink =\n        isJupiterUniversalLink ||\n        this._extensionMode ||\n        this.detectPlatform() !== 'desktop' ||\n        (window as any).ActiveXObject ||\n        'ActiveXObject' in window;\n\n      if (openLink) {\n        window.open(uri);\n        // @ts-expect-error TS(2339): Property 'msLaunchUri' does not exist on type 'Nav... Remove this comment to see the full error message\n      } else if (window.navigator.msLaunchUri) {\n        // to support ie to start the service\n        // @ts-expect-error TS(2339): Property 'msLaunchUri' does not exist on type 'Nav... Remove this comment to see the full error message\n        window.navigator.msLaunchUri(uri);\n      } else {\n        // open via iframe\n        const frame = document.createElement('iframe');\n        frame.style.display = 'none';\n        document.body.appendChild(frame);\n        await sleep(100);\n        // @ts-expect-error TS(2531): Object is possibly 'null'.\n        frame.contentWindow.location.href = uri;\n        await sleep(300);\n        document.body.removeChild(frame);\n      }\n    }\n\n    if (this._deps.contactMatcher) {\n      await this._deps.contactMatcher.forceMatchNumber({\n        phoneNumber,\n      });\n    }\n\n    this.connectComplete();\n  }\n}\n"],"mappings":"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","ignoreList":[]}