{"version":3,"sources":["modules/AddressBook/getAddressBookReducer.ts"],"names":["getSyncStatusReducer","types","state","syncStatus","idle","type","sync","syncing","syncError","syncSuccess","getContactListReducer","records","contacts","contactMap","length","forEach","contact","push","id","record","isDeleted","availability","availabilityTypes","deleted","oldIndex","undefined","oldContact","filter","resetSuccess","cleanUp","getSyncTokenReducer","syncToken","getTimestampReducer","timestamp","getAddressBookReducer","reducers","status"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;AAEO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9BC,uBAAWC,IAAmB;;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAC5C,YAAQA,IAAR;AACE,WAAKJ,KAAK,CAACK,IAAX;AACE,eAAOH,uBAAWI,OAAlB;;AACF,WAAKN,KAAK,CAACO,SAAX;AACA,WAAKP,KAAK,CAACQ,WAAX;AACE,eAAON,uBAAWC,IAAlB;;AACF;AACE,eAAOF,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEM,SAASQ,qBAAT,CAA+BT,KAA/B,EAAsC;AAC3C,SAAO,YAAmC;AAAA,QAAlCC,KAAkC,uEAA1B,EAA0B;;AAAA;AAAA,QAApBG,IAAoB,SAApBA,IAAoB;AAAA,QAAdM,OAAc,SAAdA,OAAc;;AACxC,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,UAAU,GAAG,EAAnB;;AACA,YAAQR,IAAR;AACE,WAAKJ,KAAK,CAACQ,WAAX;AACE,YAAI,CAACE,OAAD,IAAYA,OAAO,CAACG,MAAR,KAAmB,CAAnC,EAAsC;AACpC,iBAAOZ,KAAP;AACD;;AACDA,QAAAA,KAAK,CAACa,OAAN,CAAc,UAACC,OAAD,EAAa;AACzBJ,UAAAA,QAAQ,CAACK,IAAT,CAAcD,OAAd;AACAH,UAAAA,UAAU,CAACG,OAAO,CAACE,EAAT,CAAV,GAAyBN,QAAQ,CAACE,MAAT,GAAkB,CAA3C;AACD,SAHD;AAIAH,QAAAA,OAAO,CAACI,OAAR,CAAgB,UAACI,MAAD,EAAY;AAC1B,cAAMC,SAAS,GAAGD,MAAM,CAACE,YAAP,KAAwBC,8BAAkBC,OAA5D;AACA,cAAMC,QAAQ,GAAGX,UAAU,CAACM,MAAM,CAACD,EAAR,CAA3B;;AACA,cAAIM,QAAQ,KAAKC,SAAb,IAA0BD,QAAQ,KAAK,IAA3C,EAAiD;AAC/C,gBAAIJ,SAAJ,EAAe;AACbR,cAAAA,QAAQ,CAACY,QAAD,CAAR,GAAqB,IAArB;AACA,qBAAOX,UAAU,CAACM,MAAM,CAACD,EAAR,CAAjB;AACD,aAHD,MAGO;AACL,kBAAMQ,UAAU,GAAGd,QAAQ,CAACY,QAAD,CAA3B;AACAZ,cAAAA,QAAQ,CAACY,QAAD,CAAR,mCACKE,UADL,GAEK,2BAAUP,MAAV,CAFL;AAID;AACF,WAXD,MAWO,IAAI,CAACC,SAAL,EAAgB;AACrBR,YAAAA,QAAQ,CAACK,IAAT,CAAc,2BAAUE,MAAV,CAAd;AACAN,YAAAA,UAAU,CAACM,MAAM,CAACD,EAAR,CAAV,GAAwBN,QAAQ,CAACE,MAAT,GAAkB,CAA1C;AACD;AACF,SAlBD;AAmBA,eAAOF,QAAQ,CAACe,MAAT,CAAgB,UAACX,OAAD;AAAA,iBAAa,CAAC,CAACA,OAAf;AAAA,SAAhB,CAAP;;AACF,WAAKf,KAAK,CAAC2B,YAAX;AACA,WAAK3B,KAAK,CAAC4B,OAAX;AACE,eAAO,EAAP;;AACF;AACE,eAAO3B,KAAP;AAjCJ;AAmCD,GAtCD;AAuCD;;AAEM,SAAS4B,mBAAT,CAA6B7B,KAA7B,EAAoC;AACzC,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,IAA8B;;AAAA;AAAA,QAAtBG,IAAsB,SAAtBA,IAAsB;AAAA,QAAhB0B,SAAgB,SAAhBA,SAAgB;;AAC5C,YAAQ1B,IAAR;AACE,WAAKJ,KAAK,CAACQ,WAAX;AACE,eAAOsB,SAAP;;AACF,WAAK9B,KAAK,CAAC2B,YAAX;AACA,WAAK3B,KAAK,CAAC4B,OAAX;AACE,eAAO,IAAP;;AACF;AACE,eAAO3B,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEM,SAAS8B,mBAAT,CAA6B/B,KAA7B,EAAoC;AACzC,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,IAA8B;;AAAA;AAAA,QAAtBG,IAAsB,SAAtBA,IAAsB;AAAA,QAAhB4B,SAAgB,SAAhBA,SAAgB;;AAC5C,YAAQ5B,IAAR;AACE,WAAKJ,KAAK,CAACQ,WAAX;AACE,eAAOwB,SAAP;;AACF,WAAKhC,KAAK,CAAC2B,YAAX;AACA,WAAK3B,KAAK,CAAC4B,OAAX;AACE,eAAO,IAAP;;AACF;AACE,eAAO3B,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEc,SAASgC,qBAAT,CAA+BjC,KAA/B,EAAqD;AAAA,MAAfkC,QAAe,uEAAJ,EAAI;AAClE,SAAO,4DACFA,QADE;AAELC,IAAAA,MAAM,EAAE,wCAAuBnC,KAAvB,CAFH;AAGLE,IAAAA,UAAU,EAAEH,oBAAoB,CAACC,KAAD;AAH3B,KAAP;AAKD","sourcesContent":["import { combineReducers } from 'redux';\n\nimport availabilityTypes from '../../enums/availabilityTypes';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport removeUri from '../../lib/removeUri';\nimport syncStatus from './syncStatus';\n\nexport function getSyncStatusReducer(types) {\n  return (state = syncStatus.idle, { type }) => {\n    switch (type) {\n      case types.sync:\n        return syncStatus.syncing;\n      case types.syncError:\n      case types.syncSuccess:\n        return syncStatus.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getContactListReducer(types) {\n  return (state = [], { type, records }) => {\n    const contacts = [];\n    const contactMap = {};\n    switch (type) {\n      case types.syncSuccess:\n        if (!records || records.length === 0) {\n          return state;\n        }\n        state.forEach((contact) => {\n          contacts.push(contact);\n          contactMap[contact.id] = contacts.length - 1;\n        });\n        records.forEach((record) => {\n          const isDeleted = record.availability === availabilityTypes.deleted;\n          const oldIndex = contactMap[record.id];\n          if (oldIndex !== undefined && oldIndex !== null) {\n            if (isDeleted) {\n              contacts[oldIndex] = null;\n              delete contactMap[record.id];\n            } else {\n              const oldContact = contacts[oldIndex];\n              contacts[oldIndex] = {\n                ...oldContact,\n                ...removeUri(record),\n              };\n            }\n          } else if (!isDeleted) {\n            contacts.push(removeUri(record));\n            contactMap[record.id] = contacts.length - 1;\n          }\n        });\n        return contacts.filter((contact) => !!contact);\n      case types.resetSuccess:\n      case types.cleanUp:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSyncTokenReducer(types) {\n  return (state = null, { type, syncToken }) => {\n    switch (type) {\n      case types.syncSuccess:\n        return syncToken;\n      case types.resetSuccess:\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getTimestampReducer(types) {\n  return (state = null, { type, timestamp }) => {\n    switch (type) {\n      case types.syncSuccess:\n        return timestamp;\n      case types.resetSuccess:\n      case types.cleanUp:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAddressBookReducer(types, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(types),\n    syncStatus: getSyncStatusReducer(types),\n  });\n}\n"],"file":"getAddressBookReducer.js"}