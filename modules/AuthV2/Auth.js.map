{"version":3,"sources":["modules/AuthV2/Auth.ts"],"names":["LoginStatusChangeEvent","Auth","name","deps","dep","optional","analytics","setUserId","trackEvents","authentication","logout","_loggedIn","_beforeLogoutHandlers","Set","_afterLoggedInHandlers","_unbindEvents","_lastEnvironmentCounter","_proxyUri","_redirectUri","token","loginStatus","loggedIn","ownerId","owner_id","endpointId","endpoint_id","accessToken","access_token","expireTime","expire_time","expiresIn","expires_in","scope","notLoggedIn","isFreshLogin","refreshTokenValid","loggingIn","beforeLogout","loggingOut","platform","_deps","client","service","_client","onRequestError","error","Error","message","onLoginSuccess","auth","data","setLoginSuccess","handlers","handler","onLoginError","setLoginError","onLogoutSuccess","setLogoutSuccess","onLogoutError","_cache","clean","setLogoutError","onRefreshSuccess","setRefreshSuccess","onRefreshError","isOffline","resStatus","response","status","setRefreshError","alert","danger","authMessages","sessionExpired","payload","ttl","addListener","events","loginSuccess","loginError","logoutSuccess","logoutError","refreshSuccess","refreshError","requestError","removeListener","pending","locale","ready","tabManager","environment","send","event","args","fetchToken","changeCounter","_bindEvents","setInitLogin","username","password","extension","remember","code","redirectUri","tokenType","tokenUri","discoveryUri","setLogin","setData","token_type","refresh_token_expires_in","account","get","extensionData","id","login","token_uri","discovery_uri","refresh","then","json","force","implicit","options","loginUrl","usePKCE","dismissAllAlert","setBeforeLogout","dismissAllExpectSpecified","specifiedAlertIds","rateLimiter","rateLimitAlertId","result","setCancelLogout","Promise","reject","console","setLogout","isImplicit","add","removeBeforeLogoutHandler","String","newAuthData","emit","url","resolve","window","location","href","_clientSecret","length","authOptions","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import url from 'url';\n\nimport { GetExtensionInfoResponse } from '@rc-ex/core/definitions';\nimport {\n  action,\n  RcModuleV2,\n  state,\n  track,\n} from '@ringcentral-integration/core';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport validateIsOffline from '../../lib/validateIsOffline';\nimport { trackEvents } from '../Analytics/trackEvents';\nimport {\n  Deps,\n  LoginOptions,\n  LoginUrlOptions,\n  Token,\n  TokenInfo,\n} from './Auth.interface';\nimport { authMessages } from './authMessages';\nimport { loginStatus } from './loginStatus';\n\nexport const LoginStatusChangeEvent = 'loginStatusChange';\n\n@Module({\n  name: 'Auth',\n  deps: [\n    'Client',\n    'Alert',\n    'Locale',\n    { dep: 'TabManager', optional: true },\n    { dep: 'RateLimiter', optional: true },\n    { dep: 'Environment', optional: true },\n    { dep: 'AuthOptions', optional: true },\n  ],\n})\nclass Auth extends RcModuleV2<Deps> {\n  private _loggedIn: boolean = null;\n  _beforeLogoutHandlers: Set<Function> = new Set();\n  _afterLoggedInHandlers: Set<() => any> = new Set();\n  _unbindEvents: any = null;\n  _lastEnvironmentCounter: number = 0;\n  _proxyUri: string;\n  _redirectUri: string;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  @state\n  loginStatus: string = null;\n\n  @state\n  isFreshLogin: boolean = null;\n\n  @state\n  token: Token = {};\n\n  @track(() => (analytics) => {\n    analytics.setUserId();\n    return [trackEvents.authentication];\n  })\n  @action\n  setLoginSuccess(token: TokenInfo) {\n    this.loginStatus = loginStatus.loggedIn;\n    this.token = {\n      ownerId: token.owner_id,\n      endpointId: token.endpoint_id,\n      accessToken: token.access_token,\n      expireTime: token.expire_time,\n      expiresIn: token.expires_in,\n      scope: token.scope,\n    };\n  }\n\n  @action\n  setLoginError() {\n    this.loginStatus = loginStatus.notLoggedIn;\n    this.token = {};\n    this.isFreshLogin = null;\n  }\n\n  @action\n  setLogoutSuccess() {\n    this.loginStatus = loginStatus.notLoggedIn;\n    this.token = {};\n    this.isFreshLogin = null;\n  }\n\n  @action\n  setRefreshSuccess(token: TokenInfo) {\n    this.loginStatus = loginStatus.loggedIn;\n    this.token = {\n      ownerId: token.owner_id,\n      endpointId: token.endpoint_id,\n      accessToken: token.access_token,\n      expireTime: token.expire_time,\n      expiresIn: token.expires_in,\n      scope: token.scope,\n    };\n  }\n\n  @action\n  setRefreshError(refreshTokenValid: boolean) {\n    this.isFreshLogin = null;\n    if (!refreshTokenValid) {\n      this.token = {};\n      this.loginStatus = loginStatus.notLoggedIn;\n    }\n  }\n\n  @action\n  setLogoutError() {\n    this.loginStatus = loginStatus.notLoggedIn;\n    this.token = {};\n    this.isFreshLogin = null;\n  }\n\n  @action\n  setLogin() {\n    this.loginStatus = loginStatus.loggingIn;\n    this.isFreshLogin = true;\n  }\n\n  @action\n  setBeforeLogout() {\n    this.loginStatus = loginStatus.beforeLogout;\n  }\n\n  @action\n  setCancelLogout() {\n    this.loginStatus = loginStatus.loggedIn;\n  }\n\n  @track(trackEvents.logout)\n  @action\n  setLogout() {\n    this.loginStatus = loginStatus.loggingOut;\n  }\n\n  @action\n  setInitLogin({ loggedIn, token }: { loggedIn: boolean; token: TokenInfo }) {\n    this.loginStatus = loggedIn\n      ? loginStatus.loggedIn\n      : loginStatus.notLoggedIn;\n    this.isFreshLogin = loggedIn ? false : null;\n    this.token = token\n      ? {\n          ownerId: token.owner_id,\n          endpointId: token.endpoint_id,\n          accessToken: token.access_token,\n          expireTime: token.expire_time,\n          expiresIn: token.expires_in,\n          scope: token.scope,\n        }\n      : {};\n  }\n\n  _bindEvents() {\n    if (this._unbindEvents) this._unbindEvents();\n\n    const platform = this._deps.client.service.platform();\n    const client = this._deps.client.service._client;\n    const onRequestError = (error: Error) => {\n      if (error instanceof Error && error.message === 'Token revoked') {\n        this.logout();\n      }\n    };\n\n    const onLoginSuccess = async () => {\n      const token: TokenInfo = await platform.auth().data();\n      this.setLoginSuccess(token);\n      const handlers = [...this._afterLoggedInHandlers];\n      for (const handler of handlers) {\n        handler();\n      }\n    };\n    const onLoginError = () => {\n      this.setLoginError();\n    };\n    const onLogoutSuccess = () => {\n      this.setLogoutSuccess();\n    };\n    const onLogoutError = () => {\n      platform._cache.clean();\n      this.setLogoutError();\n    };\n    const onRefreshSuccess = async () => {\n      const token: TokenInfo = await platform.auth().data();\n      this.setRefreshSuccess(token);\n    };\n    // TODO: fix `error` type.\n    const onRefreshError = async (error: any) => {\n      // user is still considered logged in if the refreshToken is still valid\n      const isOffline = validateIsOffline(error.message);\n\n      const resStatus = (error.response && error.response.status) || null;\n      const refreshTokenValid =\n        (isOffline || resStatus >= 500) &&\n        (await platform.auth().refreshTokenValid());\n      this.setRefreshError(refreshTokenValid);\n\n      if (\n        !refreshTokenValid &&\n        (await platform.auth().data()).access_token !== ''\n      ) {\n        this._deps.alert.danger({\n          message: authMessages.sessionExpired,\n          payload: error,\n          ttl: 0,\n        });\n        // clean the cache so the error doesn't show again\n        platform._cache.clean();\n      }\n    };\n    platform.addListener(platform.events.loginSuccess, onLoginSuccess);\n    platform.addListener(platform.events.loginError, onLoginError);\n    platform.addListener(platform.events.logoutSuccess, onLogoutSuccess);\n    platform.addListener(platform.events.logoutError, onLogoutError);\n    platform.addListener(platform.events.refreshSuccess, onRefreshSuccess);\n    platform.addListener(platform.events.refreshError, onRefreshError);\n    client.addListener(client.events.requestError, onRequestError);\n    this._unbindEvents = () => {\n      platform.removeListener(platform.events.loginSuccess, onLoginSuccess);\n      platform.removeListener(platform.events.loginError, onLoginError);\n      platform.removeListener(platform.events.logoutSuccess, onLogoutSuccess);\n      platform.removeListener(platform.events.logoutError, onLogoutError);\n      platform.removeListener(platform.events.refreshSuccess, onRefreshSuccess);\n      platform.removeListener(platform.events.refreshError, onRefreshError);\n      client.removeListener(client.events.requestError, onRequestError);\n    };\n  }\n\n  _shouldInit() {\n    return (\n      this.pending &&\n      this._deps.locale.ready &&\n      (!this._deps.tabManager || this._deps.tabManager.ready) &&\n      (!this._deps.environment || this._deps.environment.ready)\n    );\n  }\n\n  async onStateChange() {\n    if (this._deps.tabManager && this._deps.tabManager.ready && this.ready) {\n      if (\n        (this._loggedIn && this.loginStatus === loginStatus.notLoggedIn) ||\n        (!this._loggedIn && this.loginStatus === loginStatus.loggedIn)\n      ) {\n        this._loggedIn = !this._loggedIn;\n        this._deps.tabManager.send(LoginStatusChangeEvent, this._loggedIn);\n      } else if (\n        this._deps.tabManager.event &&\n        this._deps.tabManager.event.name === LoginStatusChangeEvent &&\n        this._deps.tabManager.event.args[0] !== this.loggedIn\n      ) {\n        /* eslint { \"prefer-destructuring\": 0 } */\n        this._loggedIn = this._deps.tabManager.event.args[0];\n        await this.fetchToken();\n      }\n    }\n    if (\n      this.ready &&\n      this._deps.environment &&\n      this._deps.environment.changeCounter !== this._lastEnvironmentCounter\n    ) {\n      this._lastEnvironmentCounter = this._deps.environment.changeCounter;\n      this._bindEvents();\n    }\n  }\n\n  async onInit() {\n    const platform = this._deps.client.service.platform();\n    this._loggedIn = await platform.loggedIn();\n    this._bindEvents();\n  }\n\n  async fetchToken() {\n    const platform = this._deps.client.service.platform();\n    const token: TokenInfo = this._loggedIn\n      ? await platform.auth().data()\n      : null;\n    this.setInitLogin({\n      loggedIn: this._loggedIn,\n      token,\n    });\n  }\n\n  async onInitSuccess() {\n    await this.fetchToken();\n  }\n\n  get redirectUri() {\n    return url.resolve(window.location.href, this._redirectUri);\n  }\n\n  get proxyUri() {\n    return this._proxyUri;\n  }\n\n  get ownerId() {\n    return this.token.ownerId;\n  }\n\n  get endpointId() {\n    return this.token.endpointId;\n  }\n\n  get accessToken() {\n    return this.token.accessToken;\n  }\n\n  /**\n   * @description Login either with username/password or with authorization code\n   */\n  @proxify\n  async login({\n    username,\n    password,\n    extension,\n    remember,\n    code,\n    redirectUri,\n    accessToken,\n    expiresIn,\n    endpointId,\n    tokenType,\n    scope,\n    tokenUri,\n    discoveryUri,\n  }: LoginOptions) {\n    this.setLogin();\n    let ownerId: number;\n    if (accessToken) {\n      await this._deps.client.service.platform().auth().setData({\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n        scope,\n      });\n      const extensionData: GetExtensionInfoResponse = await this._deps.client\n        .account()\n        .extension()\n        .get();\n      ownerId = extensionData.id;\n    }\n    // TODO: support to set redirectUri in js sdk v4 login function\n    if (!this._deps.client.service.platform()._redirectUri) {\n      this._deps.client.service.platform()._redirectUri = redirectUri;\n    }\n    return this._deps.client.service.platform().login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n      endpoint_id: endpointId,\n      expires_in: expiresIn,\n      access_token: accessToken,\n      token_type: tokenType,\n      owner_id: ownerId,\n      token_uri: tokenUri,\n      discovery_uri: discoveryUri,\n    });\n  }\n\n  @proxify\n  async refreshToken() {\n    const token = await this._deps.client.service\n      .platform()\n      .refresh()\n      .then((response: any) => response.json());\n\n    return token;\n  }\n\n  getLoginUrl({\n    redirectUri,\n    force,\n    implicit = false,\n    ...options\n  }: LoginUrlOptions) {\n    // TODO: support to set redirectUri in js sdk v4 login function\n    if (!this._deps.client.service.platform()._redirectUri) {\n      this._deps.client.service.platform()._redirectUri = redirectUri;\n    }\n    return `${this._deps.client.service.platform().loginUrl({\n      ...options,\n      redirectUri,\n      implicit,\n      usePKCE: this.usePKCE,\n    })}${force ? '&force=true' : ''}`;\n  }\n\n  /**\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  @proxify\n  async logout({ dismissAllAlert = true } = {}) {\n    this.setBeforeLogout();\n    if (dismissAllAlert) {\n      // fix bug [https://jira.ringcentral.com/browse/RCINT-17381]\n      this._deps.alert.dismissAllExpectSpecified({\n        specifiedAlertIds: [this._deps.rateLimiter?.rateLimitAlertId],\n      });\n    }\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      if (this._deps.tabManager && this._deps.tabManager.ready) {\n        this._deps.tabManager.send(LoginStatusChangeEvent, false);\n      }\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.setCancelLogout();\n          if (this._deps.tabManager && this._deps.tabManager.ready) {\n            this._deps.tabManager.send(LoginStatusChangeEvent, true);\n          }\n          return Promise.reject(result);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    this.setLogout();\n    if (this.isImplicit) {\n      this._deps.client.service.platform()._cache.clean();\n      this.setLogoutSuccess();\n      return null;\n    }\n    return this._deps.client.service.platform().logout();\n  }\n\n  /**\n   * @function\n   * @param {Function} handler\n   * @returns {Function} return that delete handler event, call that will delete that event\n   */\n  addBeforeLogoutHandler(handler: Function): Function {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n  /**\n   * @function\n   * @param {Function} handler\n   */\n  removeBeforeLogoutHandler(handler: Function) {\n    this._beforeLogoutHandlers.delete(handler);\n  }\n\n  addAfterLoggedInHandler(handler: () => any) {\n    this._afterLoggedInHandlers.add(handler);\n    return () => {\n      this._afterLoggedInHandlers.delete(handler);\n    };\n  }\n\n  @proxify\n  async refreshImplicitToken({\n    tokenType,\n    accessToken,\n    expiresIn,\n    endpointId,\n  }: {\n    tokenType: TokenInfo['token_type'];\n    accessToken: TokenInfo['access_token'];\n    expiresIn: TokenInfo['expires_in'];\n    endpointId: TokenInfo['endpoint_id'];\n  }) {\n    try {\n      const extensionData: GetExtensionInfoResponse = await this._deps.client\n        .account()\n        .extension()\n        .get();\n      const ownerId = String(extensionData.id);\n      if (ownerId !== String(this.ownerId)) {\n        return;\n      }\n      const platform = this._deps.client.service.platform();\n      const newAuthData = {\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n        endpoint_id: endpointId,\n      };\n      platform.auth().setData(newAuthData);\n      platform.emit(platform.events.refreshSuccess, newAuthData);\n    } catch (error) {\n      console.error('refreshImplicitToken error:', error);\n    }\n  }\n\n  @proxify\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._deps.client.service.platform().loggedIn();\n    return this.loginStatus === loginStatus.loggedIn;\n  }\n\n  get loggedIn() {\n    return (\n      this.loginStatus === loginStatus.loggedIn ||\n      this.loginStatus === loginStatus.beforeLogout\n    );\n  }\n\n  get notLoggedIn() {\n    return this.loginStatus === loginStatus.notLoggedIn;\n  }\n\n  get isImplicit() {\n    return !(\n      this.usePKCE ||\n      (this._deps.client.service.platform()._clientSecret &&\n        this._deps.client.service.platform()._clientSecret.length > 0)\n    );\n  }\n\n  get usePKCE() {\n    return this._deps.authOptions?.usePKCE ?? false;\n  }\n}\n\nexport { Auth };\n"],"file":"Auth.js"}