{"version":3,"file":"Conversations.interface.js","names":[],"sources":["modules/Conversations/Conversations.interface.ts"],"sourcesContent":["import type MessageAttachmentInfo from '@rc-ex/core/lib/definitions/MessageAttachmentInfo';\n\nimport type { Message } from '../../interfaces/MessageStore.model';\nimport type {\n  Correspondent,\n  FaxAttachment,\n  VoicemailAttachment,\n} from '../../lib/messageHelper';\nimport type { RingCentralClient } from '../../lib/RingCentralClient';\nimport type { Alert } from '../Alert';\nimport type { AppFeatures } from '../AppFeatures';\nimport type { Auth } from '../Auth';\nimport type { ContactMatcher } from '../ContactMatcher';\nimport type { ConversationLogger } from '../ConversationLogger';\nimport type { ExtensionInfo } from '../ExtensionInfo';\nimport type { Attachment, MessageSender } from '../MessageSender';\nimport type { MessageStore } from '../MessageStore';\nimport type { RegionSettings } from '../RegionSettings';\n\nexport interface Deps {\n  alert: Alert;\n  auth: Auth;\n  client: RingCentralClient;\n  contactMatcher?: ContactMatcher;\n  conversationLogger?: ConversationLogger;\n  appFeatures: AppFeatures;\n  extensionInfo: ExtensionInfo;\n  messageSender: MessageSender;\n  messageStore: MessageStore;\n  regionSettings: RegionSettings;\n  conversationsOptions?: ConversationsOptions;\n}\n\nexport interface ConversationsOptions {\n  perPage?: number;\n  daySpan?: number;\n  enableLoadOldMessages?: boolean;\n  showMMSAttachment?: boolean;\n  enableContactMatch?: boolean;\n}\n\nexport interface InputContent {\n  conversationId: string;\n  text?: string;\n  attachments?: Attachment[];\n}\n\nexport interface FormattedConversation extends Message {\n  unreadCounts: number;\n  self: Correspondent;\n  voicemailAttachment?: VoicemailAttachment;\n  faxAttachment?: FaxAttachment;\n  mmsAttachments: MessageAttachmentInfo[];\n  correspondents: Correspondent[];\n  conversationLogId: string;\n  isLogging: boolean;\n  correspondentMatches: CorrespondentMatch[];\n  conversationMatches: ConversationMatch[];\n}\n\nexport interface FilteredConversation extends FormattedConversation {\n  matchOrder?: number;\n  matchedMessage?: Message;\n}\n\nexport interface CorrespondentMatch {\n  name?: string;\n  phoneNumber?: string;\n  rawId?: string;\n  id?: string;\n  doNotCall?: boolean;\n  type?: string;\n  resourceType?: string;\n}\n\nexport interface ConversationMatch {\n  id: string;\n}\n\nexport interface CorrespondentResponse {\n  [key: string]: string;\n}\n\nexport interface LastMatchedCorrespondentEntity {\n  id: string;\n  name: string;\n}\nexport interface CurrentConversation extends FormattedConversation {\n  messages: Message[];\n  senderNumber: Correspondent;\n  recipients: Correspondent[];\n  lastMatchedCorrespondentEntity?: LastMatchedCorrespondentEntity;\n}\n"],"mappings":""}