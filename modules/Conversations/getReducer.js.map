{"version":3,"sources":["modules/Conversations/getReducer.ts"],"names":["getSearchInputReducer","types","state","type","input","updateSearchInput","resetSuccess","getTypeFilterReducer","messageTypes","all","typeFilter","updateTypeFilter","getOldConversationsReducer","records","conversationId","fetchOldConversationsSuccess","concat","map","normalizeRecord","deleteConversation","filter","c","cleanOldConversations","initSuccess","getFetchConversationsStatusReducer","status","idle","fetchOldConversations","fetching","fetchOldConversationsError","getCurrentPageReducer","isIncreaseCurrentPage","increaseCurrentPage","resetCurrentPage","getCurrentConversationIdReducer","updateCurrentConversationId","getOldMessagesReducer","fetchOldMessagesSuccess","getFetchMessagesStatusReducer","fetchOldMessages","fetchOldMessagesError","getMessageTextsReducer","text","updateMessageText","msg","removeMessageText","getConversationStatusReducer","reply","pushing","replySuccess","replyError","getCorrespondentMatch","entities","entity","addEntities","newState","removeEntity","filteredState","item","rawId","id","getCorrespondentResponse","responses","phoneNumber","addResponses","formatResponses","reduce","accumulator","response","to","from","direction","conversation","number","extensionNumber","removeResponse","getReducer","searchInput","oldConversations","currentPage","fetchConversationsStatus","currentConversationId","oldMessages","fetchMessagesStatus","messageTexts","conversationStatus","correspondentMatch","correspondentResponse"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nimport messageTypes from '../../enums/messageTypes';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport { normalizeRecord } from '../../lib/messageHelper';\nimport status from './status';\n\nexport function getSearchInputReducer(types) {\n  return (state = '', { type, input = '' }) => {\n    switch (type) {\n      case types.updateSearchInput:\n        return input;\n      case types.resetSuccess:\n        return '';\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getTypeFilterReducer(types) {\n  return (state = messageTypes.all, { type, typeFilter }) => {\n    switch (type) {\n      case types.updateTypeFilter:\n        return typeFilter;\n      case types.resetSuccess:\n        return messageTypes.all;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getOldConversationsReducer(types) {\n  return (state = [], { type, records, conversationId }) => {\n    switch (type) {\n      case types.fetchOldConversationsSuccess:\n        return [].concat(state).concat(records.map(normalizeRecord));\n      case types.deleteConversation:\n        return state.filter((c) => c.conversationId !== conversationId);\n      case types.cleanOldConversations:\n      case types.resetSuccess:\n      case types.updateTypeFilter:\n      case types.initSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getFetchConversationsStatusReducer(types) {\n  return (state = status.idle, { type }) => {\n    switch (type) {\n      case types.fetchOldConversations:\n        return status.fetching;\n      case types.fetchOldConversationsSuccess:\n      case types.fetchOldConversationsError:\n      case types.resetSuccess:\n      case types.updateTypeFilter:\n      case types.initSuccess:\n        return status.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentPageReducer(types) {\n  return (state = 1, { type, isIncreaseCurrentPage }) => {\n    switch (type) {\n      case types.increaseCurrentPage:\n        return state + 1;\n      case types.fetchOldConversationsSuccess:\n        return isIncreaseCurrentPage ? state + 1 : state;\n      case types.updateTypeFilter:\n      case types.resetSuccess:\n      case types.initSuccess:\n      case types.resetCurrentPage:\n        return 1;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentConversationIdReducer(types) {\n  return (state = null, { type, conversationId }) => {\n    switch (type) {\n      case types.updateCurrentConversationId:\n        return conversationId;\n      case types.initSuccess:\n      case types.resetSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getOldMessagesReducer(types) {\n  return (state = [], { type, records }) => {\n    switch (type) {\n      case types.fetchOldMessagesSuccess:\n        return [].concat(state).concat(records.map(normalizeRecord));\n      case types.updateCurrentConversationId:\n      case types.resetSuccess:\n      case types.initSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getFetchMessagesStatusReducer(types) {\n  return (state = status.idle, { type }) => {\n    switch (type) {\n      case types.fetchOldMessages:\n        return status.fetching;\n      case types.fetchOldMessagesSuccess:\n      case types.fetchOldMessagesError:\n      case types.updateCurrentConversationId:\n      case types.resetSuccess:\n      case types.initSuccess:\n        return status.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessageTextsReducer(types) {\n  return (state = [], { type, text, conversationId }) => {\n    switch (type) {\n      case types.updateMessageText:\n        return [{ conversationId, text }].concat(\n          state.filter(\n            (msg) =>\n              typeof msg === 'object' && msg.conversationId !== conversationId,\n          ),\n        );\n      case types.removeMessageText:\n        return state.filter(\n          (msg) =>\n            typeof msg === 'object' && msg.conversationId !== conversationId,\n        );\n      case types.resetSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConversationStatusReducer(types) {\n  return (state = status.idle, { type }) => {\n    switch (type) {\n      case types.reply:\n        return status.pushing;\n      case types.replySuccess:\n      case types.replyError:\n        return status.idle;\n      default:\n        return state;\n    }\n  };\n}\nexport function getCorrespondentMatch(types) {\n  return (state = [], { type, entities = [], entity = {} }) => {\n    switch (type) {\n      case types.addEntities: {\n        const newState = [...entities];\n        return newState;\n      }\n      case types.removeEntity: {\n        const newState = [...state];\n        const filteredState = newState.filter(\n          (item) => item.rawId !== entity.id && item.id !== entity.id,\n        );\n        return filteredState;\n      }\n      default:\n        return state;\n    }\n  };\n}\nexport function getCorrespondentResponse(types) {\n  return (state = {}, { type, responses = [], phoneNumber = '' }) => {\n    switch (type) {\n      case types.addResponses: {\n        const formatResponses = responses.reduce((accumulator, response) => {\n          const {\n            to,\n            from,\n            direction,\n            conversation: { id },\n          } = response;\n          const number = direction === 'Inbound' ? from : to[0];\n          phoneNumber = number.phoneNumber || number.extensionNumber;\n          return {\n            ...accumulator,\n            [phoneNumber]: id,\n          };\n        }, {});\n        return formatResponses;\n      }\n      case types.removeResponse: {\n        const newState = { ...state };\n        delete newState[phoneNumber];\n        return newState;\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    searchInput: getSearchInputReducer(types),\n    typeFilter: getTypeFilterReducer(types),\n    oldConversations: getOldConversationsReducer(types),\n    currentPage: getCurrentPageReducer(types),\n    fetchConversationsStatus: getFetchConversationsStatusReducer(types),\n    currentConversationId: getCurrentConversationIdReducer(types),\n    oldMessages: getOldMessagesReducer(types),\n    fetchMessagesStatus: getFetchMessagesStatusReducer(types),\n    messageTexts: getMessageTextsReducer(types),\n    conversationStatus: getConversationStatusReducer(types),\n    correspondentMatch: getCorrespondentMatch(types),\n    correspondentResponse: getCorrespondentResponse(types),\n  });\n}\n"],"file":"getReducer.js"}