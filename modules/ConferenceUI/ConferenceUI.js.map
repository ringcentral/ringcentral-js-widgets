{"version":3,"sources":["modules/ConferenceUI/ConferenceUI.ts"],"names":["ConferenceUI","name","deps","phoneNumbers","countryCounter","acc","item","country","isoCode","countryName","countryNames","getString","_deps","locale","currentLocale","region","location","phoneNumber","conference","data","hostCode","participantCode","allowJoinBeforeHost","dialInNumbers","getDialInNumbers","dialInNumber","additionalNumbers","disableTxtBtn","appFeatures","hasComposeTextPermission","countryCode","regionSettings","areaCode","brandName","brand","dialInNumbersLink","brandConfig","conferenceInviteText","inviteText","showSpinner","ready","composeText","showSaveAsDefault","enableAutoEnterHostKey","alert","msg","warning","message","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","onInviteWithText","routerInteraction","push","joinAsHost","onJoinAsHost","history","theDialInNumber","call","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { map, reduce } from 'ramda';\n\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  RcUIModuleV2,\n  UIFunctions,\n  UIProps,\n} from '@ringcentral-integration/core';\n\nimport countryNames from '../../lib/countryNames';\nimport {\n  ConferenceContainerProps,\n  ConferencePanelProps,\n  Deps,\n} from './ConferenceUI.interface';\n\n@Module({\n  name: 'ConferenceUI',\n  deps: [\n    'Conference',\n    'RegionSettings',\n    'Locale',\n    'ComposeText',\n    'AppFeatures',\n    'Brand',\n    'Alert',\n    'RouterInteraction',\n    'Call',\n  ],\n})\nexport class ConferenceUI extends RcUIModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  // TODO: add type\n  getDialInNumbers(phoneNumbers: any[]) {\n    const countryCounter = reduce(\n      (acc, item) => {\n        if (!acc[item.country.isoCode]) {\n          acc[item.country.isoCode] = 1;\n        } else {\n          acc[item.country.isoCode] += 1;\n        }\n        return acc;\n      },\n      {} as Record<string, number>,\n      phoneNumbers,\n    );\n    return map((item) => {\n      const countryName = countryNames.getString(\n        item.country.isoCode,\n        this._deps.locale.currentLocale,\n      );\n      // only show the provinces of canada\n      return {\n        region:\n          countryCounter[item.country.isoCode] > 1\n            ? `${countryName}, ${item.location}`\n            : countryName,\n        phoneNumber: item.phoneNumber,\n      };\n    }, phoneNumbers);\n  }\n\n  getUIProps(): UIProps<ConferencePanelProps> {\n    const {\n      hostCode = '',\n      participantCode = '',\n      allowJoinBeforeHost = false,\n      phoneNumbers = [],\n    } = this._deps.conference.data || {};\n    return {\n      dialInNumbers: this.getDialInNumbers(phoneNumbers),\n      dialInNumber: this._deps.conference.dialInNumber || '',\n      hostCode,\n      participantCode,\n      allowJoinBeforeHost,\n      additionalNumbers: this._deps.conference.additionalNumbers,\n      disableTxtBtn: !this._deps.appFeatures.hasComposeTextPermission,\n      countryCode: this._deps.regionSettings.countryCode,\n      areaCode: this._deps.regionSettings.areaCode,\n      currentLocale: this._deps.locale.currentLocale,\n      brandName: this._deps.brand.name,\n      dialInNumbersLink:\n        this._deps.brand.brandConfig.conference.dialInNumbersLink,\n      conferenceInviteText: this._deps.brand.brandConfig.conference.inviteText,\n      showSpinner: !(\n        this._deps.conference.ready &&\n        this._deps.regionSettings.ready &&\n        this._deps.locale.ready &&\n        this._deps.composeText.ready\n      ),\n      showSaveAsDefault: this._deps.conference.showSaveAsDefault,\n    };\n  }\n\n  getUIFunctions({\n    enableAutoEnterHostKey = false,\n  }: ConferenceContainerProps): UIFunctions<ConferencePanelProps> {\n    return {\n      alert: (msg) => {\n        this._deps.alert.warning({ message: msg });\n      },\n      updateDialInNumber: (dialInNumber) => {\n        this._deps.conference.updateDialInNumber(dialInNumber);\n      },\n      updateAdditionalNumbers: (additionalDialInNumbers) => {\n        this._deps.conference.updateAdditionalNumbers(additionalDialInNumbers);\n      },\n      inviteWithText: (text) => {\n        this._deps.composeText.updateMessageText(text);\n        // for track\n        this._deps.conference.onInviteWithText();\n        this._deps.routerInteraction.push('/composeText');\n        // update settings\n      },\n      joinAsHost: (dialInNumber) => {\n        // for track\n        this._deps.conference.onJoinAsHost();\n        this._deps.routerInteraction.history.push('/dialer');\n        const theDialInNumber =\n          dialInNumber || this._deps.conference.dialInNumber;\n        const phoneNumber = enableAutoEnterHostKey\n          ? `${theDialInNumber},,${this._deps.conference.data.hostCode}#`\n          : theDialInNumber;\n        // TODO: check interface error\n        this._deps.call.call({ phoneNumber });\n      },\n      onAllowJoinBeforeHostChange: (allowJoinBeforeHost) => {\n        this._deps.conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n      },\n      showHelpCommands: () => {\n        this._deps.routerInteraction.push('/conference/commands');\n      },\n    };\n  }\n}\n"],"file":"ConferenceUI.js"}