{"version":3,"file":"GlipCompany.js","names":["_core","require","_di","_DataFetcherV","_dec","_dec2","_class","_class2","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","call","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","l","initializer","slice","reverse","reduce","GlipCompany","Module","name","deps","dep","optional","computed","_ref","data","_DataFetcherV2Consume","_super","_this","_source","DataSource","glipCompanyOptions","fetchFunction","_fetchFunction","regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","_deps","client","glip","companies","get","sent","abrupt","stop","readyCheckFunction","appFeatures","ready","permissionCheckFunction","hasGlipPermission","dataFetcherV2","register","_this$data","info","domain","id","DataFetcherV2Consumer","exports"],"sources":["modules/GlipCompany/GlipCompany.ts"],"sourcesContent":["import { computed } from '@ringcentral-integration/core';\nimport type GlipCompanyType from 'ringcentral-client/build/definitions/GlipCompany';\n\nimport { Module } from '../../lib/di';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\n\nimport type { Deps } from './GlipCompany.interface';\n\n@Module({\n  name: 'GlipCompany',\n  deps: [\n    'Client',\n    'DataFetcherV2',\n    'AppFeatures',\n    { dep: 'GlipCompanyOptions', optional: true },\n  ],\n})\nexport class GlipCompany extends DataFetcherV2Consumer<Deps, GlipCompanyType> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.glipCompanyOptions,\n      key: 'glipCompany',\n      fetchFunction: async (): Promise<GlipCompanyType> => {\n        const response = await this._deps.client.glip().companies('~').get();\n        return response;\n      },\n      readyCheckFunction: () => this._deps.appFeatures.ready,\n      permissionCheckFunction: () => this._deps.appFeatures.hasGlipPermission,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  @computed(({ data }: GlipCompany) => [data])\n  get info() {\n    return this.data ?? {};\n  }\n\n  get name() {\n    return this.info.name;\n  }\n\n  get domain() {\n    return this.info.domain;\n  }\n\n  get id() {\n    return this.info.id;\n  }\n}\n"],"mappings":"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","ignoreList":[]}