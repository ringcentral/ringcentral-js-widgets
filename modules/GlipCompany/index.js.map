{"version":3,"sources":["modules/GlipCompany/index.ts"],"names":["GlipCompany","deps","dep","optional","client","appFeatures","options","fetchFunction","_client","glip","companies","get","response","readyCheckFn","_appFeatures","ready","cleanOnReset","info","name","domain","id","hasGlipPermission","DataFetcher","selector","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaqBA,W;AAXrB;AACA;AACA;AACA;OACC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,aAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAHI;AADA,CAAP,C;;;;;AAQC;AACF;AACA;AACA;AACA;AACE,6BAAiD;AAAA;;AAAA,QAAnCC,MAAmC,QAAnCA,MAAmC;AAAA,QAA3BC,WAA2B,QAA3BA,WAA2B;AAAA,QAAXC,OAAW;;AAAA;;AAC/C;AACEF,MAAAA,MAAM,EAANA,MADF;AAEEG,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACU,MAAKC,OAAL,CAAaC,IAAb,GAAoBC,SAApB,CAA8B,GAA9B,EAAmCC,GAAnC,EADV;;AAAA;AACPC,kBAAAA,QADO;AAAA,mDAENA,QAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAFf;AAMEC,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,YAAL,CAAkBC,KAAxB;AAAA,OANhB;AAOEC,MAAAA,YAAY,EAAE;AAPhB,OAQKV,OARL;;AAD+C;;AAW/C,UAAKQ,YAAL,GAAoBT,WAApB;AAX+C;AAYhD;;;;wBAEW;AACV,aAAO,aAAP;AACD;;;wBAKU;AACT,aAAO,KAAKY,IAAL,CAAUC,IAAjB;AACD;;;wBAEY;AACX,aAAO,KAAKD,IAAL,CAAUE,MAAjB;AACD;;;wBAEQ;AACP,aAAO,KAAKF,IAAL,CAAUG,EAAjB;AACD;;;wBAEoB;AACnB,aAAO,CAAC,CAAC,KAAKN,YAAL,CAAkBO,iBAA3B;AACD;;;;EAzCsCC,wB,wEAwBtCC,kB;;;;;;;WACM,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C","sourcesContent":["import DataFetcher from '../../lib/DataFetcher';\nimport { Module } from '../../lib/di';\nimport { selector } from '../../lib/selector';\n\n/**\n * @class\n * @description Glip Company managing module.\n */\n@Module({\n  deps: [\n    'Client',\n    'AppFeatures',\n    { dep: 'GLipCompanyOptions', optional: true },\n  ],\n})\nexport default class GlipCompany extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, appFeatures, ...options }) {\n    super({\n      client,\n      fetchFunction: async () => {\n        const response = await this._client.glip().companies('~').get();\n        return response;\n      },\n      readyCheckFn: () => this._appFeatures.ready,\n      cleanOnReset: true,\n      ...options,\n    });\n    this._appFeatures = appFeatures;\n  }\n\n  get _name() {\n    return 'glipCompany';\n  }\n\n  @selector\n  info = [() => this.data, (data) => data || {}];\n\n  get name() {\n    return this.info.name;\n  }\n\n  get domain() {\n    return this.info.domain;\n  }\n\n  get id() {\n    return this.info.id;\n  }\n\n  get _hasPermission() {\n    return !!this._appFeatures.hasGlipPermission;\n  }\n}\n"],"file":"index.js"}