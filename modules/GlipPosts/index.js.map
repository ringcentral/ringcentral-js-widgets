{"version":3,"file":"index.js","names":["_moduleStatuses","_interopRequireDefault","require","_di","_ensureExist","_isBlank","_proxify","_RcModule2","_actionTypes","_getReducer","_interopRequireWildcard","_status","_dec","_class","_class2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","target","i","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","property","decorators","context","initializer","slice","reverse","reduce","decorator","glipPostsRegExp","glipGroupRegExp","subscriptionFilter","DEFAULT_LOAD_TTL","GlipPosts","Module","deps","dep","optional","_RcModule","_super","_ref","_this","client","auth","subscription","storage","extensionFeatures","_ref$loadTtl","loadTtl","options","actionTypes","_reducer","getReducer","_client","ensureExist","_auth","_extensionFeatures","_subscription","_fetchPromises","_lastMessage","_loadTtl","_storage","_readTimeStorageKey","registerReducer","reducer","getGlipPostsReadTimeReducer","_newPostListeners","addNewPostListener","listen","initialize","_this2","store","subscribe","_onStateChange","_onStateChange2","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","_shouldInit","dispatch","type","init","_hasPermission","abrupt","initSuccess","_shouldReset","resetSuccess","_shouldHandleSubscriptionMessage","_processSubscription","stop","loggedIn","ready","pending","message","test","event","body","_message$body","eventType","post","createSuccess","groupId","record","oldRecordId","id","isSendByMe","creatorId","ownerId","_loadPosts","_callee2","recordCount","lastPosts","fetchTime","_args2","_callee2$","_context2","postsMap","fetchTimeMap","Date","now","fetchPosts","loadPosts","_x","_fetchPosts","_callee4","_this3","pageToken","promise","_args4","_callee4$","_context4","_callee3","params","response","_callee3$","_context3","fetch","glip","groups","posts","list","sent","fetchSuccess","records","lastPageToken","navigation","t0","fetchError","_x2","_loadNextPage","_callee5","pageInfo","_callee5$","_context5","pageInfos","prevPageToken","loadNextPage","_x3","_x4","_create","_callee6","_ref3","text","mentions","fakeId","fakeRecord","_callee6$","_context6","postInputs","isBlank","mention","matcherId","replace","concat","sendStatus","status","creating","creationTime","updatePostInput","createError","_x5","_sendFile","_callee7","_ref4","fileName","rawFile","platform","_callee7$","_context7","service","name","headers","json","console","sendFile","_x6","updateReadTime","time","_ref5","textValue","state","glipPostsStore","moduleStatuses","getItem","fetchTimes","_this$_extensionFeatu","_this$_extensionFeatu2","features","Glip","available","RcModule","proxify","exports"],"sources":["modules/GlipPosts/index.ts"],"sourcesContent":["import moduleStatuses from '../../enums/moduleStatuses';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport { isBlank } from '../../lib/isBlank';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport { actionTypes } from './actionTypes';\nimport getReducer, { getGlipPostsReadTimeReducer } from './getReducer';\nimport { status } from './status';\n\nconst glipPostsRegExp = /glip\\/posts$/;\nconst glipGroupRegExp = /glip\\/groups$/;\n\nconst subscriptionFilter = '/restapi/v1.0/glip/posts';\n\nconst DEFAULT_LOAD_TTL = 30 * 60 * 1000;\n\n@Module({\n  deps: [\n    'Client',\n    'Auth',\n    'Subscription',\n    'Storage',\n    'ExtensionFeatures',\n    { dep: 'GlipPostsOptions', optional: true },\n  ],\n})\nexport default class GlipPosts extends RcModule {\n  constructor({\n    client,\n    auth,\n    subscription,\n    storage,\n    extensionFeatures,\n    loadTtl = DEFAULT_LOAD_TTL,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._reducer = getReducer(this.actionTypes);\n\n    this._client = ensureExist.call(this, client, 'client');\n    this._auth = ensureExist.call(this, auth, 'auth');\n    this._extensionFeatures = extensionFeatures;\n    this._subscription = ensureExist.call(this, subscription, 'subscription');\n    this._fetchPromises = {};\n    this._lastMessage = null;\n    this._loadTtl = loadTtl;\n\n    this._storage = storage;\n    this._readTimeStorageKey = 'glipPostReadTime';\n    this._storage.registerReducer({\n      key: this._readTimeStorageKey,\n      reducer: getGlipPostsReadTimeReducer(this.actionTypes),\n    });\n    this._newPostListeners = [];\n  }\n\n  addNewPostListener(listen) {\n    if (typeof listen === 'function') {\n      this._newPostListeners.push(listen);\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (!this._hasPermission) return;\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n      this._subscription.subscribe([subscriptionFilter]);\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this._fetchPromises = {};\n    } else if (this._shouldHandleSubscriptionMessage()) {\n      this._processSubscription();\n    }\n  }\n\n  override _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._subscription.ready &&\n      this._extensionFeatures.ready &&\n      this.pending\n    );\n  }\n\n  override _shouldReset() {\n    return (\n      (!this._auth.loggedIn ||\n        !this._extensionFeatures.ready ||\n        !this._subscription.ready) &&\n      this.ready\n    );\n  }\n\n  _shouldHandleSubscriptionMessage() {\n    return !!(\n      this.ready &&\n      this._subscription &&\n      this._subscription.ready &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    );\n  }\n\n  _processSubscription() {\n    const { message } = this._subscription;\n    this._lastMessage = message;\n    if (\n      message &&\n      (glipPostsRegExp.test(message.event) ||\n        glipGroupRegExp.test(message.event)) &&\n      message.body\n    ) {\n      const { eventType, ...post } = message.body;\n      if (eventType.indexOf('Post') !== 0) {\n        return;\n      }\n      if (eventType === 'PostRemoved') {\n        return;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.createSuccess,\n        groupId: post.groupId,\n        record: post,\n        oldRecordId: post.id,\n        isSendByMe:\n          post.creatorId === this._auth.ownerId && eventType === 'PostAdded',\n      });\n      if (eventType === 'PostAdded' && post.creatorId !== this._auth.ownerId) {\n        this._newPostListeners.forEach((listen) => {\n          listen(post);\n        });\n      }\n    }\n  }\n\n  @proxify\n  async loadPosts(groupId, recordCount = 20) {\n    const lastPosts = this.postsMap[groupId];\n    const fetchTime = this.fetchTimeMap[groupId];\n    if (lastPosts && fetchTime && Date.now() - fetchTime < this._loadTtl) {\n      return;\n    }\n    await this.fetchPosts(groupId, recordCount);\n  }\n\n  @proxify\n  async fetchPosts(groupId, recordCount = 20, pageToken) {\n    if (!groupId) {\n      return;\n    }\n    if (!this._fetchPromises[groupId]) {\n      this._fetchPromises[groupId] = (async () => {\n        try {\n          this.store.dispatch({\n            type: this.actionTypes.fetch,\n          });\n          const params = { recordCount };\n          if (pageToken) {\n            params.pageToken = pageToken;\n          }\n          const response = await this._client\n            .glip()\n            .groups(groupId)\n            .posts()\n            .list(params);\n          this.store.dispatch({\n            type: this.actionTypes.fetchSuccess,\n            groupId,\n            records: response.records,\n            lastPageToken: pageToken,\n            navigation: response.navigation,\n          });\n        } catch (e: any /** TODO: confirm with instanceof */) {\n          this.store.dispatch({\n            type: this.actionTypes.fetchError,\n          });\n        }\n        this._fetchPromises[groupId] = null;\n      })();\n    }\n    const promise = this._fetchPromises[groupId];\n    await promise;\n  }\n\n  @proxify\n  async loadNextPage(groupId, recordCount) {\n    const pageInfo = this.pageInfos[groupId];\n    const pageToken = pageInfo && pageInfo.prevPageToken;\n    if (!pageToken) {\n      return;\n    }\n    await this.fetchPosts(groupId, recordCount, pageToken);\n  }\n\n  @proxify\n  async create({ groupId }) {\n    let text = this.postInputs[groupId] && this.postInputs[groupId].text;\n    const mentions =\n      this.postInputs[groupId] && this.postInputs[groupId].mentions;\n    if (isBlank(text) || !groupId) {\n      return;\n    }\n    if (mentions && mentions.length > 0) {\n      mentions.forEach((mention) => {\n        if (!mention.matcherId) {\n          return;\n        }\n        text = text.replace(\n          mention.mention,\n          `![:Person](${mention.matcherId})`,\n        );\n      });\n    }\n    const fakeId = `${Date.now()}`;\n    const fakeRecord = {\n      id: fakeId,\n      groupId,\n      creatorId: this._auth.ownerId,\n      sendStatus: status.creating,\n      creationTime: `${new Date(Date.now())}`,\n      text,\n      type: 'TextMessage',\n    };\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.create,\n        groupId,\n        record: fakeRecord,\n      });\n      this.updatePostInput({ text: '', groupId, mentions: [] });\n      const record = await this._client.glip().groups(groupId).posts().post({\n        text,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.createSuccess,\n        groupId,\n        record,\n        oldRecordId: fakeId,\n      });\n    } catch (e: any /** TODO: confirm with instanceof */) {\n      fakeRecord.sendStatus = status.createError;\n      this.store.dispatch({\n        type: this.actionTypes.createError,\n        record: fakeRecord,\n        groupId,\n        oldRecordId: fakeId,\n      });\n      this.updatePostInput({ text, groupId, mentions });\n    }\n  }\n\n  @proxify\n  async sendFile({ fileName, groupId, rawFile }) {\n    try {\n      const platform = this._client.service.platform();\n      const body = rawFile;\n      const response = await platform.post(\n        '/restapi/v1.0/glip/files',\n        body,\n        { groupId, name: fileName },\n        {\n          headers: {\n            'Content-Type': 'application/octet-stream',\n          },\n        },\n      );\n      return response.json();\n    } catch (e: any /** TODO: confirm with instanceof */) {\n      console.error(e);\n    }\n    return null;\n  }\n\n  @proxify\n  updateReadTime(groupId, time) {\n    this.store.dispatch({\n      type: this.actionTypes.updateReadTime,\n      groupId,\n      time,\n    });\n  }\n\n  @proxify\n  updatePostInput({ text, groupId, mentions }) {\n    this.store.dispatch({\n      type: this.actionTypes.updatePostInput,\n      groupId,\n      mentions,\n      textValue: text,\n    });\n  }\n\n  get postsMap() {\n    return this.state.glipPostsStore;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get postInputs() {\n    return this.state.postInputs;\n  }\n\n  get readTimeMap() {\n    return this._storage.getItem(this._readTimeStorageKey);\n  }\n\n  get pageInfos() {\n    return this.state.pageInfos;\n  }\n\n  get fetchTimeMap() {\n    return this.state.fetchTimes;\n  }\n\n  get _hasPermission() {\n    return !!this._extensionFeatures.features?.Glip?.available;\n  }\n}\n"],"mappings":"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"}