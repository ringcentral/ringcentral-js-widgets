{"version":3,"file":"getReducer.js","names":["_redux","require","_getModuleStatusReducer","_interopRequireDefault","_status","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","getGlipPostsStatusReducer","types","state","status","idle","_ref","type","fetch","fetching","fetchError","fetchSuccess","getGlipPostsCreateStatusReducer","_ref2","create","creating","createError","createSuccess","getGlipPostsStoreReducer","_ref3","groupId","records","record","oldRecordId","isSendByMe","lastPageToken","newState","newPosts","oldPostIndex","preRecords","concat","findIndex","p","id","splice","creatorId","text","sendStatus","resetSuccess","getGlipPostsInputsReducer","_ref4","textValue","mentions","updatePostInput","getGlipPostsReadTimeReducer","_ref5","_ref5$time","time","Date","now","updateReadTime","getGlipPostsPageInfoReducer","_ref6","navigation","getGlipPostsFetchTimeReducer","_ref7","getGlipPostsReducer","reducers","combineReducers","getModuleStatusReducer","fetchStatus","glipPostsStore","createStatus","postInputs","pageInfos","fetchTimes"],"sources":["modules/GlipPosts/getReducer.ts"],"sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport status from './status';\n\nexport function getGlipPostsStatusReducer(types) {\n  return (state = status.idle, { type }) => {\n    switch (type) {\n      case types.fetch:\n        return status.fetching;\n      case types.fetchError:\n      case types.fetchSuccess:\n        return status.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getGlipPostsCreateStatusReducer(types) {\n  return (state = status.idle, { type }) => {\n    switch (type) {\n      case types.create:\n        return status.creating;\n      case types.createError:\n      case types.createSuccess:\n        return status.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getGlipPostsStoreReducer(types) {\n  return (\n    state = {},\n    { type, groupId, records, record, oldRecordId, isSendByMe, lastPageToken },\n  ) => {\n    let newState;\n    let newPosts;\n    let oldPostIndex;\n    switch (type) {\n      case types.fetchSuccess:\n        newState = {\n          ...state,\n        };\n        if (!lastPageToken) {\n          newState[groupId] = records;\n        } else {\n          const preRecords = newState[groupId];\n          newState[groupId] = [].concat(preRecords).concat(records);\n        }\n        return newState;\n      case types.create:\n      case types.createSuccess:\n      case types.createError:\n        newState = {\n          ...state,\n        };\n        newPosts = (newState[groupId] && [...newState[groupId]]) || [];\n        if (oldRecordId) {\n          oldPostIndex = newPosts.findIndex((p) => p.id === oldRecordId);\n        } else {\n          oldPostIndex = newPosts.findIndex((p) => p.id === record.id);\n        }\n        if (oldPostIndex > -1) {\n          newPosts.splice(oldPostIndex, 1, record);\n          newState[groupId] = newPosts;\n        } else if (isSendByMe) {\n          oldPostIndex = newPosts.findIndex(\n            (p) =>\n              p.creatorId === record.creatorId &&\n              p.text === record.text &&\n              p.sendStatus === status.creating,\n          );\n          if (oldPostIndex === -1) {\n            newState[groupId] = [record].concat(\n              newPosts.filter((p) => p.id !== record.id),\n            );\n          }\n        } else {\n          newState[groupId] = [record].concat(\n            newPosts.filter((p) => p.id !== record.id),\n          );\n        }\n        return newState;\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getGlipPostsInputsReducer(types) {\n  return (state = {}, { type, groupId, textValue, mentions }) => {\n    let newState;\n    switch (type) {\n      case types.updatePostInput:\n        newState = {\n          ...state,\n        };\n        newState[groupId] = {\n          text: textValue,\n          mentions,\n        };\n        return newState;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getGlipPostsReadTimeReducer(types) {\n  return (state = {}, { type, groupId, time = Date.now() }) => {\n    let newState;\n    switch (type) {\n      case types.updateReadTime:\n        newState = {\n          ...state,\n        };\n        newState[groupId] = time;\n        return newState;\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getGlipPostsPageInfoReducer(types) {\n  return (state = {}, { type, groupId, navigation }) => {\n    let newState;\n    switch (type) {\n      case types.fetchSuccess:\n        newState = {\n          ...state,\n        };\n        newState[groupId] = navigation;\n        return newState;\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getGlipPostsFetchTimeReducer(types) {\n  return (state = {}, { type, groupId }) => {\n    let newState;\n    switch (type) {\n      case types.fetchSuccess:\n        newState = {\n          ...state,\n        };\n        newState[groupId] = Date.now();\n        return newState;\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getGlipPostsReducer(types, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(types),\n    fetchStatus: getGlipPostsStatusReducer(types),\n    glipPostsStore: getGlipPostsStoreReducer(types),\n    createStatus: getGlipPostsCreateStatusReducer(types),\n    postInputs: getGlipPostsInputsReducer(types),\n    pageInfos: getGlipPostsPageInfoReducer(types),\n    fetchTimes: getGlipPostsFetchTimeReducer(types),\n  });\n}\n"],"mappings":"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"}