{"version":3,"file":"EvCallHistory.js","names":["_callDirections","require","_di","_core","_directTransferNotificationTypes","_callbackTypes","_FormatPhoneNumber","_callUniqueIdentifies","_contactMatchIdentify","_dec","_dec2","_dec3","_dec4","_class","_class2","_classCallCheck","a","n","TypeError","_defineProperties","e","r","t","length","o","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","prototype","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","String","Number","_inherits","create","constructor","value","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","l","keys","forEach","initializer","slice","reverse","reduce","EvCallHistory","Module","name","deps","dep","optional","computed","that","rawCalls","contactMatches","activityMatches","formattedCalls","_RcModuleV","_super","_this$_deps$contactMa","_this$_deps$activityM","_this","_deps","contactMatcher","addQuerySource","getQueriesFn","uniqueIdentifies","readyCheckFn","evCallMonitor","ready","activityMatcher","callLogsIds","_formatPhoneNumber","phoneNumber","formatPhoneNumber","countryCode","currentLocale","locale","onInitOnce","_this2","evSubscription","subscribe","EvCallbackTypes","DIRECT_AGENT_TRANSFER_NOTIF","data","status","directTransferNotificationTypes","VOICEMAIL","watch","evAgentSession","configSuccess","callsLimited","calls","limitCalls","get","dataMapping","callLogs","callsMapping","_this3","map","contactMatchIdentify","contactMatchIdentifyEncode","ani","callType","id","getCallId","session","direction","toLowerCase","callDirection","outbound","inbound","agent","agentId","contact","from","to","fromName","toName","fromMatches","toMatches","startTime","timestamp","isDisposed","makeCallsUniqueIdentifies","RcModuleV2","getOwnPropertyDescriptor","exports"],"sources":["modules/EvCallHistory/EvCallHistory.ts"],"sourcesContent":["import { callDirection } from '@ringcentral-integration/commons/enums/callDirections';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport { computed, RcModuleV2, watch } from '@ringcentral-integration/core';\n\nimport { directTransferNotificationTypes } from '../../enums/directTransferNotificationTypes';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums/callbackTypes';\nimport { formatPhoneNumber } from '../../lib/FormatPhoneNumber';\nimport { makeCallsUniqueIdentifies } from '../../lib/callUniqueIdentifies';\nimport { contactMatchIdentifyEncode } from '../../lib/contactMatchIdentify';\n\nimport type { CallHistory, Deps } from './EvCallHistory.interface';\n\n@Module({\n  name: 'EvCallHistory',\n  deps: [\n    'EvCallMonitor',\n    'EvSubscription',\n    'Locale',\n    'EvAgentSession',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'ActivityMatcher', optional: true },\n  ],\n})\nclass EvCallHistory extends RcModuleV2<Deps> implements CallHistory {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._deps.contactMatcher?.addQuerySource({\n      getQueriesFn: () => this.uniqueIdentifies,\n      readyCheckFn: () => this._deps.evCallMonitor.ready,\n    });\n    this._deps.activityMatcher?.addQuerySource({\n      getQueriesFn: () => this.callLogsIds,\n      readyCheckFn: () => this._deps.evCallMonitor.ready,\n    });\n  }\n\n  get contactMatches() {\n    // TODO: create EvContactMatcher with specific entity type instead of ContactMatcher in Phone DI\n    return (this._deps.contactMatcher.dataMapping || {}) as {\n      [key: string]: { id: string; name: string; type: string }[];\n    };\n  }\n\n  get activityMatches() {\n    return this._deps.activityMatcher.dataMapping || {};\n  }\n\n  get rawCalls() {\n    return this._deps.evCallMonitor.callLogs;\n  }\n\n  get callLogsIds() {\n    return this._deps.evCallMonitor.callLogsIds;\n  }\n\n  get callsMapping() {\n    return this._deps.evCallMonitor.callsMapping;\n  }\n\n  @computed((that: EvCallHistory) => [\n    that.rawCalls,\n    that.contactMatches,\n    that.activityMatches,\n  ])\n  get formattedCalls() {\n    return this.rawCalls.slice(0, 250).map((call) => {\n      const contactMatchIdentify = contactMatchIdentifyEncode({\n        phoneNumber: call.ani,\n        callType: call.callType,\n      });\n\n      const id = this._deps.evCallMonitor.getCallId(call.session);\n      const direction =\n        call.callType.toLowerCase() === 'outbound'\n          ? callDirection.outbound\n          : callDirection.inbound;\n      const contactMatches = this.contactMatches[contactMatchIdentify] || [];\n      const activityMatches = this.activityMatches[id] || [];\n      const agent = {\n        name: call.agentId,\n        phoneNumber: this._formatPhoneNumber(call.agentId),\n      };\n\n      const contact = {\n        name: this._formatPhoneNumber(call.ani),\n        phoneNumber: this._formatPhoneNumber(call.ani),\n      };\n\n      const from = direction === callDirection.outbound ? agent : contact;\n      const to = direction === callDirection.outbound ? contact : agent;\n\n      return {\n        id,\n        direction,\n        agent,\n        contact,\n        from,\n        to,\n        fromName: from.name,\n        toName: to.name,\n        fromMatches: contactMatches,\n        toMatches: contactMatches,\n        activityMatches,\n        startTime: call.timestamp,\n        isDisposed: false,\n      };\n    });\n  }\n\n  private _formatPhoneNumber(phoneNumber: string) {\n    // TODO: support countryCode\n    return formatPhoneNumber({\n      phoneNumber,\n      countryCode: 'US',\n      currentLocale: this._deps.locale.currentLocale,\n    });\n  }\n\n  @computed((that: EvCallHistory) => [that.formattedCalls])\n  get lastEndedCall() {\n    return this.formattedCalls.length > 0 ? this.formattedCalls[0] : null;\n  }\n\n  @computed((that: EvCallHistory) => [that.rawCalls])\n  get uniqueIdentifies() {\n    return makeCallsUniqueIdentifies(this.rawCalls);\n  }\n\n  override onInitOnce() {\n    this._deps.evSubscription.subscribe(\n      EvCallbackTypes.DIRECT_AGENT_TRANSFER_NOTIF,\n      (data) => {\n        if (data.status === directTransferNotificationTypes.VOICEMAIL) {\n          // TODO: add `data` for list and alert message about 'Direct Transfer: data.ani, Click to view call detail.'\n        }\n      },\n    );\n\n    watch(\n      this,\n      () => this._deps.evAgentSession.configSuccess,\n      (configSuccess) => {\n        if (\n          configSuccess &&\n          !this._deps.evCallMonitor.callsLimited &&\n          !this._deps.evCallMonitor.calls.length\n        ) {\n          this._deps.evCallMonitor.limitCalls();\n        }\n      },\n    );\n  }\n}\n\nexport { EvCallHistory };\n"],"mappings":"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","ignoreList":[]}