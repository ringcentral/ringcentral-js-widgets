{"version":3,"file":"EvCallHistory.js","names":["_callDirections","require","_di","_core","_directTransferNotificationTypes","_callUniqueIdentifies","_contactMatchIdentify","_callbackTypes","_FormatPhoneNumber","_dec","_dec2","_dec3","_dec4","_class","_class2","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","prototype","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","Number","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","property","decorators","context","desc","keys","forEach","initializer","slice","reverse","reduce","decorator","EvCallHistory","Module","name","deps","dep","optional","computed","that","rawCalls","contactMatches","activityMatches","formattedCalls","_RcModuleV","_super","_this$_deps$contactMa","_this$_deps$activityM","_this","_deps","contactMatcher","addQuerySource","getQueriesFn","uniqueIdentifies","readyCheckFn","evCallMonitor","ready","activityMatcher","callLogsIds","_formatPhoneNumber","phoneNumber","formatPhoneNumber","countryCode","currentLocale","locale","onInitOnce","_this2","evSubscription","subscribe","EvCallbackTypes","DIRECT_AGENT_TRANSFER_NOTIF","data","status","directTransferNotificationTypes","VOICEMAIL","watch","evAgentSession","configSuccess","callsLimited","calls","limitCalls","get","dataMapping","callLogs","callsMapping","_this3","map","contactMatchIdentify","contactMatchIdentifyEncode","ani","callType","id","getCallId","session","direction","toLowerCase","callDirection","outbound","inbound","agent","agentId","contact","from","to","fromName","toName","fromMatches","toMatches","startTime","timestamp","isDisposed","makeCallsUniqueIdentifies","RcModuleV2","getOwnPropertyDescriptor","exports"],"sources":["modules/EvCallHistory/EvCallHistory.ts"],"sourcesContent":["import { callDirection } from '@ringcentral-integration/commons/enums/callDirections';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport { computed, RcModuleV2, watch } from '@ringcentral-integration/core';\n\nimport { directTransferNotificationTypes } from '../../enums/directTransferNotificationTypes';\nimport { makeCallsUniqueIdentifies } from '../../lib/callUniqueIdentifies';\nimport { contactMatchIdentifyEncode } from '../../lib/contactMatchIdentify';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums/callbackTypes';\nimport { formatPhoneNumber } from '../../lib/FormatPhoneNumber';\nimport type { CallHistory, Deps } from './EvCallHistory.interface';\n\n@Module({\n  name: 'EvCallHistory',\n  deps: [\n    'EvCallMonitor',\n    'EvSubscription',\n    'Locale',\n    'EvAgentSession',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'ActivityMatcher', optional: true },\n  ],\n})\nclass EvCallHistory extends RcModuleV2<Deps> implements CallHistory {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._deps.contactMatcher?.addQuerySource({\n      getQueriesFn: () => this.uniqueIdentifies,\n      readyCheckFn: () => this._deps.evCallMonitor.ready,\n    });\n    this._deps.activityMatcher?.addQuerySource({\n      getQueriesFn: () => this.callLogsIds,\n      readyCheckFn: () => this._deps.evCallMonitor.ready,\n    });\n  }\n\n  get contactMatches() {\n    // TODO: create EvContactMatcher with specific entity type instead of ContactMatcher in Phone DI\n    return (this._deps.contactMatcher.dataMapping || {}) as {\n      [key: string]: { id: string; name: string; type: string }[];\n    };\n  }\n\n  get activityMatches() {\n    return this._deps.activityMatcher.dataMapping || {};\n  }\n\n  get rawCalls() {\n    return this._deps.evCallMonitor.callLogs;\n  }\n\n  get callLogsIds() {\n    return this._deps.evCallMonitor.callLogsIds;\n  }\n\n  get callsMapping() {\n    return this._deps.evCallMonitor.callsMapping;\n  }\n\n  @computed((that: EvCallHistory) => [\n    that.rawCalls,\n    that.contactMatches,\n    that.activityMatches,\n  ])\n  get formattedCalls() {\n    return this.rawCalls.slice(0, 250).map((call) => {\n      const contactMatchIdentify = contactMatchIdentifyEncode({\n        phoneNumber: call.ani,\n        callType: call.callType,\n      });\n\n      const id = this._deps.evCallMonitor.getCallId(call.session);\n      const direction =\n        call.callType.toLowerCase() === 'outbound'\n          ? callDirection.outbound\n          : callDirection.inbound;\n      const contactMatches = this.contactMatches[contactMatchIdentify] || [];\n      const activityMatches = this.activityMatches[id] || [];\n      const agent = {\n        name: call.agentId,\n        phoneNumber: this._formatPhoneNumber(call.agentId),\n      };\n\n      const contact = {\n        name: this._formatPhoneNumber(call.ani),\n        phoneNumber: this._formatPhoneNumber(call.ani),\n      };\n\n      const from = direction === callDirection.outbound ? agent : contact;\n      const to = direction === callDirection.outbound ? contact : agent;\n\n      return {\n        id,\n        direction,\n        agent,\n        contact,\n        from,\n        to,\n        fromName: from.name,\n        toName: to.name,\n        fromMatches: contactMatches,\n        toMatches: contactMatches,\n        activityMatches,\n        startTime: call.timestamp,\n        isDisposed: false,\n      };\n    });\n  }\n\n  private _formatPhoneNumber(phoneNumber: string) {\n    // TODO: support countryCode\n    return formatPhoneNumber({\n      phoneNumber,\n      countryCode: 'US',\n      currentLocale: this._deps.locale.currentLocale,\n    });\n  }\n\n  @computed((that: EvCallHistory) => [that.formattedCalls])\n  get lastEndedCall() {\n    return this.formattedCalls.length > 0 ? this.formattedCalls[0] : null;\n  }\n\n  @computed((that: EvCallHistory) => [that.rawCalls])\n  get uniqueIdentifies() {\n    return makeCallsUniqueIdentifies(this.rawCalls);\n  }\n\n  override onInitOnce() {\n    this._deps.evSubscription.subscribe(\n      EvCallbackTypes.DIRECT_AGENT_TRANSFER_NOTIF,\n      (data) => {\n        if (data.status === directTransferNotificationTypes.VOICEMAIL) {\n          // TODO: add `data` for list and alert message about 'Direct Transfer: data.ani, Click to view call detail.'\n        }\n      },\n    );\n\n    watch(\n      this,\n      () => this._deps.evAgentSession.configSuccess,\n      (configSuccess) => {\n        if (\n          configSuccess &&\n          !this._deps.evCallMonitor.callsLimited &&\n          !this._deps.evCallMonitor.calls.length\n        ) {\n          this._deps.evCallMonitor.limitCalls();\n        }\n      },\n    );\n  }\n}\n\nexport { EvCallHistory };\n"],"mappings":"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"}