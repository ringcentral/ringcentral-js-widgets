{"version":3,"file":"CallLogCallCtrlUI.interface.js","names":[],"sources":["modules/CallLogCallCtrlUI/CallLogCallCtrlUI.interface.ts"],"sourcesContent":["import type ForwardingNumberInfo from '@rc-ex/core/lib/definitions/ForwardingNumberInfo';\nimport type {\n  ActiveCallControl,\n  ActiveSession,\n} from '@ringcentral-integration/commons/modules/ActiveCallControl';\nimport type { CallingSettings } from '@ringcentral-integration/commons/modules/CallingSettings';\nimport type { CallMonitor } from '@ringcentral-integration/commons/modules/CallMonitor';\nimport type { ConnectivityMonitor } from '@ringcentral-integration/commons/modules/ConnectivityMonitor';\nimport type { ExtensionFeatures } from '@ringcentral-integration/commons/modules/ExtensionFeatures';\nimport type { ForwardingNumber } from '@ringcentral-integration/commons/modules/ForwardingNumber';\nimport type { RateLimiter } from '@ringcentral-integration/commons/modules/RateLimiter';\n\nimport type { RouterInteraction } from '../RouterInteraction';\n\nexport interface Deps {\n  activeCallControl: ActiveCallControl;\n  connectivityMonitor: ConnectivityMonitor;\n  rateLimiter: RateLimiter;\n  callingSettings: CallingSettings;\n  forwardingNumber: ForwardingNumber;\n  callMonitor: CallMonitor;\n  routerInteraction: RouterInteraction;\n  extensionFeatures: ExtensionFeatures;\n}\n\nexport interface CallLogCallCtrlContainerProps {\n  telephonySessionId: string;\n}\n\nexport interface CallLogCallCtrlPanelProps {\n  allowPickupCall?: boolean;\n  isWebphone: boolean;\n  currentSession: ActiveSession;\n  disableLinks: boolean;\n  telephonySessionId: string;\n  forwardingNumbers: ForwardingNumberInfo[];\n  otherActiveCalls: boolean;\n  realOutboundCallStatus: string;\n  mute: ActiveCallControl['mute'];\n  unmute: ActiveCallControl['unmute'];\n  hangUp: ActiveCallControl['hangUp'];\n  reject: ActiveCallControl['reject'];\n  onHold: ActiveCallControl['hold'];\n  onUnHold: ActiveCallControl['unhold'];\n  startRecord: ActiveCallControl['startRecord'];\n  stopRecord: ActiveCallControl['stopRecord'];\n  onCompleteWarmTransfer: ActiveCallControl['completeWarmTransfer'];\n  onTransfer: (telephonySessionId: string) => Promise<void>;\n  sendDTMF: (dtmfValue: string, telephonySessionId: string) => Promise<void>;\n  answer: ActiveCallControl['answer'];\n  forward: (phoneNumber: string, telephonySessionId: string) => void;\n  reply: (telephonySessionId: string) => void;\n  ignore: ActiveCallControl['ignore'];\n  answerAndHold: ActiveCallControl['answerAndHold'];\n  answerAndEnd: ActiveCallControl['answerAndEnd'];\n  dialpadToggleTrack: (open: boolean) => void;\n  clickForwardTrack: ActiveCallControl['clickForwardTrack'];\n}\n"],"mappings":""}