{"version":3,"sources":["modules/BlockedNumber/index.ts"],"names":["BlockedNumber","deps","dep","optional","client","extensionFeatures","options","fetchFunction","params","_client","account","extension","blockedNumber","list","readyCheckFn","_extensionFeatures","ready","cleanOnReset","features","ReadBlockedNumbers","available","DataFetcher","selector","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaqBA,a;AAXrB;AACA;AACA;AACA;OACC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,sBAAP;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAHI;AADA,CAAP,C;;;;;AAQC;AACF;AACA;AACA;AACA;AACE,+BAAuD;AAAA;;AAAA,QAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,QAAjCC,iBAAiC,QAAjCA,iBAAiC;AAAA,QAAXC,OAAW;;AAAA;;AACrD,8DACKA,OADL;AAEEF,MAAAA,MAAM,EAANA,MAFF;AAGEG,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,mDACb,2BAAU,UAACC,MAAD;AAAA,2BACR,MAAKC,OAAL,CAAaC,OAAb,GAAuBC,SAAvB,GAAmCC,aAAnC,GAAmDC,IAAnD,CAAwDL,MAAxD,CADQ;AAAA,mBAAV,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAHf;AAOEM,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,kBAAL,CAAwBC,KAA9B;AAAA,OAPhB;AAQEC,MAAAA,YAAY,EAAE;AARhB;;AADqD;;AAYrD,UAAKF,kBAAL,GAA0BV,iBAA1B;AAZqD;AAatD;;;;wBAEW;AACV,aAAO,eAAP;AACD;;;wBAKoB;AAAA;;AACnB,gEACE,KAAKU,kBAAL,CAAwBG,QAD1B,qFACE,uBAAkCC,kBADpC,2DACE,uBAAsDC,SADxD,yEACqE,KADrE;AAGD;;;;EAhCwCC,wB,2EAyBxCC,kB;;;;;;;WACS,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C","sourcesContent":["import DataFetcher from '../../lib/DataFetcher';\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport { selector } from '../../lib/selector';\n\n/**\n * @class\n * @description Blocked number list managing module\n */\n@Module({\n  deps: [\n    'Client',\n    'ExtensionFeatures',\n    { dep: 'BlockedNumberOptions', optional: true },\n  ],\n})\nexport default class BlockedNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, extensionFeatures, ...options }) {\n    super({\n      ...options,\n      client,\n      fetchFunction: async () =>\n        fetchList((params) =>\n          this._client.account().extension().blockedNumber().list(params),\n        ),\n      readyCheckFn: () => this._extensionFeatures.ready,\n      cleanOnReset: true,\n    });\n\n    this._extensionFeatures = extensionFeatures;\n  }\n\n  get _name() {\n    return 'blockedNumber';\n  }\n\n  @selector\n  numbers = [() => this.data, (data) => data || []];\n\n  get _hasPermission() {\n    return (\n      this._extensionFeatures.features?.ReadBlockedNumbers?.available ?? false\n    );\n  }\n}\n"],"file":"index.js"}