{"version":3,"file":"AudioSettings.js","names":["_core","require","_ramda","_di","_proxify","_audioSettingsErrors","_dec","_dec2","_dec3","_dec4","_class","_class2","_descriptor","_descriptor2","_descriptor3","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_initializerDefineProperty","l","Object","defineProperty","enumerable","configurable","writable","initializer","call","_classCallCheck","TypeError","_defineProperties","length","_toPropertyKey","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_get","Reflect","get","bind","p","_superPropBase","getOwnPropertyDescriptor","hasOwnProperty","_getPrototypeOf","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","_isNativeReflectConstruct","s","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","keys","forEach","slice","reverse","reduce","_initializerWarningHelper","Error","polyfillGetUserMedia","navigator","mediaDevices","undefined","assign","getUserMedia","webkitGetUserMedia","mozGetUserMedia","constraints","reject","DEFAULT_VALUE","ringtoneVolume","callVolume","outputDeviceId","inputDeviceId","ringtoneDeviceId","hasAutoPrompted","isAGCEnabled","AudioSettings","Module","name","deps","dep","optional","computed","_ref","availableDevices","_ref2","_ref3","_RcModuleV","_super","_this$_deps$audioSett","_this$_deps$audioSett2","_this","storageKey","enableCache","_getUserMediaPromise","_showCheckMediaAlert","_deps","audioSettingsOptions","showCheckMediaAlert","onInitOnce","_this2","some","data","_this$ringtoneVolume","_this$callVolume","_this$outputDeviceId","_this$inputDeviceId","_this$isAGCEnabled","_this$ringtoneDeviceI","_setData","watch","hasUserMedia","setAutoGainControl","multiple","setHasAutoPrompted","setUserMediaError","setUserMediaSuccess","setAvailableDevices","devices","_this3","isOutputDeviceExist","find","device","deviceId","kind","hasDefaultDevice","firstDevice","isInputDeviceExist","_ref4","_ref4$ringtoneVolume","_ref4$callVolume","_ref4$outputDeviceId","_ref4$inputDeviceId","_ref4$ringtoneDeviceI","_ref4$isAGCEnabled","Math","min","max","initializeProxy","_this4","supportDevices","_checkDevices","parentModule","store","subscribe","ready","auth","loggedIn","appFeatures","isWebPhoneEnabled","userMedia","markAutoPrompted","_markAutoPrompted","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","_initModule2","_callee2","_this5","_callee2$","_context2","addEventListener","_initModule","_onInit","_callee3","_callee3$","_context3","onInit","_setAutoGainControl","_callee4","_callee4$","_context4","audio","autoGainControl","t0","console","warn","_x","_checkDevices2","_callee5","_callee5$","_context5","enumerateDevices","sent","map","d","label","groupId","_getUserMedia","_callee6","stream","_callee6$","_context6","abrupt","_onGetUserMediaSuccess","getTracks","track","onGetUserMediaError","_onGetUserMediaSuccess2","_callee7","userMediaAlert","_callee7$","_context7","item","message","audioSettingsErrors","userMediaPermission","checkMediaPermission","alert","messages","dismiss","id","_showPermissionAlert","_callee8","ttl","_callee8$","_context8","warning","allowDuplicates","danger","showPermissionAlert","_x2","_onGetUserMediaError","_callee9","_callee9$","_context9","_checkAudioAvailable","_callee10","_callee10$","_context10","checkAudioAvailable","_showAlert","_callee11","_callee11$","_context11","showAlert","_setData2","_callee12","_ref5","_ref5$ringtoneVolume","_ref5$callVolume","_ref5$outputDeviceId","_ref5$inputDeviceId","_ref5$ringtoneDeviceI","_ref5$isAGCEnabled","_callee12$","_context12","setData","_x3","_this6","_this7","filter","ringtoneDevices","concat","isFirefox","userAgent","indexOf","getSupportedConstraints","err","error","RcModuleV2","storage","state","action","proxify","exports"],"sources":["modules/AudioSettings/AudioSettings.ts"],"sourcesContent":["import {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  watch,\n} from '@ringcentral-integration/core';\nimport { OmitFunctions } from '@ringcentral-integration/utils/src/typeFunctions/OmitFunctions';\nimport { filter, find } from 'ramda';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\n\nimport type { AudioSettingsData, Deps } from './AudioSettings.interface';\nimport { audioSettingsErrors } from './audioSettingsErrors';\n\nfunction polyfillGetUserMedia() {\n  if (navigator.mediaDevices === undefined) {\n    Object.assign(navigator, { mediaDevices: {} });\n  }\n  // @ts-expect-error TS(2339): Property 'getUserMedia' does not exist on type 'Na... Remove this comment to see the full error message\n  navigator.getUserMedia =\n    // @ts-expect-error TS(2339): Property 'getUserMedia' does not exist on type 'Na... Remove this comment to see the full error message\n    navigator.getUserMedia ||\n    (navigator as any).webkitGetUserMedia ||\n    (navigator as any).mozGetUserMedia;\n  if (\n    navigator.mediaDevices.getUserMedia === undefined &&\n    // @ts-expect-error TS(2339): Property 'getUserMedia' does not exist on type 'Na... Remove this comment to see the full error message\n    navigator.getUserMedia\n  ) {\n    navigator.mediaDevices.getUserMedia = (constraints) =>\n      new Promise((resolve, reject) => {\n        // @ts-expect-error TS(2339): Property 'getUserMedia' does not exist on type 'Na... Remove this comment to see the full error message\n        navigator.getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n  }\n}\npolyfillGetUserMedia();\n\nconst DEFAULT_VALUE = {\n  // TODO: Remember to discuss migration plans if we change these properties. Changes that cause the volume settings to change can upset users.\n  ringtoneVolume: 0.5,\n  callVolume: 0.5,\n  outputDeviceId: 'default',\n  inputDeviceId: 'default',\n  ringtoneDeviceId: 'default',\n  hasAutoPrompted: false,\n  /**\n   * automatic gain control (AGC)\n   * Automatic gain control is a feature in which a sound source automatically manages\n   * changes in the volume of its source media to maintain a steady overall volume level.\n   * This feature is typically used on microphones, although it can be provided by other\n   * input sources as well.\n   */\n  isAGCEnabled: false,\n};\n\n@Module({\n  name: 'AudioSettings',\n  deps: [\n    'Auth',\n    'Alert',\n    'Storage',\n    'AppFeatures',\n    { dep: 'AudioSettingsOptions', optional: true },\n  ],\n})\nexport class AudioSettings extends RcModuleV2<Deps> {\n  protected _getUserMediaPromise: Promise<MediaStream> | null = null;\n  private _showCheckMediaAlert: boolean;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      storageKey: 'AudioSettings',\n      enableCache: true,\n    });\n\n    this._showCheckMediaAlert =\n      this._deps.audioSettingsOptions?.showCheckMediaAlert ?? false;\n  }\n\n  override onInitOnce(): void | Promise<void> {\n    // We add more properties to the data object\n    // need to check is there any key not exist value\n    // if so assign the data to default value\n    if (\n      Object.keys(DEFAULT_VALUE).some(\n        (key) => this.data[key as keyof typeof DEFAULT_VALUE] === undefined,\n      )\n    ) {\n      this._setData({\n        ringtoneVolume: this.ringtoneVolume ?? DEFAULT_VALUE.ringtoneVolume,\n        callVolume: this.callVolume ?? DEFAULT_VALUE.callVolume,\n        outputDeviceId: this.outputDeviceId ?? DEFAULT_VALUE.outputDeviceId,\n        inputDeviceId: this.inputDeviceId ?? DEFAULT_VALUE.inputDeviceId,\n        isAGCEnabled: this.isAGCEnabled ?? DEFAULT_VALUE.isAGCEnabled,\n        ringtoneDeviceId:\n          this.ringtoneDeviceId ?? DEFAULT_VALUE.ringtoneDeviceId,\n      });\n    }\n    watch(\n      this,\n      () => [this.isAGCEnabled, this.hasUserMedia],\n      () => {\n        if (this.hasUserMedia) {\n          this.setAutoGainControl(this.isAGCEnabled);\n        }\n      },\n      { multiple: true },\n    );\n  }\n\n  @storage\n  @state\n  data: AudioSettingsData = DEFAULT_VALUE;\n\n  @state\n  availableDevices: OmitFunctions<MediaDeviceInfo>[] = [];\n\n  @state\n  hasUserMedia = false;\n\n  @action\n  setHasAutoPrompted() {\n    this.data.hasAutoPrompted = true;\n  }\n\n  @action\n  setUserMediaError() {\n    this.hasUserMedia = false;\n    this.availableDevices = [];\n    this.data.outputDeviceId = 'default';\n    this.data.inputDeviceId = 'default';\n    this.data.ringtoneDeviceId = 'default';\n  }\n\n  @action\n  setUserMediaSuccess() {\n    this.hasUserMedia = true;\n  }\n\n  @action\n  setAvailableDevices(devices: OmitFunctions<MediaDeviceInfo>[]) {\n    this.availableDevices = devices;\n\n    const isOutputDeviceExist = find(\n      (device) =>\n        device.deviceId === this.data.outputDeviceId &&\n        device.kind === 'audiooutput',\n      devices,\n    );\n    if (!isOutputDeviceExist) {\n      // For Firefox, don't have default device id\n      const hasDefaultDevice = find(\n        (device) =>\n          device.deviceId === 'default' && device.kind === 'audiooutput',\n        devices,\n      );\n      const firstDevice = find(\n        (device) => device.kind === 'audiooutput',\n        devices,\n      );\n      if (!hasDefaultDevice && firstDevice) {\n        this.data.outputDeviceId = firstDevice.deviceId;\n        this.data.ringtoneDeviceId = firstDevice.deviceId;\n      } else {\n        this.data.outputDeviceId = 'default';\n        this.data.ringtoneDeviceId = 'default';\n      }\n    }\n\n    const isInputDeviceExist = find(\n      (device) =>\n        device.deviceId === this.data.inputDeviceId &&\n        device.kind === 'audioinput',\n      devices,\n    );\n    if (!isInputDeviceExist) {\n      // For Firefox, don't have default device id\n      const hasDefaultDevice = find(\n        (device) =>\n          device.deviceId === 'default' && device.kind === 'audioinput',\n        devices,\n      );\n      const firstDevice = find(\n        (device) => device.kind === 'audioinput',\n        devices,\n      );\n      if (!hasDefaultDevice && firstDevice) {\n        this.data.inputDeviceId = firstDevice.deviceId;\n      } else {\n        this.data.inputDeviceId = 'default';\n      }\n    }\n  }\n\n  @action\n  _setData({\n    ringtoneVolume = this.ringtoneVolume,\n    callVolume = this.callVolume,\n    outputDeviceId = this.outputDeviceId,\n    inputDeviceId = this.inputDeviceId,\n    ringtoneDeviceId = this.ringtoneDeviceId,\n    isAGCEnabled = this.isAGCEnabled,\n  }) {\n    this.data.outputDeviceId = outputDeviceId;\n    this.data.inputDeviceId = inputDeviceId;\n    this.data.isAGCEnabled = isAGCEnabled;\n    this.data.ringtoneDeviceId = ringtoneDeviceId;\n    this.data.ringtoneVolume = Math.min(1, Math.max(0, ringtoneVolume));\n    this.data.callVolume = Math.min(1, Math.max(0, callVolume));\n  }\n\n  override initializeProxy() {\n    // Check audio permissions every time app client starts\n    if (this.supportDevices) {\n      this._checkDevices();\n    }\n    this.parentModule.store.subscribe(() => {\n      if (\n        this.ready &&\n        this._deps.auth.loggedIn &&\n        this._deps.appFeatures.isWebPhoneEnabled &&\n        !this.userMedia\n      ) {\n        // Make sure it only prompts once\n        if (this.hasAutoPrompted) return;\n        this.markAutoPrompted();\n        this.getUserMedia();\n      }\n    });\n  }\n\n  @proxify\n  async markAutoPrompted() {\n    this.setHasAutoPrompted();\n  }\n\n  override async _initModule() {\n    super._initModule();\n    if (\n      navigator &&\n      navigator.mediaDevices &&\n      navigator.mediaDevices.addEventListener\n    ) {\n      navigator.mediaDevices.addEventListener('devicechange', () => {\n        this._checkDevices();\n      });\n    }\n  }\n\n  override async onInit() {\n    if (this.supportDevices) {\n      await this._checkDevices();\n    }\n  }\n\n  @proxify\n  async setAutoGainControl(isAGCEnabled: boolean) {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        audio: {\n          autoGainControl: isAGCEnabled,\n        },\n      });\n    } catch (err) {\n      console.warn(`setAutoGainControl error:`, err);\n    }\n  }\n\n  @proxify\n  async _checkDevices() {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    this.setAvailableDevices(\n      devices.map((d) => ({\n        deviceId: d.deviceId,\n        kind: d.kind,\n        label: d.label,\n        groupId: d.groupId,\n      })),\n    );\n  }\n\n  async getUserMedia() {\n    if (!navigator.mediaDevices.getUserMedia) {\n      return;\n    }\n    try {\n      if (!this._getUserMediaPromise) {\n        this._getUserMediaPromise = navigator.mediaDevices.getUserMedia({\n          audio: true,\n        });\n      }\n      const stream = await this._getUserMediaPromise;\n      this._getUserMediaPromise = null;\n      await this._onGetUserMediaSuccess();\n      if (typeof stream.getTracks === 'function') {\n        stream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      } else if (typeof (stream as any).stop === 'function') {\n        // TODO: check type;\n        (stream as any).stop();\n      }\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      this._getUserMediaPromise = null;\n      this.onGetUserMediaError();\n    }\n  }\n\n  @proxify\n  async _onGetUserMediaSuccess() {\n    const userMediaAlert = find(\n      (item) =>\n        item.message === audioSettingsErrors.userMediaPermission ||\n        item.message === audioSettingsErrors.checkMediaPermission,\n      this._deps.alert.messages,\n    );\n    if (userMediaAlert) {\n      this._deps.alert.dismiss(userMediaAlert.id);\n    }\n    this.setUserMediaSuccess();\n    await this._checkDevices();\n  }\n\n  @proxify\n  async showPermissionAlert(ttl?: number) {\n    if (this._showCheckMediaAlert) {\n      this._deps.alert.warning({\n        message: audioSettingsErrors.checkMediaPermission,\n        allowDuplicates: false,\n        ttl: 0,\n      });\n    } else {\n      this._deps.alert.danger({\n        message: audioSettingsErrors.userMediaPermission,\n        allowDuplicates: false,\n        ttl,\n      });\n    }\n  }\n\n  @proxify\n  async onGetUserMediaError() {\n    this.setUserMediaError();\n    this.showPermissionAlert();\n  }\n\n  @proxify\n  async checkAudioAvailable() {\n    if (!this.userMedia) {\n      this.showPermissionAlert(30 * 1000);\n    }\n    this.getUserMedia();\n  }\n\n  @proxify\n  async showAlert() {\n    if (!this.userMedia) {\n      this.showPermissionAlert(30 * 1000);\n    }\n  }\n\n  @proxify\n  async setData({\n    ringtoneVolume = this.ringtoneVolume,\n    callVolume = this.callVolume,\n    outputDeviceId = this.outputDeviceId,\n    inputDeviceId = this.inputDeviceId,\n    ringtoneDeviceId = this.ringtoneDeviceId,\n    isAGCEnabled = this.isAGCEnabled,\n  }: AudioSettingsData) {\n    this._setData({\n      ringtoneVolume,\n      callVolume,\n      outputDeviceId,\n      inputDeviceId,\n      ringtoneDeviceId,\n      isAGCEnabled,\n    });\n  }\n\n  get outputDeviceId() {\n    return this.data.outputDeviceId;\n  }\n\n  get outputDevice() {\n    return find(\n      (device) =>\n        device.kind === 'audiooutput' &&\n        device.deviceId === this.outputDeviceId,\n      this.availableDevices,\n    );\n  }\n\n  get inputDeviceId() {\n    return this.data.inputDeviceId;\n  }\n\n  get isAGCEnabled() {\n    return this.data.isAGCEnabled;\n  }\n\n  get inputDevice() {\n    return find(\n      (device) =>\n        device.kind === 'audioinput' && device.deviceId === this.inputDeviceId,\n      this.availableDevices,\n    );\n  }\n\n  get ringtoneDeviceId() {\n    return this.data.ringtoneDeviceId;\n  }\n\n  get supportDevices() {\n    return !!(\n      navigator.mediaDevices && navigator.mediaDevices.enumerateDevices\n    );\n  }\n\n  @computed(({ availableDevices }: AudioSettings) => [availableDevices])\n  get availableOutputDevices() {\n    return filter(\n      (device) => device.kind === 'audiooutput',\n      this.availableDevices,\n    );\n  }\n\n  @computed(({ availableDevices }: AudioSettings) => [availableDevices])\n  get availableRingtoneDevices() {\n    const ringtoneDevices = filter(\n      (device) => device.kind === 'audiooutput',\n      this.availableDevices,\n    );\n\n    return ringtoneDevices.length > 0\n      ? ringtoneDevices.concat({\n          deviceId: 'off',\n          groupId: '',\n          kind: 'audiooutput',\n          label: '',\n        })\n      : [];\n  }\n\n  @computed(({ availableDevices }: AudioSettings) => [availableDevices])\n  get availableInputDevices() {\n    return filter(\n      (device) => device.kind === 'audioinput',\n      this.availableDevices,\n    );\n  }\n\n  get ringtoneVolume() {\n    return this.data.ringtoneVolume;\n  }\n\n  get callVolume() {\n    return this.data.callVolume;\n  }\n\n  get hasAutoPrompted() {\n    return this.data.hasAutoPrompted;\n  }\n\n  get userMedia() {\n    const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n    if (isFirefox) {\n      return true;\n    }\n    // this detection method may not work in the future\n    // currently there is no good way to detect this\n    return !!(\n      this.availableDevices.length && this.availableDevices[0].label !== ''\n    );\n  }\n\n  get isSupportAGC() {\n    try {\n      const constraints = navigator.mediaDevices.getSupportedConstraints();\n      return !!constraints.autoGainControl;\n    } catch (err) {\n      console.error('failed to get autoGainControl support:', err);\n      return false;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}