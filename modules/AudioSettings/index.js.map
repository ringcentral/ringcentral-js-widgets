{"version":3,"sources":["modules/AudioSettings/index.ts"],"names":["polyfillGetUserMedia","navigator","mediaDevices","undefined","getUserMedia","webkitGetUserMedia","mozGetUserMedia","constraints","Promise","resolve","reject","call","AudioSettings","deps","auth","alert","storage","appFeatures","options","actionTypes","_storage","ensureExist","_auth","_alert","_appFeatures","_storageKey","registerReducer","key","reducer","_reducer","supportDevices","_checkDevices","store","subscribe","ready","loggedIn","isWebPhoneEnabled","userMedia","hasAutoPrompted","markAutoPrompted","dispatch","type","autoPrompted","_onStateChange","addEventListener","pending","_shouldInit","init","initSuccess","_shouldReset","reset","resetSuccess","enumerateDevices","devices","setAvailableDevices","map","d","JSON","parse","stringify","_getUserMediaPromise","audio","stream","_onGetUserMediaSuccess","getTracks","forEach","track","stop","onGetUserMediaError","userMediaAlert","item","message","audioSettingsErrors","userMediaPermission","messages","dismiss","id","getUserMediaSuccess","error","getUserMediaError","danger","allowDuplicates","ttl","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","outputDeviceId","inputDeviceId","setData","getItem","device","kind","deviceId","availableDevices","state","cacheData","isFirefox","userAgent","indexOf","length","label","status","RcModule","proxify","selector"],"mappings":"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","sourcesContent":["import { filter, find } from 'ramda';\n\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport { selector } from '../../lib/selector';\nimport { actionTypes } from './actionTypes';\nimport { audioSettingsErrors } from './audioSettingsErrors';\nimport getAudioSettingsReducer from './getAudioSettingsReducer';\nimport getStorageReducer from './getStorageReducer';\n\nfunction polyfillGetUserMedia() {\n  if (navigator.mediaDevices === undefined) {\n    navigator.mediaDevices = {};\n  }\n  navigator.getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia;\n  if (\n    navigator.mediaDevices.getUserMedia === undefined &&\n    navigator.getUserMedia\n  ) {\n    navigator.mediaDevices.getUserMedia = (constraints) =>\n      new Promise((resolve, reject) => {\n        navigator.getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n  }\n}\npolyfillGetUserMedia();\n\n/**\n * @class\n * @description AudioSettings module.\n */\n@Module({\n  deps: ['Auth', 'Alert', 'Storage', 'AppFeatures'],\n})\nexport default class AudioSettings extends RcModule {\n  constructor({ auth, alert, storage, appFeatures, ...options }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._storage = ensureExist.call(this, storage, 'storage');\n    this._auth = ensureExist.call(this, auth, 'auth');\n    this._alert = ensureExist.call(this, alert, 'alert');\n    this._appFeatures = appFeatures;\n    this._storageKey = 'audioSettings';\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getStorageReducer(this.actionTypes),\n    });\n    this._reducer = getAudioSettingsReducer(this.actionTypes);\n  }\n\n  initializeProxy() {\n    // Check audio permissions everytime app client starts\n    if (this.supportDevices) {\n      this._checkDevices();\n    }\n    this.store.subscribe(() => {\n      if (\n        this.ready &&\n        this._auth.loggedIn &&\n        this._appFeatures.isWebPhoneEnabled &&\n        !this.userMedia\n      ) {\n        // Make sure it only prompts once\n        if (this.hasAutoPrompted) return;\n        this.markAutoPrompted();\n        this.getUserMedia();\n      }\n    });\n  }\n\n  @proxify\n  async markAutoPrompted() {\n    this.store.dispatch({\n      type: this.actionTypes.autoPrompted,\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n    if (\n      navigator &&\n      navigator.mediaDevices &&\n      navigator.mediaDevices.addEventListener\n    ) {\n      navigator.mediaDevices.addEventListener('devicechange', () => {\n        this._checkDevices();\n      });\n    }\n  }\n\n  _shouldInit() {\n    return !!(\n      this.pending &&\n      this._storage.ready &&\n      this._auth.ready &&\n      this._appFeatures.ready\n    );\n  }\n\n  _shouldReset() {\n    return !!(\n      this.ready &&\n      (!this._auth.ready || !this._storage.ready || !this._appFeatures.ready)\n    );\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this.supportDevices) {\n        await this._checkDevices();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  @proxify\n  async _checkDevices() {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    this.store.dispatch({\n      type: this.actionTypes.setAvailableDevices,\n      // TODO formatting for devices info instances and replace JSON APIs.\n      devices: devices.map((d) => JSON.parse(JSON.stringify(d))),\n    });\n  }\n\n  async getUserMedia() {\n    if (!navigator.mediaDevices.getUserMedia) {\n      return;\n    }\n    try {\n      if (!this._getUserMediaPromise) {\n        this._getUserMediaPromise = navigator.mediaDevices.getUserMedia({\n          audio: true,\n        });\n      }\n      const stream = await this._getUserMediaPromise;\n      this._getUserMediaPromise = null;\n      await this._onGetUserMediaSuccess();\n      if (typeof stream.getTracks === 'function') {\n        stream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      } else if (typeof stream.stop === 'function') {\n        stream.stop();\n      }\n    } catch (error) {\n      this._getUserMediaPromise = null;\n      this.onGetUserMediaError(error);\n    }\n  }\n\n  @proxify\n  async _onGetUserMediaSuccess() {\n    const userMediaAlert = find(\n      (item) => item.message === audioSettingsErrors.userMediaPermission,\n      this._alert.messages,\n    );\n    if (userMediaAlert) {\n      this._alert.dismiss(userMediaAlert.id);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaSuccess,\n    });\n    await this._checkDevices();\n  }\n\n  @proxify\n  async onGetUserMediaError(error) {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaError,\n      error,\n    });\n    this._alert.danger({\n      message: audioSettingsErrors.userMediaPermission,\n      allowDuplicates: false,\n    });\n  }\n\n  @proxify\n  async showAlert() {\n    if (!this.userMedia) {\n      this._alert.danger({\n        message: audioSettingsErrors.userMediaPermission,\n        allowDuplicates: false,\n        ttl: 30 * 1000,\n      });\n    }\n  }\n\n  @proxify\n  async setData({\n    dialButtonVolume = this.dialButtonVolume,\n    dialButtonMuted = this.dialButtonMuted,\n    ringtoneVolume = this.ringtoneVolume,\n    ringtoneMuted = this.ringtoneMuted,\n    callVolume = this.callVolume,\n    outputDeviceId = this.outputDeviceId,\n    inputDeviceId = this.inputDeviceId,\n  }) {\n    this.store.dispatch({\n      type: this.actionTypes.setData,\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      outputDeviceId,\n      inputDeviceId,\n    });\n  }\n\n  get outputDeviceId() {\n    return this._storage.getItem(this._storageKey).outputDeviceId;\n  }\n\n  get outputDevice() {\n    return find(\n      (device) =>\n        device.kind === 'audiooutput' &&\n        device.deviceId === this.outputDeviceId,\n      this.availableDevices,\n    );\n  }\n\n  get inputDeviceId() {\n    return this._storage.getItem(this._storageKey).inputDeviceId;\n  }\n\n  get inputDevice() {\n    return find(\n      (device) =>\n        device.kind === 'audioinput' && device.deviceId === this.inputDeviceId,\n      this.availableDevices,\n    );\n  }\n\n  get supportDevices() {\n    return !!(\n      navigator.mediaDevices && navigator.mediaDevices.enumerateDevices\n    );\n  }\n\n  get availableDevices() {\n    return this.state.availableDevices;\n  }\n\n  @selector\n  availableOutputDevices = [\n    () => this.state.availableDevices,\n    (devices) => filter((device) => device.kind === 'audiooutput', devices),\n  ];\n\n  @selector\n  availableInputDevices = [\n    () => this.state.availableDevices,\n    (devices) => filter((device) => device.kind === 'audioinput', devices),\n  ];\n\n  get cacheData() {\n    return this._storage.getItem(this._storageKey) || {};\n  }\n\n  get dialButtonVolume() {\n    return this.cacheData.dialButtonVolume;\n  }\n\n  get dialButtonMuted() {\n    return this.cacheData.dialButtonMuted;\n  }\n\n  get ringtoneVolume() {\n    return this.cacheData.ringtoneVolume;\n  }\n\n  get ringtoneMuted() {\n    return this.cacheData.ringtoneMuted;\n  }\n\n  get callVolume() {\n    return this.cacheData.callVolume;\n  }\n\n  get userMedia() {\n    const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n    if (isFirefox) {\n      return true;\n    }\n    // this detection method may not work in the future\n    // currently there is no good way to detect this\n    return !!(\n      this.availableDevices.length && this.availableDevices[0].label !== ''\n    );\n  }\n\n  get hasAutoPrompted() {\n    return this.cacheData.hasAutoPrompted;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"],"file":"index.js"}