{"version":3,"sources":["modules/CallLogV2/helper.ts"],"names":["processData","data","records","timestamp","Date","now","syncToken","syncInfo","getISODateFrom","daySpan","d","toISOString","getISODateTo","dateTo","forEach","call","startTime","processRecords","supplementRecords","ids","output","processCall","id","action","callActions","findMe","push"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAQO,SAASA,WAAT,CAAqBC,IAArB,EAA4C;AACjD,SAAO;AACLC,IAAAA,OAAO,EAAED,IAAI,CAACC,OADT;AAELC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFN;AAGLC,IAAAA,SAAS,EAAEL,IAAI,CAACM,QAAL,CAAcD;AAHpB,GAAP;AAKD;;AAEM,SAASE,cAAT,CAAwBC,OAAxB,EAAyC;AAC9C,MAAMC,CAAC,GAAG,6BAAYD,OAAZ,CAAV;AACA,SAAOC,CAAC,CAACC,WAAF,EAAP;AACD;;AAEM,SAASC,YAAT,CAAsBV,OAAtB,EAA4C;AACjD,MAAIW,MAAJ;AACAX,EAAAA,OAAO,CAACY,OAAR,CAAgB,UAACC,IAAD,EAAU;AACxB,QAAI,CAACF,MAAD,IAAWE,IAAI,CAACC,SAAL,GAAiBH,MAAhC,EAAwCA,MAAM,GAAGE,IAAI,CAACC,SAAd;AACzC,GAFD;AAGA,SAAOH,MAAM,IAAI,IAAIT,IAAJ,CAASS,MAAT,EAAiBF,WAAjB,EAAjB;AACD;;AAEM,SAASM,cAAT,GAGL;AAAA,MAFAf,OAEA,uEAF0B,EAE1B;AAAA,MADAgB,iBACA,uEADoC,EACpC;AACA,MAAMC,GAA4B,GAAG,EAArC;AACA,MAAMC,MAAmB,GAAG,EAA5B;;AACA,WAASC,WAAT,CAAqBN,IAArB,EAA0C;AACxC,QAAI,CAACI,GAAG,CAACJ,IAAI,CAACO,EAAN,CAAJ,IAAiBP,IAAI,CAACQ,MAAL,KAAgBC,yBAAYC,MAAjD,EAAyD;AACvDL,MAAAA,MAAM,CAACM,IAAP,CAAY,wCAAmB,2BAAUX,IAAV,CAAnB,CAAZ;AACAI,MAAAA,GAAG,CAACJ,IAAI,CAACO,EAAN,CAAH,GAAe,IAAf;AACD;AACF;;AACDpB,EAAAA,OAAO,CAACY,OAAR,CAAgBO,WAAhB;AACAH,EAAAA,iBAAiB,CAACJ,OAAlB,CAA0BO,WAA1B;AACA,SAAOD,MAAP;AACD","sourcesContent":["import { callActions } from '../../enums/callActions';\nimport { normalizeStartTime } from '../../lib/callLogHelpers';\nimport getDateFrom from '../../lib/getDateFrom';\nimport removeUri from '../../lib/removeUri';\nimport {\n  CallLogList,\n  CallLogRecord,\n  CallLogRecords,\n  CallLogSyncData,\n} from './CallLog.interface';\n\nexport function processData(data: CallLogSyncData) {\n  return {\n    records: data.records,\n    timestamp: Date.now(),\n    syncToken: data.syncInfo.syncToken,\n  };\n}\n\nexport function getISODateFrom(daySpan: number) {\n  const d = getDateFrom(daySpan);\n  return d.toISOString();\n}\n\nexport function getISODateTo(records: CallLogList) {\n  let dateTo: number;\n  records.forEach((call) => {\n    if (!dateTo || call.startTime < dateTo) dateTo = call.startTime;\n  });\n  return dateTo && new Date(dateTo).toISOString();\n}\n\nexport function processRecords(\n  records: CallLogRecords = [],\n  supplementRecords: CallLogRecords = [],\n) {\n  const ids: Record<string, boolean> = {};\n  const output: CallLogList = [];\n  function processCall(call: CallLogRecord) {\n    if (!ids[call.id] && call.action !== callActions.findMe) {\n      output.push(normalizeStartTime(removeUri(call)));\n      ids[call.id] = true;\n    }\n  }\n  records.forEach(processCall);\n  supplementRecords.forEach(processCall);\n  return output;\n}\n"],"file":"helper.js"}