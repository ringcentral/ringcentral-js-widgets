{"version":3,"file":"CallControlUI.js","names":["_ramda","require","_callDirections","_interopRequireDefault","_di","_formatNumber","_CallingSettings","_sessionStatus","_core","_callCtrlLayouts","_checkShouldHidePhoneNumber","_CallControlUI","_dec","_dec2","_dec3","_dec4","_class","_class2","obj","__esModule","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","call","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","property","decorators","context","desc","keys","forEach","initializer","slice","reverse","reduce","decorator","CallControlUI","Module","name","deps","dep","optional","computed","that","currentSessionId","_deps","webphone","sessions","activeSession","_that$_deps$contactMa","contactMatcher","dataMapping","currentSession","from","_that$_deps$contactMa2","to","_RcUIModuleV","_super","_this","getInitialLayout","_ref","conferenceCallEquipped","isOnConference","lastCallInfo","session","layout","callCtrlLayouts","normalCtrl","warmTransferSessionId","completeTransferCtrl","conferenceCtrl","isInboundCall","direction","callDirections","inbound","fromSessionId","conferenceCall","mergingPair","fromSession","find","x","id","activeSessionId","callStatus","sessionStatus","onHold","mergeCtrl","getUIProps","_ref2","_this$_deps$conferenc","_this$_deps$conferenc2","_this$_deps$conferenc3","_this$_deps$conferenc4","_this2","params","_ref2$showCallQueueNa","showCallQueueName","_ref2$showPark","showPark","children","sessionId","nameMatches","outbound","toMatches","fromMatches","isWebRTC","callingSettings","callingMode","callingModes","hasPermission","conferenceData","values","conferences","isConferenceSession","isMerging","conferenceCallId","conference","isConferenceCallOverload","isOverload","hasConferenceCall","conferenceCallParties","partyProfiles","hideChildren","status","finished","warmTransferSession","getLastCallInfoFromWebphoneSession","disableLinks","connectivityManager","isOfflineMode","isVoipOnlyMode","phoneNumber","appFeatures","isCDCEnabled","checkShouldHidePhoneNumber","brand","currentLocale","locale","areaCode","regionSettings","countryCode","showBackButton","searchContactList","contactSearch","sortedResult","showSpinner","disableFlip","forwardingNumber","flipNumbers","controlBusy","setup","getUIFunctions","_ref3","_this3","getAvatarUrl","onBackButtonClick","phoneTypeRenderer","phoneSourceNameRenderer","formatPhone","_this3$_deps$extensio","_this3$_deps$extensio2","_this3$_deps$extensio3","formatNumber","siteCode","extensionInfo","site","code","isMultipleSiteEnabled","maxExtensionLength","accountInfo","maxExtensionNumberLength","isEDPEnabled","onHangup","hangup","callMonitor","mergeControlClickHangupTrack","onMute","mute","onUnmute","unmute","hold","onUnhold","unhold","onRecord","startRecord","onStopRecord","stopRecord","sendDTMF","_this3$_deps$webphone","updateSessionMatchedContact","_this3$_deps$webphone2","onFlip","routerInteraction","push","concat","onTransfer","onCompleteTransfer","completeWarmTransfer","onPark","park","searchContact","searchString","debouncedSearch","onAdd","callControlClickAddTrack","validateCallRecording","fromNumber","otherCalls","filter","webphoneSession","allCalls","setMergeParty","onBeforeMerge","conferenceSession","onMerge","_onMerge","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","parseMergingSessions","sent","mergeSessions","stop","_x","gotoParticipantsCtrl","callControlClickParticipantAreaTrack","loadConference","conferenceId","closeMergingPair","_this3$_deps$conferen","afterHideMergeConfirm","confirmMergeClickCloseTrack","afterConfirmMerge","confirmMergeClickMergeTrack","afterOnMerge","callControlClickMergeTrack","get","_this4","_this$_deps$contactMa","_this$_deps$contactMa2","_this$_deps$contactMa3","_this$_deps$contactMa4","_this$_deps$contactMa5","_this$_deps$contactMa6","RcUIModuleV2","getOwnPropertyDescriptor","exports"],"sources":["modules/CallControlUI/CallControlUI.ts"],"sourcesContent":["import { filter, find, values } from 'ramda';\n\nimport callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport type { NormalizedSession } from '@ringcentral-integration/commons/interfaces/Webphone.interface';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport { formatNumber } from '@ringcentral-integration/commons/lib/formatNumber';\nimport { callingModes } from '@ringcentral-integration/commons/modules/CallingSettings';\nimport type {\n  ConferenceCall,\n  LastCallInfo,\n} from '@ringcentral-integration/commons/modules/ConferenceCall';\nimport { sessionStatus } from '@ringcentral-integration/commons/modules/Webphone/sessionStatus';\nimport type { Webphone } from '@ringcentral-integration/commons/modules/Webphone';\nimport { RcUIModuleV2, computed } from '@ringcentral-integration/core';\nimport type { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\n\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport { checkShouldHidePhoneNumber } from '../../lib/checkShouldHidePhoneNumber';\nimport type {\n  CallControlComponentProps,\n  Deps,\n} from './CallControlUI.interface';\nimport { getLastCallInfoFromWebphoneSession } from './CallControlUI.interface';\n\n@Module({\n  name: 'CallControlUI',\n  deps: [\n    'Webphone',\n    'Locale',\n    'ContactMatcher',\n    'RegionSettings',\n    'Brand',\n    'ContactSearch',\n    'CallingSettings',\n    'ConnectivityManager',\n    'ForwardingNumber',\n    'CallMonitor',\n    'ExtensionInfo',\n    'AppFeatures',\n    'AccountInfo',\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'RouterInteraction', optional: true },\n  ],\n})\nexport class CallControlUI extends RcUIModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n  currentSessionId: string = null;\n\n  @computed((that: CallControlUI) => [\n    that.currentSessionId,\n    that._deps.webphone.sessions,\n    that._deps.webphone.activeSession,\n  ])\n  get currentSession() {\n    return (\n      (this.currentSessionId\n        ? find(\n            (session) => session.id === this.currentSessionId,\n            this._deps.webphone.sessions,\n          )\n        : this._deps.webphone.activeSession) || ({} as NormalizedSession)\n    );\n  }\n\n  @computed((that: CallControlUI) => [\n    that._deps.contactMatcher?.dataMapping,\n    that.currentSession.from,\n  ])\n  get fromMatches() {\n    return (\n      this._deps.contactMatcher?.dataMapping?.[this.currentSession.from] ?? []\n    );\n  }\n\n  @computed((that: CallControlUI) => [\n    that._deps.contactMatcher?.dataMapping,\n    that.currentSession.to,\n  ])\n  get toMatches() {\n    return (\n      this._deps.contactMatcher?.dataMapping?.[this.currentSession.to] ?? []\n    );\n  }\n\n  getUIProps({\n    params,\n    showCallQueueName = false,\n    showPark = false,\n    children,\n  }: CallControlComponentProps) {\n    // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n    this.currentSessionId = params?.sessionId;\n    const nameMatches =\n      this.currentSession.direction === callDirections.outbound\n        ? this.toMatches\n        : this.fromMatches;\n\n    const isWebRTC =\n      this._deps.callingSettings.callingMode === callingModes.webphone;\n    const isInboundCall =\n      this.currentSession.direction === callDirections.inbound;\n\n    let lastCallInfo = this._deps.conferenceCall?.lastCallInfo;\n\n    const conferenceCallEquipped =\n      this._deps.conferenceCall?.hasPermission ?? false;\n    const conferenceData = conferenceCallEquipped\n      ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        values(this._deps.conferenceCall.conferences)[0]\n      : undefined;\n    const isOnConference = conferenceCallEquipped\n      ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.conferenceCall.isConferenceSession(this.currentSession.id)\n      : false;\n    const isMerging =\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      conferenceCallEquipped && this._deps.conferenceCall.isMerging;\n    const conferenceCallId =\n      conferenceData && isWebRTC ? conferenceData.conference.id : null;\n    const isConferenceCallOverload =\n      conferenceData && isWebRTC\n        ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          this._deps.conferenceCall.isOverload(conferenceCallId)\n        : false;\n\n    const hasConferenceCall = !!conferenceData;\n    const conferenceCallParties = conferenceCallEquipped\n      ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.conferenceCall.partyProfiles\n      : undefined;\n\n    // TODO: investigate whether this can simply use isMerging\n    const fromSessionId = conferenceCallEquipped\n      ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.conferenceCall.mergingPair?.fromSessionId\n      : undefined;\n    const hideChildren =\n      conferenceCallEquipped &&\n      !isInboundCall &&\n      fromSessionId &&\n      fromSessionId !== this.currentSession.id &&\n      lastCallInfo &&\n      lastCallInfo.status !== sessionStatus.finished;\n\n    if (this.currentSession.warmTransferSessionId) {\n      const warmTransferSession = this._deps.webphone.sessions.find(\n        (session) => session.id === this.currentSession.warmTransferSessionId,\n      );\n      // @ts-expect-error TS(2345): Argument of type 'NormalizedSession | undefined' i... Remove this comment to see the full error message\n      lastCallInfo = getLastCallInfoFromWebphoneSession(warmTransferSession);\n    }\n\n    const disableLinks = !!(\n      this._deps.connectivityManager.isOfflineMode ||\n      this._deps.connectivityManager.isVoipOnlyMode\n    );\n\n    let phoneNumber =\n      this.currentSession.direction === callDirections.outbound\n        ? this.currentSession.to\n        : this.currentSession.from;\n\n    if (\n      this._deps.appFeatures.isCDCEnabled &&\n      checkShouldHidePhoneNumber(phoneNumber, nameMatches)\n    ) {\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n      phoneNumber = null;\n    }\n\n    return {\n      brand: this._deps.brand.name,\n      nameMatches,\n      phoneNumber,\n      currentLocale: this._deps.locale.currentLocale,\n      session: this.currentSession,\n      areaCode: this._deps.regionSettings.areaCode,\n      countryCode: this._deps.regionSettings.countryCode,\n      showBackButton: true, // callMonitor.calls.length > 0,\n      searchContactList: this._deps.contactSearch.sortedResult,\n      showSpinner: isMerging,\n      conferenceCallEquipped,\n      hasConferenceCall,\n      conferenceCallParties,\n      conferenceCallId,\n      lastCallInfo,\n      // TODO: investigate whether it's better to just\n      // use isMerging and let the component decide whether to display children\n      children: hideChildren ? null : children,\n      isOnConference,\n      isWebRTC,\n      disableLinks,\n      isConferenceCallOverload,\n      disableFlip: this._deps.forwardingNumber.flipNumbers.length === 0,\n      showCallQueueName,\n      showPark,\n      controlBusy: this.currentSession.callStatus === sessionStatus.setup,\n    };\n  }\n\n  getInitialLayout = ({\n    conferenceCallEquipped,\n    isOnConference,\n    lastCallInfo,\n    session,\n  }: {\n    conferenceCallEquipped: boolean;\n    isOnConference: boolean;\n    lastCallInfo?: LastCallInfo;\n    session?: NormalizedSession;\n  }) => {\n    let layout = callCtrlLayouts.normalCtrl;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    if (session.warmTransferSessionId) {\n      return callCtrlLayouts.completeTransferCtrl;\n    }\n    if (!conferenceCallEquipped) {\n      return layout;\n    }\n\n    if (isOnConference) {\n      return callCtrlLayouts.conferenceCtrl;\n    }\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const isInboundCall = session.direction === callDirections.inbound;\n\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const { fromSessionId } = this._deps.conferenceCall.mergingPair;\n    const fromSession = find(\n      (x: any) => x.id === fromSessionId,\n      this._deps.webphone.sessions,\n    );\n\n    const activeSessionId =\n      this._deps.webphone &&\n      this._deps.webphone.activeSession &&\n      this._deps.webphone.activeSession.id;\n\n    if (\n      !isOnConference &&\n      !isInboundCall &&\n      fromSession &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      fromSessionId !== session.id &&\n      lastCallInfo &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      (session.callStatus !== sessionStatus.onHold ||\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        (session.callStatus === sessionStatus.onHold &&\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          session.id === activeSessionId))\n    ) {\n      // enter merge ctrl page.\n      layout = callCtrlLayouts.mergeCtrl;\n    }\n\n    return layout;\n  };\n\n  getUIFunctions({\n    getAvatarUrl,\n    onBackButtonClick,\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n  }: CallControlComponentProps) {\n    return {\n      getInitialLayout: this.getInitialLayout,\n      formatPhone: (phoneNumber: string) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._deps.regionSettings.areaCode,\n          countryCode: this._deps.regionSettings.countryCode,\n          siteCode: this._deps.extensionInfo?.site?.code ?? '',\n          isMultipleSiteEnabled: this._deps.extensionInfo.isMultipleSiteEnabled,\n          maxExtensionLength: this._deps.accountInfo.maxExtensionNumberLength,\n          isEDPEnabled: this._deps.appFeatures.isEDPEnabled,\n        }),\n      onHangup: (\n        sessionId: string,\n        layout: ObjectMapValue<typeof callCtrlLayouts>,\n      ) => {\n        this._deps.webphone.hangup(sessionId);\n        if (layout && layout === callCtrlLayouts.mergeCtrl) {\n          this._deps.callMonitor.mergeControlClickHangupTrack();\n        }\n      },\n      onMute: (sessionId: string) => this._deps.webphone.mute(sessionId),\n      onUnmute: (sessionId: string) => this._deps.webphone.unmute(sessionId),\n      onHold: (sessionId: string) => this._deps.webphone.hold(sessionId),\n      onUnhold: (sessionId: string) => {\n        this._deps.webphone.unhold(sessionId);\n      },\n      onRecord: (sessionId: string) =>\n        this._deps.webphone.startRecord(sessionId),\n      onStopRecord: (sessionId: string) =>\n        this._deps.webphone.stopRecord(sessionId),\n      sendDTMF: (...args: Parameters<Webphone['sendDTMF']>) =>\n        this._deps.webphone.sendDTMF(...args),\n      updateSessionMatchedContact: (\n        ...args: Parameters<Webphone['updateSessionMatchedContact']>\n      ) => this._deps.webphone.updateSessionMatchedContact(...args),\n      getAvatarUrl,\n      onBackButtonClick,\n      onFlip: (sessionId: string) => {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.routerInteraction.push(`/flip/${sessionId}`);\n      },\n      onTransfer: (sessionId: string) => {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.routerInteraction.push(`/transfer/${sessionId}/webphone`);\n      },\n      onCompleteTransfer: (sessionId: string) => {\n        this._deps.webphone.completeWarmTransfer(sessionId);\n      },\n      onPark: (sessionId: string) => this._deps.webphone.park(sessionId),\n      searchContact: (searchString: string) =>\n        this._deps.contactSearch.debouncedSearch({ searchString }),\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      onAdd: (sessionId: string) => {\n        // track user click add on call control\n        this._deps.callMonitor.callControlClickAddTrack();\n        const session = find(\n          (x: any) => x.id === sessionId,\n          this._deps.webphone.sessions,\n        );\n        if (\n          !session ||\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          !this._deps.conferenceCall.validateCallRecording(session)\n        ) {\n          return;\n        }\n        let fromNumber = this._deps.callingSettings.fromNumber;\n        if (session.direction === callDirections.outbound) {\n          fromNumber = session.fromNumber; // keep the same fromNumber\n        }\n        const otherCalls = filter(\n          (call: any) =>\n            call.webphoneSession && call.webphoneSession.id !== session.id,\n          this._deps.callMonitor.allCalls,\n        );\n        if (otherCalls.length) {\n          // goto 'calls on hold' page\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          this._deps.routerInteraction.push(\n            `/conferenceCall/callsOnhold/${fromNumber}/${session.id}`,\n          );\n        } else {\n          if (this._deps.conferenceCall) {\n            this._deps.conferenceCall.setMergeParty({\n              fromSessionId: sessionId,\n            });\n          }\n          // goto dialer directly\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          this._deps.routerInteraction.push(\n            `/conferenceCall/dialer/${fromNumber}/${sessionId}`,\n          );\n        }\n      },\n      onBeforeMerge: (sessionId: string) => {\n        const session = find(\n          (x: any) => x.id === sessionId,\n          this._deps.webphone.sessions,\n        );\n        if (\n          !session ||\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          !this._deps.conferenceCall.validateCallRecording(session)\n        ) {\n          return false;\n        }\n        if (this._deps.conferenceCall) {\n          const conferenceData = Object.values(\n            this._deps.conferenceCall.conferences,\n          )[0];\n          if (conferenceData) {\n            const conferenceSession = find(\n              (x: any) => x.id === conferenceData.sessionId,\n              this._deps.webphone.sessions,\n            );\n            if (\n              conferenceSession &&\n              !this._deps.conferenceCall.validateCallRecording(\n                conferenceSession,\n              )\n            ) {\n              return false;\n            }\n          }\n        }\n        return true;\n      },\n      onMerge: async (sessionId: string) => {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        const sessions = await this._deps.conferenceCall.parseMergingSessions({\n          sessionId,\n        });\n        if (sessions) {\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          await this._deps.conferenceCall.mergeSessions(sessions);\n        }\n      },\n\n      gotoParticipantsCtrl: () => {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.routerInteraction.push('/conferenceCall/participants');\n        // track user click participant area on call control\n        this._deps.callMonitor.callControlClickParticipantAreaTrack();\n      },\n      loadConference: (conferenceId: string) => {\n        if (this._deps.conferenceCall) {\n          this._deps.conferenceCall.loadConference(conferenceId);\n        }\n      },\n      closeMergingPair: () => {\n        return (\n          this._deps.conferenceCall &&\n          this._deps.conferenceCall.closeMergingPair()\n        );\n      },\n      setMergeParty: (...args: Parameters<ConferenceCall['setMergeParty']>) => {\n        return (\n          this._deps.conferenceCall &&\n          this._deps.conferenceCall.setMergeParty(...args)\n        );\n      },\n      // user action track functions\n      afterHideMergeConfirm: () =>\n        this._deps.callMonitor.confirmMergeClickCloseTrack(),\n      afterConfirmMerge: () =>\n        this._deps.callMonitor.confirmMergeClickMergeTrack(),\n      afterOnMerge: () => this._deps.callMonitor.callControlClickMergeTrack(),\n    };\n  }\n}\n"],"mappings":"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"}