{"version":3,"file":"CallControlUI.js","names":["_callDirections","_interopRequireDefault","require","_callLogHelpers","_di","_formatNumber","_CallingSettings","_sessionStatus","_core","_ramda","_callCtrlLayouts","_checkShouldHidePhoneNumber","_CallControlUI","_dec","_dec2","_dec3","_dec4","_class","_class2","e","__esModule","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","TypeError","_defineProperties","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","call","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","l","keys","forEach","initializer","slice","reverse","reduce","CallControlUI","Module","name","deps","dep","optional","computed","that","currentSessionId","_deps","webphone","sessions","activeSession","_that$_deps$contactMa","contactMatcher","dataMapping","currentSession","from","_that$_deps$contactMa2","to","_RcUIModuleV","_super","_this","getInitialLayout","_ref","conferenceCallEquipped","isOnConference","lastCallInfo","session","layout","callCtrlLayouts","normalCtrl","warmTransferSessionId","completeTransferCtrl","conferenceCtrl","isInboundCall","direction","callDirections","inbound","fromSessionId","conferenceCall","mergingPair","fromSession","find","x","id","activeSessionId","callStatus","sessionStatus","onHold","mergeCtrl","getUIProps","_ref2","_this$_deps$conferenc","_this$_deps$conferenc2","_this$_deps$conferenc3","_this$_deps$conferenc4","_this2","params","_ref2$showCallQueueNa","showCallQueueName","_ref2$showCallerIdNam","showCallerIdName","_ref2$showPark","showPark","children","sessionId","nameMatches","outbound","toMatches","fromMatches","isWebRTC","callingSettings","callingMode","callingModes","hasPermission","conferenceData","values","conferences","undefined","isConferenceSession","isMerging","conferenceCallId","conference","isConferenceCallOverload","isOverload","hasConferenceCall","conferenceCallParties","partyProfiles","hideChildren","status","finished","warmTransferSession","getLastCallInfoFromWebphoneSession","disableLinks","connectivityManager","isOfflineMode","isVoipOnlyMode","phoneNumber","appFeatures","isCDCEnabled","checkShouldHidePhoneNumber","brand","currentLocale","locale","areaCode","regionSettings","countryCode","showBackButton","searchContactList","contactSearch","sortedResult","showSpinner","callerIdName","disableFlip","forwardingNumber","flipNumbers","controlBusy","setup","getUIFunctions","_ref3","_this3","getAvatarUrl","onBackButtonClick","phoneTypeRenderer","phoneSourceNameRenderer","formatPhone","_this3$_deps$extensio","_this3$_deps$extensio2","_this3$_deps$extensio3","formatNumber","siteCode","extensionInfo","site","code","isMultipleSiteEnabled","maxExtensionLength","accountInfo","maxExtensionNumberLength","isEDPEnabled","onHangup","hangup","callMonitor","mergeControlClickHangupTrack","onMute","mute","onUnmute","unmute","hold","onUnhold","unhold","onRecord","startRecord","onStopRecord","stopRecord","sendDTMF","_this3$_deps$webphone","updateSessionMatchedContact","_this3$_deps$webphone2","onFlip","routerInteraction","push","concat","onTransfer","onCompleteTransfer","completeWarmTransfer","onPark","park","searchContact","searchString","debouncedSearch","onAdd","callControlClickAddTrack","validateCallRecording","fromNumber","otherCalls","filter","webphoneSession","allCalls","setMergeParty","onBeforeMerge","conferenceSession","onMerge","_onMerge","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","parseMergingSessions","sent","mergeSessions","stop","_x","gotoParticipantsCtrl","callControlClickParticipantAreaTrack","loadConference","conferenceId","closeMergingPair","_this3$_deps$conferen","afterHideMergeConfirm","confirmMergeClickCloseTrack","afterConfirmMerge","confirmMergeClickMergeTrack","afterOnMerge","callControlClickMergeTrack","get","_this4","_this$_deps$contactMa","_this$_deps$contactMa2","_this$_deps$contactMa3","_this$_deps$contactMa4","_this$_deps$contactMa5","_this$_deps$contactMa6","getWebphoneSessionDisplayName","RcUIModuleV2","getOwnPropertyDescriptor","exports"],"sources":["modules/CallControlUI/CallControlUI.ts"],"sourcesContent":["import callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport type { NormalizedSession } from '@ringcentral-integration/commons/interfaces/Webphone.interface';\nimport { getWebphoneSessionDisplayName } from '@ringcentral-integration/commons/lib/callLogHelpers';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport { formatNumber } from '@ringcentral-integration/commons/lib/formatNumber';\nimport { callingModes } from '@ringcentral-integration/commons/modules/CallingSettings';\nimport type {\n  ConferenceCall,\n  LastCallInfo,\n} from '@ringcentral-integration/commons/modules/ConferenceCall';\nimport type { Webphone } from '@ringcentral-integration/commons/modules/Webphone';\nimport { sessionStatus } from '@ringcentral-integration/commons/modules/Webphone/sessionStatus';\nimport { RcUIModuleV2, computed } from '@ringcentral-integration/core';\nimport type { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { filter, find, values } from 'ramda';\n\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport { checkShouldHidePhoneNumber } from '../../lib/checkShouldHidePhoneNumber';\n\nimport type {\n  CallControlComponentProps,\n  Deps,\n} from './CallControlUI.interface';\nimport { getLastCallInfoFromWebphoneSession } from './CallControlUI.interface';\n\n@Module({\n  name: 'CallControlUI',\n  deps: [\n    'Webphone',\n    'Locale',\n    'ContactMatcher',\n    'RegionSettings',\n    'Brand',\n    'ContactSearch',\n    'CallingSettings',\n    'ConnectivityManager',\n    'ForwardingNumber',\n    'CallMonitor',\n    'ExtensionInfo',\n    'AppFeatures',\n    'AccountInfo',\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'RouterInteraction', optional: true },\n  ],\n})\nexport class CallControlUI<T extends Deps = Deps> extends RcUIModuleV2<T> {\n  constructor(deps: T) {\n    super({\n      deps,\n    });\n  }\n\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n  currentSessionId: string = null;\n\n  @computed((that: CallControlUI) => [\n    that.currentSessionId,\n    that._deps.webphone.sessions,\n    that._deps.webphone.activeSession,\n  ])\n  get currentSession() {\n    return (\n      (this.currentSessionId\n        ? find(\n            (session) => session.id === this.currentSessionId,\n            this._deps.webphone.sessions,\n          )\n        : this._deps.webphone.activeSession) || ({} as NormalizedSession)\n    );\n  }\n\n  @computed((that: CallControlUI) => [\n    that._deps.contactMatcher?.dataMapping,\n    that.currentSession.from,\n  ])\n  get fromMatches() {\n    return (\n      this._deps.contactMatcher?.dataMapping?.[this.currentSession.from] ?? []\n    );\n  }\n\n  @computed((that: CallControlUI) => [\n    that._deps.contactMatcher?.dataMapping,\n    that.currentSession.to,\n  ])\n  get toMatches() {\n    return (\n      this._deps.contactMatcher?.dataMapping?.[this.currentSession.to] ?? []\n    );\n  }\n\n  get callerIdName() {\n    return getWebphoneSessionDisplayName(this.currentSession as any);\n  }\n\n  getUIProps({\n    params,\n    showCallQueueName = false,\n    showCallerIdName = false,\n    showPark = false,\n    children,\n  }: CallControlComponentProps) {\n    // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n    this.currentSessionId = params?.sessionId;\n    const nameMatches =\n      this.currentSession.direction === callDirections.outbound\n        ? this.toMatches\n        : this.fromMatches;\n\n    const isWebRTC =\n      this._deps.callingSettings.callingMode === callingModes.webphone;\n    const isInboundCall =\n      this.currentSession.direction === callDirections.inbound;\n\n    let lastCallInfo = this._deps.conferenceCall?.lastCallInfo;\n\n    const conferenceCallEquipped =\n      this._deps.conferenceCall?.hasPermission ?? false;\n    const conferenceData = conferenceCallEquipped\n      ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        values(this._deps.conferenceCall.conferences)[0]\n      : undefined;\n    const isOnConference = conferenceCallEquipped\n      ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.conferenceCall.isConferenceSession(this.currentSession.id)\n      : false;\n    const isMerging =\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      conferenceCallEquipped && this._deps.conferenceCall.isMerging;\n    const conferenceCallId =\n      conferenceData && isWebRTC ? conferenceData.conference.id : null;\n    const isConferenceCallOverload =\n      conferenceData && isWebRTC\n        ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          this._deps.conferenceCall.isOverload(conferenceCallId)\n        : false;\n\n    const hasConferenceCall = !!conferenceData;\n    const conferenceCallParties = conferenceCallEquipped\n      ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.conferenceCall.partyProfiles\n      : undefined;\n\n    // TODO: investigate whether this can simply use isMerging\n    const fromSessionId = conferenceCallEquipped\n      ? // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.conferenceCall.mergingPair?.fromSessionId\n      : undefined;\n    const hideChildren =\n      conferenceCallEquipped &&\n      !isInboundCall &&\n      fromSessionId &&\n      fromSessionId !== this.currentSession.id &&\n      lastCallInfo &&\n      lastCallInfo.status !== sessionStatus.finished;\n\n    if (this.currentSession.warmTransferSessionId) {\n      const warmTransferSession = this._deps.webphone.sessions.find(\n        (session) => session.id === this.currentSession.warmTransferSessionId,\n      );\n      lastCallInfo = getLastCallInfoFromWebphoneSession(\n        warmTransferSession!,\n        this._deps.contactMatcher.dataMapping,\n      );\n    }\n\n    const disableLinks = !!(\n      this._deps.connectivityManager.isOfflineMode ||\n      this._deps.connectivityManager.isVoipOnlyMode\n    );\n\n    let phoneNumber =\n      this.currentSession.direction === callDirections.outbound\n        ? this.currentSession.to\n        : this.currentSession.from;\n\n    if (\n      this._deps.appFeatures.isCDCEnabled &&\n      checkShouldHidePhoneNumber(phoneNumber, nameMatches)\n    ) {\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n      phoneNumber = null;\n    }\n\n    return {\n      brand: this._deps.brand.name,\n      nameMatches,\n      phoneNumber,\n      currentLocale: this._deps.locale.currentLocale,\n      session: this.currentSession,\n      areaCode: this._deps.regionSettings.areaCode,\n      countryCode: this._deps.regionSettings.countryCode,\n      showBackButton: true, // callMonitor.calls.length > 0,\n      searchContactList: this._deps.contactSearch.sortedResult,\n      showSpinner: isMerging,\n      conferenceCallEquipped,\n      hasConferenceCall,\n      conferenceCallParties,\n      conferenceCallId,\n      lastCallInfo,\n      callerIdName: showCallerIdName ? this.callerIdName : undefined,\n      // TODO: investigate whether it's better to just\n      // use isMerging and let the component decide whether to display children\n      children: hideChildren ? null : children,\n      isOnConference,\n      isWebRTC,\n      disableLinks,\n      isConferenceCallOverload,\n      disableFlip: this._deps.forwardingNumber.flipNumbers.length === 0,\n      showCallQueueName,\n      showPark,\n      controlBusy: this.currentSession.callStatus === sessionStatus.setup,\n    };\n  }\n\n  getInitialLayout = ({\n    conferenceCallEquipped,\n    isOnConference,\n    lastCallInfo,\n    session,\n  }: {\n    conferenceCallEquipped: boolean;\n    isOnConference: boolean;\n    lastCallInfo?: LastCallInfo;\n    session?: NormalizedSession;\n  }) => {\n    let layout = callCtrlLayouts.normalCtrl;\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    if (session.warmTransferSessionId) {\n      return callCtrlLayouts.completeTransferCtrl;\n    }\n    if (!conferenceCallEquipped) {\n      return layout;\n    }\n\n    if (isOnConference) {\n      return callCtrlLayouts.conferenceCtrl;\n    }\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const isInboundCall = session.direction === callDirections.inbound;\n\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const { fromSessionId } = this._deps.conferenceCall.mergingPair;\n    const fromSession = find(\n      (x: any) => x.id === fromSessionId,\n      this._deps.webphone.sessions,\n    );\n\n    const activeSessionId =\n      this._deps.webphone &&\n      this._deps.webphone.activeSession &&\n      this._deps.webphone.activeSession.id;\n\n    if (\n      !isOnConference &&\n      !isInboundCall &&\n      fromSession &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      fromSessionId !== session.id &&\n      lastCallInfo &&\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      (session.callStatus !== sessionStatus.onHold ||\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        (session.callStatus === sessionStatus.onHold &&\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          session.id === activeSessionId))\n    ) {\n      // enter merge ctrl page.\n      layout = callCtrlLayouts.mergeCtrl;\n    }\n\n    return layout;\n  };\n\n  getUIFunctions({\n    getAvatarUrl,\n    onBackButtonClick,\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n  }: CallControlComponentProps) {\n    return {\n      getInitialLayout: this.getInitialLayout,\n      formatPhone: (phoneNumber: string) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._deps.regionSettings.areaCode,\n          countryCode: this._deps.regionSettings.countryCode,\n          siteCode: this._deps.extensionInfo?.site?.code ?? '',\n          isMultipleSiteEnabled: this._deps.extensionInfo.isMultipleSiteEnabled,\n          maxExtensionLength: this._deps.accountInfo.maxExtensionNumberLength,\n          isEDPEnabled: this._deps.appFeatures.isEDPEnabled,\n        }),\n      onHangup: (\n        sessionId: string,\n        layout: ObjectMapValue<typeof callCtrlLayouts>,\n      ) => {\n        this._deps.webphone.hangup(sessionId);\n        if (layout && layout === callCtrlLayouts.mergeCtrl) {\n          this._deps.callMonitor.mergeControlClickHangupTrack();\n        }\n      },\n      onMute: (sessionId: string) => this._deps.webphone.mute(sessionId),\n      onUnmute: (sessionId: string) => this._deps.webphone.unmute(sessionId),\n      onHold: (sessionId: string) => this._deps.webphone.hold(sessionId),\n      onUnhold: (sessionId: string) => {\n        this._deps.webphone.unhold(sessionId);\n      },\n      onRecord: (sessionId: string) =>\n        this._deps.webphone.startRecord(sessionId),\n      onStopRecord: (sessionId: string) =>\n        this._deps.webphone.stopRecord(sessionId),\n      sendDTMF: (...args: Parameters<Webphone['sendDTMF']>) =>\n        this._deps.webphone.sendDTMF(...args),\n      updateSessionMatchedContact: (\n        ...args: Parameters<Webphone['updateSessionMatchedContact']>\n      ) => this._deps.webphone.updateSessionMatchedContact(...args),\n      getAvatarUrl,\n      onBackButtonClick,\n      onFlip: (sessionId: string) => {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.routerInteraction.push(`/flip/${sessionId}`);\n      },\n      onTransfer: (sessionId: string) => {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.routerInteraction.push(`/transfer/${sessionId}/webphone`);\n      },\n      onCompleteTransfer: (sessionId: string) => {\n        this._deps.webphone.completeWarmTransfer(sessionId);\n      },\n      onPark: (sessionId: string) => this._deps.webphone.park(sessionId),\n      searchContact: (searchString: string) =>\n        this._deps.contactSearch.debouncedSearch({ searchString }),\n      phoneTypeRenderer,\n      phoneSourceNameRenderer,\n      onAdd: (sessionId: string) => {\n        // track user click add on call control\n        this._deps.callMonitor.callControlClickAddTrack();\n        const session = find(\n          (x: any) => x.id === sessionId,\n          this._deps.webphone.sessions,\n        );\n        if (\n          !session ||\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          !this._deps.conferenceCall.validateCallRecording(session)\n        ) {\n          return;\n        }\n        let fromNumber = this._deps.callingSettings.fromNumber;\n        if (session.direction === callDirections.outbound) {\n          fromNumber = session.fromNumber; // keep the same fromNumber\n        }\n        const otherCalls = filter(\n          (call: any) =>\n            call.webphoneSession && call.webphoneSession.id !== session.id,\n          this._deps.callMonitor.allCalls,\n        );\n        if (otherCalls.length) {\n          // goto 'calls on hold' page\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          this._deps.routerInteraction.push(\n            `/conferenceCall/callsOnhold/${fromNumber}/${session.id}`,\n          );\n        } else {\n          if (this._deps.conferenceCall) {\n            this._deps.conferenceCall.setMergeParty({\n              fromSessionId: sessionId,\n            });\n          }\n          // goto dialer directly\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          this._deps.routerInteraction.push(\n            `/conferenceCall/dialer/${fromNumber}/${sessionId}`,\n          );\n        }\n      },\n      onBeforeMerge: (sessionId: string) => {\n        const session = find(\n          (x: any) => x.id === sessionId,\n          this._deps.webphone.sessions,\n        );\n        if (\n          !session ||\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          !this._deps.conferenceCall.validateCallRecording(session)\n        ) {\n          return false;\n        }\n        if (this._deps.conferenceCall) {\n          const conferenceData = Object.values(\n            this._deps.conferenceCall.conferences,\n          )[0];\n          if (conferenceData) {\n            const conferenceSession = find(\n              (x: any) => x.id === conferenceData.sessionId,\n              this._deps.webphone.sessions,\n            );\n            if (\n              conferenceSession &&\n              !this._deps.conferenceCall.validateCallRecording(\n                conferenceSession,\n              )\n            ) {\n              return false;\n            }\n          }\n        }\n        return true;\n      },\n      onMerge: async (sessionId: string) => {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        const sessions = await this._deps.conferenceCall.parseMergingSessions({\n          sessionId,\n        });\n        if (sessions) {\n          // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n          await this._deps.conferenceCall.mergeSessions(sessions);\n        }\n      },\n\n      gotoParticipantsCtrl: () => {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        this._deps.routerInteraction.push('/conferenceCall/participants');\n        // track user click participant area on call control\n        this._deps.callMonitor.callControlClickParticipantAreaTrack();\n      },\n      loadConference: (conferenceId: string) => {\n        if (this._deps.conferenceCall) {\n          this._deps.conferenceCall.loadConference(conferenceId);\n        }\n      },\n      closeMergingPair: () => {\n        return (\n          this._deps.conferenceCall &&\n          this._deps.conferenceCall.closeMergingPair()\n        );\n      },\n      setMergeParty: (...args: Parameters<ConferenceCall['setMergeParty']>) => {\n        return (\n          this._deps.conferenceCall &&\n          this._deps.conferenceCall.setMergeParty(...args)\n        );\n      },\n      // user action track functions\n      afterHideMergeConfirm: () =>\n        this._deps.callMonitor.confirmMergeClickCloseTrack(),\n      afterConfirmMerge: () =>\n        this._deps.callMonitor.confirmMergeClickMergeTrack(),\n      afterOnMerge: () => this._deps.callMonitor.callControlClickMergeTrack(),\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}