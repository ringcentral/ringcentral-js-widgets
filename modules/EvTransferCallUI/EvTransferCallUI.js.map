{"version":3,"sources":["modules/EvTransferCallUI/EvTransferCallUI.ts"],"names":["EvTransferCallUI","name","deps","dep","optional","that","_deps","evAuth","agent","agentConfig","inboundSettings","availableRequeueQueues","evRequeueCall","selectedQueueGroupId","routerQueueGroupId","selectedQueueGroup","selectedGateId","locale","currentLocale","allowRequeueCall","evTransferCall","allowTransferCall","allowInternalTransfer","selectedCallRecipient","selectedGate","callId","selectQueueGroupDisabled","disabled","transferType","transferAgentList","transferAgentId","transferPhoneBook","transferPhoneBookSelectedIndex","transferRecipientNumber","transferRecipientCountryId","availableCountries","isQueueTransfer","evCall","currentCall","transferring","requeueCallDisabled","transferOptions","stayOnCall","goToActivityCallLogPage","routerInteraction","push","goToRequeueCallPage","_redirectRequeueCall","goToRequeueGroupPage","goToRequeueGroupDetailPage","groupId","isCheckDisable","onTransferSuccess","test","currentPath","url","fromText","text","toLowerCase","includes","queueId","setStatus","requeueCall","goBack","router","id","_submitRequeueCall","transfer","options","firstName","lastName","blankRegex","username","replace","keywords","trim","split","length","filter","keyword","phoneBookName","destination","parsedDestination","searchText","type","changeTransferType","transferTypes","queue","goalTransferOption","find","transferOption","clickCallRecipient","textFields","activityCallId","isStayOnCall","selectedTransferType","transferAgentListUpdateTTL","transferCountryOptions","allowManualInternationalTransfer","transferCallDisabled","isWide","environment","requeuing","queueGroups","clickTransferTypeFiled","_clickTransferTypeFiled","setStayOnCall","status","changeStayOnCall","fetchAgentList","changeRecipientNumber","recipientNumber","manualEntry","gotoTransferCallPage","changeTransferPhoneBookSelected","index","phoneBook","changeRecipientCountryId","countryId","changeTransferAgentId","agentId","internal","transferCall","setCancelTemplate","templates","cancelTransfer","cancelTransferPage","gotoActivityCallLogPage","searchAgent","option","_searchAgent","searchPhoneBook","_searchPhoneBook","searchGroup","_searchQueue","groupName","searchGate","gateName","submitSelection","_submitSelection","agentPermissions","allowCrossQueueRequeue","endedCall","queueGroupId","gateGroupId","gates","gateId","number","getNumber","currentRouteUrl","label","i18n","getString","placeholder","value","readonly","selectedAgent","country","countryName","allowTransfer","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { computed, RcUIModuleV2 } from '@ringcentral-integration/core';\n\nimport { EvTransferType, transferTypes } from '../../enums/transferTypes';\nimport {\n  EvTransferCallUIFunctions,\n  EvTransferCallUIProps,\n  EvTransferOption,\n  EvTransferViewPhoneBookItem,\n  GoToRequeueGroupDetailPageParams,\n} from '../../interfaces/EvTransferCallUI.interface';\nimport { EvDirectAgentListItem } from '../../lib/EvClient';\nimport { Deps, TransferCallUI } from './EvTransferCallUI.interface';\nimport i18n from './i18n';\nimport { getInternalTransferName } from './util';\n\n@Module({\n  name: 'EvTransferCallUI',\n  deps: [\n    'RouterInteraction',\n    'Locale',\n    'EvCall',\n    'EvTransferCall',\n    'EvAuth',\n    'Environment',\n    'EvRequeueCall',\n    { dep: 'EvTransferCallUIOptions', optional: true },\n  ],\n})\nclass EvTransferCallUI extends RcUIModuleV2<Deps> implements TransferCallUI {\n  routerQueueGroupId: string;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this.evTransferCall.onTransferSuccess(() => {\n      if (\n        /^\\/activityCallLog\\/.+\\/transferCall$/.test(\n          this._deps.routerInteraction.currentPath,\n        )\n      ) {\n        this.goToActivityCallLogPage();\n      }\n    });\n  }\n\n  get selectQueueGroupDisabled() {\n    return !this._deps.evAuth.agentPermissions.allowCrossQueueRequeue;\n  }\n\n  get disabled() {\n    return !(\n      this._deps.evRequeueCall.selectedQueueGroupId &&\n      this._deps.evAuth.agentPermissions.allowCrossQueueRequeue\n    );\n  }\n\n  get requeueCallDisabled() {\n    return (\n      this._deps.evRequeueCall.requeuing ||\n      !this._deps.evRequeueCall.selectedGateId ||\n      !!this._deps.evCall.currentCall?.endedCall\n    );\n  }\n\n  @computed((that: EvTransferCallUI) => [\n    that._deps.evAuth.agent.agentConfig.inboundSettings.availableRequeueQueues,\n    that._deps.evRequeueCall.selectedQueueGroupId,\n    that.routerQueueGroupId,\n  ])\n  get selectedQueueGroup() {\n    const queueGroupId =\n      this.routerQueueGroupId || this._deps.evRequeueCall.selectedQueueGroupId;\n\n    const { availableRequeueQueues } =\n      this._deps.evAuth.agent.agentConfig.inboundSettings;\n    if (\n      queueGroupId &&\n      availableRequeueQueues &&\n      availableRequeueQueues.length > 0\n    ) {\n      return availableRequeueQueues.find(\n        (queue) => queue.gateGroupId === queueGroupId,\n      );\n    }\n    return null;\n  }\n\n  @computed((that: EvTransferCallUI) => [\n    that.selectedQueueGroup,\n    that._deps.evRequeueCall.selectedGateId,\n  ])\n  get selectedGate() {\n    const { selectedGateId } = this._deps.evRequeueCall;\n\n    if (this.selectedQueueGroup && selectedGateId) {\n      const { gates } = this.selectedQueueGroup;\n      if (gates && gates.length > 0) {\n        return gates.find((queue) => queue.gateId === selectedGateId);\n      }\n    }\n    return null;\n  }\n\n  goToActivityCallLogPage = () => {\n    this._deps.routerInteraction.push(`/activityCallLog/${this.callId}`);\n  };\n\n  goToRequeueCallPage = () => {\n    this._redirectRequeueCall();\n  };\n\n  goToRequeueGroupPage = () => {\n    if (this.selectQueueGroupDisabled) return;\n    this._redirectRequeueCall(`/queueGroup`);\n  };\n\n  goToRequeueGroupDetailPage = ({\n    groupId,\n    isCheckDisable,\n  }: GoToRequeueGroupDetailPageParams) => {\n    if (isCheckDisable && this.disabled) return;\n\n    this._redirectRequeueCall(`/queueGroup/${groupId}`);\n  };\n\n  private _redirectRequeueCall(url: string = '') {\n    this._deps.routerInteraction.push(\n      `/activityCallLog/${this.callId}/transferCall${url}`,\n    );\n  }\n\n  private _searchQueue(fromText: string, text: string) {\n    return fromText?.toLowerCase().includes(text.toLowerCase());\n  }\n\n  private _submitSelection(queueId: string) {\n    this._deps.evRequeueCall.setStatus({\n      selectedQueueGroupId: this.routerQueueGroupId,\n      selectedGateId: queueId,\n    });\n    this.goToRequeueCallPage();\n  }\n\n  private async _submitRequeueCall() {\n    if (!this.requeueCallDisabled) {\n      await this._deps.evRequeueCall.requeueCall();\n      this.goToActivityCallLogPage();\n    }\n  }\n\n  get callId() {\n    return this._deps.evCall.activityCallId;\n  }\n\n  get evTransferCall() {\n    return this._deps.evTransferCall;\n  }\n\n  @computed((that: EvTransferCallUI) => [\n    that._deps.locale.currentLocale,\n    that._deps.evRequeueCall.selectedQueueGroupId,\n    that._deps.evRequeueCall.allowRequeueCall,\n    that._deps.evTransferCall.allowTransferCall,\n    that.evTransferCall.allowInternalTransfer,\n    that.selectedCallRecipient,\n    that.selectedQueueGroup,\n    that.selectedGate,\n    that.callId,\n    that.selectQueueGroupDisabled,\n    that.disabled,\n  ])\n  get transferOptions(): EvTransferOption[] {\n    const number = this.evTransferCall.getNumber() || '';\n    const currentRouteUrl = `/activityCallLog/${this.callId}/transferCall`;\n\n    const { currentLocale } = this._deps.locale;\n\n    return [\n      ...(this._deps.evTransferCall.allowTransferCall &&\n      this.evTransferCall.allowInternalTransfer\n        ? [\n            {\n              type: transferTypes.internal,\n              label: i18n.getString(transferTypes.internal, currentLocale),\n              textFields: [\n                {\n                  router: `${currentRouteUrl}/internal`,\n                  label: i18n.getString('callRecipientName', currentLocale),\n                  placeholder: i18n.getString(\n                    'callRecipientNamePlaceholder',\n                    currentLocale,\n                  ),\n                  value: this.selectedCallRecipient,\n                },\n              ],\n            },\n          ]\n        : []),\n      ...(this._deps.evTransferCall.allowTransferCall\n        ? [\n            {\n              type: transferTypes.phoneBook,\n              label: i18n.getString(transferTypes.phoneBook, currentLocale),\n              textFields: [\n                {\n                  router: `${currentRouteUrl}/phoneBook`,\n                  label: i18n.getString('callRecipientName', currentLocale),\n                  placeholder: i18n.getString(\n                    'callRecipientNamePlaceholder',\n                    currentLocale,\n                  ),\n                  value: this.selectedCallRecipient,\n                },\n                {\n                  label: i18n.getString('callRecipientNumber', currentLocale),\n                  placeholder: i18n.getString(\n                    'callRecipientNumberPlaceholder',\n                    currentLocale,\n                  ),\n                  value: number,\n                  readonly: true,\n                },\n              ],\n            },\n          ]\n        : []),\n      ...(this._deps.evRequeueCall.allowRequeueCall\n        ? [\n            {\n              type: transferTypes.queue,\n              label: i18n.getString(transferTypes.queue, currentLocale),\n              textFields: [\n                {\n                  router: `${currentRouteUrl}/queueGroup`,\n                  label: i18n.getString('queueGroup', currentLocale),\n                  placeholder: i18n.getString(\n                    'callRecipientNamePlaceholder',\n                    currentLocale,\n                  ),\n                  value: this.selectedQueueGroup?.groupName,\n                  disabled: this.selectQueueGroupDisabled,\n                  readonly: this.selectQueueGroupDisabled,\n                },\n                {\n                  router: `${currentRouteUrl}/queueGroup/${this._deps.evRequeueCall.selectedQueueGroupId}`,\n                  label: i18n.getString('queueDetail', currentLocale),\n                  placeholder: i18n.getString(\n                    'callRecipientNamePlaceholder',\n                    currentLocale,\n                  ),\n                  value: this.selectedGate?.gateName,\n                  disabled: this.disabled,\n                  readonly: this.disabled,\n                },\n              ],\n            },\n          ]\n        : []),\n      ...(this._deps.evTransferCall.allowTransferCall\n        ? [\n            {\n              type: transferTypes.manualEntry,\n              label: i18n.getString(transferTypes.manualEntry, currentLocale),\n              textFields: [\n                {\n                  router: `${currentRouteUrl}/manualEntry`,\n                  label: i18n.getString('phoneNumber', currentLocale),\n                  placeholder: i18n.getString(\n                    'enterThePhoneNumberPlaceholder',\n                    currentLocale,\n                  ),\n                  value: this.selectedCallRecipient,\n                },\n              ],\n            },\n          ]\n        : []),\n    ];\n  }\n\n  get isQueueTransfer() {\n    return this.evTransferCall.transferType === transferTypes.queue;\n  }\n\n  @computed((that: EvTransferCallUI) => [\n    that.evTransferCall.transferType,\n    that.evTransferCall.transferAgentList,\n    that.evTransferCall.transferAgentId,\n    that.evTransferCall.transferPhoneBook,\n    that.evTransferCall.transferPhoneBookSelectedIndex,\n    that.evTransferCall.transferRecipientNumber,\n    that.evTransferCall.transferRecipientCountryId,\n    that._deps.evAuth.availableCountries,\n  ])\n  get selectedCallRecipient() {\n    const {\n      transferType,\n      transferAgentList,\n      transferAgentId,\n      transferPhoneBook,\n      transferPhoneBookSelectedIndex,\n      transferRecipientNumber,\n      transferRecipientCountryId,\n    } = this.evTransferCall;\n\n    const { availableCountries } = this._deps.evAuth;\n\n    if (transferType === transferTypes.internal && transferAgentId) {\n      const selectedAgent = transferAgentList.find(\n        ({ agentId }) => agentId === transferAgentId,\n      );\n      return selectedAgent ? getInternalTransferName(selectedAgent) : '';\n    }\n    if (\n      transferType === transferTypes.phoneBook &&\n      typeof transferPhoneBookSelectedIndex !== 'undefined' &&\n      transferPhoneBookSelectedIndex !== null\n    ) {\n      const phoneBook = transferPhoneBook[transferPhoneBookSelectedIndex];\n      if (phoneBook.countryId === 'USA') {\n        return phoneBook.name;\n      }\n      const country = availableCountries.find(\n        ({ countryId }) => countryId === phoneBook.countryId,\n      );\n      if (country) {\n        return `${phoneBook.name} (${\n          country.countryName || country.countryId\n        })`;\n      }\n      return `${phoneBook.name} (${phoneBook.countryId})`;\n    }\n    if (transferType === transferTypes.manualEntry && transferRecipientNumber) {\n      if (transferRecipientCountryId === 'USA') {\n        return `${transferRecipientNumber}`;\n      }\n      const country = availableCountries.find(\n        ({ countryId }) => countryId === transferRecipientCountryId,\n      );\n      return `${transferRecipientNumber} (${\n        country.countryName || country.countryId\n      })`;\n    }\n    return '';\n  }\n\n  @computed((that: EvTransferCallUI) => [\n    that.isQueueTransfer,\n    that._deps.evCall.currentCall,\n    that.selectedCallRecipient,\n    that.evTransferCall.transferring,\n    that.requeueCallDisabled,\n  ])\n  get transferCallDisabled() {\n    const { endedCall, allowTransfer } = this._deps.evCall.currentCall;\n\n    return this.isQueueTransfer\n      ? this.requeueCallDisabled\n      : !allowTransfer ||\n          !this.selectedCallRecipient ||\n          !!endedCall ||\n          this.evTransferCall.transferring;\n  }\n\n  @computed((that: EvTransferCallUI) => [\n    that.transferOptions,\n    that.evTransferCall.transferType,\n  ])\n  get textFields() {\n    const transferOption = this.transferOptions.find(\n      ({ type }) => type === this.evTransferCall.transferType,\n    );\n\n    return transferOption ? transferOption.textFields : [];\n  }\n\n  goBack() {\n    this._deps.routerInteraction.goBack();\n  }\n\n  clickCallRecipient(router: string) {\n    if (router) {\n      this._deps.routerInteraction.push(router);\n    }\n  }\n\n  gotoActivityCallLogPage(id: string = this.callId) {\n    this._deps.routerInteraction.push(`/activityCallLog/${id}`);\n  }\n\n  gotoTransferCallPage(id: string = this.callId) {\n    this._deps.routerInteraction.push(`/activityCallLog/${id}/transferCall`);\n  }\n\n  transferCall() {\n    return this.isQueueTransfer\n      ? this._submitRequeueCall()\n      : this.evTransferCall.transfer();\n  }\n\n  protected _searchAgent(options: EvDirectAgentListItem, text: string) {\n    const firstName = options.firstName ?? '';\n    const lastName = options.lastName ?? '';\n    const blankRegex = /\\s+/g;\n    // when there is not have firstName and lastName, use username to search\n    const name = (`${firstName}${lastName}` || options.username)\n      .replace(blankRegex, '')\n      .toLowerCase();\n\n    const keywords = text.toLowerCase().trim().split(blankRegex);\n\n    return (\n      keywords.length > 0 &&\n      keywords.filter((keyword) => name.includes(keyword)).length > 0\n    );\n  }\n\n  protected _searchPhoneBook(\n    {\n      phoneBookName,\n      destination,\n      parsedDestination,\n    }: EvTransferViewPhoneBookItem,\n    text: string,\n  ) {\n    const searchText = text.toLowerCase();\n    return (\n      phoneBookName?.toLowerCase().includes(searchText) ||\n      destination?.includes(searchText) ||\n      parsedDestination?.includes(searchText)\n    );\n  }\n\n  @computed((that: EvTransferCallUI) => [\n    that.isQueueTransfer,\n    that._deps.evRequeueCall.stayOnCall,\n    that.evTransferCall.stayOnCall,\n  ])\n  get stayOnCall() {\n    return this.isQueueTransfer\n      ? this._deps.evRequeueCall.stayOnCall\n      : this.evTransferCall.stayOnCall;\n  }\n\n  private _clickTransferTypeFiled(type: EvTransferType) {\n    this.evTransferCall.changeTransferType(type);\n    if (type !== transferTypes.queue) {\n      const goalTransferOption = this.transferOptions.find(\n        (transferOption) => transferOption.type === type,\n      );\n      this.clickCallRecipient(goalTransferOption?.textFields[0]?.router);\n    }\n  }\n\n  getUIProps({\n    id,\n    groupId,\n  }: {\n    id: string;\n    groupId?: string;\n  }): EvTransferCallUIProps {\n    this._deps.evCall.activityCallId = id;\n    this.routerQueueGroupId = groupId;\n    return {\n      currentLocale: this._deps.locale.currentLocale,\n      transferOptions: this.transferOptions,\n      transferring: this.evTransferCall.transferring,\n      transferRecipientCountryId:\n        this.evTransferCall.transferRecipientCountryId,\n      transferRecipientNumber: this.evTransferCall.transferRecipientNumber,\n      transferPhoneBookSelectedIndex:\n        this.evTransferCall.transferPhoneBookSelectedIndex,\n      transferAgentId: this.evTransferCall.transferAgentId,\n      isStayOnCall: this.stayOnCall,\n      selectedTransferType: this.evTransferCall.transferType,\n      transferAgentList: this.evTransferCall.transferAgentList,\n      transferPhoneBook: this.evTransferCall.transferPhoneBook,\n      transferAgentListUpdateTTL: 3000,\n      transferCountryOptions: this._deps.evAuth.availableCountries,\n      allowManualInternationalTransfer:\n        this.evTransferCall.allowManualInternationalTransfer,\n      textFields: this.textFields,\n      transferCallDisabled: this.transferCallDisabled,\n      isWide: this._deps.environment.isWide,\n\n      // requeuing state\n      requeuing: this._deps.evRequeueCall.requeuing,\n      // availableRequeueQueues\n      queueGroups: this._deps.evAuth.availableRequeueQueues,\n      selectedQueueGroupId: this._deps.evRequeueCall.selectedQueueGroupId,\n      selectedGateId: this._deps.evRequeueCall.selectedGateId,\n      // selected object\n      selectedQueueGroup: this.selectedQueueGroup,\n      selectedGate: this.selectedGate,\n    };\n  }\n\n  getUIFunctions(): EvTransferCallUIFunctions {\n    return {\n      goBack: () => this.goBack(),\n      clickCallRecipient: (router) => this.clickCallRecipient(router),\n      clickTransferTypeFiled: (type) => this._clickTransferTypeFiled(type),\n      setStayOnCall: (status) =>\n        this.isQueueTransfer\n          ? this._deps.evRequeueCall.setStatus({ stayOnCall: !status })\n          : this.evTransferCall.changeStayOnCall(status),\n      fetchAgentList: () => this.evTransferCall.fetchAgentList(),\n      changeRecipientNumber: (recipientNumber) => {\n        this.evTransferCall.changeRecipientNumber(recipientNumber);\n        this.evTransferCall.changeTransferType(transferTypes.manualEntry);\n        this.gotoTransferCallPage();\n      },\n      changeTransferPhoneBookSelected: (index) => {\n        this.evTransferCall.changeTransferPhoneBookSelected(index);\n        this.evTransferCall.changeTransferType(transferTypes.phoneBook);\n        this.gotoTransferCallPage();\n      },\n      changeRecipientCountryId: (countryId) =>\n        this.evTransferCall.changeRecipientCountryId(countryId),\n      changeTransferAgentId: (agentId) => {\n        this.evTransferCall.changeTransferAgentId(agentId);\n        this.evTransferCall.changeTransferType(transferTypes.internal);\n        this.gotoTransferCallPage();\n      },\n      transferCall: () => this.transferCall(),\n      setCancelTemplate: (templates: React.ReactNode) =>\n        this.evTransferCall.setCancelTemplate(templates),\n      cancelTransfer: () => this.evTransferCall.cancelTransfer(),\n      cancelTransferPage: () => this.gotoActivityCallLogPage(),\n\n      goToActivityCallLogPage: this.goToActivityCallLogPage,\n      goToRequeueCallPage: this.goToRequeueCallPage,\n      goToRequeueGroupPage: this.goToRequeueGroupPage,\n      goToRequeueGroupDetailPage: this.goToRequeueGroupDetailPage,\n      searchAgent: (option, text) => this._searchAgent(option, text),\n      searchPhoneBook: (option, text) => this._searchPhoneBook(option, text),\n      searchGroup: (option, text) => this._searchQueue(option.groupName, text),\n      searchGate: (option, text) => this._searchQueue(option.gateName, text),\n      submitSelection: (queueId) => this._submitSelection(queueId),\n    };\n  }\n}\n\nexport { EvTransferCallUI };\n"],"file":"EvTransferCallUI.js"}