{"version":3,"sources":["modules/EvRequeueCall/EvRequeueCall.ts"],"names":["EvRequeueCall","name","deps","dep","optional","that","_deps","evCall","currentCall","evAuth","agentPermissions","allowCrossQueueRequeue","enableCache","storageKey","selectedQueueGroupId","selectedGateId","stayOnCall","requeuing","setStatus","alert","info","message","requeueEvents","START","loading","loadingId","evClient","requeueCall","maintain","queueId","result","status","EvTypeError","type","activeCallControl","hold","success","SUCCESS","danger","FAILURE","dismiss","requeueType","queues","availableQueues","length","shortcuts","requeueShortcuts","endedCall","allowRequeue","callType","_hasRequeueQueues","RcModuleV2","storage","state","action"],"mappings":"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","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\n\nimport { requeueEvents } from '../../enums';\nimport { EvCallData } from '../../interfaces/EvData.interface';\nimport { EvTypeError } from '../../lib/EvTypeError';\nimport { Deps, RequeueCall } from './EvRequeueCall.interface';\n\ntype EvRequeueCallStatus = Partial<\n  Pick<\n    EvRequeueCall,\n    'selectedQueueGroupId' | 'selectedGateId' | 'stayOnCall' | 'requeuing'\n  >\n>;\n\n@Module({\n  name: 'EvRequeueCall',\n  deps: [\n    'EvClient',\n    'EvCall',\n    'Storage',\n    'ActiveCallControl',\n    'EvAuth',\n    'Alert',\n    { dep: 'EvRequeueCallOptions', optional: true },\n  ],\n})\nclass EvRequeueCall extends RcModuleV2<Deps> implements RequeueCall {\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvRequeueCall',\n    });\n  }\n\n  @storage\n  @state\n  selectedQueueGroupId: string = '';\n\n  @storage\n  @state\n  selectedGateId: string = '';\n\n  @storage\n  @state\n  stayOnCall: boolean = false;\n\n  @storage\n  @state\n  requeuing: boolean = false;\n\n  @computed((that: EvRequeueCall) => [\n    that._deps.evCall.currentCall,\n    that._deps.evAuth.agentPermissions.allowCrossQueueRequeue,\n  ])\n  get allowRequeueCall() {\n    const { currentCall } = this._deps.evCall;\n    let result = true;\n    if (currentCall && !currentCall.endedCall) {\n      if (!currentCall.allowRequeue) {\n        result = false;\n      } else if (\n        !this._deps.evAuth.agentPermissions.allowCrossQueueRequeue &&\n        currentCall.callType === 'OUTBOUND' &&\n        currentCall.requeueType === 'ADVANCED'\n      ) {\n        result = false;\n      } else if (!this._hasRequeueQueues(currentCall)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  @action\n  setStatus({\n    selectedQueueGroupId,\n    selectedGateId,\n    stayOnCall,\n    requeuing,\n  }: EvRequeueCallStatus) {\n    this.selectedQueueGroupId =\n      selectedQueueGroupId ?? this.selectedQueueGroupId;\n    this.selectedGateId = selectedGateId ?? this.selectedGateId;\n    this.stayOnCall = stayOnCall ?? this.stayOnCall;\n    this.requeuing = requeuing ?? this.requeuing;\n  }\n\n  async requeueCall() {\n    let loadingId: string;\n    try {\n      this.setStatus({ requeuing: true });\n      loadingId = await this._deps.alert.info({\n        message: requeueEvents.START,\n        loading: true,\n      });\n\n      const result = await this._deps.evClient.requeueCall({\n        maintain: this.stayOnCall,\n        queueId: this.selectedGateId,\n      });\n\n      if (result.status === 'FAILURE') {\n        throw new EvTypeError({ type: 'Requeue' });\n      }\n      if (this.stayOnCall) {\n        await this._deps.activeCallControl.hold();\n      }\n      this._deps.alert.success({ message: requeueEvents.SUCCESS });\n    } catch (error) {\n      this._deps.alert.danger({\n        message: requeueEvents.FAILURE,\n      });\n      throw new EvTypeError({ type: requeueEvents.FAILURE });\n    } finally {\n      this.setStatus({ requeuing: false });\n      this._deps.alert.dismiss(loadingId);\n    }\n  }\n\n  private _hasRequeueQueues(currentCall: EvCallData) {\n    let result = false;\n    if (currentCall.requeueType === 'ADVANCED') {\n      const queues = this._deps.evAuth.availableQueues;\n      result = queues && queues.length > 0;\n    } else {\n      const shortcuts = currentCall.requeueShortcuts;\n      result = shortcuts && shortcuts.length > 0;\n    }\n\n    return result;\n  }\n}\n\nexport { EvRequeueCall };\n"],"file":"EvRequeueCall.js"}