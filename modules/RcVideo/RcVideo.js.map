{"version":3,"sources":["modules/RcVideo/RcVideo.ts"],"names":["RcVideo","deps","dep","optional","extensionId","accountId","state","loginUser","currentUser","extensionName","brandName","currentLocale","alert","client","extensionInfo","brand","storage","reducers","availabilityMonitor","meetingProvider","accountInfo","locale","dynamicConfig","enableE2EE","showSaveAsDefault","isInstantMeeting","enablePersonalMeeting","enableReloadAfterSchedule","enableScheduleOnBehalf","enableWaitingRoom","enableInvitationApi","enableHostCountryDialinNumbers","options","actionTypes","_alert","_client","_defaultVideoSettingKey","_personalVideoKey","_extensionInfo","_brand","_storage","_availabilityMonitor","_showSaveAsDefault","_isInstantMeeting","_enableE2EE","_enablePersonalMeeting","_enableReloadAfterSchedule","_enableWaitingRoom","_enableInvitationApi","_meetingProvider","_reducer","_enableScheduleOnBehalf","_enableHostCountryDialinNumbers","_accountInfo","_locale","_dynamicConfig","_createMeetingPromise","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","pending","ready","isRCV","dispatch","type","resetSuccess","init","_onInit","initSuccess","_initMeeting","_initDelegators","updateDelegator","usePersonalMeetingId","_initMeetingSettings","delegator","userExtensionId","delegators","length","user","Number","initSettingsStart","_initPersonalMeeting","_initPreferences","initSettingsEnd","_getPreferences","preferences","settingLocks","password_instant","updateMeetingPreferences","updateMeetingSettingLocks","console","log","service","platform","get","meetingResult","json","meeting","_savePersonalMeeting","error","resetPersonalMeeting","_errorHandle","result","updateDelegatorList","savePersonalMeeting","allowJoinBeforeHost","isOnlyAuthUserJoin","isOnlyCoworkersJoin","allowScreenSharing","muteAudio","muteVideo","e2ee","isMeetingSecret","notShowAgain","waitingRoomMode","updateInfo","_saved","saveAsDefaultSetting","password","isSecret","isAlertSuccess","initCreating","saveAsDefault","meetingDetail","condition","RCV_WAITING_ROOM_API_KEYS","RCV_E2EE_API_KEYS","post","updateMeetingSettings","_getDialinNumbers","dialInNumber","getExtensionInfo","savePreferencesChanges","setTimeout","success","message","meetingStatus","scheduledSuccess","newMeeting","created","updateHasSettingsChanged","getMeetingInvitation","hostName","name","meetingName","meetingId","id","meetingUrl","joinUri","participantCode","mainPhoneNumber","meetingPassword","dialInPassword","meetingPasswordPSTN","premiumNumbers","invitationInfo","meetingResponse","resetCreating","isScheduling","createMeetingDirectly","createMeeting","expiresIn","RcVideoTypes","invitationRequest","apiResponse","warn","phoneNumbers","Array","isArray","countryDialinNumbers","obj","country","isoCode","defaultPhoneNumber","phoneNumber","RCV_PREFERENCES_IDS","res","list","forEach","value","readOnly","info","account","extension","preferenceId","send","method","url","body","isOverwrite","preferencesPayload","dirtyPreferences","Object","entries","filter","kvPairs","newValue","oldValue","isLocked","Promise","all","map","_saveSinglePreference","_updatePreference","shortId","initUpdating","updatedSuccess","updated","personalMeeting","resetUpdating","personalVideoSetting","defaultVideoSetting","isChanged","saveHasSettingChanged","patch","processedMeeting","transformedPreferences","isMeetingPasswordValid","validatePasswordSettings","_comparePreferences","saveMeetingPreferencesState","isPreferencesChanged","errors","MeetingErrors","warning","response","clone","errorCode","permissionName","danger","insufficientPermissions","payload","checkIfHAError","internalError","getItem","DEFAULT_LOCALE","shortName","fullName","code","status","videoStatus","initializing","creating","hasSettingsChanged","ASSISTED_USERS_MYSELF","isLoginUser","brandCode","rcvUriRegExp","RcModule","proxify","background","selector","initialVideoSetting","transformedSettingLocks","initialSetting","processedSettings","startTime","Date","settingLock","savedSetting","savedDefaultVideoSetting","topic"],"mappings":"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","sourcesContent":["import { computed } from '@ringcentral-integration/core';\nimport Client from 'ringcentral-client';\nimport { filter, find, omit } from 'ramda';\nimport { DEFAULT_LOCALE } from '@ringcentral-integration/i18n';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport background from '../../lib/background';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport meetingStatus from '../Meeting/meetingStatus';\nimport { MeetingErrors } from '../Meeting';\nimport { getInitializedStartTime } from '../../helpers/meetingHelper';\n\nimport { ASSISTED_USERS_MYSELF, RcvWaitingRoomModeProps } from './constants';\nimport actionTypes, { RcVideoActionTypes } from './actionTypes';\nimport { videoStatus } from './videoStatus';\nimport getRcVReducer, {\n  getDefaultVideoSettingReducer,\n  getPersonalMeetingReducer,\n} from './getRcVReducer';\n\nimport {\n  getDefaultVideoSettings,\n  validatePasswordSettings,\n  generateRandomPassword,\n  getTopic,\n  pruneMeetingObject,\n  RcVideoTypes,\n  transformPreferences,\n  reversePreferences,\n  comparePreferences,\n  transformSettingLocks,\n  getLockedPreferences,\n  RCV_PREFERENCES_IDS,\n  RCV_WAITING_ROOM_API_KEYS,\n  RCV_E2EE_API_KEYS,\n  patchWaitingRoomRelated,\n} from './videoHelper';\nimport {\n  RcVideoAPI,\n  RcVMeetingModel,\n  RcVSettingLocks,\n  RcVPreferencesGET,\n  RcVSettingLocksGET,\n  RcVPreferences,\n  RcVDialInNumberGET,\n  RcVPreferencesAPIResult,\n  RcVPreferenceDataItem,\n  RcVDialInNumberObj,\n  RcvInvitationRequest,\n  RcvInvitationInfo,\n} from '../../interfaces/Rcv.model';\nimport { RcvDelegator } from './interface';\nimport {\n  formatMainPhoneNumber,\n  formatPremiumNumbers,\n} from '../RcVideoV2/videoHelper';\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'Brand',\n    'Storage',\n    'AccountInfo',\n    'ExtensionInfo',\n    'MeetingProvider',\n    'Locale',\n    { dep: 'DynamicConfig', optional: true },\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'RcVideoOptions', optional: true },\n  ],\n})\nexport class RcVideo extends RcModule<Record<string, any>, RcVideoActionTypes> {\n  // TODO: add state interface\n  private _alert: any;\n  private _client: Client;\n  private _defaultVideoSettingKey: string;\n  private _personalVideoKey: string;\n  private _extensionInfo: any;\n  private _brand: any;\n  private _storage: any;\n  private _availabilityMonitor: any;\n  private _showSaveAsDefault: boolean;\n  private _isInstantMeeting: boolean;\n  private _enableE2EE: boolean;\n  private _enablePersonalMeeting: boolean;\n  private _enableReloadAfterSchedule: boolean;\n  private _enableWaitingRoom: boolean;\n  private _enableInvitationApi: boolean;\n\n  private _meetingProvider: any;\n  _reducer: any;\n  private _enableScheduleOnBehalf: boolean;\n  private _enableHostCountryDialinNumbers: boolean;\n  private _accountInfo: any;\n  private _locale: any;\n  private _dynamicConfig: any;\n  private _createMeetingPromise: any = null;\n\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    brand,\n    storage,\n    reducers,\n    availabilityMonitor,\n    meetingProvider,\n    accountInfo,\n    locale,\n    dynamicConfig,\n    enableE2EE = false,\n    showSaveAsDefault = false,\n    isInstantMeeting = false,\n    enablePersonalMeeting = false,\n    enableReloadAfterSchedule = true,\n    enableScheduleOnBehalf = false,\n    enableWaitingRoom = false,\n    enableInvitationApi = false,\n    enableHostCountryDialinNumbers = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._extensionInfo = extensionInfo;\n    this._meetingProvider = meetingProvider;\n    this._brand = brand;\n    this._storage = storage;\n    this._accountInfo = accountInfo;\n    this._locale = locale;\n    this._dynamicConfig = dynamicConfig;\n    this._reducer = getRcVReducer(this.actionTypes, reducers);\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._isInstantMeeting = isInstantMeeting;\n    this._availabilityMonitor = availabilityMonitor;\n    this._defaultVideoSettingKey = 'savedDefaultSetting';\n    this._personalVideoKey = 'personalVideo';\n    this._enablePersonalMeeting = enablePersonalMeeting;\n    this._enableScheduleOnBehalf = enableScheduleOnBehalf;\n    this._enableHostCountryDialinNumbers = enableHostCountryDialinNumbers;\n    this._enableReloadAfterSchedule = enableReloadAfterSchedule;\n    this._enableWaitingRoom = enableWaitingRoom;\n    this._enableInvitationApi = enableInvitationApi;\n    this._enableE2EE = enableE2EE;\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultVideoSettingKey,\n        reducer: getDefaultVideoSettingReducer(this.actionTypes),\n      });\n    }\n    if (this._enablePersonalMeeting) {\n      this._storage.registerReducer({\n        key: this._personalVideoKey,\n        reducer: getPersonalMeetingReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      await this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this.pending &&\n      this._accountInfo.ready &&\n      this._extensionInfo.ready &&\n      this._storage.ready &&\n      this._meetingProvider.ready &&\n      this._meetingProvider.isRCV &&\n      (!this._dynamicConfig || this._dynamicConfig.ready) &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready)\n    );\n  }\n\n  _shouldReset() {\n    return (\n      this.ready &&\n      (!this._accountInfo.ready ||\n        !this._extensionInfo.ready ||\n        !this._storage.ready ||\n        !this._meetingProvider.ready ||\n        !this._meetingProvider.isRCV ||\n        (this._dynamicConfig && !this._dynamicConfig.ready) ||\n        (this._availabilityMonitor && !this._availabilityMonitor.ready))\n    );\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  @proxify\n  async _init() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n\n    await this._onInit();\n\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  @proxify\n  async _onInit() {\n    await this._initMeeting();\n\n    if (this._enableScheduleOnBehalf) {\n      await this._initDelegators();\n      this.updateDelegator(this.loginUser);\n    }\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  async init() {\n    await this._onInit();\n  }\n\n  @proxify\n  async reload() {\n    await this._onInit();\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this._initMeetingSettings(usePersonalMeetingId);\n  }\n\n  @proxify\n  updateDelegator(delegator: RcvDelegator) {\n    this.store.dispatch({\n      type: this.actionTypes.updateDelegator,\n      delegator,\n    });\n  }\n\n  @proxify\n  async updateScheduleFor(userExtensionId: string) {\n    if (!userExtensionId || !this.delegators || this.delegators.length === 0) {\n      return;\n    }\n\n    const delegator = find(\n      (user: RcvDelegator) => user.extensionId === userExtensionId,\n      this.delegators,\n    );\n\n    if (!delegator) {\n      return;\n    }\n\n    this.updateDelegator(delegator);\n\n    await this._initMeeting(Number(delegator.extensionId));\n  }\n\n  private async _initMeeting(extensionId = this.extensionId) {\n    this.store.dispatch({\n      type: this.actionTypes.initSettingsStart,\n    });\n    if (this._enablePersonalMeeting) {\n      await this._initPersonalMeeting(this.accountId, extensionId);\n    }\n    await this._initPreferences(this.accountId, extensionId);\n\n    this._initMeetingSettings(false);\n    this.store.dispatch({\n      type: this.actionTypes.initSettingsEnd,\n    });\n  }\n\n  private async _initPreferences(\n    accountId = this.accountId,\n    extensionId = this.extensionId,\n  ) {\n    try {\n      const { preferences, settingLocks } = await this._getPreferences(\n        accountId,\n        extensionId,\n      );\n      // TODO [SFB] Remove the next line after rcv implement ui to manage password_instant\n      preferences.password_instant = false;\n      this.store.dispatch({\n        type: this.actionTypes.updateMeetingPreferences,\n        preferences,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.updateMeetingSettingLocks,\n        settingLocks,\n      });\n    } catch (errors) {\n      console.log('preference error:', errors);\n      // this._errorHandle(errors);\n    }\n  }\n\n  private async _initPersonalMeeting(\n    accountId = this.accountId,\n    extensionId = this.extensionId,\n  ) {\n    try {\n      const meetingResult = await this._client.service\n        .platform()\n        .get('/rcvideo/v1/bridges', {\n          default: true,\n          accountId,\n          extensionId,\n        });\n      const meeting = await meetingResult.json();\n      this._savePersonalMeeting(meeting);\n    } catch (errors) {\n      console.error('fetch personal meeting error:', errors);\n      this.store.dispatch({\n        type: this.actionTypes.resetPersonalMeeting,\n      });\n      this._errorHandle(errors);\n    }\n  }\n\n  private async _initDelegators() {\n    try {\n      const result = await this._client.service\n        .platform()\n        .get('/rcvideo/v1/accounts/~/extensions/~/delegators');\n      const delegators = await result.json();\n      this.store.dispatch({\n        type: this.actionTypes.updateDelegatorList,\n        delegators,\n      });\n    } catch (errors) {\n      this._errorHandle(errors);\n    }\n  }\n\n  private _savePersonalMeeting(meeting: RcVideoAPI) {\n    this.store.dispatch({\n      type: this.actionTypes.savePersonalMeeting,\n      meeting,\n    });\n  }\n\n  saveAsDefaultSetting(meeting: RcVMeetingModel) {\n    const {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      e2ee,\n      isMeetingSecret,\n      notShowAgain,\n      waitingRoomMode,\n    } = meeting;\n    const updateInfo: {\n      allowJoinBeforeHost: boolean;\n      isOnlyAuthUserJoin: boolean;\n      isOnlyCoworkersJoin: boolean;\n      allowScreenSharing: boolean;\n      muteAudio: boolean;\n      muteVideo: boolean;\n      e2ee: boolean;\n      isMeetingSecret: boolean;\n      waitingRoomMode: RcvWaitingRoomModeProps;\n      _saved?: boolean;\n    } = {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      e2ee,\n      isMeetingSecret,\n      waitingRoomMode,\n    };\n    if (notShowAgain) {\n      updateInfo._saved = notShowAgain;\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: updateInfo,\n    });\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    return validatePasswordSettings(password, isSecret);\n  }\n\n  generateRandomPassword() {\n    return generateRandomPassword(10);\n  }\n\n  @proxify\n  async createMeetingDirectly(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initCreating,\n      });\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      const meetingDetail = pruneMeetingObject(meeting, [\n        {\n          condition: this.enableWaitingRoom,\n          key: RCV_WAITING_ROOM_API_KEYS,\n        },\n        {\n          condition: this.enableE2EE && !meeting.usePersonalMeetingId,\n          key: RCV_E2EE_API_KEYS,\n        },\n      ]);\n\n      const meetingResult = await this._client.service\n        .platform()\n        .post('/rcvideo/v1/bridges', meetingDetail);\n\n      this.updateMeetingSettings({\n        ...meeting,\n        saveAsDefault: false,\n      });\n\n      // After Create\n      const dialInNumber = await this._getDialinNumbers();\n      const extensionInfo = await this.getExtensionInfo(\n        this.currentUser.extensionId,\n      );\n      // sync preferences changes to rcv backend\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting);\n      }\n      // this will also fetch preference from rcv backend\n      if (this._enableReloadAfterSchedule) {\n        await this._initMeeting(Number(this.currentUser.extensionId));\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n\n      const newMeeting = await meetingResult.json();\n      this.store.dispatch({\n        type: this.actionTypes.created,\n      });\n\n      this.updateHasSettingsChanged(false);\n\n      const invitationInfo = await this.getMeetingInvitation({\n        hostName: extensionInfo.name,\n        meetingName: newMeeting.name,\n        meetingId: newMeeting.id,\n        meetingUrl: newMeeting.joinUri,\n        participantCode: newMeeting.participantCode,\n        mainPhoneNumber: formatMainPhoneNumber(dialInNumber),\n        password: newMeeting.meetingPassword,\n        dialInPassword: newMeeting.meetingPasswordPSTN,\n        premiumNumbers: formatPremiumNumbers(dialInNumber),\n      });\n\n      const meetingResponse = {\n        invitationInfo,\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n\n      return {\n        ...meetingResponse,\n        ...meeting,\n      };\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetCreating,\n      });\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  @proxify\n  async createMeeting(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    if (this.isScheduling) return this._createMeetingPromise;\n    this._createMeetingPromise = this.createMeetingDirectly(meeting, {\n      isAlertSuccess,\n    });\n    const result = await this._createMeetingPromise;\n    this._createMeetingPromise = null;\n    return result;\n  }\n\n  async startMeeting(\n    meeting: RcVMeetingModel,\n    isAlertSuccess: boolean = true,\n  ): Promise<any> {\n    // When user click on button \"start\", client create bridge type=0, but doesn't send time-to-life for this bridge. Backend has default ttl = 24 hours.\n    return this.createMeeting(\n      {\n        ...meeting,\n        expiresIn: null,\n        type: RcVideoTypes.meeting,\n      },\n      { isAlertSuccess },\n    );\n  }\n\n  @proxify\n  async getMeetingInvitation(\n    invitationRequest: RcvInvitationRequest,\n  ): Promise<RcvInvitationInfo> {\n    if (!this._enableInvitationApi) {\n      return null;\n    }\n\n    try {\n      const apiResponse = await this._client.service\n        .platform()\n        .post('/rcvideo/v1/invitations/render', invitationRequest);\n      return await apiResponse.json();\n    } catch (ex) {\n      console.warn('failed to get invitation', ex);\n      return null;\n    }\n  }\n\n  @proxify\n  private async _getDialinNumbers(): Promise<string | RcVDialInNumberObj[]> {\n    const result = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/dial-in-numbers');\n    const { phoneNumbers } = (await result.json()) as RcVDialInNumberGET;\n    if (Array.isArray(phoneNumbers)) {\n      if (this._enableHostCountryDialinNumbers) {\n        const countryDialinNumbers = filter(\n          (obj) => obj?.country?.isoCode === this.country.isoCode,\n          phoneNumbers,\n        );\n        if (countryDialinNumbers.length > 0) {\n          return countryDialinNumbers;\n        }\n      }\n\n      const defaultPhoneNumber = find((obj) => obj.default, phoneNumbers);\n      if (defaultPhoneNumber) {\n        return defaultPhoneNumber.phoneNumber;\n      }\n    }\n    return [];\n  }\n\n  private async _getPreferences(\n    accountId = this.accountId,\n    extensionId = this.extensionId,\n  ): Promise<RcVPreferencesAPIResult> {\n    const res = await this._client.service\n      .platform()\n      .get(\n        `/rcvideo/v1/account/${accountId}/extension/${extensionId}/preferences`,\n        {\n          id: RCV_PREFERENCES_IDS,\n        },\n      );\n    const list: Array<RcVPreferenceDataItem> = await res.json();\n    const preferences: RcVPreferencesGET = {};\n    const settingLocks: RcVSettingLocksGET = {};\n\n    list.forEach(({ id, value, readOnly }) => {\n      preferences[id] = value;\n      settingLocks[id] = readOnly;\n    });\n    return { preferences, settingLocks };\n  }\n\n  @proxify\n  async getExtensionInfo(extensionId: string) {\n    if (Number(extensionId) === this.extensionId) {\n      return this._extensionInfo.info;\n    }\n    return this._client.account().extension(extensionId).get();\n  }\n\n  private _updatePreference(preferences: Partial<RcVPreferencesGET>) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingPreferences,\n      preferences,\n    });\n  }\n\n  private async _saveSinglePreference(\n    preferenceId: keyof RcVPreferencesGET,\n    value: boolean,\n  ): Promise<void> {\n    return this._client.service.platform().send({\n      method: 'PATCH',\n      url: `/rcvideo/v1/account/~/extension/~/preferences/${preferenceId}`,\n      body: { value },\n    });\n  }\n\n  /**\n   * Determined the different between client and server, then save them to the server.\n   * @param preferences preference fileds in meeting object\n   * @param isOverwrite if true, dispatch updateMeetingPreferences on success\n   */\n  async savePreferencesChanges(\n    preferences: RcVPreferences,\n    isOverwrite = false,\n  ): Promise<void> {\n    const preferencesPayload = reversePreferences(\n      preferences,\n      this._isInstantMeeting,\n    );\n    type PreferenceEntries = [keyof RcVPreferencesGET, boolean];\n    const dirtyPreferences = Object.entries(preferencesPayload).filter(\n      (kvPairs): kvPairs is PreferenceEntries => {\n        const [preferenceId, newValue] = kvPairs as PreferenceEntries;\n        const oldValue = this.preferences[preferenceId];\n        const isLocked = this.settingLocks[preferenceId];\n        // hack for watingRoom, it will change locked option\n        return newValue !== oldValue && !isLocked;\n      },\n    );\n    try {\n      await Promise.all(\n        dirtyPreferences.map(([preferenceId, newValue]: PreferenceEntries) => {\n          return this._saveSinglePreference(preferenceId, newValue);\n        }),\n      );\n      if (isOverwrite) {\n        this._updatePreference(preferencesPayload);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async getMeeting(\n    meetingId: String,\n    accountId = this.accountId,\n    extensionId = this.extensionId,\n  ) {\n    const result = await this._client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', {\n        shortId: meetingId,\n        accountId,\n        extensionId,\n      });\n    const meeting = await result.json();\n    return meeting;\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = false }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initUpdating,\n      });\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      const meetingDetail = pruneMeetingObject(meeting, [\n        {\n          condition: this.enableWaitingRoom,\n          key: RCV_WAITING_ROOM_API_KEYS,\n        },\n        {\n          condition: this.enableE2EE && !meeting.usePersonalMeetingId,\n          key: RCV_E2EE_API_KEYS,\n        },\n      ]);\n\n      const meetingResult = await this._client.service.platform().send({\n        method: 'PATCH',\n        url: `/rcvideo/v1/bridges/${meeting.id}`,\n        body: meetingDetail,\n      });\n      const newMeeting = await meetingResult.json();\n\n      // After Update\n      const dialInNumber = await this._getDialinNumbers();\n      const extensionInfo = await this.getExtensionInfo(\n        this.currentUser.extensionId,\n      );\n      const invitationInfo = await this.getMeetingInvitation({\n        hostName: extensionInfo.name,\n        meetingName: newMeeting.name,\n        meetingId: newMeeting.id,\n        meetingUrl: newMeeting.joinUri,\n        participantCode: newMeeting.participantCode,\n        mainPhoneNumber: formatMainPhoneNumber(dialInNumber),\n        password: newMeeting.meetingPassword,\n        dialInPassword: newMeeting.meetingPasswordPSTN,\n        premiumNumbers: formatPremiumNumbers(dialInNumber),\n      });\n\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting, true);\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n\n      this.store.dispatch({\n        type: this.actionTypes.updated,\n      });\n\n      this.updateHasSettingsChanged(false);\n\n      const meetingResponse = {\n        invitationInfo,\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n      if (this.personalMeeting && newMeeting.id === this.personalMeeting.id) {\n        this._savePersonalMeeting(newMeeting);\n      }\n      return meetingResponse;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetUpdating,\n      });\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  private _initMeetingSettings(usePersonalMeetingId: boolean) {\n    if (usePersonalMeetingId) {\n      this.updateMeetingSettings({\n        ...this.personalVideoSetting,\n      });\n    } else {\n      this.updateMeetingSettings({\n        ...this.defaultVideoSetting,\n      });\n    }\n  }\n\n  updateHasSettingsChanged(isChanged: boolean) {\n    this.store.dispatch({\n      type: this.actionTypes.saveHasSettingChanged,\n      isChanged,\n    });\n  }\n\n  @proxify\n  updateMeetingSettings(\n    meeting: Partial<RcVMeetingModel>,\n    patch: boolean = true,\n  ) {\n    let processedMeeting = meeting;\n    if (this.enableWaitingRoom) {\n      processedMeeting = {\n        ...processedMeeting,\n        ...patchWaitingRoomRelated(\n          {\n            ...this.meeting,\n            ...processedMeeting,\n          },\n          this.transformedPreferences,\n          true,\n        ),\n      };\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateMeetingSettings,\n      meeting: {\n        ...processedMeeting,\n        isMeetingPasswordValid: this.validatePasswordSettings(\n          processedMeeting.meetingPassword ?? this.meeting?.meetingPassword,\n          processedMeeting.isMeetingSecret ?? this.meeting?.isMeetingSecret,\n        ),\n      },\n      patch,\n    });\n    this._comparePreferences();\n  }\n\n  private _comparePreferences() {\n    this.store.dispatch({\n      type: this.actionTypes.saveMeetingPreferencesState,\n      isPreferencesChanged: comparePreferences(\n        this.transformedPreferences,\n        this.meeting,\n      ),\n    });\n  }\n\n  private async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const {\n        errorCode,\n        permissionName,\n      } = await errors.response.clone().json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._availabilityMonitor ||\n        !(await this._availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._alert.danger({\n          message: meetingStatus.internalError,\n        });\n      }\n    } else {\n      console.log('errors:', errors);\n      this._alert.danger({ message: meetingStatus.internalError });\n    }\n  }\n\n  get meeting(): RcVMeetingModel {\n    return this.state.meeting;\n  }\n\n  get personalMeeting(): RcVideoAPI {\n    return this._storage.getItem(this._personalVideoKey);\n  }\n\n  get country() {\n    return this._extensionInfo.country;\n  }\n\n  get currentLocale() {\n    return this._locale.currentLocale || DEFAULT_LOCALE;\n  }\n\n  get extensionName(): string {\n    return this._extensionInfo.info && this._extensionInfo.info.name;\n  }\n\n  get extensionId(): number {\n    return this._extensionInfo.info.id;\n  }\n\n  get accountId(): number {\n    return this._accountInfo.id;\n  }\n\n  get brandName(): string {\n    return this._brand.name;\n  }\n\n  get shortName(): string {\n    return this._brand.shortName;\n  }\n\n  get fullName(): string {\n    return this._brand.fullName;\n  }\n\n  get brandCode(): string {\n    return this._brand.code;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  // preferences directly from backend\n  get preferences(): RcVPreferencesGET {\n    return this.state.preferences;\n  }\n\n  get settingLocks(): RcVSettingLocksGET {\n    return this.state.settingLocks;\n  }\n\n  @selector\n  transformedPreferences: any = [\n    () => this._isInstantMeeting,\n    () => this.preferences,\n    (isInstantMeeting: boolean, preferences: RcVPreferencesGET) => {\n      return transformPreferences(preferences, isInstantMeeting);\n    },\n  ];\n\n  @selector\n  transformedSettingLocks: any = [\n    () => this._isInstantMeeting,\n    () => this.settingLocks,\n    (isInstantMeeting: boolean, settingLocks: RcVSettingLocksGET) => {\n      return transformSettingLocks(settingLocks, isInstantMeeting);\n    },\n  ];\n\n  @selector\n  personalVideoSetting: any = [\n    () => this.initialVideoSetting,\n    () => this.personalMeeting,\n    () => this.transformedPreferences,\n    () => this.transformedSettingLocks,\n    (\n      initialSetting: RcVMeetingModel,\n      personalMeeting: RcVideoAPI,\n      transformedPreferences: RcVPreferences,\n      transformedSettingLocks: RcVSettingLocks,\n    ) => {\n      if (!personalMeeting) {\n        return null;\n      }\n      const processedSettings = {\n        ...initialSetting,\n        ...personalMeeting,\n        ...getLockedPreferences(\n          transformedSettingLocks,\n          transformedPreferences,\n        ),\n        meetingPassword:\n          personalMeeting.meetingPassword || generateRandomPassword(10),\n        startTime: new Date(getInitializedStartTime()),\n        isMeetingPasswordValid: true, // assume personal meeting password is valid\n        id: personalMeeting.id,\n        usePersonalMeetingId: true,\n        settingLock: {\n          ...transformedSettingLocks,\n        },\n      } as RcVMeetingModel;\n      if (this.enableWaitingRoom) {\n        return {\n          ...processedSettings,\n          ...patchWaitingRoomRelated(processedSettings, transformedPreferences),\n        };\n      }\n      return processedSettings;\n    },\n  ];\n\n  @selector\n  defaultVideoSetting: any = [\n    () => this.initialVideoSetting,\n    () => {\n      const savedSetting = this._showSaveAsDefault\n        ? this.savedDefaultVideoSetting\n        : null;\n      return savedSetting;\n    },\n    () => this.transformedPreferences,\n    () => this.transformedSettingLocks,\n    (\n      initialSetting: RcVMeetingModel,\n      savedSetting: Partial<RcVMeetingModel>,\n      transformedPreferences: RcVPreferences,\n      transformedSettingLocks: RcVSettingLocks,\n    ) => {\n      return {\n        ...initialSetting,\n        ...savedSetting,\n        ...transformedPreferences,\n        meetingPassword: generateRandomPassword(10),\n        startTime: new Date(getInitializedStartTime()),\n        isMeetingPasswordValid: true, // generated random password is valid\n        id: null,\n        usePersonalMeetingId: false,\n        settingLock: {\n          ...transformedSettingLocks,\n        },\n      } as RcVMeetingModel;\n    },\n  ];\n\n  @selector\n  initialVideoSetting: any = [\n    () => {\n      let extensionName = this.extensionName;\n      if (this.currentUser?.extensionId !== `${this.extensionId}`) {\n        extensionName = this.currentUser?.name;\n      }\n      return extensionName;\n    },\n    () => this.brandName,\n    () => this.shortName,\n    () => this.fullName,\n    () => this.brandCode,\n    () => this.currentUser,\n    () => this.currentLocale,\n    (\n      extensionName: string,\n      brandName: string,\n      shortName: string,\n      fullName: string,\n      brandCode: string,\n      currentUser: RcvDelegator,\n      currentLocale: string,\n    ) => {\n      const topic = getTopic({\n        extensionName,\n        brandName,\n        shortName,\n        fullName,\n        brandCode,\n        currentLocale,\n      });\n      return getDefaultVideoSettings({\n        topic,\n        accountId: currentUser.accountId,\n        extensionId: currentUser.extensionId,\n      });\n    },\n  ];\n\n  get savedDefaultVideoSetting(): Partial<RcVMeetingModel> {\n    return this._storage.getItem(this._defaultVideoSettingKey);\n  }\n\n  get isInitializing(): boolean {\n    return this.state.videoStatus === videoStatus.initializing;\n  }\n\n  get isScheduling(): boolean {\n    return this.state.videoStatus === videoStatus.creating;\n  }\n\n  get showSaveAsDefault(): boolean {\n    return this._showSaveAsDefault;\n  }\n\n  get enablePersonalMeeting(): boolean {\n    return this._enablePersonalMeeting;\n  }\n\n  get enableScheduleOnBehalf() {\n    return this._enableScheduleOnBehalf;\n  }\n\n  get enableWaitingRoom(): boolean {\n    return this._enableWaitingRoom;\n  }\n\n  get enableE2EE(): boolean {\n    return this._enableE2EE;\n  }\n\n  get isPreferencesChanged(): boolean {\n    return this.state.isPreferencesChanged;\n  }\n\n  get hasSettingsChanged(): boolean {\n    return this.state.hasSettingsChanged;\n  }\n\n  @computed(({ extensionId, accountId }: RcVideo) => [extensionId, accountId])\n  get loginUser(): RcvDelegator {\n    return {\n      name: ASSISTED_USERS_MYSELF,\n      id: `${this.extensionId}`,\n      extensionId: `${this.extensionId}`,\n      accountId: `${this.accountId}`,\n      isLoginUser: true,\n    };\n  }\n\n  @computed(({ state, loginUser }: RcVideo) => [state, loginUser])\n  get delegators(): RcvDelegator[] {\n    if (this.state.delegators.length === 0) {\n      return [];\n    }\n    return [this.loginUser, ...this.state.delegators];\n  }\n\n  get currentUser(): RcvDelegator {\n    return this.state.delegator || this.loginUser;\n  }\n\n  @computed(\n    ({ currentUser, extensionName, brandName, currentLocale }: RcVideo) => [\n      currentUser,\n      extensionName,\n      brandName,\n      currentLocale,\n    ],\n  )\n  get defaultTopic(): string {\n    let extensionName = this.extensionName;\n    if (this.currentUser?.extensionId !== `${this.extensionId}`) {\n      extensionName = this.currentUser?.name;\n    }\n    return getTopic({\n      extensionName,\n      brandName: this.brandName,\n      fullName: this.fullName,\n      shortName: this.shortName,\n      brandCode: this.brandCode,\n      currentLocale: this.currentLocale,\n    });\n  }\n\n  get uriRegExp() {\n    return this._dynamicConfig?.rcvUriRegExp;\n  }\n}\n"],"file":"RcVideo.js"}