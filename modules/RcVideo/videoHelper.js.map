{"version":3,"file":"videoHelper.js","names":["_ramda","require","_utils","_constants","_i18n","_interopRequireDefault","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_slicedToArray","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","len","length","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","undefined","res","Number","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","meetingProviderTypes","meeting","video","exports","RcVideoTypes","RCV_CREATE_API_KEYS","RCV_WAITING_ROOM_API_KEYS","RCV_E2EE_API_KEYS","RCV_PREFERENCES_IDS","RCV_PREFERENCES_KEYS","RCV_E2EE_RELATED_KEYS","RCV_E2EE_DEFAULT_SECURITY_OPTIONS","allowJoinBeforeHost","isMeetingSecret","isOnlyAuthUserJoin","isOnlyCoworkersJoin","waitingRoomMode","RCV_WAITING_ROOM_MODE","notcoworker","getDefaultChars","DEFAULT_PASSWORD_CHARSET","validateRandomPassword","pwd","generateRandomPassword","charset","charLen","retVal","charAt","Math","floor","random","validatePasswordSettings","meetingPassword","RCV_PASSWORD_REGEX","getVideoSettings","data","_data$name","params","settings","type","expiresIn","getDefaultVideoSettings","_ref","topic","accountId","extensionId","e2ee","muteAudio","muteVideo","allowScreenSharing","off","settingLock","startTime","Date","duration","saveAsDefault","isMeetingPasswordValid","usePersonalMeetingId","getTopic","_ref2","extensionName","brandName","shortName","rcvMeetingTopic","rcvProductName","format","pruneMeetingObject","omitArr","meetingDetail","pick","_ref3","condition","omit","transformPreferences","preferences","isInstantMeeting","join_before_host","password_instant","password_scheduled","guest_join","join_authenticated_from_account_only","screen_sharing_host_only","waiting_room","waiting_room_guests_only","transformSettingLocks","settingLocks","reversePreferences","result","RCV_WAITING_ROOM_MODE_REVERSE","prunePreferencesObject","comparePreferences","preferencesChanged","_Object$keys","settingKey","assignValue","a","b","assignObject","getLockedPreferences","lockedPreferences","_i2","_Object$entries","entries","_Object$entries$_i","locked","getAvaliableWaitingRoomOpions","all","patchWaitingRoomRelated","_ref4","isUpdatingMode","processedSettings","includes","formatMainPhoneNumber","dialInNumber","phoneNumber","formatPremiumNumbers","map","_obj$country","_obj$country2","locationField","country","location","concat","formatRcvRequestData","numbers","_params$joinUri","joinUriInfo","joinUri","split","parameters","meetingName","hostName","meetingId","shortId","isSIPAvailable","participantCode","entryPoint","$Brand_Id","brandId","$Extension_FormattingLocaleCode","currentLocale","$Extension_LanguageLocaleCode","isE2eeEnabled","password","dialInPassword","meetingPasswordPSTN","maskedPassword","meetingPasswordMasked","notificationId","plainTextPreferred","isolatedMode","pipe","toPairs","_ref5","_ref6","parameterName","parameterValue","item","formatRcvInvitationRequestData","dialInNumbers","number","unformattedNumber","sortDialInNumbers","defaultPhoneNumbers","premium","premiumNumbers","tollFreeNumbers","i18n","getString","formatRcvInvitationRequestDataV2","phoneNumbers"],"sources":["modules/RcVideo/videoHelper.ts"],"sourcesContent":["import { filter, map, omit, pick, pipe, toPairs } from 'ramda';\n\nimport { format } from '@ringcentral-integration/utils';\n\nimport type {\n  MeetingProviderTypesProps,\n  RcVDialInNumberObj,\n  RcvGSuiteMeetingModel,\n  RcVideoAPI,\n  RcVideoTypesProps,\n  RcvInvitationRequest,\n  RcVMeetingModel,\n  RcVPreferences,\n  RcVPreferencesGET,\n  RcVSettingId,\n  RcVSettingKey,\n  RcVSettingLocks,\n  RcVSettingLocksGET,\n} from '../../interfaces/Rcv.model';\nimport {\n  RCV_E2EE_API_KEYS,\n  RCV_PASSWORD_REGEX,\n  RCV_WAITING_ROOM_API_KEYS,\n  RCV_WAITING_ROOM_MODE,\n  RCV_WAITING_ROOM_MODE_REVERSE,\n} from './constants';\nimport i18n from './i18n';\nimport type { RcvInvitationRequestV2, TopicProps } from './RcVideo.interface';\n\n/* TODO: this meetingProviderTypes is only used for calender-addon\n * if you want to use meetingProviderTypes\n * please turn to use MeetingProvider/interface\n */\nconst meetingProviderTypes: MeetingProviderTypesProps = {\n  meeting: 'RCMeetings',\n  video: 'RCVideo',\n};\n\nconst RcVideoTypes: RcVideoTypesProps = {\n  meeting: 0, // schedule\n  call: 1, // instant meeting\n};\n\nconst RCV_CREATE_API_KEYS: Array<keyof RcVideoAPI> = [\n  'name',\n  'type',\n  'startTime',\n  'expiresIn',\n  'duration',\n  'accountId',\n  'extensionId',\n  'allowJoinBeforeHost',\n  'muteAudio',\n  'muteVideo',\n  'isMeetingSecret',\n  'meetingPassword',\n  'isOnlyAuthUserJoin',\n  'isOnlyCoworkersJoin',\n  'allowScreenSharing',\n  RCV_WAITING_ROOM_API_KEYS,\n  RCV_E2EE_API_KEYS,\n];\n\nconst RCV_PREFERENCES_IDS: Array<RcVSettingId> = [\n  'e2ee',\n  'join_before_host',\n  // 'join_video_off',\n  // 'join_audio_mute',\n  'password_scheduled',\n  'password_instant',\n  'guest_join',\n  'join_authenticated_from_account_only',\n  'screen_sharing_host_only',\n  'waiting_room_guests_only',\n  'waiting_room',\n];\n\nconst RCV_PREFERENCES_KEYS: Array<RcVSettingKey> = [\n  'allowJoinBeforeHost',\n  // 'muteVideo',\n  // 'muteAudio',\n  'isMeetingSecret',\n  'isOnlyAuthUserJoin',\n  'isOnlyCoworkersJoin',\n  'allowScreenSharing',\n  RCV_WAITING_ROOM_API_KEYS,\n  RCV_E2EE_API_KEYS,\n];\n\nconst RCV_E2EE_RELATED_KEYS: Array<RcVSettingKey> = [\n  'allowJoinBeforeHost',\n  'isMeetingSecret',\n  'isOnlyAuthUserJoin',\n  'isOnlyCoworkersJoin',\n  RCV_WAITING_ROOM_API_KEYS,\n];\n\nconst RCV_E2EE_DEFAULT_SECURITY_OPTIONS: Partial<RcVideoAPI> = {\n  allowJoinBeforeHost: false,\n  isMeetingSecret: true,\n  isOnlyAuthUserJoin: true,\n  isOnlyCoworkersJoin: false,\n  waitingRoomMode: RCV_WAITING_ROOM_MODE.notcoworker,\n} as const;\n\n/* RCINT-14566\n * Exclude characters that are hard to visually differentiate [\"0\", \"o\", \"O\", \"I\", \"l\"]\n */\nfunction getDefaultChars(): string {\n  const DEFAULT_PASSWORD_CHARSET =\n    'abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ123456789';\n  return DEFAULT_PASSWORD_CHARSET;\n}\n\nfunction validateRandomPassword(pwd: string): boolean {\n  return /^(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])[A-Za-z0-9]*$/.test(pwd);\n}\n\nfunction generateRandomPassword(length = 10): string {\n  const charset = getDefaultChars();\n  const charLen = charset.length;\n  let retVal = '';\n  for (let i = 0; i < length; i++) {\n    retVal += charset.charAt(Math.floor(Math.random() * charLen));\n  }\n  if (!validateRandomPassword(retVal)) {\n    return generateRandomPassword(length);\n  }\n  return retVal;\n}\n\nfunction validatePasswordSettings(\n  meetingPassword: string,\n  isMeetingSecret: boolean,\n): boolean {\n  if (!isMeetingSecret) {\n    return true;\n  }\n  if (meetingPassword && RCV_PASSWORD_REGEX.test(meetingPassword)) {\n    return true;\n  }\n  return false;\n}\n\n// gsuite\nfunction getVideoSettings(data: RcVideoAPI): RcvGSuiteMeetingModel {\n  const {\n    name = 'Scheduled meeting',\n    isMeetingSecret,\n    meetingPassword,\n    ...params\n  } = data;\n  const settings: RcvGSuiteMeetingModel = {\n    ...params,\n    name,\n    type: RcVideoTypes.meeting,\n    expiresIn: 31536000,\n  };\n\n  if (isMeetingSecret) {\n    settings.isMeetingSecret = true;\n    settings.meetingPassword = meetingPassword;\n  } else {\n    settings.isMeetingSecret = false;\n    settings.meetingPassword = '';\n  }\n\n  return settings;\n}\n\nfunction getDefaultVideoSettings({\n  topic,\n  accountId,\n  extensionId,\n}: {\n  topic: string;\n  accountId: string;\n  extensionId: string;\n}): RcVMeetingModel {\n  return {\n    // api fields\n    accountId,\n    extensionId,\n    name: topic,\n    type: RcVideoTypes.meeting,\n    expiresIn: 31536000,\n    e2ee: false,\n    allowJoinBeforeHost: false,\n    muteAudio: false,\n    muteVideo: false,\n    isMeetingSecret: true,\n    meetingPassword: '',\n    isOnlyAuthUserJoin: false,\n    isOnlyCoworkersJoin: false,\n    allowScreenSharing: true,\n    waitingRoomMode: RCV_WAITING_ROOM_MODE.off,\n    // @ts-expect-error\n    settingLock: {\n      allowJoinBeforeHost: false,\n      // muteVideo: false,\n      // muteAudio: false,\n      isMeetingSecret: false,\n      isOnlyAuthUserJoin: false,\n      isOnlyCoworkersJoin: false,\n      allowScreenSharing: false,\n      waitingRoomMode: false,\n      e2ee: false,\n    },\n    // ui fields\n    startTime: new Date(),\n    duration: 60,\n    saveAsDefault: false,\n    isMeetingPasswordValid: false,\n    usePersonalMeetingId: false,\n  };\n}\n\nfunction getTopic({\n  extensionName,\n  brandName,\n  shortName,\n  rcvMeetingTopic,\n  rcvProductName,\n}: TopicProps) {\n  return format(rcvMeetingTopic, {\n    extensionName,\n    shortName,\n    brandName,\n    rcvProductName,\n  });\n}\n\n/**\n * Remove client side properties before sending to RCV API\n */\nfunction pruneMeetingObject(\n  meeting: RcVMeetingModel,\n  omitArr: Array<{\n    condition: boolean;\n    key: keyof RcVideoAPI;\n  }>,\n): RcVideoAPI {\n  let meetingDetail = pick(RCV_CREATE_API_KEYS, meeting);\n  omitArr.forEach(({ condition, key }) => {\n    if (!condition) {\n      meetingDetail = omit([key], meetingDetail) as RcVideoAPI;\n    }\n  });\n  return meetingDetail;\n}\n\nfunction transformPreferences(\n  preferences: RcVPreferencesGET,\n  isInstantMeeting = false,\n): RcVPreferences {\n  return {\n    // @ts-expect-error\n    allowJoinBeforeHost: preferences.join_before_host,\n    // muteVideo: preferences.join_video_off,\n    // muteAudio: preferences.join_audio_mute,\n    e2ee: preferences.e2ee,\n    // @ts-expect-error\n    isMeetingSecret: isInstantMeeting\n      ? preferences.password_instant\n      : preferences.password_scheduled,\n    // @ts-expect-error\n    isOnlyAuthUserJoin: preferences.guest_join,\n    isOnlyCoworkersJoin: preferences.guest_join\n      ? preferences.join_authenticated_from_account_only === 'only_co_workers'\n      : false,\n    allowScreenSharing: preferences.screen_sharing_host_only === 'all',\n    waitingRoomMode: preferences.waiting_room\n      ? // @ts-expect-error\n        RCV_WAITING_ROOM_MODE[preferences.waiting_room_guests_only]\n      : RCV_WAITING_ROOM_MODE.off,\n  };\n}\n\nfunction transformSettingLocks(\n  settingLocks: RcVSettingLocksGET,\n  isInstantMeeting = false,\n): RcVSettingLocks {\n  return {\n    // @ts-expect-error\n    allowJoinBeforeHost: settingLocks.join_before_host,\n    // muteVideo: settingLocks.join_video_off,\n    // muteAudio: settingLocks.join_audio_mute,\n    e2ee: settingLocks.e2ee,\n    // @ts-expect-error\n    isMeetingSecret: isInstantMeeting\n      ? settingLocks.password_instant\n      : settingLocks.password_scheduled,\n    // @ts-expect-error\n    isOnlyAuthUserJoin: settingLocks.guest_join,\n    // @ts-expect-error\n    isOnlyCoworkersJoin: settingLocks.join_authenticated_from_account_only,\n    // @ts-expect-error\n    allowScreenSharing: settingLocks.screen_sharing_host_only,\n    // @ts-expect-error\n    waitingRoomMode: settingLocks.waiting_room,\n  };\n}\n\nfunction reversePreferences(\n  preferences: RcVPreferences,\n  isInstantMeeting = false,\n): Partial<RcVPreferencesGET> {\n  const result: Partial<RcVPreferencesGET> = {\n    join_before_host: preferences.allowJoinBeforeHost,\n    // join_video_off: preferences.muteVideo,\n    // join_audio_mute: preferences.muteAudio,\n    guest_join: preferences.isOnlyAuthUserJoin,\n    join_authenticated_from_account_only: preferences.isOnlyCoworkersJoin\n      ? 'only_co_workers'\n      : 'anyone_signed_into_rc',\n    screen_sharing_host_only: preferences.allowScreenSharing ? 'all' : 'host',\n    waiting_room: !!preferences.waitingRoomMode,\n    waiting_room_guests_only:\n      // @ts-expect-error\n      RCV_WAITING_ROOM_MODE_REVERSE[preferences.waitingRoomMode],\n    e2ee: preferences.e2ee,\n  };\n  if (isInstantMeeting) {\n    result.password_instant = preferences.isMeetingSecret;\n  } else {\n    result.password_scheduled = preferences.isMeetingSecret;\n  }\n  return result;\n}\n\n/**\n * Reserve only preferences fields\n */\nfunction prunePreferencesObject(meeting: RcVMeetingModel): RcVPreferences {\n  return pick(RCV_PREFERENCES_KEYS, meeting);\n}\n\nfunction comparePreferences(\n  preferences: RcVPreferences,\n  meeting: RcVMeetingModel,\n): boolean {\n  let preferencesChanged = false;\n  if (preferences && meeting) {\n    for (const key of Object.keys(preferences)) {\n      const settingKey = key as RcVSettingKey;\n      if (preferences[settingKey] !== meeting[settingKey]) {\n        preferencesChanged = true;\n        break;\n      }\n    }\n  }\n  return preferencesChanged;\n}\n\nfunction assignValue<T, K extends keyof T>(a: T, b: T, key: K) {\n  a[key] = b[key];\n}\n\nfunction assignObject<T, P extends T[K], K extends keyof T>(\n  a: T,\n  b: P,\n  key: K,\n) {\n  a[key] = b;\n}\n\nfunction getLockedPreferences(\n  settingLocks: RcVSettingLocks,\n  preferences: RcVPreferences,\n): Partial<RcVPreferences> {\n  const lockedPreferences: Partial<RcVPreferences> = {};\n  for (const [key, locked] of Object.entries(settingLocks)) {\n    if (locked) {\n      const settingKey = key as RcVSettingKey;\n      assignValue(lockedPreferences, preferences, settingKey);\n    }\n  }\n  return lockedPreferences;\n}\n\nfunction getAvaliableWaitingRoomOpions(\n  isOnlyCoworkersJoin: boolean,\n): Array<number> {\n  return isOnlyCoworkersJoin\n    ? [RCV_WAITING_ROOM_MODE.off, RCV_WAITING_ROOM_MODE.all]\n    : [\n        RCV_WAITING_ROOM_MODE.off,\n        RCV_WAITING_ROOM_MODE.all,\n        RCV_WAITING_ROOM_MODE.notcoworker,\n      ];\n}\n\nfunction patchWaitingRoomRelated(\n  settings: RcVMeetingModel,\n  { waitingRoomMode }: RcVPreferences,\n  isUpdatingMode = false,\n): Partial<RcVMeetingModel> {\n  const processedSettings: Partial<RcVMeetingModel> = {};\n  if (settings.isOnlyAuthUserJoin) {\n    // for pmi setting, waitingRoom, joinAfterMe option maybe not avaliable\n    if (\n      !getAvaliableWaitingRoomOpions(settings.isOnlyCoworkersJoin).includes(\n        // @ts-expect-error\n        settings.waitingRoomMode,\n      )\n    ) {\n      processedSettings.waitingRoomMode = isUpdatingMode\n        ? RCV_WAITING_ROOM_MODE.all\n        : waitingRoomMode;\n    }\n  }\n  // when waitingRoom is 'everyone', joinAfterMe should be always checked\n  if (\n    (processedSettings.waitingRoomMode === RCV_WAITING_ROOM_MODE.all ||\n      settings.waitingRoomMode === RCV_WAITING_ROOM_MODE.all) &&\n    settings.allowJoinBeforeHost\n  ) {\n    processedSettings.allowJoinBeforeHost = false;\n  }\n  return processedSettings;\n}\n\nfunction formatMainPhoneNumber(\n  dialInNumber: string | RcVDialInNumberObj[],\n): string {\n  if (typeof dialInNumber === 'string') {\n    return dialInNumber;\n  }\n\n  if (!dialInNumber || dialInNumber.length === 0) {\n    // @ts-expect-error\n    return undefined;\n  }\n\n  return dialInNumber[0].phoneNumber;\n}\n\nfunction formatPremiumNumbers(\n  dialInNumber: string | RcVDialInNumberObj[],\n): string[] {\n  if (typeof dialInNumber === 'string') {\n    return [dialInNumber];\n  }\n\n  if (!dialInNumber || dialInNumber.length === 0) {\n    return [];\n  }\n\n  return map((obj) => {\n    const locationField =\n      obj?.country?.name && obj.location\n        ? `${obj.country.name} (${obj.location})`\n        : obj?.country?.name || '';\n\n    return `${obj.phoneNumber} ${locationField}`;\n  }, dialInNumber);\n}\n\nconst formatRcvRequestData = (params: RcvInvitationRequest, numbers: any) => {\n  const joinUriInfo = params.joinUri?.split(`/join/`) || [];\n  // format request data\n  const parameters = {\n    numbers,\n    meetingName: `---`,\n    hostName: params.hostName,\n    meetingId: params.shortId,\n    isSIPAvailable: params.isSIPAvailable,\n    participantCode: params.shortId,\n    brandName: params.brandName,\n    entryPoint: joinUriInfo[0],\n    $Brand_Id: params.brandId,\n    $Extension_FormattingLocaleCode: params.currentLocale,\n    $Extension_LanguageLocaleCode: params.currentLocale,\n    isE2eeEnabled: !!params.e2ee,\n    password: params.isMeetingSecret ? params.meetingPassword : undefined,\n    dialInPassword: params.isMeetingSecret\n      ? params.meetingPasswordPSTN\n      : undefined,\n    maskedPassword: params.isMeetingSecret\n      ? params.meetingPasswordMasked\n      : undefined,\n  };\n  return {\n    notificationId: 'meetingInvite',\n    plainTextPreferred: true,\n    isolatedMode: true,\n    parameters: pipe(\n      toPairs,\n      map(([parameterName, parameterValue]) => ({\n        parameterName,\n        parameterValue,\n      })),\n      filter(\n        (item: { parameterName: string; parameterValue: any }) =>\n          item.parameterValue !== undefined,\n      ),\n    )(parameters),\n  };\n};\n\nconst formatRcvInvitationRequestData = (params: RcvInvitationRequest) => {\n  // format number\n  const numbers = params.dialInNumbers.map((item) => {\n    return {\n      number: item.phoneNumber,\n      unformattedNumber: item.phoneNumber,\n      country: item.country.name,\n      default: item.default,\n      location: item.location,\n    };\n  });\n  return formatRcvRequestData(params, numbers);\n};\n\nconst sortDialInNumbers = (\n  numbers: RcvInvitationRequestV2['phoneNumbers'],\n  currentLocale: string,\n) => {\n  const defaultPhoneNumbers = numbers\n    .filter((item) => !item.premium)\n    .map((item) => ({\n      number: item.phoneNumber,\n      unformattedNumber: item.phoneNumber,\n      country: item.country.name,\n      location: item.location,\n    }));\n  const premiumNumbers = numbers\n    .filter((item) => item.premium && !!item.location)\n    .map((item) => ({\n      number: item.phoneNumber,\n      unformattedNumber: item.phoneNumber,\n      country: item.country.name,\n      location: item.location,\n    }));\n  const tollFreeNumbers = numbers\n    .filter((item) => item.premium && !item.location)\n    .map((item) => ({\n      number: item.phoneNumber,\n      unformattedNumber: item.phoneNumber,\n      country: item.country.name,\n      location: `${i18n.getString('tollFree', currentLocale)}`,\n    }));\n  return [...defaultPhoneNumbers, ...premiumNumbers, ...tollFreeNumbers];\n};\n\nconst formatRcvInvitationRequestDataV2 = (params: any) => {\n  // format number\n  const numbers = sortDialInNumbers(params.phoneNumbers, params.currentLocale);\n  return formatRcvRequestData(params, numbers);\n};\n\n// TODO: will remove this when google app script could support export seperately\n// export together because google app script not fully support export\nexport {\n  assignObject,\n  comparePreferences,\n  formatMainPhoneNumber,\n  formatPremiumNumbers,\n  formatRcvInvitationRequestData,\n  formatRcvInvitationRequestDataV2,\n  generateRandomPassword,\n  getDefaultChars,\n  getDefaultVideoSettings,\n  getLockedPreferences,\n  getTopic,\n  getVideoSettings,\n  meetingProviderTypes,\n  patchWaitingRoomRelated,\n  pruneMeetingObject,\n  prunePreferencesObject,\n  RCV_E2EE_DEFAULT_SECURITY_OPTIONS,\n  RCV_E2EE_RELATED_KEYS,\n  RCV_PREFERENCES_IDS,\n  RCV_PREFERENCES_KEYS,\n  RcVideoTypes,\n  reversePreferences,\n  sortDialInNumbers,\n  transformPreferences,\n  transformSettingLocks,\n  validatePasswordSettings,\n  validateRandomPassword,\n};\n"],"mappings":"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"}