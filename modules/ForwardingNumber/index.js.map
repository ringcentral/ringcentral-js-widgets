{"version":3,"sources":["modules/ForwardingNumber/index.ts"],"names":["ForwardingNumber","deps","dep","optional","client","extensionFeatures","options","fetchFunction","params","_client","account","extension","forwardingNumber","list","lists","map","number","forbiddenHandler","readyCheckFn","_extensionFeatures","ready","cleanOnReset","features","ReadExtensionPhoneNumbers","available","DataFetcher","selector","data","numbers","phoneNumbers","filter","p","indexOf","phoneNumber"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaqBA,gB;AAXrB;AACA;AACA;AACA;OACC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,yBAAP;AAAkCC,IAAAA,QAAQ,EAAE;AAA5C,GAHI;AADA,CAAP,C;;;;;AAQC;AACF;AACA;AACA;AACA;AACE,kCAAuD;AAAA;;AAAA,QAAzCC,MAAyC,QAAzCA,MAAyC;AAAA,QAAjCC,iBAAiC,QAAjCA,iBAAiC;AAAA,QAAXC,OAAW;;AAAA;;AACrD;AACEF,MAAAA,MAAM,EAANA,MADF;AAEEG,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACO,2BAAU,UAACC,MAAD;AAAA,2BAC5B,MAAKC,OAAL,CAAaC,OAAb,GAAuBC,SAAvB,GAAmCC,gBAAnC,GAAsDC,IAAtD,CAA2DL,MAA3D,CAD4B;AAAA,mBAAV,CADP;;AAAA;AACPM,kBAAAA,KADO;AAAA,mDAINA,KAAK,CAACC,GAAN,CAAU,UAACC,MAAD;AAAA,2BAAY,2BAAUA,MAAV,CAAZ;AAAA,mBAAV,CAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAFf;AAQEC,MAAAA,gBAAgB,EAAE;AAAA,eAAM,EAAN;AAAA,OARpB;AASEC,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,kBAAL,CAAwBC,KAA9B;AAAA,OAThB;AAUEC,MAAAA,YAAY,EAAE;AAVhB,OAWKf,OAXL;;AADqD;;AAAA;;AAAA;;AAcrD,UAAKa,kBAAL,GAA0Bd,iBAA1B;AAdqD;AAetD;;;;wBAEW;AACV,aAAO,kBAAP;AACD;;;wBAuBoB;AAAA;;AACnB,aAAO,CAAC,2BAAC,KAAKc,kBAAL,CAAwBG,QAAzB,oFAAC,sBAAkCC,yBAAnC,2DAAC,uBACLC,SADI,CAAR;AAED;;;;EAnD2CC,wB,2EA2B3CC,kB;;;;;;;WACS,CAAC;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KAAD,EAAkB,UAACA,IAAD;AAAA,aAAUA,IAAI,IAAI,EAAlB;AAAA,KAAlB,C;;gFAETD,kB;;;;;;;WACa,CACZ;AAAA,aAAM,MAAI,CAACE,OAAX;AAAA,KADY,EAEZ,UAACC,YAAD;AAAA,aACEA,YAAY,CAACC,MAAb,CACE,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACT,QAAF,CAAWU,OAAX,CAAmB,UAAnB,MAAmC,CAAC,CAApC,IAAyCD,CAAC,CAACE,WAAlD;AAAA,OADF,CADF;AAAA,KAFY,C;;sFAQbP,kB;;;;;;;WACmB,CAClB;AAAA,aAAM,MAAI,CAACE,OAAX;AAAA,KADkB,EAElB,UAACC,YAAD;AAAA,aACEA,YAAY,CAACC,MAAb,CACE,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACT,QAAF,CAAWU,OAAX,CAAmB,gBAAnB,MAAyC,CAAC,CAA1C,IAA+CD,CAAC,CAACE,WAAxD;AAAA,OADF,CADF;AAAA,KAFkB,C","sourcesContent":["import DataFetcher from '../../lib/DataFetcher';\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport removeUri from '../../lib/removeUri';\nimport { selector } from '../../lib/selector';\n\n/**\n * @class\n * @description Extension forwarding number list module\n */\n@Module({\n  deps: [\n    'Client',\n    'ExtensionFeatures',\n    { dep: 'ForwardingNumberOptions', optional: true },\n  ],\n})\nexport default class ForwardingNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, extensionFeatures, ...options }) {\n    super({\n      client,\n      fetchFunction: async () => {\n        const lists = await fetchList((params) =>\n          this._client.account().extension().forwardingNumber().list(params),\n        );\n        return lists.map((number) => removeUri(number));\n      },\n      forbiddenHandler: () => [],\n      readyCheckFn: () => this._extensionFeatures.ready,\n      cleanOnReset: true,\n      ...options,\n    });\n    this._extensionFeatures = extensionFeatures;\n  }\n\n  get _name() {\n    return 'forwardingNumber';\n  }\n\n  @selector\n  numbers = [() => this.data, (data) => data || []];\n\n  @selector\n  flipNumbers = [\n    () => this.numbers,\n    (phoneNumbers) =>\n      phoneNumbers.filter(\n        (p) => p.features.indexOf('CallFlip') !== -1 && p.phoneNumber,\n      ),\n  ];\n\n  @selector\n  forwardingNumbers = [\n    () => this.numbers,\n    (phoneNumbers) =>\n      phoneNumbers.filter(\n        (p) => p.features.indexOf('CallForwarding') !== -1 && p.phoneNumber,\n      ),\n  ];\n\n  get _hasPermission() {\n    return !!this._extensionFeatures.features?.ReadExtensionPhoneNumbers\n      ?.available;\n  }\n}\n"],"file":"index.js"}