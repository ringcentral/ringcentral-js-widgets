{"version":3,"file":"SimpleCallControlUI.js","names":["_callDirections","_interopRequireDefault","require","_di","_core","_i18n","_utils","_dec","_class","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","prototype","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","Number","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","SimpleCallControlUI","Module","name","deps","dep","optional","_RcUIModuleV","_super","getUIProps","_ref","sessionId","params","renderContactName","activeSession","_deps","activeCallControl","nameMatches","direction","callDirections","outbound","toMatches","fromMatches","phoneNumber","to","from","fallBackName","i18n","getString","locale","currentLocale","_pickFallBackInfo","pickFallBackInfo","telephonySessionId","fallBackNameFromThirdParty","fallBackNumber","areaCode","regionSettings","countryCode","brandName","brand","controlBusy","busy","maxExtensionNumberLength","accountInfo","getUIFunctions","_ref2","_this","onBackButtonClick","routerInteraction","goBack","setActiveSessionId","onTransfer","push","concat","onMute","mute","onUnmute","unmute","onHold","hold","onUnhold","unhold","onHangup","hangUp","RcUIModuleV2","exports"],"sources":["modules/SimpleCallControlUI/SimpleCallControlUI.ts"],"sourcesContent":["import callDirections from '@ringcentral-integration/commons/enums/callDirections';\nimport type { Entity } from '@ringcentral-integration/commons/interfaces/Entity.interface';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport type { UIFunctions, UIProps } from '@ringcentral-integration/core';\nimport { RcUIModuleV2 } from '@ringcentral-integration/core';\n\nimport type { SimpleCallControlPanelProps } from '../../components/SimpleCallControlPanel';\nimport i18n from '../../components/SimpleCallControlPanel/i18n';\nimport { pickFallBackInfo } from '../../components/SimpleCallControlPanel/utils';\nimport type {\n  Deps,\n  SimpleCallControlContainerProps,\n} from './SimpleCallControlUI.interface';\n\n@Module({\n  name: 'SimpleCallControlUI',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'Brand',\n    'RegionSettings',\n    'ActiveCallControl',\n    'AccountInfo',\n    { dep: 'SimpleCallControlUIOptions', optional: true },\n  ],\n})\nexport class SimpleCallControlUI extends RcUIModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  getUIProps({\n    params: { sessionId },\n    renderContactName,\n  }: SimpleCallControlContainerProps): UIProps<SimpleCallControlPanelProps> {\n    const { activeSession } = this._deps.activeCallControl;\n    let nameMatches: Entity[] = [];\n    if (activeSession && !renderContactName) {\n      // TODO: check activeSession type\n      nameMatches =\n        activeSession.direction === callDirections.outbound\n          ? // @ts-expect-error TS(2339): Property 'toMatches' does not exist on type 'Parti... Remove this comment to see the full error message\n            activeSession.toMatches\n          : // @ts-expect-error TS(2339): Property 'fromMatches' does not exist on type 'Par... Remove this comment to see the full error message\n            activeSession.fromMatches;\n    }\n    let phoneNumber: string;\n    if (activeSession) {\n      // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n      phoneNumber =\n        activeSession.direction === callDirections.outbound\n          ? activeSession.to\n          : activeSession.from;\n    }\n    let fallBackName = i18n.getString(\n      'Unknown',\n      this._deps.locale.currentLocale,\n    );\n    if (renderContactName) {\n      const { fallBackName: fallBackNameFromThirdParty, fallBackNumber } =\n        pickFallBackInfo(\n          activeSession,\n          renderContactName({\n            // @ts-expect-error TS(2322): Type 'string | null | undefined' is not assignable... Remove this comment to see the full error message\n            sessionId: activeSession && activeSession.sessionId,\n            telephonySessionId: sessionId,\n          }),\n          this._deps.locale.currentLocale,\n        );\n      phoneNumber = fallBackNumber;\n      fallBackName = fallBackNameFromThirdParty;\n    }\n    return {\n      currentLocale: this._deps.locale.currentLocale,\n      activeSession,\n      sessionId,\n      areaCode: this._deps.regionSettings.areaCode,\n      countryCode: this._deps.regionSettings.countryCode,\n      nameMatches,\n      // @ts-expect-error TS(2454): Variable 'phoneNumber' is used before being assign... Remove this comment to see the full error message\n      phoneNumber,\n      fallBackName,\n      brandName: this._deps.brand.name,\n      controlBusy: this._deps.activeCallControl.busy,\n      maxExtensionNumberLength: this._deps.accountInfo.maxExtensionNumberLength,\n    };\n  }\n\n  getUIFunctions({\n    params: { sessionId },\n  }: SimpleCallControlContainerProps): UIFunctions<SimpleCallControlPanelProps> {\n    return {\n      onBackButtonClick: () => {\n        this._deps.routerInteraction.goBack();\n      },\n      setActiveSessionId: (sessionId) => {\n        this._deps.activeCallControl.setActiveSessionId(sessionId);\n      },\n      onTransfer: (sessionId) => {\n        this._deps.routerInteraction.push(`/transfer/${sessionId}/active`);\n      },\n      onMute: () => this._deps.activeCallControl.mute(sessionId),\n      onUnmute: () => this._deps.activeCallControl.unmute(sessionId),\n      onHold: () => this._deps.activeCallControl.hold(sessionId),\n      onUnhold: () => this._deps.activeCallControl.unhold(sessionId),\n      onHangup: () => this._deps.activeCallControl.hangUp(sessionId),\n    };\n  }\n}\n"],"mappings":"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"}