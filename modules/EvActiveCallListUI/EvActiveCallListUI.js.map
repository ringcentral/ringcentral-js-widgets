{"version":3,"sources":["modules/EvActiveCallListUI/EvActiveCallListUI.ts"],"names":["EvActiveCallListUI","name","deps","dep","optional","that","callId","_deps","evCallMonitor","callIds","otherCallIds","callsMapping","evAuth","agentId","evCall","activityCallId","call","activeCallControl","hangupSession","sessionId","session","holdSession","state","id","currentLocale","locale","callList","isOnMute","evIntegratedSoftphone","muteActive","showMuteButton","evAgentSession","isIntegratedSoftphone","userName","agentSettings","username","isInbound","goBack","routerInteraction","onHangup","onHold","onUnHold","onMute","mute","onUnmute","unmute","getActiveCallList","console","error","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { computed, RcUIModuleV2 } from '@ringcentral-integration/core';\n\nimport {\n  EvActiveCallListUIFunctions,\n  EvActiveCallListUIProps,\n} from '../../interfaces/EvActiveCallListUI.interface';\nimport { EvCallData } from '../../interfaces/EvData.interface';\nimport { ActiveCallListUI, Deps } from './EvActiveCallListUI.interface';\n\n@Module({\n  name: 'EvActiveCallListUI',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'EvCall',\n    'ActiveCallControl',\n    'EvCallMonitor',\n    'EvIntegratedSoftphone',\n    'EvAuth',\n    'EvClient',\n    'EvAgentSession',\n    { dep: 'EvActiveCallListUIOptions', optional: true },\n  ],\n})\nclass EvActiveCallListUI\n  extends RcUIModuleV2<Deps>\n  implements ActiveCallListUI\n{\n  get callId() {\n    return this._deps.evCall.activityCallId;\n  }\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  @computed((that: EvActiveCallListUI) => [\n    that.callId,\n    that._deps.evCallMonitor.callIds,\n    that._deps.evCallMonitor.otherCallIds,\n    that._deps.evCallMonitor.callsMapping,\n    that._deps.evAuth.agentId,\n  ])\n  get callList() {\n    const { callIds, otherCallIds, callsMapping } = this._deps.evCallMonitor;\n    const { agentId } = this._deps.evAuth;\n\n    const callList = this._deps.evCallMonitor.getActiveCallList(\n      callIds,\n      otherCallIds,\n      callsMapping,\n      this.callId,\n    );\n    if (callList[1]?.session?.agentId !== agentId) {\n      console.error('agent id is wrong');\n    }\n    return callList;\n  }\n\n  onHangup(call: EvCallData) {\n    this._deps.activeCallControl.hangupSession({\n      sessionId: call.session.sessionId,\n    });\n  }\n\n  onHold(call: EvCallData) {\n    this._deps.activeCallControl.holdSession({\n      sessionId: call.session.sessionId,\n      state: true,\n    });\n  }\n\n  onUnHold(call: EvCallData) {\n    this._deps.activeCallControl.holdSession({\n      sessionId: call.session.sessionId,\n      state: false,\n    });\n  }\n\n  getUIProps({ id }: { id: string }): EvActiveCallListUIProps {\n    this._deps.evCall.activityCallId = id;\n    return {\n      currentLocale: this._deps.locale.currentLocale,\n      callList: this.callList,\n      isOnMute: this._deps.evIntegratedSoftphone.muteActive,\n      showMuteButton: this._deps.evAgentSession.isIntegratedSoftphone,\n      userName: this._deps.evAuth.agentSettings?.username,\n      isInbound: this._deps.evCall.isInbound,\n    };\n  }\n\n  getUIFunctions(): EvActiveCallListUIFunctions {\n    return {\n      goBack: () => {\n        this._deps.routerInteraction.goBack();\n      },\n      onHangup: (call) => this.onHangup(call),\n      onHold: (call) => this.onHold(call),\n      onUnHold: (call) => this.onUnHold(call),\n      onMute: () => this._deps.activeCallControl.mute(),\n      onUnmute: () => this._deps.activeCallControl.unmute(),\n    };\n  }\n}\n\nexport { EvActiveCallListUI };\n"],"file":"EvActiveCallListUI.js"}