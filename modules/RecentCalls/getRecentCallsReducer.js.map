{"version":3,"sources":["modules/RecentCalls/getRecentCallsReducer.ts"],"names":["getCallsReducer","types","state","type","contact","calls","sessionId","contactId","String","id","loadSuccess","loadReset","_","rest","getCallStatusReducer","initLoad","callStatus","loading","loaded","getRecentCallsReducer","status"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;AAEO,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,SAAO,YAAqD;AAAA,QAApDC,KAAoD,uEAA5C,EAA4C;;AAAA;AAAA,QAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,QAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,QAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;;AAC1D,QAAMC,SAAS,GAAGC,MAAM,CAACJ,OAAO,IAAIA,OAAO,CAACK,EAApB,CAAxB;;AACA,QAAIN,IAAI,KAAKF,KAAK,CAACS,WAAnB,EAAgC;AAC9B,6CACKR,KADL,2BAEGI,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SAF7C,EAEyDF,KAFzD;AAID;;AACD,QAAIF,IAAI,KAAKF,KAAK,CAACU,SAAnB,EAA8B;AAAA,kBAEzBL,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SAFjB;AAAA,UAE6BK,CAF7B,GAIxBV,KAJwB;AAAA,UAGvBW,IAHuB,4BAIxBX,KAJwB;;AAK5B,aAAOW,IAAP;AACD;;AACD,WAAOX,KAAP;AACD,GAhBD;AAiBD;;AAEM,SAASY,oBAAT,CAA8Bb,KAA9B,EAAqC;AAC1C,SAAO,YAA4B;AAAA,QAA3BC,KAA2B,uEAAnB,IAAmB;;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACjC,YAAQA,IAAR;AACE,WAAKF,KAAK,CAACc,QAAX;AACE,eAAOC,uBAAWC,OAAlB;;AACF,WAAKhB,KAAK,CAACU,SAAX;AACA,WAAKV,KAAK,CAACS,WAAX;AACE,eAAOM,uBAAWE,MAAlB;;AACF;AACE,eAAOhB,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEc,SAASiB,qBAAT,CAA+BlB,KAA/B,EAAsC;AACnD,SAAO,4BAAgB;AACrBmB,IAAAA,MAAM,EAAE,wCAAuBnB,KAAvB,CADa;AAErBI,IAAAA,KAAK,EAAEL,eAAe,CAACC,KAAD,CAFD;AAGrBe,IAAAA,UAAU,EAAEF,oBAAoB,CAACb,KAAD;AAHX,GAAhB,CAAP;AAKD","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport { callStatus } from './callStatus';\n\nexport function getCallsReducer(types) {\n  return (state = {}, { type, contact, calls, sessionId }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [sessionId ? `${contactId}-${sessionId}` : contactId]: calls,\n      };\n    }\n    if (type === types.loadReset) {\n      const {\n        [sessionId ? `${contactId}-${sessionId}` : contactId]: _,\n        ...rest\n      } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getCallStatusReducer(types) {\n  return (state = null, { type }) => {\n    switch (type) {\n      case types.initLoad:\n        return callStatus.loading;\n      case types.loadReset:\n      case types.loadSuccess:\n        return callStatus.loaded;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getRecentCallsReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    calls: getCallsReducer(types),\n    callStatus: getCallStatusReducer(types),\n  });\n}\n"],"file":"getRecentCallsReducer.js"}