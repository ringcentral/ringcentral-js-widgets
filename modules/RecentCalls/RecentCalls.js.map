{"version":3,"file":"RecentCalls.js","names":["_core","require","_phoneTypes","_background","_interopRequireDefault","_concurrentExecute","_di","_getDateFrom","_callStatus","_RecentCallsHelper","_dec","_class","_class2","_descriptor","_descriptor2","obj","__esModule","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","err","undefined","_initializerDefineProperty","property","descriptor","context","initializer","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","Number","_get","Reflect","get","bind","receiver","base","_superPropBase","desc","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","slice","reverse","reduce","decorator","_initializerWarningHelper","Error","RecentCalls","Module","name","deps","dep","optional","_RcModuleV","_super","_this","initLoad","callStatus","loading","loadSuccess","_ref","contact","calls","sessionId","loaded","contactId","id","concat","cleanUpCalls","_ref2","_ref2$sessionId","_getCalls","regeneratorRuntime","mark","_callee","_ref3","currentContact","_ref3$sessionId","wrap","_callee$","_context","prev","next","abrupt","_getRecentCalls","_deps","callHistory","sent","stop","getCalls","_x","_shouldInit","auth","loggedIn","_shouldReset","ready","_getRecentCalls2","_callee2","daySpan","dateFrom","recentCalls","_args2","_callee2$","_context2","getDateFrom","_getLocalRecentCalls","_fetchRemoteRecentCalls","toISOString","sort","sortByTime","dedup","_x2","_ref4","phoneNumbers","acc","to","from","matches","find","filterPhoneNumber","Date","startTime","_ref5","_this2","params","perPage","type","recentCallsPromises","_ref6","phoneType","phoneNumber","replace","phoneTypes","extension","promise","_fetchCallLogList","extensionNumber","concurrentExecute","delay","flattenToRecords","_this3","_callee3","_callee3$","_context3","records","client","account","callLog","list","RcModuleV2","state","action","background","exports"],"sources":["modules/RecentCalls/RecentCalls.ts"],"sourcesContent":["import type CallLogResponse from '@rc-ex/core/lib/definitions/CallLogResponse';\nimport { action, RcModuleV2, state } from '@ringcentral-integration/core';\n\nimport { phoneTypes } from '../../enums/phoneTypes';\nimport type { Entity } from '../../interfaces/Entity.interface';\nimport background from '../../lib/background';\nimport concurrentExecute from '../../lib/concurrentExecute';\nimport { Module } from '../../lib/di';\nimport getDateFrom from '../../lib/getDateFrom';\nimport type { HistoryCall } from '../CallHistory';\nimport { callStatus } from './callStatus';\nimport type {\n  CleanUpCallsOptions,\n  Deps,\n  FetchCallLogListOptions,\n  GetCallsOptions,\n  LoadSuccessOptions,\n} from './RecentCalls.interface';\nimport {\n  dedup,\n  filterPhoneNumber,\n  flattenToRecords,\n  sortByTime,\n} from './RecentCallsHelper';\n\n@Module({\n  name: 'RecentCalls',\n  deps: [\n    'Client',\n    'Auth',\n    'CallHistory',\n    { dep: 'RecentCallsOptions', optional: true },\n  ],\n})\nexport class RecentCalls extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  @state\n  calls: Record<string, HistoryCall[]> = {};\n\n  @state\n  callStatus: string | null = null;\n\n  @action\n  initLoad() {\n    this.callStatus = callStatus.loading;\n  }\n\n  @action\n  loadSuccess({ contact, calls, sessionId }: LoadSuccessOptions) {\n    this.callStatus = callStatus.loaded;\n    const contactId = String(contact && contact.id);\n    this.calls[sessionId ? `${contactId}-${sessionId}` : contactId] = calls;\n  }\n\n  @action\n  cleanUpCalls({ contact, sessionId = null }: CleanUpCallsOptions) {\n    this.callStatus = callStatus.loaded;\n    const contactId = String(contact && contact.id);\n    const id = sessionId ? `${contactId}-${sessionId}` : contactId;\n    delete this.calls[id];\n  }\n\n  get isCallsLoaded() {\n    return this.callStatus === callStatus.loaded;\n  }\n\n  @background\n  async getCalls({ currentContact, sessionId = null }: GetCallsOptions) {\n    // No need to calculate recent calls of the same contact repeatedly\n    if (!currentContact) {\n      return;\n    }\n    const contactId = String(currentContact && currentContact.id);\n    if (this.calls[sessionId ? `${contactId}-${sessionId}` : contactId]) {\n      return;\n    }\n    this.initLoad();\n    const calls = await this._getRecentCalls(\n      currentContact,\n      this._deps.callHistory.calls,\n    );\n    this.loadSuccess({\n      calls,\n      contact: currentContact,\n      sessionId,\n    });\n  }\n\n  override _shouldInit() {\n    return !!(super._shouldInit() && this._deps.auth.loggedIn);\n  }\n\n  override _shouldReset() {\n    return !!(\n      super._shouldReset() ||\n      (this.ready && !this._deps.auth.loggedIn)\n    );\n  }\n\n  /**\n   * Searching for recent calls of specific contact.\n   * @param {Object} currentContact Current contact\n   * @param {Array} calls Calls in callHistory\n   * @param {Number} daySpan Find calls within certain days\n   * @param {Number} length Maximum length of recent calls\n   * @return {Array}\n   * @private\n   */\n  async _getRecentCalls(\n    currentContact: Entity,\n    calls: HistoryCall[] = [],\n    daySpan = 60,\n    length = 5,\n  ) {\n    const dateFrom = getDateFrom(daySpan);\n    let recentCalls = this._getLocalRecentCalls(\n      currentContact,\n      calls,\n      dateFrom,\n    );\n\n    // If we could not find enough recent calls,\n    // we need to search for calls on server.\n    if (recentCalls.length < length) {\n      recentCalls = await this._fetchRemoteRecentCalls(\n        currentContact,\n        dateFrom.toISOString(),\n        length,\n      );\n    }\n\n    recentCalls.sort(sortByTime);\n    recentCalls = dedup(recentCalls);\n    return recentCalls.length > length\n      ? recentCalls.slice(0, length)\n      : recentCalls;\n  }\n\n  _getLocalRecentCalls(\n    { phoneNumbers }: Entity,\n    calls: HistoryCall[],\n    dateFrom: Date,\n  ) {\n    // Get all calls related to this contact\n    return calls.reduce((acc, call) => {\n      if (call && call.to && call.from) {\n        const matches = phoneNumbers.find(filterPhoneNumber(call));\n\n        // Check if calls is within certain days\n        if (!!matches && new Date(call.startTime) > dateFrom) {\n          return acc.concat(call);\n        }\n      }\n      return acc;\n    }, [] as HistoryCall[]);\n  }\n\n  /**\n   * Fetch recent calls from server by given current contact.\n   */\n  _fetchRemoteRecentCalls(\n    { phoneNumbers }: Entity,\n    dateFrom: string,\n    length: number,\n  ) {\n    const params = {\n      dateFrom,\n      perPage: length,\n      type: 'Voice',\n    };\n\n    // CallLog API doesn't support plus sign in phoneNumber\n    const recentCallsPromises = phoneNumbers.reduce(\n      (acc, { phoneType, phoneNumber }) => {\n        phoneNumber = phoneNumber.replace('+', '');\n        if (phoneType === phoneTypes.extension) {\n          const promise = this._fetchCallLogList({\n            ...params,\n            extensionNumber: phoneNumber,\n          });\n          return acc.concat(promise);\n        }\n        const promise = this._fetchCallLogList({\n          ...params,\n          phoneNumber,\n        });\n        return acc.concat(promise);\n      },\n      [] as (() => Promise<CallLogResponse>)[],\n    );\n\n    return concurrentExecute(recentCallsPromises, 5, { delay: 500 }).then(\n      flattenToRecords,\n    ) as Promise<HistoryCall[]>;\n  }\n\n  _fetchCallLogList(params: FetchCallLogListOptions) {\n    return async () => {\n      if (!this._deps.auth.loggedIn) {\n        return { records: [] };\n      }\n      return this._deps.client\n        .account()\n        .extension()\n        .callLog()\n        .list(params) as Promise<CallLogResponse>;\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AACA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAD,OAAA;AAEA,IAAAE,WAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,kBAAA,GAAAD,sBAAA,CAAAH,OAAA;AACA,IAAAK,GAAA,GAAAL,OAAA;AACA,IAAAM,YAAA,GAAAH,sBAAA,CAAAH,OAAA;AAEA,IAAAO,WAAA,GAAAP,OAAA;AAQA,IAAAQ,kBAAA,GAAAR,OAAA;AAK6B,IAAAS,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,YAAA;AAAA,SAAAV,uBAAAW,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAE,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,MAAA,CAAAD,IAAA,CAAAF,MAAA,OAAAG,MAAA,CAAAC,qBAAA,QAAAC,OAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAJ,MAAA,CAAAK,wBAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAI,MAAA,CAAAc,MAAA,OAAAC,OAAA,WAAAC,GAAA,IAAAC,eAAA,CAAAP,MAAA,EAAAM,GAAA,EAAAF,MAAA,CAAAE,GAAA,SAAAhB,MAAA,CAAAkB,yBAAA,GAAAlB,MAAA,CAAAmB,gBAAA,CAAAT,MAAA,EAAAV,MAAA,CAAAkB,yBAAA,CAAAJ,MAAA,KAAAlB,OAAA,CAAAI,MAAA,CAAAc,MAAA,GAAAC,OAAA,WAAAC,GAAA,IAAAhB,MAAA,CAAAoB,cAAA,CAAAV,MAAA,EAAAM,GAAA,EAAAhB,MAAA,CAAAK,wBAAA,CAAAS,MAAA,EAAAE,GAAA,iBAAAN,MAAA;AAAA,SAAAO,gBAAAvB,GAAA,EAAAsB,GAAA,EAAAK,KAAA,IAAAL,GAAA,GAAAM,cAAA,CAAAN,GAAA,OAAAA,GAAA,IAAAtB,GAAA,IAAAM,MAAA,CAAAoB,cAAA,CAAA1B,GAAA,EAAAsB,GAAA,IAAAK,KAAA,EAAAA,KAAA,EAAAf,UAAA,QAAAiB,YAAA,QAAAC,QAAA,oBAAA9B,GAAA,CAAAsB,GAAA,IAAAK,KAAA,WAAA3B,GAAA;AAAA,SAAA+B,mBAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAd,GAAA,EAAAe,GAAA,cAAAC,IAAA,GAAAN,GAAA,CAAAV,GAAA,EAAAe,GAAA,OAAAV,KAAA,GAAAW,IAAA,CAAAX,KAAA,WAAAY,KAAA,IAAAL,MAAA,CAAAK,KAAA,iBAAAD,IAAA,CAAAE,IAAA,IAAAP,OAAA,CAAAN,KAAA,YAAAc,OAAA,CAAAR,OAAA,CAAAN,KAAA,EAAAe,IAAA,CAAAP,KAAA,EAAAC,MAAA;AAAA,SAAAO,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAA5B,SAAA,aAAAuB,OAAA,WAAAR,OAAA,EAAAC,MAAA,QAAAF,GAAA,GAAAY,EAAA,CAAA9B,KAAA,CAAA+B,IAAA,EAAAC,IAAA,YAAAX,MAAAR,KAAA,IAAAI,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAT,KAAA,cAAAS,OAAAW,GAAA,IAAAhB,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAW,GAAA,KAAAZ,KAAA,CAAAa,SAAA;AAAA,SAAAC,2BAAAjC,MAAA,EAAAkC,QAAA,EAAAC,UAAA,EAAAC,OAAA,SAAAD,UAAA,UAAA7C,MAAA,CAAAoB,cAAA,CAAAV,MAAA,EAAAkC,QAAA,IAAAtC,UAAA,EAAAuC,UAAA,CAAAvC,UAAA,EAAAiB,YAAA,EAAAsB,UAAA,CAAAtB,YAAA,EAAAC,QAAA,EAAAqB,UAAA,CAAArB,QAAA,EAAAH,KAAA,EAAAwB,UAAA,CAAAE,WAAA,GAAAF,UAAA,CAAAE,WAAA,CAAAC,IAAA,CAAAF,OAAA;AAAA,SAAAG,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAA3C,MAAA,EAAA4C,KAAA,aAAA3C,CAAA,MAAAA,CAAA,GAAA2C,KAAA,CAAAzC,MAAA,EAAAF,CAAA,UAAAkC,UAAA,GAAAS,KAAA,CAAA3C,CAAA,GAAAkC,UAAA,CAAAvC,UAAA,GAAAuC,UAAA,CAAAvC,UAAA,WAAAuC,UAAA,CAAAtB,YAAA,wBAAAsB,UAAA,EAAAA,UAAA,CAAArB,QAAA,SAAAxB,MAAA,CAAAoB,cAAA,CAAAV,MAAA,EAAAY,cAAA,CAAAuB,UAAA,CAAA7B,GAAA,GAAA6B,UAAA;AAAA,SAAAU,aAAAJ,WAAA,EAAAK,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAH,iBAAA,CAAAF,WAAA,CAAAO,SAAA,EAAAF,UAAA,OAAAC,WAAA,EAAAJ,iBAAA,CAAAF,WAAA,EAAAM,WAAA,GAAAzD,MAAA,CAAAoB,cAAA,CAAA+B,WAAA,iBAAA3B,QAAA,mBAAA2B,WAAA;AAAA,SAAA7B,eAAAS,GAAA,QAAAf,GAAA,GAAA2C,YAAA,CAAA5B,GAAA,oBAAA6B,OAAA,CAAA5C,GAAA,iBAAAA,GAAA,GAAA6C,MAAA,CAAA7C,GAAA;AAAA,SAAA2C,aAAAG,KAAA,EAAAC,IAAA,QAAAH,OAAA,CAAAE,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAtB,SAAA,QAAAyB,GAAA,GAAAH,IAAA,CAAAhB,IAAA,CAAAc,KAAA,EAAAC,IAAA,oBAAAH,OAAA,CAAAO,GAAA,uBAAAA,GAAA,YAAAf,SAAA,4DAAAW,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,SAAAO,KAAA,eAAAC,OAAA,oBAAAA,OAAA,CAAAC,GAAA,IAAAF,IAAA,GAAAC,OAAA,CAAAC,GAAA,CAAAC,IAAA,aAAAH,IAAA,YAAAA,KAAA3D,MAAA,EAAAkC,QAAA,EAAA6B,QAAA,QAAAC,IAAA,GAAAC,cAAA,CAAAjE,MAAA,EAAAkC,QAAA,QAAA8B,IAAA,cAAAE,IAAA,GAAA5E,MAAA,CAAAK,wBAAA,CAAAqE,IAAA,EAAA9B,QAAA,OAAAgC,IAAA,CAAAL,GAAA,WAAAK,IAAA,CAAAL,GAAA,CAAAvB,IAAA,CAAApC,SAAA,CAAAC,MAAA,OAAAH,MAAA,GAAA+D,QAAA,YAAAG,IAAA,CAAAvD,KAAA,cAAAgD,IAAA,CAAA7D,KAAA,OAAAI,SAAA;AAAA,SAAA+D,eAAA9E,MAAA,EAAA+C,QAAA,YAAA5C,MAAA,CAAA0D,SAAA,CAAAmB,cAAA,CAAA7B,IAAA,CAAAnD,MAAA,EAAA+C,QAAA,KAAA/C,MAAA,GAAAiF,eAAA,CAAAjF,MAAA,OAAAA,MAAA,2BAAAA,MAAA;AAAA,SAAAkF,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAA7B,SAAA,0DAAA4B,QAAA,CAAAtB,SAAA,GAAA1D,MAAA,CAAAkF,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAvB,SAAA,IAAAyB,WAAA,IAAA9D,KAAA,EAAA2D,QAAA,EAAAxD,QAAA,QAAAD,YAAA,aAAAvB,MAAA,CAAAoB,cAAA,CAAA4D,QAAA,iBAAAxD,QAAA,gBAAAyD,UAAA,EAAAG,eAAA,CAAAJ,QAAA,EAAAC,UAAA;AAAA,SAAAG,gBAAAC,CAAA,EAAAC,CAAA,IAAAF,eAAA,GAAApF,MAAA,CAAAuF,cAAA,GAAAvF,MAAA,CAAAuF,cAAA,CAAAf,IAAA,cAAAY,gBAAAC,CAAA,EAAAC,CAAA,IAAAD,CAAA,CAAAG,SAAA,GAAAF,CAAA,SAAAD,CAAA,YAAAD,eAAA,CAAAC,CAAA,EAAAC,CAAA;AAAA,SAAAG,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAhB,eAAA,CAAAY,OAAA,GAAAK,MAAA,MAAAJ,yBAAA,QAAAK,SAAA,GAAAlB,eAAA,OAAAK,WAAA,EAAAY,MAAA,GAAAzB,OAAA,CAAA2B,SAAA,CAAAH,KAAA,EAAAlF,SAAA,EAAAoF,SAAA,YAAAD,MAAA,GAAAD,KAAA,CAAAtF,KAAA,OAAAI,SAAA,YAAAsF,0BAAA,OAAAH,MAAA;AAAA,SAAAG,2BAAA3D,IAAA,EAAAS,IAAA,QAAAA,IAAA,KAAAY,OAAA,CAAAZ,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAI,SAAA,uEAAA+C,sBAAA,CAAA5D,IAAA;AAAA,SAAA4D,uBAAA5D,IAAA,QAAAA,IAAA,yBAAA6D,cAAA,wEAAA7D,IAAA;AAAA,SAAAqD,0BAAA,eAAAtB,OAAA,qBAAAA,OAAA,CAAA2B,SAAA,oBAAA3B,OAAA,CAAA2B,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAA7C,SAAA,CAAA8C,OAAA,CAAAxD,IAAA,CAAAsB,OAAA,CAAA2B,SAAA,CAAAM,OAAA,8CAAAE,CAAA;AAAA,SAAA3B,gBAAAO,CAAA,IAAAP,eAAA,GAAA9E,MAAA,CAAAuF,cAAA,GAAAvF,MAAA,CAAA0G,cAAA,CAAAlC,IAAA,cAAAM,gBAAAO,CAAA,WAAAA,CAAA,CAAAG,SAAA,IAAAxF,MAAA,CAAA0G,cAAA,CAAArB,CAAA,aAAAP,eAAA,CAAAO,CAAA;AAAA,SAAAsB,0BAAAjG,MAAA,EAAAkC,QAAA,EAAAgE,UAAA,EAAA/D,UAAA,EAAAC,OAAA,QAAA8B,IAAA,OAAA5E,MAAA,CAAAD,IAAA,CAAA8C,UAAA,EAAA9B,OAAA,WAAAC,GAAA,IAAA4D,IAAA,CAAA5D,GAAA,IAAA6B,UAAA,CAAA7B,GAAA,OAAA4D,IAAA,CAAAtE,UAAA,KAAAsE,IAAA,CAAAtE,UAAA,EAAAsE,IAAA,CAAArD,YAAA,KAAAqD,IAAA,CAAArD,YAAA,iBAAAqD,IAAA,IAAAA,IAAA,CAAA7B,WAAA,IAAA6B,IAAA,CAAApD,QAAA,WAAAoD,IAAA,GAAAgC,UAAA,CAAAC,KAAA,GAAAC,OAAA,GAAAC,MAAA,WAAAnC,IAAA,EAAAoC,SAAA,WAAAA,SAAA,CAAAtG,MAAA,EAAAkC,QAAA,EAAAgC,IAAA,KAAAA,IAAA,KAAAA,IAAA,OAAA9B,OAAA,IAAA8B,IAAA,CAAA7B,WAAA,eAAA6B,IAAA,CAAAvD,KAAA,GAAAuD,IAAA,CAAA7B,WAAA,GAAA6B,IAAA,CAAA7B,WAAA,CAAAC,IAAA,CAAAF,OAAA,YAAA8B,IAAA,CAAA7B,WAAA,GAAAL,SAAA,QAAAkC,IAAA,CAAA7B,WAAA,eAAA/C,MAAA,CAAAoB,cAAA,CAAAV,MAAA,EAAAkC,QAAA,EAAAgC,IAAA,GAAAA,IAAA,kBAAAA,IAAA;AAAA,SAAAqC,0BAAApE,UAAA,EAAAC,OAAA,cAAAoE,KAAA;AAAA,IAWhBC,WAAW,IAAA9H,IAAA,GATvB,IAAA+H,UAAM,EAAC;EACNC,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,CACJ,QAAQ,EACR,MAAM,EACN,aAAa,EACb;IAAEC,GAAG,EAAE,oBAAoB;IAAEC,QAAQ,EAAE;EAAK,CAAC;AAEjD,CAAC,CAAC,EAAAnI,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAkI,UAAA;EAAA1C,SAAA,CAAAoC,WAAA,EAAAM,UAAA;EAAA,IAAAC,MAAA,GAAAjC,YAAA,CAAA0B,WAAA;EAEA,SAAAA,YAAYG,IAAU,EAAE;IAAA,IAAAK,KAAA;IAAA1E,eAAA,OAAAkE,WAAA;IACtBQ,KAAA,GAAAD,MAAA,CAAA1E,IAAA,OAAM;MACJsE,IAAI,EAAJA;IACF,CAAC;IAAE3E,0BAAA,CAAAgF,KAAA,WAAAnI,WAAA,EAAA2G,sBAAA,CAAAwB,KAAA;IAAAhF,0BAAA,CAAAgF,KAAA,gBAAAlI,YAAA,EAAA0G,sBAAA,CAAAwB,KAAA;IAAA,OAAAA,KAAA;EACL;EAACpE,YAAA,CAAA4D,WAAA;IAAAnG,GAAA;IAAAK,KAAA,WAAAuG,SAAA,EASU;MACT,IAAI,CAACC,UAAU,GAAGA,sBAAU,CAACC,OAAO;IACtC;EAAC;IAAA9G,GAAA;IAAAK,KAAA,WAAA0G,YAAAC,IAAA,EAG8D;MAAA,IAAjDC,OAAO,GAAAD,IAAA,CAAPC,OAAO;QAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;QAAEC,SAAS,GAAAH,IAAA,CAATG,SAAS;MACrC,IAAI,CAACN,UAAU,GAAGA,sBAAU,CAACO,MAAM;MACnC,IAAMC,SAAS,GAAGxE,MAAM,CAACoE,OAAO,IAAIA,OAAO,CAACK,EAAE,CAAC;MAC/C,IAAI,CAACJ,KAAK,CAACC,SAAS,MAAAI,MAAA,CAAMF,SAAS,OAAAE,MAAA,CAAIJ,SAAS,IAAKE,SAAS,CAAC,GAAGH,KAAK;IACzE;EAAC;IAAAlH,GAAA;IAAAK,KAAA,WAAAmH,aAAAC,KAAA,EAGgE;MAAA,IAAlDR,OAAO,GAAAQ,KAAA,CAAPR,OAAO;QAAAS,eAAA,GAAAD,KAAA,CAAEN,SAAS;QAATA,SAAS,GAAAO,eAAA,cAAG,IAAI,GAAAA,eAAA;MACtC,IAAI,CAACb,UAAU,GAAGA,sBAAU,CAACO,MAAM;MACnC,IAAMC,SAAS,GAAGxE,MAAM,CAACoE,OAAO,IAAIA,OAAO,CAACK,EAAE,CAAC;MAC/C,IAAMA,EAAE,GAAGH,SAAS,MAAAI,MAAA,CAAMF,SAAS,OAAAE,MAAA,CAAIJ,SAAS,IAAKE,SAAS;MAC9D,OAAO,IAAI,CAACH,KAAK,CAACI,EAAE,CAAC;IACvB;EAAC;IAAAtH,GAAA;IAAAK,KAAA;MAAA,IAAAsH,SAAA,GAAAtG,iBAAA,eAAAuG,kBAAA,CAAAC,IAAA,UAAAC,QAAAC,KAAA;QAAA,IAAAC,cAAA,EAAAC,eAAA,EAAAd,SAAA,EAAAE,SAAA,EAAAH,KAAA;QAAA,OAAAU,kBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA;YAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBAOgBN,cAAc,GAAAD,KAAA,CAAdC,cAAc,EAAAC,eAAA,GAAAF,KAAA,CAAEZ,SAAS,EAATA,SAAS,GAAAc,eAAA,cAAG,IAAI,GAAAA,eAAA;gBAAA,IAE1CD,cAAc;kBAAAI,QAAA,CAAAE,IAAA;kBAAA;gBAAA;gBAAA,OAAAF,QAAA,CAAAG,MAAA;cAAA;gBAGblB,SAAS,GAAGxE,MAAM,CAACmF,cAAc,IAAIA,cAAc,CAACV,EAAE,CAAC;gBAAA,KACzD,IAAI,CAACJ,KAAK,CAACC,SAAS,MAAAI,MAAA,CAAMF,SAAS,OAAAE,MAAA,CAAIJ,SAAS,IAAKE,SAAS,CAAC;kBAAAe,QAAA,CAAAE,IAAA;kBAAA;gBAAA;gBAAA,OAAAF,QAAA,CAAAG,MAAA;cAAA;gBAGnE,IAAI,CAAC3B,QAAQ,CAAC,CAAC;gBAACwB,QAAA,CAAAE,IAAA;gBAAA,OACI,IAAI,CAACE,eAAe,CACtCR,cAAc,EACd,IAAI,CAACS,KAAK,CAACC,WAAW,CAACxB,KACzB,CAAC;cAAA;gBAHKA,KAAK,GAAAkB,QAAA,CAAAO,IAAA;gBAIX,IAAI,CAAC5B,WAAW,CAAC;kBACfG,KAAK,EAALA,KAAK;kBACLD,OAAO,EAAEe,cAAc;kBACvBb,SAAS,EAATA;gBACF,CAAC,CAAC;cAAC;cAAA;gBAAA,OAAAiB,QAAA,CAAAQ,IAAA;YAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;MAAA,SAAAe,SAAAC,EAAA;QAAA,OAAAnB,SAAA,CAAAnI,KAAA,OAAAI,SAAA;MAAA;MAAA,OAAAiJ,QAAA;IAAA;EAAA;IAAA7I,GAAA;IAAAK,KAAA,WAAA0I,YAAA,EAGkB;MACrB,OAAO,CAAC,EAAE1F,IAAA,CAAAS,eAAA,CAAAqC,WAAA,CAAAzD,SAAA,wBAAAV,IAAA,UAAuB,IAAI,CAACyG,KAAK,CAACO,IAAI,CAACC,QAAQ,CAAC;IAC5D;EAAC;IAAAjJ,GAAA;IAAAK,KAAA,WAAA6I,aAAA,EAEuB;MACtB,OAAO,CAAC,EACN7F,IAAA,CAAAS,eAAA,CAAAqC,WAAA,CAAAzD,SAAA,yBAAAV,IAAA,UACC,IAAI,CAACmH,KAAK,IAAI,CAAC,IAAI,CAACV,KAAK,CAACO,IAAI,CAACC,QAAS,CAC1C;IACH;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAjJ,GAAA;IAAAK,KAAA;MAAA,IAAA+I,gBAAA,GAAA/H,iBAAA,eAAAuG,kBAAA,CAAAC,IAAA,UAAAwB,SAUErB,cAAsB;QAAA,IAAAd,KAAA;UAAAoC,OAAA;UAAAzJ,MAAA;UAAA0J,QAAA;UAAAC,WAAA;UAAAC,MAAA,GAAA7J,SAAA;QAAA,OAAAgI,kBAAA,CAAAM,IAAA,UAAAwB,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAtB,IAAA,GAAAsB,SAAA,CAAArB,IAAA;cAAA;gBACtBpB,KAAoB,GAAAuC,MAAA,CAAA5J,MAAA,QAAA4J,MAAA,QAAA/H,SAAA,GAAA+H,MAAA,MAAG,EAAE;gBACzBH,OAAO,GAAAG,MAAA,CAAA5J,MAAA,QAAA4J,MAAA,QAAA/H,SAAA,GAAA+H,MAAA,MAAG,EAAE;gBACZ5J,MAAM,GAAA4J,MAAA,CAAA5J,MAAA,QAAA4J,MAAA,QAAA/H,SAAA,GAAA+H,MAAA,MAAG,CAAC;gBAEJF,QAAQ,GAAG,IAAAK,uBAAW,EAACN,OAAO,CAAC;gBACjCE,WAAW,GAAG,IAAI,CAACK,oBAAoB,CACzC7B,cAAc,EACdd,KAAK,EACLqC,QACF,CAAC,EAED;gBACA;gBAAA,MACIC,WAAW,CAAC3J,MAAM,GAAGA,MAAM;kBAAA8J,SAAA,CAAArB,IAAA;kBAAA;gBAAA;gBAAAqB,SAAA,CAAArB,IAAA;gBAAA,OACT,IAAI,CAACwB,uBAAuB,CAC9C9B,cAAc,EACduB,QAAQ,CAACQ,WAAW,CAAC,CAAC,EACtBlK,MACF,CAAC;cAAA;gBAJD2J,WAAW,GAAAG,SAAA,CAAAhB,IAAA;cAAA;gBAOba,WAAW,CAACQ,IAAI,CAACC,6BAAU,CAAC;gBAC5BT,WAAW,GAAG,IAAAU,wBAAK,EAACV,WAAW,CAAC;gBAAC,OAAAG,SAAA,CAAApB,MAAA,WAC1BiB,WAAW,CAAC3J,MAAM,GAAGA,MAAM,GAC9B2J,WAAW,CAAC3D,KAAK,CAAC,CAAC,EAAEhG,MAAM,CAAC,GAC5B2J,WAAW;cAAA;cAAA;gBAAA,OAAAG,SAAA,CAAAf,IAAA;YAAA;UAAA;QAAA,GAAAS,QAAA;MAAA;MAAA,SAAAb,gBAAA2B,GAAA;QAAA,OAAAf,gBAAA,CAAA5J,KAAA,OAAAI,SAAA;MAAA;MAAA,OAAA4I,eAAA;IAAA;EAAA;IAAAxI,GAAA;IAAAK,KAAA,WAAAwJ,qBAAAO,KAAA,EAKflD,KAAoB,EACpBqC,QAAc,EACd;MAAA,IAHEc,YAAY,GAAAD,KAAA,CAAZC,YAAY;MAId;MACA,OAAOnD,KAAK,CAACnB,MAAM,CAAC,UAACuE,GAAG,EAAEtI,IAAI,EAAK;QACjC,IAAIA,IAAI,IAAIA,IAAI,CAACuI,EAAE,IAAIvI,IAAI,CAACwI,IAAI,EAAE;UAChC,IAAMC,OAAO,GAAGJ,YAAY,CAACK,IAAI,CAAC,IAAAC,oCAAiB,EAAC3I,IAAI,CAAC,CAAC;;UAE1D;UACA,IAAI,CAAC,CAACyI,OAAO,IAAI,IAAIG,IAAI,CAAC5I,IAAI,CAAC6I,SAAS,CAAC,GAAGtB,QAAQ,EAAE;YACpD,OAAOe,GAAG,CAAC/C,MAAM,CAACvF,IAAI,CAAC;UACzB;QACF;QACA,OAAOsI,GAAG;MACZ,CAAC,EAAE,EAAmB,CAAC;IACzB;IAEA;AACF;AACA;EAFE;IAAAtK,GAAA;IAAAK,KAAA,WAAAyJ,wBAAAgB,KAAA,EAKEvB,QAAgB,EAChB1J,MAAc,EACd;MAAA,IAAAkL,MAAA;MAAA,IAHEV,YAAY,GAAAS,KAAA,CAAZT,YAAY;MAId,IAAMW,MAAM,GAAG;QACbzB,QAAQ,EAARA,QAAQ;QACR0B,OAAO,EAAEpL,MAAM;QACfqL,IAAI,EAAE;MACR,CAAC;;MAED;MACA,IAAMC,mBAAmB,GAAGd,YAAY,CAACtE,MAAM,CAC7C,UAACuE,GAAG,EAAAc,KAAA,EAAiC;QAAA,IAA7BC,SAAS,GAAAD,KAAA,CAATC,SAAS;UAAEC,WAAW,GAAAF,KAAA,CAAXE,WAAW;QAC5BA,WAAW,GAAGA,WAAW,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;QAC1C,IAAIF,SAAS,KAAKG,sBAAU,CAACC,SAAS,EAAE;UACtC,IAAMC,QAAO,GAAGX,MAAI,CAACY,iBAAiB,CAAAlM,aAAA,CAAAA,aAAA,KACjCuL,MAAM;YACTY,eAAe,EAAEN;UAAW,EAC7B,CAAC;UACF,OAAOhB,GAAG,CAAC/C,MAAM,CAACmE,QAAO,CAAC;QAC5B;QACA,IAAMA,OAAO,GAAGX,MAAI,CAACY,iBAAiB,CAAAlM,aAAA,CAAAA,aAAA,KACjCuL,MAAM;UACTM,WAAW,EAAXA;QAAW,EACZ,CAAC;QACF,OAAOhB,GAAG,CAAC/C,MAAM,CAACmE,OAAO,CAAC;MAC5B,CAAC,EACD,EACF,CAAC;MAED,OAAO,IAAAG,6BAAiB,EAACV,mBAAmB,EAAE,CAAC,EAAE;QAAEW,KAAK,EAAE;MAAI,CAAC,CAAC,CAAC1K,IAAI,CACnE2K,mCACF,CAAC;IACH;EAAC;IAAA/L,GAAA;IAAAK,KAAA,WAAAsL,kBAEiBX,MAA+B,EAAE;MAAA,IAAAgB,MAAA;MACjD,oBAAA3K,iBAAA,eAAAuG,kBAAA,CAAAC,IAAA,CAAO,SAAAoE,SAAA;QAAA,OAAArE,kBAAA,CAAAM,IAAA,UAAAgE,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAA9D,IAAA,GAAA8D,SAAA,CAAA7D,IAAA;cAAA;gBAAA,IACA0D,MAAI,CAACvD,KAAK,CAACO,IAAI,CAACC,QAAQ;kBAAAkD,SAAA,CAAA7D,IAAA;kBAAA;gBAAA;gBAAA,OAAA6D,SAAA,CAAA5D,MAAA,WACpB;kBAAE6D,OAAO,EAAE;gBAAG,CAAC;cAAA;gBAAA,OAAAD,SAAA,CAAA5D,MAAA,WAEjByD,MAAI,CAACvD,KAAK,CAAC4D,MAAM,CACrBC,OAAO,CAAC,CAAC,CACTb,SAAS,CAAC,CAAC,CACXc,OAAO,CAAC,CAAC,CACTC,IAAI,CAACxB,MAAM,CAAC;cAAA;cAAA;gBAAA,OAAAmB,SAAA,CAAAvD,IAAA;YAAA;UAAA;QAAA,GAAAqD,QAAA;MAAA,CAChB;IACH;EAAC;IAAAjM,GAAA;IAAAuD,GAAA,WAAAA,IAAA,EAjJmB;MAClB,OAAO,IAAI,CAACsD,UAAU,KAAKA,sBAAU,CAACO,MAAM;IAC9C;EAAC;EAAA,OAAAjB,WAAA;AAAA,EAnC8BsG,gBAAU,IAAAjO,WAAA,GAAAmH,yBAAA,CAAApH,OAAA,CAAAmE,SAAA,YAOxCgK,WAAK;EAAAnM,YAAA;EAAAjB,UAAA;EAAAkB,QAAA;EAAAuB,WAAA,WAAAA,YAAA;IAAA,OACiC,CAAC,CAAC;EAAA;AAAA,IAAAtD,YAAA,GAAAkH,yBAAA,CAAApH,OAAA,CAAAmE,SAAA,iBAExCgK,WAAK;EAAAnM,YAAA;EAAAjB,UAAA;EAAAkB,QAAA;EAAAuB,WAAA,WAAAA,YAAA;IAAA,OACsB,IAAI;EAAA;AAAA,IAAA4D,yBAAA,CAAApH,OAAA,CAAAmE,SAAA,eAE/BiK,YAAM,GAAA3N,MAAA,CAAAK,wBAAA,CAAAd,OAAA,CAAAmE,SAAA,eAAAnE,OAAA,CAAAmE,SAAA,GAAAiD,yBAAA,CAAApH,OAAA,CAAAmE,SAAA,kBAKNiK,YAAM,GAAA3N,MAAA,CAAAK,wBAAA,CAAAd,OAAA,CAAAmE,SAAA,kBAAAnE,OAAA,CAAAmE,SAAA,GAAAiD,yBAAA,CAAApH,OAAA,CAAAmE,SAAA,mBAONiK,YAAM,GAAA3N,MAAA,CAAAK,wBAAA,CAAAd,OAAA,CAAAmE,SAAA,mBAAAnE,OAAA,CAAAmE,SAAA,GAAAiD,yBAAA,CAAApH,OAAA,CAAAmE,SAAA,eAYNkK,sBAAU,GAAA5N,MAAA,CAAAK,wBAAA,CAAAd,OAAA,CAAAmE,SAAA,eAAAnE,OAAA,CAAAmE,SAAA,IAAAnE,OAAA,MAAAD,MAAA;AAAAuO,OAAA,CAAA1G,WAAA,GAAAA,WAAA"}