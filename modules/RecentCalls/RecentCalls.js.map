{"version":3,"file":"RecentCalls.js","names":["_core","require","_phoneTypes","_background","_interopRequireDefault","_concurrentExecute","_di","_getDateFrom","_RecentCallsHelper","_callStatus","_dec","_class","_class2","_descriptor","_descriptor2","e","__esModule","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","asyncGeneratorStep","n","a","c","i","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","_initializerDefineProperty","l","initializer","call","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_get","Reflect","get","bind","p","_superPropBase","hasOwnProperty","_getPrototypeOf","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","_isNativeReflectConstruct","s","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","slice","reverse","reduce","_initializerWarningHelper","Error","RecentCalls","Module","name","deps","dep","optional","_RcModuleV","_super","_this","initLoad","callStatus","loading","loadSuccess","_ref","contact","calls","sessionId","loaded","contactId","id","concat","cleanUpCalls","_ref2","_ref2$sessionId","_getCalls","regeneratorRuntime","mark","_callee","_ref3","currentContact","_ref3$sessionId","wrap","_callee$","_context","prev","next","abrupt","_getRecentCalls","_deps","callHistory","sent","stop","getCalls","_x","_shouldInit","auth","loggedIn","_shouldReset","ready","_getRecentCalls2","_callee2","daySpan","dateFrom","recentCalls","_args2","_callee2$","_context2","undefined","getDateFrom","_getLocalRecentCalls","_fetchRemoteRecentCalls","toISOString","sort","sortByTime","dedup","_x2","_ref4","phoneNumbers","acc","to","from","matches","find","filterPhoneNumber","Date","startTime","_ref5","_this2","params","perPage","type","recentCallsPromises","_ref6","phoneType","phoneNumber","replace","phoneTypes","extension","promise","_fetchCallLogList","extensionNumber","concurrentExecute","delay","flattenToRecords","_this3","_callee3","_callee3$","_context3","records","client","account","callLog","list","RcModuleV2","state","action","background","exports"],"sources":["modules/RecentCalls/RecentCalls.ts"],"sourcesContent":["import type CallLogResponse from '@rc-ex/core/lib/definitions/CallLogResponse';\nimport { action, RcModuleV2, state } from '@ringcentral-integration/core';\n\nimport { phoneTypes } from '../../enums/phoneTypes';\nimport type { Entity } from '../../interfaces/Entity.interface';\nimport background from '../../lib/background';\nimport concurrentExecute from '../../lib/concurrentExecute';\nimport { Module } from '../../lib/di';\nimport getDateFrom from '../../lib/getDateFrom';\nimport type { HistoryCall } from '../CallHistory';\n\nimport type {\n  CleanUpCallsOptions,\n  Deps,\n  FetchCallLogListOptions,\n  GetCallsOptions,\n  LoadSuccessOptions,\n} from './RecentCalls.interface';\nimport {\n  dedup,\n  filterPhoneNumber,\n  flattenToRecords,\n  sortByTime,\n} from './RecentCallsHelper';\nimport { callStatus } from './callStatus';\n\n@Module({\n  name: 'RecentCalls',\n  deps: [\n    'Client',\n    'Auth',\n    'CallHistory',\n    { dep: 'RecentCallsOptions', optional: true },\n  ],\n})\nexport class RecentCalls extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  @state\n  calls: Record<string, HistoryCall[]> = {};\n\n  @state\n  callStatus: string | null = null;\n\n  @action\n  initLoad() {\n    this.callStatus = callStatus.loading;\n  }\n\n  @action\n  loadSuccess({ contact, calls, sessionId }: LoadSuccessOptions) {\n    this.callStatus = callStatus.loaded;\n    const contactId = String(contact && contact.id);\n    this.calls[sessionId ? `${contactId}-${sessionId}` : contactId] = calls;\n  }\n\n  @action\n  cleanUpCalls({ contact, sessionId = null }: CleanUpCallsOptions) {\n    this.callStatus = callStatus.loaded;\n    const contactId = String(contact && contact.id);\n    const id = sessionId ? `${contactId}-${sessionId}` : contactId;\n    delete this.calls[id];\n  }\n\n  get isCallsLoaded() {\n    return this.callStatus === callStatus.loaded;\n  }\n\n  @background\n  async getCalls({ currentContact, sessionId = null }: GetCallsOptions) {\n    // No need to calculate recent calls of the same contact repeatedly\n    if (!currentContact) {\n      return;\n    }\n    const contactId = String(currentContact && currentContact.id);\n    if (this.calls[sessionId ? `${contactId}-${sessionId}` : contactId]) {\n      return;\n    }\n    this.initLoad();\n    const calls = await this._getRecentCalls(\n      currentContact,\n      this._deps.callHistory.calls,\n    );\n    this.loadSuccess({\n      calls,\n      contact: currentContact,\n      sessionId,\n    });\n  }\n\n  override _shouldInit() {\n    return !!(super._shouldInit() && this._deps.auth.loggedIn);\n  }\n\n  override _shouldReset() {\n    return !!(\n      super._shouldReset() ||\n      (this.ready && !this._deps.auth.loggedIn)\n    );\n  }\n\n  /**\n   * Searching for recent calls of specific contact.\n   * @param {Object} currentContact Current contact\n   * @param {Array} calls Calls in callHistory\n   * @param {Number} daySpan Find calls within certain days\n   * @param {Number} length Maximum length of recent calls\n   * @return {Array}\n   * @private\n   */\n  async _getRecentCalls(\n    currentContact: Entity,\n    calls: HistoryCall[] = [],\n    daySpan = 60,\n    length = 5,\n  ) {\n    const dateFrom = getDateFrom(daySpan);\n    let recentCalls = this._getLocalRecentCalls(\n      currentContact,\n      calls,\n      dateFrom,\n    );\n\n    // If we could not find enough recent calls,\n    // we need to search for calls on server.\n    if (recentCalls.length < length) {\n      recentCalls = await this._fetchRemoteRecentCalls(\n        currentContact,\n        dateFrom.toISOString(),\n        length,\n      );\n    }\n\n    recentCalls.sort(sortByTime);\n    recentCalls = dedup(recentCalls);\n    return recentCalls.length > length\n      ? recentCalls.slice(0, length)\n      : recentCalls;\n  }\n\n  _getLocalRecentCalls(\n    { phoneNumbers }: Entity,\n    calls: HistoryCall[],\n    dateFrom: Date,\n  ) {\n    // Get all calls related to this contact\n    return calls.reduce((acc, call) => {\n      if (call && call.to && call.from) {\n        // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n        const matches = phoneNumbers.find(filterPhoneNumber(call));\n\n        // Check if calls is within certain days\n        // @ts-expect-error TS(2769): No overload matches this call.\n        if (!!matches && new Date(call.startTime) > dateFrom) {\n          return acc.concat(call);\n        }\n      }\n      return acc;\n    }, [] as HistoryCall[]);\n  }\n\n  /**\n   * Fetch recent calls from server by given current contact.\n   */\n  _fetchRemoteRecentCalls(\n    { phoneNumbers }: Entity,\n    dateFrom: string,\n    length: number,\n  ) {\n    const params = {\n      dateFrom,\n      perPage: length,\n      type: 'Voice',\n    };\n\n    // CallLog API doesn't support plus sign in phoneNumber\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const recentCallsPromises = phoneNumbers.reduce(\n      (acc, { phoneType, phoneNumber }) => {\n        phoneNumber = phoneNumber.replace('+', '');\n        if (phoneType === phoneTypes.extension) {\n          const promise = this._fetchCallLogList({\n            ...params,\n            extensionNumber: phoneNumber,\n          });\n          return acc.concat(promise);\n        }\n        const promise = this._fetchCallLogList({\n          ...params,\n          phoneNumber,\n        });\n        return acc.concat(promise);\n      },\n      [] as (() => Promise<CallLogResponse>)[],\n    );\n\n    return concurrentExecute(recentCallsPromises, 5, { delay: 500 }).then(\n      flattenToRecords,\n    ) as Promise<HistoryCall[]>;\n  }\n\n  _fetchCallLogList(params: FetchCallLogListOptions) {\n    return async () => {\n      if (!this._deps.auth.loggedIn) {\n        return { records: [] };\n      }\n      return this._deps.client\n        .account()\n        .extension()\n        .callLog()\n        .list(params) as Promise<CallLogResponse>;\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}