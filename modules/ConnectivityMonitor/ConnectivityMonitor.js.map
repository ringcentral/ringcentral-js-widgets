{"version":3,"file":"ConnectivityMonitor.js","names":["_core","require","_di","_proxify","_AvailabilityMonitor","_RateLimiter","_dec","_class","_class2","_descriptor","_descriptor2","_initializerDefineProperty","e","i","r","l","Object","defineProperty","enumerable","configurable","writable","value","initializer","call","_classCallCheck","a","n","TypeError","_defineProperties","t","length","o","_toPropertyKey","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","keys","forEach","slice","reverse","reduce","_initializerWarningHelper","Error","asyncGeneratorStep","c","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","DEFAULT_TIME_TO_RETRY","exports","DEFAULT_HEART_BEAT_INTERVAL","errorMessageTypes","rateLimiterErrorMessage","rateLimitReached","errorMessages","serviceLimited","defaultCheckConnectionFn","_defaultCheckConnectionFn","regeneratorRuntime","mark","_callee3","wrap","_callee3$","_context3","prev","next","abrupt","fetch","stop","ConnectivityMonitor","Module","name","deps","dep","optional","_RcModuleV","_super","_this$_deps$connectiv","_this$_deps$connectiv2","_this$_deps$connectiv3","_this$_deps$connectiv4","_this","_timeToRetry","_deps","connectivityMonitorOptions","timeToRetry","_heartBeatInterval","heartBeatInterval","_checkConnectionFunc","_callee","_this$_deps$connectiv5","_this$_deps$connectiv6","checkConnectionFunc","_callee$","_context","_requestSuccessHandler","t0","_requestErrorHandler","_retryTimeoutId","_lastEnvironmentCounter","_unbindHandlers","connectivity","setConnectSuccess","_retry","error","message","includes","response","setConnectFail","_networkErrorHandler","networkLoss","setNetworkLoss","_shouldInit","pending","environment","ready","_shouldRebindHandlers","_this$_deps$environme","changeCounter","onInit","_bindHandlers","onInitSuccess","onStateChange","_this$_unbindHandlers","_window","_this2","client","service","on","events","requestSuccess","requestError","window","addEventListener","_window2","removeListener","removeEventListener","_checkConnection2","_callee2","_callee2$","_context2","_checkConnection","_clearTimeout","clearTimeout","_this3","undefined","setTimeout","RcModuleV2","state","action","getOwnPropertyDescriptor","proxify"],"sources":["modules/ConnectivityMonitor/ConnectivityMonitor.ts"],"sourcesContent":["import { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport type { ApiError } from '@ringcentral/sdk';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { errorMessages } from '../AvailabilityMonitor';\nimport { errorMessages as rateLimiterErrorMessage } from '../RateLimiter';\n\nimport type { Deps } from './ConnectivityMonitor.interface';\n\nexport const DEFAULT_TIME_TO_RETRY = 5 * 1000;\nexport const DEFAULT_HEART_BEAT_INTERVAL = 60 * 1000;\n\nconst errorMessageTypes = [\n  rateLimiterErrorMessage.rateLimitReached,\n  errorMessages.serviceLimited,\n];\n\nasync function defaultCheckConnectionFn() {\n  return fetch('https://pubsub.pubnub.com/time/0');\n}\n\n@Module({\n  name: 'ConnectivityMonitor',\n  deps: [\n    'Client',\n    { dep: 'Environment', optional: true },\n    { dep: 'ConnectivityMonitorOptions', optional: true },\n  ],\n})\nexport class ConnectivityMonitor extends RcModuleV2<Deps> {\n  protected _timeToRetry =\n    this._deps.connectivityMonitorOptions?.timeToRetry ?? DEFAULT_TIME_TO_RETRY;\n\n  protected _heartBeatInterval =\n    this._deps.connectivityMonitorOptions?.heartBeatInterval ??\n    DEFAULT_HEART_BEAT_INTERVAL;\n\n  _checkConnectionFunc = async () => {\n    try {\n      const checkConnectionFunc =\n        this._deps.connectivityMonitorOptions?.checkConnectionFunc ??\n        defaultCheckConnectionFn;\n      await checkConnectionFunc();\n      this._requestSuccessHandler();\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      this._requestErrorHandler(error);\n    }\n  };\n\n  protected _retryTimeoutId: NodeJS.Timeout | null = null;\n\n  protected _lastEnvironmentCounter = 0;\n\n  _unbindHandlers?: (() => void) | null = null;\n\n  _requestSuccessHandler = () => {\n    if (!this.connectivity) {\n      this.setConnectSuccess();\n    }\n    this._retry();\n  };\n\n  _requestErrorHandler = (error: ApiError) => {\n    if (error.message && errorMessageTypes.includes(error.message)) return;\n\n    if (!error.response && this.connectivity) {\n      this.setConnectFail();\n    }\n\n    this._retry();\n  };\n\n  protected _networkErrorHandler = () => {\n    if (!this.networkLoss) {\n      this.setNetworkLoss();\n    }\n    this._retry();\n  };\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  @state\n  connectivity = true;\n\n  @state\n  networkLoss = false;\n\n  @action\n  setNetworkLoss() {\n    this.connectivity = false;\n    this.networkLoss = true;\n  }\n\n  @action\n  setConnectSuccess() {\n    this.connectivity = true;\n    this.networkLoss = false;\n  }\n\n  @action\n  setConnectFail() {\n    this.connectivity = false;\n  }\n\n  override _shouldInit() {\n    return !!(\n      this.pending &&\n      (!this._deps.environment || this._deps.environment.ready)\n    );\n  }\n\n  _shouldRebindHandlers() {\n    return !!(\n      this.ready &&\n      this._deps.environment?.ready &&\n      this._deps.environment.changeCounter !== this._lastEnvironmentCounter\n    );\n  }\n\n  override onInit() {\n    this._bindHandlers();\n  }\n\n  override onInitSuccess() {\n    this._retry();\n  }\n\n  override onStateChange() {\n    if (!this._shouldInit() && this._shouldRebindHandlers()) {\n      if (this._deps.environment) {\n        this._lastEnvironmentCounter = this._deps.environment.changeCounter;\n      }\n\n      this._bindHandlers();\n    }\n  }\n\n  _bindHandlers() {\n    this._unbindHandlers?.();\n    const client = this._deps.client.service.client();\n    client.on(client.events.requestSuccess, this._requestSuccessHandler);\n    client.on(client.events.requestError, this._requestErrorHandler);\n    window?.addEventListener('offline', this._networkErrorHandler);\n    this._unbindHandlers = () => {\n      client.removeListener(\n        client.events.requestSuccess,\n        this._requestSuccessHandler,\n      );\n      client.removeListener(\n        client.events.requestError,\n        this._requestErrorHandler,\n      );\n      window?.removeEventListener('offline', this._networkErrorHandler);\n      this._unbindHandlers = null;\n    };\n  }\n\n  @proxify\n  async _checkConnection() {\n    try {\n      await this._checkConnectionFunc();\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      // catch error\n    }\n  }\n\n  _clearTimeout() {\n    if (this._retryTimeoutId) {\n      clearTimeout(this._retryTimeoutId);\n      this._retryTimeoutId = null;\n    }\n  }\n\n  _retry(t = this.connectivity ? this._heartBeatInterval : this._timeToRetry) {\n    this._clearTimeout();\n\n    this._retryTimeoutId = setTimeout(() => {\n      this._retryTimeoutId = null;\n      this._checkConnection();\n    }, t);\n  }\n}\n"],"mappings":"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","ignoreList":[]}