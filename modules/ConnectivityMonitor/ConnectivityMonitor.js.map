{"version":3,"file":"ConnectivityMonitor.js","names":["require","_core","_di","_proxify","_AvailabilityMonitor","_RateLimiter","_dec","_class","_class2","_descriptor","_descriptor2","_initializerDefineProperty","target","property","descriptor","context","Object","defineProperty","enumerable","configurable","writable","value","initializer","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","length","_toPropertyKey","key","_createClass","protoProps","staticProps","prototype","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","desc","keys","forEach","slice","reverse","reduce","decorator","_initializerWarningHelper","Error","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","error","done","Promise","then","_asyncToGenerator","fn","args","err","DEFAULT_TIME_TO_RETRY","exports","DEFAULT_HEART_BEAT_INTERVAL","errorMessageTypes","rateLimiterErrorMessage","rateLimitReached","errorMessages","serviceLimited","defaultCheckConnectionFn","_defaultCheckConnectionFn","regeneratorRuntime","mark","_callee3","wrap","_callee3$","_context3","prev","next","abrupt","fetch","stop","ConnectivityMonitor","Module","name","deps","dep","optional","_RcModuleV","_super","_this$_deps$connectiv","_this$_deps$connectiv2","_this$_deps$connectiv3","_this$_deps$connectiv4","_this","_timeToRetry","_deps","connectivityMonitorOptions","timeToRetry","_heartBeatInterval","heartBeatInterval","_checkConnectionFunc","_callee","_this$_deps$connectiv5","_this$_deps$connectiv6","checkConnectionFunc","_callee$","_context","_requestSuccessHandler","t0","_requestErrorHandler","_retryTimeoutId","_lastEnvironmentCounter","_unbindHandlers","connectivity","setConnectSuccess","_retry","message","includes","response","setConnectFail","_networkErrorHandler","networkLoss","setNetworkLoss","_shouldInit","pending","environment","ready","_shouldRebindHandlers","_this$_deps$environme","changeCounter","onInit","_bindHandlers","onInitSuccess","onStateChange","_this$_unbindHandlers","_window","_this2","client","service","on","events","requestSuccess","requestError","window","addEventListener","_window2","removeListener","removeEventListener","_checkConnection2","_callee2","_callee2$","_context2","_checkConnection","_clearTimeout","clearTimeout","_this3","t","setTimeout","RcModuleV2","state","action","getOwnPropertyDescriptor","proxify"],"sources":["modules/ConnectivityMonitor/ConnectivityMonitor.ts"],"sourcesContent":["import 'isomorphic-fetch';\n\nimport { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport type { ApiError } from '@ringcentral/sdk';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { errorMessages } from '../AvailabilityMonitor';\nimport { errorMessages as rateLimiterErrorMessage } from '../RateLimiter';\nimport type { Deps } from './ConnectivityMonitor.interface';\n\nexport const DEFAULT_TIME_TO_RETRY = 5 * 1000;\nexport const DEFAULT_HEART_BEAT_INTERVAL = 60 * 1000;\n\nconst errorMessageTypes = [\n  rateLimiterErrorMessage.rateLimitReached,\n  errorMessages.serviceLimited,\n];\n\nasync function defaultCheckConnectionFn() {\n  return fetch('https://pubsub.pubnub.com/time/0');\n}\n\n@Module({\n  name: 'ConnectivityMonitor',\n  deps: [\n    'Client',\n    { dep: 'Environment', optional: true },\n    { dep: 'ConnectivityMonitorOptions', optional: true },\n  ],\n})\nexport class ConnectivityMonitor extends RcModuleV2<Deps> {\n  protected _timeToRetry =\n    this._deps.connectivityMonitorOptions?.timeToRetry ?? DEFAULT_TIME_TO_RETRY;\n\n  protected _heartBeatInterval =\n    this._deps.connectivityMonitorOptions?.heartBeatInterval ??\n    DEFAULT_HEART_BEAT_INTERVAL;\n\n  protected _checkConnectionFunc = async () => {\n    try {\n      const checkConnectionFunc =\n        this._deps.connectivityMonitorOptions?.checkConnectionFunc ??\n        defaultCheckConnectionFn;\n      await checkConnectionFunc();\n      this._requestSuccessHandler();\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      this._requestErrorHandler(error);\n    }\n  };\n\n  protected _retryTimeoutId: NodeJS.Timeout | null = null;\n\n  protected _lastEnvironmentCounter = 0;\n\n  private _unbindHandlers?: (() => void) | null = null;\n\n  protected _requestSuccessHandler = () => {\n    if (!this.connectivity) {\n      this.setConnectSuccess();\n    }\n    this._retry();\n  };\n\n  protected _requestErrorHandler = (error: ApiError) => {\n    if (error.message && errorMessageTypes.includes(error.message)) return;\n\n    if (!error.response && this.connectivity) {\n      this.setConnectFail();\n    }\n\n    this._retry();\n  };\n\n  protected _networkErrorHandler = () => {\n    if (!this.networkLoss) {\n      this.setNetworkLoss();\n    }\n    this._retry();\n  };\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  @state\n  connectivity = true;\n\n  @state\n  networkLoss = false;\n\n  @action\n  setNetworkLoss() {\n    this.connectivity = false;\n    this.networkLoss = true;\n  }\n\n  @action\n  setConnectSuccess() {\n    this.connectivity = true;\n    this.networkLoss = false;\n  }\n\n  @action\n  setConnectFail() {\n    this.connectivity = false;\n  }\n\n  override _shouldInit() {\n    return !!(\n      this.pending &&\n      (!this._deps.environment || this._deps.environment.ready)\n    );\n  }\n\n  _shouldRebindHandlers() {\n    return !!(\n      this.ready &&\n      this._deps.environment?.ready &&\n      this._deps.environment.changeCounter !== this._lastEnvironmentCounter\n    );\n  }\n\n  override onInit() {\n    this._bindHandlers();\n  }\n\n  override onInitSuccess() {\n    this._retry();\n  }\n\n  override onStateChange() {\n    if (!this._shouldInit() && this._shouldRebindHandlers()) {\n      if (this._deps.environment) {\n        this._lastEnvironmentCounter = this._deps.environment.changeCounter;\n      }\n\n      this._bindHandlers();\n    }\n  }\n\n  _bindHandlers() {\n    this._unbindHandlers?.();\n    const client = this._deps.client.service.client();\n    client.on(client.events.requestSuccess, this._requestSuccessHandler);\n    client.on(client.events.requestError, this._requestErrorHandler);\n    window?.addEventListener('offline', this._networkErrorHandler);\n    this._unbindHandlers = () => {\n      client.removeListener(\n        client.events.requestSuccess,\n        this._requestSuccessHandler,\n      );\n      client.removeListener(\n        client.events.requestError,\n        this._requestErrorHandler,\n      );\n      window?.removeEventListener('offline', this._networkErrorHandler);\n      this._unbindHandlers = null;\n    };\n  }\n\n  @proxify\n  async _checkConnection() {\n    try {\n      await this._checkConnectionFunc();\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      // catch error\n    }\n  }\n\n  _clearTimeout() {\n    if (this._retryTimeoutId) {\n      clearTimeout(this._retryTimeoutId);\n      this._retryTimeoutId = null;\n    }\n  }\n\n  _retry(t = this.connectivity ? this._heartBeatInterval : this._timeToRetry) {\n    this._clearTimeout();\n\n    this._retryTimeoutId = setTimeout(() => {\n      this._retryTimeoutId = null;\n      this._checkConnection();\n    }, t);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAAAA,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AAGA,IAAAE,GAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AACA,IAAAI,oBAAA,GAAAJ,OAAA;AACA,IAAAK,YAAA,GAAAL,OAAA;AAA0E,IAAAM,IAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,YAAA;AAAA,SAAAC,2BAAAC,MAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,OAAA,SAAAD,UAAA,UAAAE,MAAA,CAAAC,cAAA,CAAAL,MAAA,EAAAC,QAAA,IAAAK,UAAA,EAAAJ,UAAA,CAAAI,UAAA,EAAAC,YAAA,EAAAL,UAAA,CAAAK,YAAA,EAAAC,QAAA,EAAAN,UAAA,CAAAM,QAAA,EAAAC,KAAA,EAAAP,UAAA,CAAAQ,WAAA,GAAAR,UAAA,CAAAQ,WAAA,CAAAC,IAAA,CAAAR,OAAA;AAAA,SAAAS,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAAhB,MAAA,EAAAiB,KAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAhB,UAAA,GAAAe,KAAA,CAAAC,CAAA,GAAAhB,UAAA,CAAAI,UAAA,GAAAJ,UAAA,CAAAI,UAAA,WAAAJ,UAAA,CAAAK,YAAA,wBAAAL,UAAA,EAAAA,UAAA,CAAAM,QAAA,SAAAJ,MAAA,CAAAC,cAAA,CAAAL,MAAA,EAAAoB,cAAA,CAAAlB,UAAA,CAAAmB,GAAA,GAAAnB,UAAA;AAAA,SAAAoB,aAAAR,WAAA,EAAAS,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAP,iBAAA,CAAAF,WAAA,CAAAW,SAAA,EAAAF,UAAA,OAAAC,WAAA,EAAAR,iBAAA,CAAAF,WAAA,EAAAU,WAAA,GAAApB,MAAA,CAAAC,cAAA,CAAAS,WAAA,iBAAAN,QAAA,mBAAAM,WAAA;AAAA,SAAAM,eAAAM,GAAA,QAAAL,GAAA,GAAAM,YAAA,CAAAD,GAAA,oBAAAE,OAAA,CAAAP,GAAA,iBAAAA,GAAA,GAAAQ,MAAA,CAAAR,GAAA;AAAA,SAAAM,aAAAG,KAAA,EAAAC,IAAA,QAAAH,OAAA,CAAAE,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAArB,IAAA,CAAAmB,KAAA,EAAAC,IAAA,oBAAAH,OAAA,CAAAQ,GAAA,uBAAAA,GAAA,YAAArB,SAAA,4DAAAgB,IAAA,gBAAAF,MAAA,GAAAQ,MAAA,EAAAP,KAAA;AAAA,SAAAQ,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAAzB,SAAA,0DAAAwB,QAAA,CAAAd,SAAA,GAAArB,MAAA,CAAAqC,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAf,SAAA,IAAAiB,WAAA,IAAAjC,KAAA,EAAA8B,QAAA,EAAA/B,QAAA,QAAAD,YAAA,aAAAH,MAAA,CAAAC,cAAA,CAAAkC,QAAA,iBAAA/B,QAAA,gBAAAgC,UAAA,EAAAG,eAAA,CAAAJ,QAAA,EAAAC,UAAA;AAAA,SAAAG,gBAAAC,CAAA,EAAAC,CAAA,IAAAF,eAAA,GAAAvC,MAAA,CAAA0C,cAAA,GAAA1C,MAAA,CAAA0C,cAAA,CAAAC,IAAA,cAAAJ,gBAAAC,CAAA,EAAAC,CAAA,IAAAD,CAAA,CAAAI,SAAA,GAAAH,CAAA,SAAAD,CAAA,YAAAD,eAAA,CAAAC,CAAA,EAAAC,CAAA;AAAA,SAAAI,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,GAAAF,eAAA,OAAAb,WAAA,EAAAc,MAAA,GAAAE,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAH,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAE,0BAAA,OAAAN,MAAA;AAAA,SAAAM,2BAAAC,IAAA,EAAApD,IAAA,QAAAA,IAAA,KAAAiB,OAAA,CAAAjB,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAAI,SAAA,uEAAAiD,sBAAA,CAAAD,IAAA;AAAA,SAAAC,uBAAAD,IAAA,QAAAA,IAAA,yBAAAE,cAAA,wEAAAF,IAAA;AAAA,SAAAX,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAO,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAA3C,SAAA,CAAA4C,OAAA,CAAA1D,IAAA,CAAA+C,OAAA,CAAAC,SAAA,CAAAS,OAAA,8CAAAE,CAAA;AAAA,SAAAf,gBAAAX,CAAA,IAAAW,eAAA,GAAAnD,MAAA,CAAA0C,cAAA,GAAA1C,MAAA,CAAAmE,cAAA,CAAAxB,IAAA,cAAAQ,gBAAAX,CAAA,WAAAA,CAAA,CAAAI,SAAA,IAAA5C,MAAA,CAAAmE,cAAA,CAAA3B,CAAA,aAAAW,eAAA,CAAAX,CAAA;AAAA,SAAA4B,0BAAAxE,MAAA,EAAAC,QAAA,EAAAwE,UAAA,EAAAvE,UAAA,EAAAC,OAAA,QAAAuE,IAAA,OAAAtE,MAAA,CAAAuE,IAAA,CAAAzE,UAAA,EAAA0E,OAAA,WAAAvD,GAAA,IAAAqD,IAAA,CAAArD,GAAA,IAAAnB,UAAA,CAAAmB,GAAA,OAAAqD,IAAA,CAAApE,UAAA,KAAAoE,IAAA,CAAApE,UAAA,EAAAoE,IAAA,CAAAnE,YAAA,KAAAmE,IAAA,CAAAnE,YAAA,iBAAAmE,IAAA,IAAAA,IAAA,CAAAhE,WAAA,IAAAgE,IAAA,CAAAlE,QAAA,WAAAkE,IAAA,GAAAD,UAAA,CAAAI,KAAA,GAAAC,OAAA,GAAAC,MAAA,WAAAL,IAAA,EAAAM,SAAA,WAAAA,SAAA,CAAAhF,MAAA,EAAAC,QAAA,EAAAyE,IAAA,KAAAA,IAAA,KAAAA,IAAA,OAAAvE,OAAA,IAAAuE,IAAA,CAAAhE,WAAA,eAAAgE,IAAA,CAAAjE,KAAA,GAAAiE,IAAA,CAAAhE,WAAA,GAAAgE,IAAA,CAAAhE,WAAA,CAAAC,IAAA,CAAAR,OAAA,YAAAuE,IAAA,CAAAhE,WAAA,GAAAyB,SAAA,QAAAuC,IAAA,CAAAhE,WAAA,eAAAN,MAAA,CAAAC,cAAA,CAAAL,MAAA,EAAAC,QAAA,EAAAyE,IAAA,GAAAA,IAAA,kBAAAA,IAAA;AAAA,SAAAO,0BAAA/E,UAAA,EAAAC,OAAA,cAAA+E,KAAA;AAAA,SAAAC,mBAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAnE,GAAA,EAAAK,GAAA,cAAA+D,IAAA,GAAAL,GAAA,CAAA/D,GAAA,EAAAK,GAAA,OAAAjB,KAAA,GAAAgF,IAAA,CAAAhF,KAAA,WAAAiF,KAAA,IAAAJ,MAAA,CAAAI,KAAA,iBAAAD,IAAA,CAAAE,IAAA,IAAAN,OAAA,CAAA5E,KAAA,YAAAmF,OAAA,CAAAP,OAAA,CAAA5E,KAAA,EAAAoF,IAAA,CAAAN,KAAA,EAAAC,MAAA;AAAA,SAAAM,kBAAAC,EAAA,6BAAAhC,IAAA,SAAAiC,IAAA,GAAApC,SAAA,aAAAgC,OAAA,WAAAP,OAAA,EAAAC,MAAA,QAAAF,GAAA,GAAAW,EAAA,CAAAlC,KAAA,CAAAE,IAAA,EAAAiC,IAAA,YAAAT,MAAA9E,KAAA,IAAA0E,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAA/E,KAAA,cAAA+E,OAAAS,GAAA,IAAAd,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAS,GAAA,KAAAV,KAAA,CAAApD,SAAA;AAGnE,IAAM+D,qBAAqB,GAAG,CAAC,GAAG,IAAI;AAACC,OAAA,CAAAD,qBAAA,GAAAA,qBAAA;AACvC,IAAME,2BAA2B,GAAG,EAAE,GAAG,IAAI;AAACD,OAAA,CAAAC,2BAAA,GAAAA,2BAAA;AAErD,IAAMC,iBAAiB,GAAG,CACxBC,0BAAuB,CAACC,gBAAgB,EACxCC,kCAAa,CAACC,cAAc,CAC7B;AAAC,SAEaC,wBAAwBA,CAAA;EAAA,OAAAC,yBAAA,CAAA9C,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAA+C,0BAAA;EAAAA,yBAAA,GAAAb,iBAAA,eAAAc,kBAAA,CAAAC,IAAA,CAAvC,SAAAC,SAAA;IAAA,OAAAF,kBAAA,CAAAG,IAAA,UAAAC,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;UAAA;YAAA,OAAAF,SAAA,CAAAG,MAAA,WACSC,KAAK,CAAC,kCAAkC,CAAC;UAAA;UAAA;YAAA,OAAAJ,SAAA,CAAAK,IAAA;QAAA;MAAA;IAAA,GAAAR,QAAA;EAAA,CACjD;EAAA,OAAAH,yBAAA,CAAA9C,KAAA,OAAAD,SAAA;AAAA;AAAA,IAUY2D,mBAAmB,IAAA7H,IAAA,GAR/B,IAAA8H,UAAM,EAAC;EACNC,IAAI,EAAE,qBAAqB;EAC3BC,IAAI,EAAE,CACJ,QAAQ,EACR;IAAEC,GAAG,EAAE,aAAa;IAAEC,QAAQ,EAAE;EAAK,CAAC,EACtC;IAAED,GAAG,EAAE,4BAA4B;IAAEC,QAAQ,EAAE;EAAK,CAAC;AAEzD,CAAC,CAAC,EAAAlI,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAiI,UAAA;EAAAvF,SAAA,CAAAiF,mBAAA,EAAAM,UAAA;EAAA,IAAAC,MAAA,GAAA7E,YAAA,CAAAsE,mBAAA;EAmDA,SAAAA,oBAAYG,IAAU,EAAE;IAAA,IAAAK,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAAA,IAAAC,KAAA;IAAAvH,eAAA,OAAA2G,mBAAA;IACtBY,KAAA,GAAAL,MAAA,CAAAnH,IAAA,OAAM;MACJ+G,IAAI,EAAJA;IACF,CAAC;IAAES,KAAA,CApDKC,YAAY,IAAAL,qBAAA,IAAAC,sBAAA,GACpBG,KAAA,CAAKE,KAAK,CAACC,0BAA0B,cAAAN,sBAAA,uBAArCA,sBAAA,CAAuCO,WAAW,cAAAR,qBAAA,cAAAA,qBAAA,GAAI7B,qBAAqB;IAAAiC,KAAA,CAEnEK,kBAAkB,IAAAP,sBAAA,IAAAC,sBAAA,GAC1BC,KAAA,CAAKE,KAAK,CAACC,0BAA0B,cAAAJ,sBAAA,uBAArCA,sBAAA,CAAuCO,iBAAiB,cAAAR,sBAAA,cAAAA,sBAAA,GACxD7B,2BAA2B;IAAA+B,KAAA,CAEnBO,oBAAoB,gBAAA5C,iBAAA,eAAAc,kBAAA,CAAAC,IAAA,CAAG,SAAA8B,QAAA;MAAA,IAAAC,sBAAA,EAAAC,sBAAA,EAAAC,mBAAA;MAAA,OAAAlC,kBAAA,CAAAG,IAAA,UAAAgC,SAAAC,QAAA;QAAA;UAAA,QAAAA,QAAA,CAAA9B,IAAA,GAAA8B,QAAA,CAAA7B,IAAA;YAAA;cAAA6B,QAAA,CAAA9B,IAAA;cAEvB4B,mBAAmB,IAAAF,sBAAA,IAAAC,sBAAA,GACvBV,KAAA,CAAKE,KAAK,CAACC,0BAA0B,cAAAO,sBAAA,uBAArCA,sBAAA,CAAuCC,mBAAmB,cAAAF,sBAAA,cAAAA,sBAAA,GAC1DlC,wBAAwB;cAAAsC,QAAA,CAAA7B,IAAA;cAAA,OACpB2B,mBAAmB,CAAC,CAAC;YAAA;cAC3BX,KAAA,CAAKc,sBAAsB,CAAC,CAAC;cAACD,QAAA,CAAA7B,IAAA;cAAA;YAAA;cAAA6B,QAAA,CAAA9B,IAAA;cAAA8B,QAAA,CAAAE,EAAA,GAAAF,QAAA;cAE9Bb,KAAA,CAAKgB,oBAAoB,CAAAH,QAAA,CAAAE,EAAM,CAAC;YAAC;YAAA;cAAA,OAAAF,QAAA,CAAA1B,IAAA;UAAA;QAAA;MAAA,GAAAqB,OAAA;IAAA,CAEpC;IAAAR,KAAA,CAESiB,eAAe,GAA0B,IAAI;IAAAjB,KAAA,CAE7CkB,uBAAuB,GAAG,CAAC;IAAAlB,KAAA,CAE7BmB,eAAe,GAAyB,IAAI;IAAAnB,KAAA,CAE1Cc,sBAAsB,GAAG,YAAM;MACvC,IAAI,CAACd,KAAA,CAAKoB,YAAY,EAAE;QACtBpB,KAAA,CAAKqB,iBAAiB,CAAC,CAAC;MAC1B;MACArB,KAAA,CAAKsB,MAAM,CAAC,CAAC;IACf,CAAC;IAAAtB,KAAA,CAESgB,oBAAoB,GAAG,UAACzD,KAAe,EAAK;MACpD,IAAIA,KAAK,CAACgE,OAAO,IAAIrD,iBAAiB,CAACsD,QAAQ,CAACjE,KAAK,CAACgE,OAAO,CAAC,EAAE;MAEhE,IAAI,CAAChE,KAAK,CAACkE,QAAQ,IAAIzB,KAAA,CAAKoB,YAAY,EAAE;QACxCpB,KAAA,CAAK0B,cAAc,CAAC,CAAC;MACvB;MAEA1B,KAAA,CAAKsB,MAAM,CAAC,CAAC;IACf,CAAC;IAAAtB,KAAA,CAES2B,oBAAoB,GAAG,YAAM;MACrC,IAAI,CAAC3B,KAAA,CAAK4B,WAAW,EAAE;QACrB5B,KAAA,CAAK6B,cAAc,CAAC,CAAC;MACvB;MACA7B,KAAA,CAAKsB,MAAM,CAAC,CAAC;IACf,CAAC;IAAA1J,0BAAA,CAAAoI,KAAA,kBAAAtI,WAAA,EAAAmE,sBAAA,CAAAmE,KAAA;IAAApI,0BAAA,CAAAoI,KAAA,iBAAArI,YAAA,EAAAkE,sBAAA,CAAAmE,KAAA;IAAA,OAAAA,KAAA;EAMD;EAAC7G,YAAA,CAAAiG,mBAAA;IAAAlG,GAAA;IAAAZ,KAAA,WAAAuJ,eAAA,EASgB;MACf,IAAI,CAACT,YAAY,GAAG,KAAK;MACzB,IAAI,CAACQ,WAAW,GAAG,IAAI;IACzB;EAAC;IAAA1I,GAAA;IAAAZ,KAAA,WAAA+I,kBAAA,EAGmB;MAClB,IAAI,CAACD,YAAY,GAAG,IAAI;MACxB,IAAI,CAACQ,WAAW,GAAG,KAAK;IAC1B;EAAC;IAAA1I,GAAA;IAAAZ,KAAA,WAAAoJ,eAAA,EAGgB;MACf,IAAI,CAACN,YAAY,GAAG,KAAK;IAC3B;EAAC;IAAAlI,GAAA;IAAAZ,KAAA,WAAAwJ,YAAA,EAEsB;MACrB,OAAO,CAAC,EACN,IAAI,CAACC,OAAO,KACX,CAAC,IAAI,CAAC7B,KAAK,CAAC8B,WAAW,IAAI,IAAI,CAAC9B,KAAK,CAAC8B,WAAW,CAACC,KAAK,CAAC,CAC1D;IACH;EAAC;IAAA/I,GAAA;IAAAZ,KAAA,WAAA4J,sBAAA,EAEuB;MAAA,IAAAC,qBAAA;MACtB,OAAO,CAAC,EACN,IAAI,CAACF,KAAK,MAAAE,qBAAA,GACV,IAAI,CAACjC,KAAK,CAAC8B,WAAW,cAAAG,qBAAA,uBAAtBA,qBAAA,CAAwBF,KAAK,KAC7B,IAAI,CAAC/B,KAAK,CAAC8B,WAAW,CAACI,aAAa,KAAK,IAAI,CAAClB,uBAAuB,CACtE;IACH;EAAC;IAAAhI,GAAA;IAAAZ,KAAA,WAAA+J,OAAA,EAEiB;MAChB,IAAI,CAACC,aAAa,CAAC,CAAC;IACtB;EAAC;IAAApJ,GAAA;IAAAZ,KAAA,WAAAiK,cAAA,EAEwB;MACvB,IAAI,CAACjB,MAAM,CAAC,CAAC;IACf;EAAC;IAAApI,GAAA;IAAAZ,KAAA,WAAAkK,cAAA,EAEwB;MACvB,IAAI,CAAC,IAAI,CAACV,WAAW,CAAC,CAAC,IAAI,IAAI,CAACI,qBAAqB,CAAC,CAAC,EAAE;QACvD,IAAI,IAAI,CAAChC,KAAK,CAAC8B,WAAW,EAAE;UAC1B,IAAI,CAACd,uBAAuB,GAAG,IAAI,CAAChB,KAAK,CAAC8B,WAAW,CAACI,aAAa;QACrE;QAEA,IAAI,CAACE,aAAa,CAAC,CAAC;MACtB;IACF;EAAC;IAAApJ,GAAA;IAAAZ,KAAA,WAAAgK,cAAA,EAEe;MAAA,IAAAG,qBAAA;QAAAC,OAAA;QAAAC,MAAA;MACd,CAAAF,qBAAA,OAAI,CAACtB,eAAe,cAAAsB,qBAAA,uBAApBA,qBAAA,CAAAjK,IAAA,KAAuB,CAAC;MACxB,IAAMoK,MAAM,GAAG,IAAI,CAAC1C,KAAK,CAAC0C,MAAM,CAACC,OAAO,CAACD,MAAM,CAAC,CAAC;MACjDA,MAAM,CAACE,EAAE,CAACF,MAAM,CAACG,MAAM,CAACC,cAAc,EAAE,IAAI,CAAClC,sBAAsB,CAAC;MACpE8B,MAAM,CAACE,EAAE,CAACF,MAAM,CAACG,MAAM,CAACE,YAAY,EAAE,IAAI,CAACjC,oBAAoB,CAAC;MAChE,CAAA0B,OAAA,GAAAQ,MAAM,cAAAR,OAAA,uBAANA,OAAA,CAAQS,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACxB,oBAAoB,CAAC;MAC9D,IAAI,CAACR,eAAe,GAAG,YAAM;QAAA,IAAAiC,QAAA;QAC3BR,MAAM,CAACS,cAAc,CACnBT,MAAM,CAACG,MAAM,CAACC,cAAc,EAC5BL,MAAI,CAAC7B,sBACP,CAAC;QACD8B,MAAM,CAACS,cAAc,CACnBT,MAAM,CAACG,MAAM,CAACE,YAAY,EAC1BN,MAAI,CAAC3B,oBACP,CAAC;QACD,CAAAoC,QAAA,GAAAF,MAAM,cAAAE,QAAA,uBAANA,QAAA,CAAQE,mBAAmB,CAAC,SAAS,EAAEX,MAAI,CAAChB,oBAAoB,CAAC;QACjEgB,MAAI,CAACxB,eAAe,GAAG,IAAI;MAC7B,CAAC;IACH;EAAC;IAAAjI,GAAA;IAAAZ,KAAA;MAAA,IAAAiL,iBAAA,GAAA5F,iBAAA,eAAAc,kBAAA,CAAAC,IAAA,UAAA8E,SAAA;QAAA,OAAA/E,kBAAA,CAAAG,IAAA,UAAA6E,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAA3E,IAAA,GAAA2E,SAAA,CAAA1E,IAAA;cAAA;gBAAA0E,SAAA,CAAA3E,IAAA;gBAAA2E,SAAA,CAAA1E,IAAA;gBAAA,OAKS,IAAI,CAACuB,oBAAoB,CAAC,CAAC;cAAA;gBAAAmD,SAAA,CAAA1E,IAAA;gBAAA;cAAA;gBAAA0E,SAAA,CAAA3E,IAAA;gBAAA2E,SAAA,CAAA3C,EAAA,GAAA2C,SAAA;cAAA;cAAA;gBAAA,OAAAA,SAAA,CAAAvE,IAAA;YAAA;UAAA;QAAA,GAAAqE,QAAA;MAAA;MAAA,SAAAG,iBAAA;QAAA,OAAAJ,iBAAA,CAAA7H,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAkI,gBAAA;IAAA;EAAA;IAAAzK,GAAA;IAAAZ,KAAA,WAAAsL,cAAA,EAMrB;MACd,IAAI,IAAI,CAAC3C,eAAe,EAAE;QACxB4C,YAAY,CAAC,IAAI,CAAC5C,eAAe,CAAC;QAClC,IAAI,CAACA,eAAe,GAAG,IAAI;MAC7B;IACF;EAAC;IAAA/H,GAAA;IAAAZ,KAAA,WAAAgJ,OAAA,EAE2E;MAAA,IAAAwC,MAAA;MAAA,IAArEC,CAAC,GAAAtI,SAAA,CAAAzC,MAAA,QAAAyC,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,IAAI,CAAC2F,YAAY,GAAG,IAAI,CAACf,kBAAkB,GAAG,IAAI,CAACJ,YAAY;MACxE,IAAI,CAAC2D,aAAa,CAAC,CAAC;MAEpB,IAAI,CAAC3C,eAAe,GAAG+C,UAAU,CAAC,YAAM;QACtCF,MAAI,CAAC7C,eAAe,GAAG,IAAI;QAC3B6C,MAAI,CAACH,gBAAgB,CAAC,CAAC;MACzB,CAAC,EAAEI,CAAC,CAAC;IACP;EAAC;EAAA,OAAA3E,mBAAA;AAAA,EA3JsC6E,gBAAU,IAAAvM,WAAA,GAAA2E,yBAAA,CAAA5E,OAAA,CAAA6B,SAAA,mBAwDhD4K,WAAK;EAAA9L,YAAA;EAAAD,UAAA;EAAAE,QAAA;EAAAE,WAAA,WAAAA,YAAA;IAAA,OACS,IAAI;EAAA;AAAA,IAAAZ,YAAA,GAAA0E,yBAAA,CAAA5E,OAAA,CAAA6B,SAAA,kBAElB4K,WAAK;EAAA9L,YAAA;EAAAD,UAAA;EAAAE,QAAA;EAAAE,WAAA,WAAAA,YAAA;IAAA,OACQ,KAAK;EAAA;AAAA,IAAA8D,yBAAA,CAAA5E,OAAA,CAAA6B,SAAA,qBAElB6K,YAAM,GAAAlM,MAAA,CAAAmM,wBAAA,CAAA3M,OAAA,CAAA6B,SAAA,qBAAA7B,OAAA,CAAA6B,SAAA,GAAA+C,yBAAA,CAAA5E,OAAA,CAAA6B,SAAA,wBAMN6K,YAAM,GAAAlM,MAAA,CAAAmM,wBAAA,CAAA3M,OAAA,CAAA6B,SAAA,wBAAA7B,OAAA,CAAA6B,SAAA,GAAA+C,yBAAA,CAAA5E,OAAA,CAAA6B,SAAA,qBAMN6K,YAAM,GAAAlM,MAAA,CAAAmM,wBAAA,CAAA3M,OAAA,CAAA6B,SAAA,qBAAA7B,OAAA,CAAA6B,SAAA,GAAA+C,yBAAA,CAAA5E,OAAA,CAAA6B,SAAA,uBA0DN+K,gBAAO,GAAApM,MAAA,CAAAmM,wBAAA,CAAA3M,OAAA,CAAA6B,SAAA,uBAAA7B,OAAA,CAAA6B,SAAA,IAAA7B,OAAA,MAAAD,MAAA;AAAAwG,OAAA,CAAAoB,mBAAA,GAAAA,mBAAA"}