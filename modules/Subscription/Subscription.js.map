{"version":3,"file":"Subscription.js","names":["_core","require","_subscriptions","_interopRequireDefault","_ramda","_debounceThrottle","_di","_proxify","_normalizeEventFilter","_subscriptionStatus","_dec","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","e","__esModule","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","n","asyncGeneratorStep","o","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_initializerDefineProperty","l","Object","defineProperty","enumerable","configurable","writable","initializer","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","prototype","_toPrimitive","_typeof","toPrimitive","String","Number","_get","Reflect","get","bind","p","_superPropBase","getOwnPropertyDescriptor","hasOwnProperty","_getPrototypeOf","_inherits","create","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","_isNativeReflectConstruct","s","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","keys","forEach","reverse","reduce","_initializerWarningHelper","Error","DEFAULT_TIME_TO_RETRY","DEFAULT_REGISTER_DELAY","SUBSCRIPTION_LOCK_KEY","Subscription","Module","deps","dep","optional","_RcModuleV","_super","_this","storageKey","enableCache","_subscription","_retryTimeoutId","_debouncedRegister","_retry","__debugNotification__","_handleSleep","regeneratorRuntime","mark","_callee","_this$_subscription","renewPromise","wrap","_callee$","_context","prev","next","ready","automaticRenewing","resubscribeAtPubNub","stop","_onBeforeLogout","_callee2","_callee2$","_context2","_removeSubscription","promisedDebounce","fn","_register","threshold","_registerDelay","debounce","_createSubscriptionWithLock","_timeToRetry","maxThreshold","_addFilters","filters","_setStates","uniq","concat","_ref3","_ref3$message","message","_ref3$filters","_ref3$status","status","subscriptionStatus","_ref3$cachedSubscript","cachedSubscription","_shouldInit","_deps","auth","loggedIn","_shouldReset","onInit","sleepDetector","on","events","detected","addBeforeLogoutHandler","_onReset","_callee3","_callee3$","_context3","notSubscribed","off","cancel","removeBeforeLogoutHandler","reset","removeAllListeners","onReset","_onRemoveSuccess","_onRemoveError","error","_onRenewSuccess","subscribed","subscription","_onRenewError","flush","_onSubscribeSuccess","_onSubscribeError","_onNotification","console","log","JSON","stringify","_createSubscription2","_callee4","_this2","sdk","_callee4$","_context4","client","service","Subscriptions","createSubscription","setSubscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","t0","_createSubscription","_createSubscriptionWithLock2","_callee5","_navigator","_navigator$locks","_this3","_callee5$","_context5","navigator","locks","request","_shouldUpdateSubscription","equals","map","normalizeEventFilter","eventFilters","sort","_register2","_callee6","_callee6$","_context6","subscribing","setEventFilters","register","_removeSubscription2","_callee7","_callee7$","_context7","unsubscribing","remove","_subscribe","_callee8","_this$_subscription$e","_this$_subscription2","oldFiltersCount","_args8","_callee8$","_context8","undefined","subscribe","_this$_deps$subscript","_this$_deps$subscript2","Math","max","subscriptionOptions","timeToRetry","_this$_deps$subscript3","_this$_deps$subscript4","registerDelay","RcModuleV2","state","storage","action","proxify","exports"],"sources":["modules/Subscription/Subscription.ts"],"sourcesContent":["import {\n  action,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport type { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\nimport type { ApiError } from '@ringcentral/sdk';\nimport Subscriptions from '@ringcentral/subscriptions';\nimport type { SubscriptionData } from '@ringcentral/subscriptions/src/subscription/Subscription';\nimport { concat, equals, map, uniq } from 'ramda';\n\nimport type { subscriptionFilters } from '../../enums/subscriptionFilters';\nimport type {\n  DebouncedFunction,\n  PromisedDebounceFunction,\n} from '../../lib/debounce-throttle';\nimport { debounce, promisedDebounce } from '../../lib/debounce-throttle';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\n\nimport type { Deps, MessageBase } from './Subscription.interface';\nimport { normalizeEventFilter } from './normalizeEventFilter';\nimport { subscriptionStatus } from './subscriptionStatus';\n\nconst DEFAULT_TIME_TO_RETRY = 20 * 1000;\nconst DEFAULT_REGISTER_DELAY = 2 * 1000;\nconst SUBSCRIPTION_LOCK_KEY = 'subscription-creating-lock';\n\n@Module({\n  name: 'Subscription',\n  deps: [\n    'Auth',\n    'Client',\n    'Storage',\n    'SleepDetector',\n    { dep: 'SubscriptionOptions', optional: true },\n  ],\n})\nexport class Subscription extends RcModuleV2<Deps> {\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n  protected _subscription: ReturnType<Subscriptions['createSubscription']> =\n    null;\n\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Timeout'.\n  protected _retryTimeoutId: NodeJS.Timeout = null;\n\n  protected _debouncedRegister: PromisedDebounceFunction<\n    Subscription['_register']\n  >;\n\n  protected _retry: DebouncedFunction<\n    Subscription['_createSubscriptionWithLock']\n  >;\n\n  __debugNotification__ = false;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      storageKey: 'subscription',\n      enableCache: true,\n    });\n    this._debouncedRegister = promisedDebounce({\n      fn: this._register,\n      threshold: this._registerDelay,\n    });\n\n    this._retry = debounce({\n      fn: this._createSubscriptionWithLock,\n      threshold: this._timeToRetry,\n      maxThreshold: this._timeToRetry,\n    });\n  }\n\n  @state\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'MessageBase... Remove this comment to see the full error message\n  message: MessageBase = null;\n\n  @state\n  filters: ObjectMapValue<typeof subscriptionFilters>[] = [];\n\n  protected _addFilters(filters: Subscription['filters']) {\n    this._setStates({ filters: uniq(concat(filters, this.filters)) });\n  }\n\n  @storage\n  @state\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n  cachedSubscription: SubscriptionData = null;\n\n  @state\n  subscriptionStatus: ObjectMapValue<typeof subscriptionStatus> =\n    subscriptionStatus.notSubscribed;\n\n  @action\n  protected _setStates({\n    message = this.message,\n    filters = this.filters,\n    status = this.subscriptionStatus,\n    cachedSubscription = this.cachedSubscription,\n  }) {\n    this.message = message;\n    this.filters = filters;\n    this.subscriptionStatus = status;\n    this.cachedSubscription = cachedSubscription;\n  }\n\n  get _timeToRetry() {\n    return Math.max(\n      0,\n      this._deps.subscriptionOptions?.timeToRetry ?? DEFAULT_TIME_TO_RETRY,\n    );\n  }\n\n  get _registerDelay() {\n    return Math.max(\n      0,\n      this._deps.subscriptionOptions?.registerDelay ?? DEFAULT_REGISTER_DELAY,\n    );\n  }\n\n  override _shouldInit() {\n    return super._shouldInit() && this._deps.auth.loggedIn;\n  }\n\n  override _shouldReset() {\n    return super._shouldReset() || (this.ready && !this._deps.auth.loggedIn);\n  }\n\n  _handleSleep = async () => {\n    if (this.ready && this._subscription) {\n      // to wait automatic renew finish\n      const renewPromise = this._subscription.automaticRenewing();\n      if (renewPromise) {\n        await renewPromise;\n      }\n      // this._subscription may be removed at renewError event\n      // forcibly reconnect pubnub to ensure pubnub is alive\n      await this._subscription?.resubscribeAtPubNub();\n    }\n  };\n\n  protected _onBeforeLogout = async () => {\n    if (this._subscription) {\n      await this._removeSubscription();\n    }\n  };\n\n  override onInit() {\n    this._deps.sleepDetector.on(\n      this._deps.sleepDetector.events.detected,\n      this._handleSleep,\n    );\n    this._deps.auth.addBeforeLogoutHandler(this._onBeforeLogout);\n  }\n\n  override async onReset() {\n    this._setStates({\n      filters: [],\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'MessageBase... Remove this comment to see the full error message\n      message: null,\n      status: subscriptionStatus.notSubscribed,\n    });\n    this._deps.sleepDetector.off(\n      this._deps.sleepDetector.events.detected,\n      this._handleSleep,\n    );\n    this._retry.cancel();\n    this._deps.auth.removeBeforeLogoutHandler(this._onBeforeLogout);\n    this._debouncedRegister.cancel();\n    if (this._subscription) {\n      this._subscription.reset();\n      this._subscription.removeAllListeners();\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n      this._subscription = null;\n    }\n  }\n\n  protected _onRemoveSuccess() {\n    this._setStates({\n      status: subscriptionStatus.notSubscribed,\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n      cachedSubscription: null,\n    });\n  }\n\n  protected _onRemoveError(error: ApiError | Error) {\n    this._setStates({\n      status: subscriptionStatus.notSubscribed,\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n      cachedSubscription: null,\n    });\n  }\n\n  protected _onRenewSuccess() {\n    if (this._subscription) {\n      this._setStates({\n        status: subscriptionStatus.subscribed,\n        cachedSubscription: this._subscription.subscription(),\n      });\n    }\n  }\n\n  protected _onRenewError(error: ApiError | Error) {\n    if (this._subscription) {\n      this._subscription.reset();\n      this._subscription.removeAllListeners();\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n      this._subscription = null;\n    }\n    this._setStates({\n      status: subscriptionStatus.notSubscribed,\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n      cachedSubscription: null,\n    });\n    if (this.ready) {\n      // immediately start the retry process after the first renewError\n      this._retry();\n      this._retry.flush();\n    }\n  }\n\n  protected _onSubscribeSuccess() {\n    if (this._subscription) {\n      this._setStates({\n        status: subscriptionStatus.subscribed,\n        cachedSubscription: this._subscription.subscription(),\n      });\n    }\n  }\n\n  protected _onSubscribeError(error: ApiError | Error) {\n    this._setStates({\n      status: subscriptionStatus.notSubscribed,\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n      cachedSubscription: null,\n    });\n    if (this.ready) {\n      this._retry();\n    }\n  }\n\n  protected _onNotification(message: MessageBase) {\n    // for our support collect pubnub message;\n    if (this.__debugNotification__) {\n      console.log('Received Notification:', JSON.stringify(message));\n    }\n    this._setStates({\n      message,\n    });\n  }\n\n  protected async _createSubscription() {\n    if (this.ready && !this._subscription) {\n      const sdk = this._deps.client.service;\n      this._subscription = new Subscriptions({ sdk }).createSubscription();\n      if (this.cachedSubscription) {\n        try {\n          this._subscription.setSubscription(this.cachedSubscription);\n        } catch (error: any /** TODO: confirm with instanceof */) {\n          this._subscription = new Subscriptions({ sdk }).createSubscription();\n        }\n      }\n      // TODO: fix Subscription limit issue about multiple create Subscription issue when multi-tab login.\n      this._subscription.on(\n        this._subscription.events.notification,\n        (message: MessageBase) => this._onNotification(message),\n      );\n      this._subscription.on(this._subscription.events.removeSuccess, () =>\n        this._onRemoveSuccess(),\n      );\n      this._subscription.on(this._subscription.events.removeError, (error) =>\n        this._onRemoveError(error),\n      );\n      this._subscription.on(this._subscription.events.renewSuccess, () =>\n        this._onRenewSuccess(),\n      );\n      this._subscription.on(this._subscription.events.renewError, (error) =>\n        this._onRenewError(error),\n      );\n      this._subscription.on(this._subscription.events.subscribeSuccess, () =>\n        this._onSubscribeSuccess(),\n      );\n      this._subscription.on(this._subscription.events.subscribeError, (error) =>\n        this._onSubscribeError(error),\n      );\n    }\n    try {\n      await this._debouncedRegister();\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      if (error.message !== 'cancelled') {\n        throw error;\n      }\n    }\n  }\n\n  protected async _createSubscriptionWithLock() {\n    if (!navigator?.locks?.request) {\n      await this._createSubscription();\n    } else {\n      await navigator.locks.request(SUBSCRIPTION_LOCK_KEY, () =>\n        this._createSubscription(),\n      );\n    }\n  }\n\n  protected _shouldUpdateSubscription() {\n    return !!(\n      this._subscription &&\n      !equals(\n        map(normalizeEventFilter, this._subscription.eventFilters()).sort(),\n        map(normalizeEventFilter, this.filters).sort(),\n      )\n    );\n  }\n\n  protected async _register() {\n    if (this._shouldUpdateSubscription()) {\n      this._setStates({\n        status: subscriptionStatus.subscribing,\n      });\n      this._subscription.setEventFilters([...this.filters]);\n      await this._subscription.register();\n    }\n  }\n\n  protected async _removeSubscription() {\n    if (this._subscription) {\n      this._setStates({\n        status: subscriptionStatus.unsubscribing,\n      });\n      try {\n        await this._subscription.remove();\n      } catch (error: any /** TODO: confirm with instanceof */) {\n        /* removeError is handled elsewhere */\n      }\n      if (this._subscription) {\n        this._subscription.reset();\n        this._subscription.removeAllListeners();\n        // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Subscriptio... Remove this comment to see the full error message\n        this._subscription = null;\n      }\n      this._setStates({\n        status: subscriptionStatus.notSubscribed,\n      });\n    }\n  }\n\n  @proxify\n  async subscribe(events: Subscription['filters'] = []) {\n    if (this.ready) {\n      const oldFiltersCount = this._subscription?.eventFilters().length ?? 0;\n      // use [].concat for potential compatibility issue\n      // @ts-expect-error TS(2769): No overload matches this call.\n      this._addFilters([].concat(events));\n      if (oldFiltersCount !== this.filters.length) {\n        await this._createSubscriptionWithLock();\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}