{"version":3,"file":"Subscription.js","names":["_ramda","require","_core","_subscriptions","_interopRequireDefault","_debounceThrottle","_di","_proxify","_normalizeEventFilter","_subscriptionStatus","_dec","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_initializerDefineProperty","target","property","descriptor","context","defineProperty","enumerable","configurable","writable","initializer","_classCallCheck","instance","Constructor","_defineProperties","props","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","res","Number","_get","Reflect","get","bind","receiver","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","keys","forEach","reverse","reduce","decorator","_initializerWarningHelper","Error","DEFAULT_TIME_TO_RETRY","DEFAULT_REGISTER_DELAY","SUBSCRIPTION_LOCK_KEY","Subscription","Module","deps","dep","optional","_RcModuleV","_super","_this","storageKey","enableCache","_subscription","_retryTimeoutId","_debouncedRegister","_retry","__debugNotification__","_handleSleep","regeneratorRuntime","mark","_callee","_this$_subscription","renewPromise","wrap","_callee$","_context","prev","next","ready","automaticRenewing","resubscribeAtPubNub","stop","_onBeforeLogout","_callee2","_callee2$","_context2","_removeSubscription","promisedDebounce","_register","threshold","_registerDelay","debounce","_createSubscriptionWithLock","_timeToRetry","maxThreshold","_addFilters","filters","_setStates","uniq","concat","_ref3","_ref3$message","message","_ref3$filters","_ref3$status","status","subscriptionStatus","_ref3$cachedSubscript","cachedSubscription","_shouldInit","_deps","auth","loggedIn","_shouldReset","onInit","sleepDetector","on","events","detected","addBeforeLogoutHandler","_onReset","_callee3","_callee3$","_context3","notSubscribed","off","cancel","removeBeforeLogoutHandler","reset","removeAllListeners","onReset","_onRemoveSuccess","_onRemoveError","_onRenewSuccess","subscribed","subscription","_onRenewError","flush","_onSubscribeSuccess","_onSubscribeError","_onNotification","console","log","JSON","stringify","_createSubscription2","_callee4","_this2","sdk","_callee4$","_context4","client","service","Subscriptions","createSubscription","setSubscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","t0","_createSubscription","_createSubscriptionWithLock2","_callee5","_navigator","_navigator$locks","_this3","_callee5$","_context5","navigator","locks","request","_shouldUpdateSubscription","equals","map","normalizeEventFilter","eventFilters","sort","_register2","_callee6","_callee6$","_context6","subscribing","setEventFilters","register","_removeSubscription2","_callee7","_callee7$","_context7","unsubscribing","remove","_subscribe","_callee8","_this$_subscription$e","_this$_subscription2","oldFiltersCount","_args8","_callee8$","_context8","subscribe","_this$_deps$subscript","_this$_deps$subscript2","Math","max","subscriptionOptions","timeToRetry","_this$_deps$subscript3","_this$_deps$subscript4","registerDelay","RcModuleV2","state","storage","action","proxify","exports"],"sources":["modules/Subscription/Subscription.ts"],"sourcesContent":["import { concat, equals, map, uniq } from 'ramda';\n\nimport {\n  action,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport type { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\nimport type { ApiError } from '@ringcentral/sdk';\nimport Subscriptions from '@ringcentral/subscriptions';\nimport type { SubscriptionData } from '@ringcentral/subscriptions/src/subscription/Subscription';\n\nimport type { subscriptionFilters } from '../../enums/subscriptionFilters';\nimport type {\n  DebouncedFunction,\n  PromisedDebounceFunction,\n} from '../../lib/debounce-throttle';\nimport { debounce, promisedDebounce } from '../../lib/debounce-throttle';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { normalizeEventFilter } from './normalizeEventFilter';\nimport type { Deps, MessageBase } from './Subscription.interface';\nimport { subscriptionStatus } from './subscriptionStatus';\n\nconst DEFAULT_TIME_TO_RETRY = 20 * 1000;\nconst DEFAULT_REGISTER_DELAY = 2 * 1000;\nconst SUBSCRIPTION_LOCK_KEY = 'subscription-creating-lock';\n\n@Module({\n  name: 'Subscription',\n  deps: [\n    'Auth',\n    'Client',\n    'Storage',\n    'SleepDetector',\n    { dep: 'SubscriptionOptions', optional: true },\n  ],\n})\nexport class Subscription extends RcModuleV2<Deps> {\n  // @ts-expect-error\n  protected _subscription: ReturnType<Subscriptions['createSubscription']> =\n    null;\n\n  // @ts-expect-error\n  protected _retryTimeoutId: NodeJS.Timeout = null;\n\n  protected _debouncedRegister: PromisedDebounceFunction<\n    Subscription['_register']\n  >;\n\n  protected _retry: DebouncedFunction<\n    Subscription['_createSubscriptionWithLock']\n  >;\n\n  __debugNotification__ = false;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      storageKey: 'subscription',\n      enableCache: true,\n    });\n    this._debouncedRegister = promisedDebounce({\n      fn: this._register,\n      threshold: this._registerDelay,\n    });\n\n    this._retry = debounce({\n      fn: this._createSubscriptionWithLock,\n      threshold: this._timeToRetry,\n      maxThreshold: this._timeToRetry,\n    });\n  }\n\n  @state\n  // @ts-expect-error\n  message: MessageBase = null;\n\n  @state\n  filters: ObjectMapValue<typeof subscriptionFilters>[] = [];\n\n  protected _addFilters(filters: Subscription['filters']) {\n    this._setStates({ filters: uniq(concat(filters, this.filters)) });\n  }\n\n  @storage\n  @state\n  // @ts-expect-error\n  cachedSubscription: SubscriptionData = null;\n\n  @state\n  subscriptionStatus: ObjectMapValue<typeof subscriptionStatus> =\n    subscriptionStatus.notSubscribed;\n\n  @action\n  protected _setStates({\n    message = this.message,\n    filters = this.filters,\n    status = this.subscriptionStatus,\n    cachedSubscription = this.cachedSubscription,\n  }) {\n    this.message = message;\n    this.filters = filters;\n    this.subscriptionStatus = status;\n    this.cachedSubscription = cachedSubscription;\n  }\n\n  get _timeToRetry() {\n    return Math.max(\n      0,\n      this._deps.subscriptionOptions?.timeToRetry ?? DEFAULT_TIME_TO_RETRY,\n    );\n  }\n\n  get _registerDelay() {\n    return Math.max(\n      0,\n      this._deps.subscriptionOptions?.registerDelay ?? DEFAULT_REGISTER_DELAY,\n    );\n  }\n\n  override _shouldInit() {\n    return super._shouldInit() && this._deps.auth.loggedIn;\n  }\n\n  override _shouldReset() {\n    return super._shouldReset() || (this.ready && !this._deps.auth.loggedIn);\n  }\n\n  _handleSleep = async () => {\n    if (this.ready && this._subscription) {\n      // to wait automatic renew finish\n      const renewPromise = this._subscription.automaticRenewing();\n      if (renewPromise) {\n        await renewPromise;\n      }\n      // this._subscription may be removed at renewError event\n      // forcibly reconnect pubnub to ensure pubnub is alive\n      await this._subscription?.resubscribeAtPubNub();\n    }\n  };\n\n  protected _onBeforeLogout = async () => {\n    if (this._subscription) {\n      await this._removeSubscription();\n    }\n  };\n\n  override onInit() {\n    this._deps.sleepDetector.on(\n      this._deps.sleepDetector.events.detected,\n      this._handleSleep,\n    );\n    this._deps.auth.addBeforeLogoutHandler(this._onBeforeLogout);\n  }\n\n  override async onReset() {\n    this._setStates({\n      filters: [],\n      // @ts-expect-error\n      message: null,\n      status: subscriptionStatus.notSubscribed,\n    });\n    this._deps.sleepDetector.off(\n      this._deps.sleepDetector.events.detected,\n      this._handleSleep,\n    );\n    this._retry.cancel();\n    this._deps.auth.removeBeforeLogoutHandler(this._onBeforeLogout);\n    this._debouncedRegister.cancel();\n    if (this._subscription) {\n      this._subscription.reset();\n      this._subscription.removeAllListeners();\n      // @ts-expect-error\n      this._subscription = null;\n    }\n  }\n\n  protected _onRemoveSuccess() {\n    this._setStates({\n      status: subscriptionStatus.notSubscribed,\n      // @ts-expect-error\n      cachedSubscription: null,\n    });\n  }\n\n  protected _onRemoveError(error: ApiError | Error) {\n    this._setStates({\n      status: subscriptionStatus.notSubscribed,\n      // @ts-expect-error\n      cachedSubscription: null,\n    });\n  }\n\n  protected _onRenewSuccess() {\n    if (this._subscription) {\n      this._setStates({\n        status: subscriptionStatus.subscribed,\n        cachedSubscription: this._subscription.subscription(),\n      });\n    }\n  }\n\n  protected _onRenewError(error: ApiError | Error) {\n    if (this._subscription) {\n      this._subscription.reset();\n      this._subscription.removeAllListeners();\n      // @ts-expect-error\n      this._subscription = null;\n    }\n    this._setStates({\n      status: subscriptionStatus.notSubscribed,\n      // @ts-expect-error\n      cachedSubscription: null,\n    });\n    if (this.ready) {\n      // immediately start the retry process after the first renewError\n      this._retry();\n      this._retry.flush();\n    }\n  }\n\n  protected _onSubscribeSuccess() {\n    if (this._subscription) {\n      this._setStates({\n        status: subscriptionStatus.subscribed,\n        cachedSubscription: this._subscription.subscription(),\n      });\n    }\n  }\n\n  protected _onSubscribeError(error: ApiError | Error) {\n    this._setStates({\n      status: subscriptionStatus.notSubscribed,\n      // @ts-expect-error\n      cachedSubscription: null,\n    });\n    if (this.ready) {\n      this._retry();\n    }\n  }\n\n  protected _onNotification(message: MessageBase) {\n    // for our support collect pubnub message;\n    if (this.__debugNotification__) {\n      console.log('Received Notification:', JSON.stringify(message));\n    }\n    this._setStates({\n      message,\n    });\n  }\n\n  protected async _createSubscription() {\n    if (this.ready && !this._subscription) {\n      const sdk = this._deps.client.service;\n      this._subscription = new Subscriptions({ sdk }).createSubscription();\n      if (this.cachedSubscription) {\n        try {\n          this._subscription.setSubscription(this.cachedSubscription);\n        } catch (error: any /** TODO: confirm with instanceof */) {\n          this._subscription = new Subscriptions({ sdk }).createSubscription();\n        }\n      }\n      // TODO: fix Subscription limit issue about multiple create Subscription issue when multi-tab login.\n      this._subscription.on(\n        this._subscription.events.notification,\n        (message: MessageBase) => this._onNotification(message),\n      );\n      this._subscription.on(this._subscription.events.removeSuccess, () =>\n        this._onRemoveSuccess(),\n      );\n      this._subscription.on(this._subscription.events.removeError, (error) =>\n        this._onRemoveError(error),\n      );\n      this._subscription.on(this._subscription.events.renewSuccess, () =>\n        this._onRenewSuccess(),\n      );\n      this._subscription.on(this._subscription.events.renewError, (error) =>\n        this._onRenewError(error),\n      );\n      this._subscription.on(this._subscription.events.subscribeSuccess, () =>\n        this._onSubscribeSuccess(),\n      );\n      this._subscription.on(this._subscription.events.subscribeError, (error) =>\n        this._onSubscribeError(error),\n      );\n    }\n    try {\n      await this._debouncedRegister();\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      if (error.message !== 'cancelled') {\n        throw error;\n      }\n    }\n  }\n\n  protected async _createSubscriptionWithLock() {\n    if (!navigator?.locks?.request) {\n      await this._createSubscription();\n    } else {\n      await navigator.locks.request(SUBSCRIPTION_LOCK_KEY, () =>\n        this._createSubscription(),\n      );\n    }\n  }\n\n  protected _shouldUpdateSubscription() {\n    return !!(\n      this._subscription &&\n      !equals(\n        map(normalizeEventFilter, this._subscription.eventFilters()).sort(),\n        map(normalizeEventFilter, this.filters).sort(),\n      )\n    );\n  }\n\n  protected async _register() {\n    if (this._shouldUpdateSubscription()) {\n      this._setStates({\n        status: subscriptionStatus.subscribing,\n      });\n      this._subscription.setEventFilters([...this.filters]);\n      await this._subscription.register();\n    }\n  }\n\n  protected async _removeSubscription() {\n    if (this._subscription) {\n      this._setStates({\n        status: subscriptionStatus.unsubscribing,\n      });\n      try {\n        await this._subscription.remove();\n      } catch (error: any /** TODO: confirm with instanceof */) {\n        /* removeError is handled elsewhere */\n      }\n      if (this._subscription) {\n        this._subscription.reset();\n        this._subscription.removeAllListeners();\n        // @ts-expect-error\n        this._subscription = null;\n      }\n      this._setStates({\n        status: subscriptionStatus.notSubscribed,\n      });\n    }\n  }\n\n  @proxify\n  async subscribe(events: Subscription['filters'] = []) {\n    if (this.ready) {\n      const oldFiltersCount = this._subscription?.eventFilters().length ?? 0;\n      // use [].concat for potential compatibility issue\n      // @ts-expect-error\n      this._addFilters([].concat(events));\n      if (oldFiltersCount !== this.filters.length) {\n        await this._createSubscriptionWithLock();\n      }\n    }\n  }\n}\n"],"mappings":"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"}