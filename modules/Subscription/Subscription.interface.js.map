{"version":3,"file":"Subscription.interface.js","names":[],"sources":["modules/Subscription/Subscription.interface.ts"],"sourcesContent":["import type { Auth } from '../Auth';\nimport type { SleepDetector } from '../SleepDetector';\nimport type { Storage } from '../Storage';\n\n/**\n * Extracted from @rc-ex\n * Most events seem to follow this format.\n */\n\nexport interface MessageBase {\n  /**\n   * Universally unique identifier of a notification\n   */\n  uuid?: string;\n\n  /**\n   * Event filter URI\n   */\n  event?: string;\n\n  /**\n   * Datetime of sending a notification in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format including timezone, for example *2016-03-10T18:07:52.534Z*\n   */\n  timestamp?: string;\n\n  /**\n   * Internal identifier of a subscription\n   */\n  subscriptionId?: string;\n\n  /**\n   * Notification payload body\n   */\n  body?: any;\n}\n\nexport interface SubscriptionOptions {\n  timeToRetry?: number;\n  registerDelay?: number;\n}\n\nexport interface Deps {\n  auth: Auth;\n  client: any;\n  storage: Storage;\n  sleepDetector: SleepDetector;\n  subscriptionOptions?: SubscriptionOptions;\n}\n"],"mappings":"","ignoreList":[]}