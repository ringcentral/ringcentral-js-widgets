{"version":3,"sources":["modules/ContactMatcherV2/ContactMatcher.ts"],"names":["ContactMatcher","name","deps","dep","optional","contactMatcherOptions","disableCache","phoneNumber","ignoreCache","match","queries","dataMapping","length","phoneNumbers","ignoreQueue","forceMatchBatchNumbers","_deps","DataMatcher","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYMA,c,WAJL,gBAAO;AACNC,EAAAA,IAAI,EAAE,gBADA;AAENC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE,uBAAP;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAAD;AAFA,CAAP,C;;;;;AAKC,0BAAYF,IAAZ,EAAwB;AAAA;;AAAA;;AAAA,6BAChBA,IADgB,EACV,gBADU,2BACQA,IAAI,CAACG,qBADb,0DACQ,sBAA4BC,YADpC;AAEvB;;;;;;;;;;;;;;AAQCC,gBAAAA,W,QAAAA,W,0BACAC,W,EAAAA,W,iCAAc,K;;uBAER,KAAKC,KAAL,CAAW;AACfC,kBAAAA,OAAO,EAAE,CAACH,WAAD,CADM;AAEfC,kBAAAA,WAAW,EAAXA;AAFe,iBAAX,C;;;iDAIC,+BAAKG,WAAL,CAAiBJ,WAAjB,iFAA+BK,MAA/B,IAAwC,C;;;;;;;;;;;;;;;;;;;;;;;;;AAK/CC,gBAAAA,Y,SAAAA,Y;;uBAEM,KAAKJ,KAAL,CAAW;AACfC,kBAAAA,OAAO,EAAEG,YADM;AAEfL,kBAAAA,WAAW,EAAE,IAFE;AAGfM,kBAAAA,WAAW,EAAE;AAHE,iBAAX,C;;;;;;;;;;;;;;;;;;;;;;;;;AAQiBP,gBAAAA,W,SAAAA,W;;uBACjB,KAAKQ,sBAAL,CAA4B;AAChCF,kBAAAA,YAAY,EAAE,CAACN,WAAD;AADkB,iBAA5B,C;;;;;;;;;;;;;;;;;;wBA7BiB;AACvB,aAAO,KAAKS,KAAL,CAAWX,qBAAlB;AACD;;;;EAP0BY,yB,oEAS1BC,gB,qKAYAA,gB,uKAWAA,gB","sourcesContent":["import { Entity } from '../../interfaces/Entity.interface';\nimport { DataMatcher } from '../../lib/DataMatcherV2';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport {\n  Deps,\n  ForceMatchBatchNumbersOptions,\n  ForceMatchNumberOptions,\n  HasMatchNumberOptions,\n} from './ContactMatcher.interface';\n\n@Module({\n  name: 'ContactMatcher',\n  deps: [{ dep: 'ContactMatcherOptions', optional: true }],\n})\nclass ContactMatcher extends DataMatcher<Entity, Deps> {\n  constructor(deps: Deps) {\n    super(deps, 'ContactMatcher', deps.contactMatcherOptions?.disableCache);\n  }\n\n  get dataMatcherOptions() {\n    return this._deps.contactMatcherOptions;\n  }\n\n  @proxify\n  async hasMatchNumber({\n    phoneNumber,\n    ignoreCache = false,\n  }: HasMatchNumberOptions) {\n    await this.match({\n      queries: [phoneNumber],\n      ignoreCache,\n    });\n    return this.dataMapping[phoneNumber]?.length > 0;\n  }\n\n  @proxify\n  async forceMatchBatchNumbers({\n    phoneNumbers,\n  }: ForceMatchBatchNumbersOptions) {\n    await this.match({\n      queries: phoneNumbers,\n      ignoreCache: true,\n      ignoreQueue: true,\n    });\n  }\n\n  @proxify\n  async forceMatchNumber({ phoneNumber }: ForceMatchNumberOptions) {\n    await this.forceMatchBatchNumbers({\n      phoneNumbers: [phoneNumber],\n    });\n  }\n}\n\nexport { ContactMatcher };\n"],"file":"ContactMatcher.js"}