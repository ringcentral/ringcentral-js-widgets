{"version":3,"sources":["modules/ContactSearch/index.ts"],"names":["DefaultMinimalSearchLength","ContactSearch","deps","dep","optional","auth","storage","storageKey","minimalSearchLength","ttl","options","actionTypes","_debouncedSearchFn","fn","search","threshold","_auth","_storage","_storageKey","_minimalSearchLength","_ttl","_searchSources","Map","_searchSourcesFormat","_searchSourcesCheck","_searchIds","_reducer","registerReducer","key","reducer","cache","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","_shouldReset","_resetModuleStatus","_clearStateCache","cancel","loginStatus","loggedIn","ready","_readyCheck","dispatch","type","initSuccess","cleanUp","resetSuccess","reset","sourceName","searchFn","readyCheckFn","formatFn","Error","has","set","searchString","length","prepareSearch","_clearTimeout","_timeoutId","setTimeout","searching","state","undefined","searchOnSources","Array","from","keys","_searchSource","clearTimeout","searchId","uuid","v4","entities","_searchFromCache","_loadSearching","get","_saveSearching","_onSearchError","result","list","sort","current","next","currentName","name","currentPhoneNumber","phoneNumber","nextName","nextPhoneNumber","isSort","indexOf","contactSearch","now","Date","timestamp","searchError","searchSuccess","save","getItem","status","searchStatus","RcModule","proxify","selector","_quickSort"],"mappings":"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","sourcesContent":["import * as uuid from 'uuid';\n\nimport { debounce } from '../../lib/debounce-throttle';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport RcModule from '../../lib/RcModule';\nimport { selector } from '../../lib/selector';\nimport loginStatus from '../Auth/loginStatus';\nimport actionTypes from './actionTypes';\nimport getCacheReducer from './getCacheReducer';\nimport getContactSearchReducer from './getContactSearchReducer';\n\nexport const DefaultMinimalSearchLength = 3;\n\n/**\n * @class\n * @description Contact search module\n */\n@Module({\n  deps: [\n    'Auth',\n    { dep: 'Storage', optional: true },\n    { dep: 'ContactSearchOptions', optional: true },\n  ],\n})\nexport default class ContactSearch extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Auth} params.auth - auth module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {String} params.storageKey - storage key for storage module default \"contactSearchCache\"\n   * @param {Number} params.minimalSearchLength - minimal search text length, default 3 characters\n   * @param {Number} params.ttl - timestamp of local cache, default 5 mins\n   */\n  constructor({\n    auth,\n    storage,\n    storageKey = 'contactSearchCache',\n    minimalSearchLength = DefaultMinimalSearchLength,\n    ttl = 5 * 60 * 1000, // 5 minutes\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._storage = storage;\n    this._storageKey = storageKey;\n    this._minimalSearchLength = minimalSearchLength;\n    this._ttl = ttl;\n    this._searchSources = new Map();\n    this._searchSourcesFormat = new Map();\n    this._searchSourcesCheck = new Map();\n    this._searchIds = {};\n    if (this._storage) {\n      this._reducer = getContactSearchReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: getCacheReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getContactSearchReducer(this.actionTypes, {\n        cache: getCacheReducer(this.actionTypes),\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n      this._clearStateCache();\n      if (this._debouncedSearchFn) {\n        this._debouncedSearchFn.cancel();\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loginStatus === loginStatus.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      this._readyCheck() &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (this._auth.loginStatus !== loginStatus.loggedIn ||\n        (this._storage && !this._storage.ready)) &&\n      this.ready\n    );\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _clearStateCache() {\n    this.store.dispatch({\n      type: this.actionTypes.cleanUp,\n    });\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  resetSearchStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n  }\n\n  addSearchSource({ sourceName, searchFn, readyCheckFn, formatFn }) {\n    if (!sourceName) {\n      throw new Error(\n        '[ContactSearch > SearchSource > sourceName] is required',\n      );\n    }\n    if (this._searchSources.has(sourceName)) {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > searchFn] already exists`,\n      );\n    }\n    if (this._searchSourcesCheck.has(sourceName)) {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > readyCheckFn] already exists`,\n      );\n    }\n    if (this._searchSourcesFormat.has(sourceName)) {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > formatFn] already exists`,\n      );\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > searchFn] must be a function`,\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > readyCheckFn] must be a function`,\n      );\n    }\n    if (typeof formatFn !== 'function') {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > formatFn] must be a function`,\n      );\n    }\n    this._searchSources.set(sourceName, searchFn);\n    this._searchSourcesFormat.set(sourceName, formatFn);\n    this._searchSourcesCheck.set(sourceName, readyCheckFn);\n  }\n\n  _debouncedSearchFn = debounce({ fn: this.search, threshold: 800 });\n\n  @proxify\n  debouncedSearch({ searchString }) {\n    this._debouncedSearchFn({ searchString });\n  }\n\n  @proxify\n  async search({ searchString }) {\n    if (\n      !this.ready ||\n      !searchString ||\n      searchString.length < this._minimalSearchLength\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.prepareSearch,\n      });\n      return;\n    }\n    this._clearTimeout();\n    this._timeoutId = setTimeout(async () => {\n      const searching = { ...this.state.searching };\n      await this.search({ searchString: undefined });\n      await this.search(searching);\n    }, this._ttl);\n    const searchOnSources = Array.from(this._searchSources.keys());\n    for (const sourceName of searchOnSources) {\n      await this._searchSource({\n        searchOnSources,\n        sourceName,\n        searchString,\n      });\n    }\n  }\n\n  _clearTimeout() {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  // TODO Need to refactor, remove cache, and update data in real time.\n  @proxify\n  async _searchSource({ searchOnSources, sourceName, searchString }) {\n    const searchId = uuid.v4();\n    this._searchIds[sourceName] = searchId;\n    this.store.dispatch({\n      type: this.actionTypes.search,\n    });\n    try {\n      // search cache\n      let entities = null;\n      entities = this._searchFromCache({ sourceName, searchString });\n      if (entities) {\n        this._loadSearching({ searchOnSources, searchString, entities });\n        return;\n      }\n      // search source\n      const searchFn = this._searchSources.get(sourceName);\n      entities = await searchFn({ searchString });\n      // format result\n      const formatFn = this._searchSourcesFormat.get(sourceName);\n      entities = formatFn(entities);\n      // save result\n      this._saveSearching({ sourceName, searchString, entities });\n      if (this._searchIds[sourceName] === searchId) {\n        this._loadSearching({ searchOnSources, searchString, entities });\n      }\n    } catch (error) {\n      this._onSearchError();\n    }\n  }\n\n  _quickSort({ result = [], searchString = '' }) {\n    const list = [...result];\n    if (searchString === '') {\n      return list;\n    }\n    return list.sort((current, next) => {\n      const currentName = current.name || '';\n      const currentPhoneNumber = current.phoneNumber || '';\n      const nextName = next.name || '';\n      const nextPhoneNumber = next.phoneNumber || '';\n      const isSort =\n        currentName.indexOf(searchString) < nextName.indexOf(searchString) ||\n        currentPhoneNumber.indexOf(searchString) <\n          nextPhoneNumber.indexOf(searchString);\n      return isSort;\n    });\n  }\n\n  _searchFromCache({ sourceName, searchString }) {\n    const key = `${sourceName}-${searchString}`;\n    const searching =\n      this.cache && this.cache.contactSearch && this.cache.contactSearch[key];\n    const now = Date.now();\n    if (searching && now - searching.timestamp < this._ttl) {\n      return searching.entities;\n    }\n    return null;\n  }\n\n  _readyCheck() {\n    for (const sourceName of this._searchSourcesCheck.keys()) {\n      if (!this._searchSourcesCheck.get(sourceName)()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _onSearchError() {\n    this.store.dispatch({\n      type: this.actionTypes.searchError,\n    });\n  }\n\n  _loadSearching({ searchOnSources, searchString, entities }) {\n    this.store.dispatch({\n      type: this.actionTypes.searchSuccess,\n      searchOnSources,\n      searchString,\n      entities,\n    });\n  }\n\n  _saveSearching({ sourceName, searchString, entities }) {\n    this.store.dispatch({\n      type: this.actionTypes.save,\n      sourceName,\n      searchString,\n      entities,\n      ttl: this._ttl,\n    });\n  }\n\n  get cache() {\n    return this._storage\n      ? this._storage.getItem(this._storageKey)\n      : this.state.cache;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get searchStatus() {\n    return this.state.searchStatus;\n  }\n\n  get searching() {\n    return this.state.searching;\n  }\n\n  get searchResult() {\n    return this.searching ? this.searching.result : [];\n  }\n\n  @selector\n  sortedResult = [\n    () => this.searching,\n    (searching) => this._quickSort(searching),\n  ];\n}\n"],"file":"index.js"}