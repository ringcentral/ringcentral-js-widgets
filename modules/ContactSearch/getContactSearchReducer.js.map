{"version":3,"sources":["modules/ContactSearch/getContactSearchReducer.ts"],"names":["getContactSearchStatusReducer","types","state","contactSearchStatus","idle","type","search","searching","prepareSearch","searchSuccess","searchError","getSearchingReducer","initialState","searchOnSources","searchString","result","entities","join","resultMap","newResult","forEach","item","id","push","resetSuccess","reset","getContactSearchReducer","reducers","status","searchStatus"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;AAEO,SAASA,6BAAT,CAAuCC,KAAvC,EAA8C;AACnD,SAAO,YAAgD;AAAA,QAA/CC,KAA+C,uEAAvCC,gCAAoBC,IAAmB;;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACrD,YAAQA,IAAR;AACE,WAAKJ,KAAK,CAACK,MAAX;AACE,eAAOH,gCAAoBI,SAA3B;;AAEF,WAAKN,KAAK,CAACO,aAAX;AACA,WAAKP,KAAK,CAACQ,aAAX;AACA,WAAKR,KAAK,CAACS,WAAX;AACE,eAAOP,gCAAoBC,IAA3B;;AAEF;AACE,eAAOF,KAAP;AAVJ;AAYD,GAbD;AAcD;;AAEM,SAASS,mBAAT,CAA6BV,KAA7B,EAAoC;AACzC,MAAMW,YAAY,GAAG;AACnBC,IAAAA,eAAe,EAAE,EADE;AAEnBC,IAAAA,YAAY,EAAE,EAFK;AAGnBC,IAAAA,MAAM,EAAE;AAHW,GAArB;AAKA,SAAO,YAGF;AAAA,QAFHb,KAEG,uEAFKU,YAEL;;AAAA;AAAA,QADDP,IACC,SADDA,IACC;AAAA,QADKQ,eACL,SADKA,eACL;AAAA,QADsBC,YACtB,SADsBA,YACtB;AAAA,QADoCE,QACpC,SADoCA,QACpC;;AACH,YAAQX,IAAR;AACE,WAAKJ,KAAK,CAACQ,aAAX;AACE,YACEP,KAAK,CAACY,YAAN,KAAuBA,YAAvB,IACAZ,KAAK,CAACW,eAAN,CAAsBI,IAAtB,CAA2B,GAA3B,MAAoCJ,eAAe,CAACI,IAAhB,CAAqB,GAArB,CAFtC,EAGE;AACA,cAAMC,SAAS,GAAG,EAAlB;AACA,cAAMC,SAAS,GAAG,EAAlB;AACAjB,UAAAA,KAAK,CAACa,MAAN,CAAaK,OAAb,CAAqB,UAACC,IAAD,EAAU;AAC7BH,YAAAA,SAAS,CAACG,IAAI,CAACC,EAAN,CAAT,GAAqB,CAArB;AACAH,YAAAA,SAAS,CAACI,IAAV,CAAeF,IAAf;AACD,WAHD;AAIAL,UAAAA,QAAQ,CAACI,OAAT,CAAiB,UAACC,IAAD,EAAU;AACzB,gBAAIH,SAAS,CAACG,IAAI,CAACC,EAAN,CAAb,EAAwB;AACtB;AACD;;AACDH,YAAAA,SAAS,CAACI,IAAV,CAAeF,IAAf;AACAH,YAAAA,SAAS,CAACG,IAAI,CAACC,EAAN,CAAT,GAAqB,CAArB;AACD,WAND;AAOA,iDACKpB,KADL;AAEEa,YAAAA,MAAM,EAAEI;AAFV;AAID;;AACD,eAAO;AACLN,UAAAA,eAAe,EAAfA,eADK;AAELC,UAAAA,YAAY,EAAZA,YAFK;AAGLC,UAAAA,MAAM,EAAEC;AAHH,SAAP;;AAKF,WAAKf,KAAK,CAACuB,YAAX;AACA,WAAKvB,KAAK,CAACO,aAAX;AACA,WAAKP,KAAK,CAACwB,KAAX;AACA,WAAKxB,KAAK,CAACS,WAAX;AACE,eAAOE,YAAP;;AACF,WAAKX,KAAK,CAACK,MAAX;AACA;AACE,eAAOJ,KAAP;AApCJ;AAsCD,GA1CD;AA2CD;;AAEc,SAASwB,uBAAT,CAAiCzB,KAAjC,EAAuD;AAAA,MAAf0B,QAAe,uEAAJ,EAAI;AACpE,SAAO,4DACFA,QADE;AAELC,IAAAA,MAAM,EAAE,wCAAuB3B,KAAvB,CAFH;AAGL4B,IAAAA,YAAY,EAAE7B,6BAA6B,CAACC,KAAD,CAHtC;AAILM,IAAAA,SAAS,EAAEI,mBAAmB,CAACV,KAAD;AAJzB,KAAP;AAMD","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport contactSearchStatus from './contactSearchStatus';\n\nexport function getContactSearchStatusReducer(types) {\n  return (state = contactSearchStatus.idle, { type }) => {\n    switch (type) {\n      case types.search:\n        return contactSearchStatus.searching;\n\n      case types.prepareSearch:\n      case types.searchSuccess:\n      case types.searchError:\n        return contactSearchStatus.idle;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSearchingReducer(types) {\n  const initialState = {\n    searchOnSources: [],\n    searchString: '',\n    result: [],\n  };\n  return (\n    state = initialState,\n    { type, searchOnSources, searchString, entities },\n  ) => {\n    switch (type) {\n      case types.searchSuccess:\n        if (\n          state.searchString === searchString &&\n          state.searchOnSources.join(',') === searchOnSources.join(',')\n        ) {\n          const resultMap = {};\n          const newResult = [];\n          state.result.forEach((item) => {\n            resultMap[item.id] = 1;\n            newResult.push(item);\n          });\n          entities.forEach((item) => {\n            if (resultMap[item.id]) {\n              return;\n            }\n            newResult.push(item);\n            resultMap[item.id] = 1;\n          });\n          return {\n            ...state,\n            result: newResult,\n          };\n        }\n        return {\n          searchOnSources,\n          searchString,\n          result: entities,\n        };\n      case types.resetSuccess:\n      case types.prepareSearch:\n      case types.reset:\n      case types.searchError:\n        return initialState;\n      case types.search:\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getContactSearchReducer(types, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(types),\n    searchStatus: getContactSearchStatusReducer(types),\n    searching: getSearchingReducer(types),\n  });\n}\n"],"file":"getContactSearchReducer.js"}