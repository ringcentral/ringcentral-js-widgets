{"version":3,"file":"ContactSearch.js","names":["_ramda","require","uuid","_interopRequireWildcard","_core","_debounceThrottle","_di","_proxify","_contactSearchStatus","_dec","_dec2","_dec3","_class","_class2","_descriptor","_descriptor2","_descriptor3","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_createForOfIteratorHelper","o","allowArrayLike","it","length","i","F","s","n","done","value","e","_e","f","normalCompletion","didErr","err","step","next","_e2","minLen","toString","slice","constructor","name","test","len","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","undefined","_initializerDefineProperty","property","descriptor","context","initializer","_classCallCheck","instance","Constructor","_defineProperties","props","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","_get","Reflect","bind","receiver","base","_superPropBase","_getPrototypeOf","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","decorators","reverse","reduce","decorator","_initializerWarningHelper","Error","DefaultMinimalSearchLength","exports","DefaultSearchingState","searchOnSources","searchString","ContactSearch","Module","deps","dep","optional","computed","_ref","searching","_ref2","_RcModuleV","_super","_deps$contactSearchOp","_deps$contactSearchOp2","_this$_deps$contactSe","_this$_deps$contactSe2","_this$_deps$contactSe3","_this$_deps$contactSe4","_this","storageKey","enableCache","contactSearchOptions","_searchSources","Map","_searchSourcesFormat","_searchSourcesCheck","_searchIds","_ttl","_deps","ttl","_minimalSearchLength","minimalSearchLength","_debouncedSearchFn","debounce","search","threshold","_timeoutId","setSearchStatus","searchStatus","setPrepareSearch","contactSearchStatus","prepareSearching","setSearchSuccess","_ref3","_this2","entities","sortBy","identity","join","resultMap","item","id","setContactSearch","_ref4","_this3","sourceName","data","contactSearch","Date","now","timestamp","concat","cleanUp","resetContactSearch","onInitSuccess","onReset","cancel","_shouldInit","auth","loggedIn","_readyCheck","_shouldReset","ready","addSearchSource","_ref5","searchFn","readyCheckFn","formatFn","_debouncedSearch","regeneratorRuntime","mark","_callee","_ref6","wrap","_callee$","_context","prev","stop","debouncedSearch","_x","_search","_callee3","_ref7","_this4","_i","_searchOnSources","_callee3$","_context3","abrupt","_clearTimeout","setTimeout","_callee2","_callee2$","_context2","_searchSource","idle","_x2","clearTimeout","_searchSource2","_callee4","_ref9","searchId","_callee4$","_context4","v4","_searchFromCache","_loadSearching","sent","_saveSearching","t0","_onSearchError","_x3","_ref10","_iterator","_step","_ref11","_ref12","_this$searching$resul","_this$searching","_this$searching$resul2","_this$searching$searc","list","sort","current","currentName","currentPhoneNumber","phoneNumber","nextName","nextPhoneNumber","indexOf","RcModuleV2","storage","state","action","proxify"],"sources":["modules/ContactSearch/ContactSearch.ts"],"sourcesContent":["import { identity, sortBy } from 'ramda';\nimport * as uuid from 'uuid';\n\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\n\nimport { debounce } from '../../lib/debounce-throttle';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport type {\n  ContactSearchState,\n  Deps,\n  Entities,\n  SearchFromCacheOptions,\n  Searching,\n  SearchSource,\n  SearchSourceOptions,\n  SearchStringOptions,\n  SetContactSearchOptions,\n  SetSearchSuccessOptions,\n} from './ContactSearch.interface';\nimport { contactSearchStatus } from './contactSearchStatus';\n\nexport const DefaultMinimalSearchLength = 3;\n\nexport const DefaultSearchingState: Searching = {\n  searchOnSources: [],\n  searchString: '',\n  result: [],\n};\n\n@Module({\n  name: 'ContactSearch',\n  deps: [\n    'Auth',\n    { dep: 'Storage', optional: true },\n    { dep: 'ContactSearchOptions', optional: true },\n  ],\n})\nexport class ContactSearch extends RcModuleV2<Deps> {\n  protected _searchSources = new Map<\n    SearchSource['sourceName'],\n    SearchSource['searchFn']\n  >();\n\n  protected _searchSourcesFormat = new Map<\n    SearchSource['sourceName'],\n    SearchSource['formatFn']\n  >();\n\n  protected _searchSourcesCheck = new Map<\n    SearchSource['sourceName'],\n    SearchSource['readyCheckFn']\n  >();\n\n  protected _searchIds: Record<string, string> = {};\n\n  protected _ttl = this._deps.contactSearchOptions?.ttl ?? 5 * 60 * 1000;\n\n  protected _minimalSearchLength =\n    this._deps.contactSearchOptions?.minimalSearchLength ??\n    DefaultMinimalSearchLength;\n\n  protected _debouncedSearchFn = debounce({ fn: this.search, threshold: 800 });\n\n  // @ts-expect-error\n  protected _timeoutId: NodeJS.Timeout = null;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      storageKey: 'ContactSearch',\n      enableCache: deps.contactSearchOptions?.enableCache ?? true,\n    });\n  }\n\n  @storage\n  @state\n  contactSearch: Record<string, ContactSearchState> = {};\n\n  @state\n  searchStatus = contactSearchStatus.idle;\n\n  @state\n  searching: Searching = DefaultSearchingState;\n\n  @action\n  setSearchStatus(searchStatus: string) {\n    this.searchStatus = searchStatus;\n  }\n\n  @action\n  setPrepareSearch() {\n    this.searchStatus = contactSearchStatus.prepareSearching;\n    this.searching = DefaultSearchingState;\n  }\n\n  @action\n  setSearchSuccess({\n    searchOnSources,\n    searchString,\n    entities,\n  }: SetSearchSuccessOptions) {\n    if (\n      this.searching.searchString === searchString &&\n      sortBy(identity)(this.searching.searchOnSources).join(',') ===\n        sortBy(identity)(searchOnSources).join(',')\n    ) {\n      const resultMap: Record<string, boolean> = {};\n      this.searching.result.forEach((item) => {\n        resultMap[item.id] = true;\n      });\n      entities.forEach((item) => {\n        if (!resultMap[item.id]) {\n          this.searching.result.push(item);\n          resultMap[item.id] = true;\n        }\n      });\n      return;\n    }\n    this.searching = {\n      searchOnSources,\n      searchString,\n      result: entities,\n    };\n  }\n\n  @action\n  setContactSearch({\n    sourceName,\n    searchString,\n    entities,\n    ttl,\n  }: SetContactSearchOptions) {\n    const data: Record<string, ContactSearchState> = {};\n    Object.keys(this.contactSearch).forEach((key) => {\n      if (Date.now() - this.contactSearch[key].timestamp < ttl) {\n        data[key] = this.contactSearch[key];\n      }\n    });\n    const key = `${sourceName}-${searchString}`;\n    data[key] = {\n      entities,\n      timestamp: Date.now(),\n    };\n    this.contactSearch = data;\n  }\n\n  @action\n  cleanUp() {\n    this.contactSearch = {};\n    this.searching = DefaultSearchingState;\n  }\n\n  @action\n  resetContactSearch() {\n    this.contactSearch = {};\n  }\n\n  override onInitSuccess() {\n    this.resetContactSearch();\n  }\n\n  override onReset() {\n    this.cleanUp();\n    if (this._debouncedSearchFn) {\n      this._debouncedSearchFn.cancel();\n    }\n  }\n\n  override _shouldInit() {\n    return !!(\n      super._shouldInit() &&\n      this._deps.auth.loggedIn &&\n      this._readyCheck()\n    );\n  }\n\n  override _shouldReset() {\n    return !!(\n      super._shouldReset() ||\n      (this.ready && !this._deps.auth.loggedIn)\n    );\n  }\n\n  addSearchSource({\n    sourceName,\n    searchFn,\n    readyCheckFn,\n    formatFn,\n  }: SearchSource) {\n    if (!sourceName) {\n      throw new Error(\n        '[ContactSearch > SearchSource > sourceName] is required',\n      );\n    }\n    if (this._searchSources.has(sourceName)) {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > searchFn] already exists`,\n      );\n    }\n    if (this._searchSourcesCheck.has(sourceName)) {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > readyCheckFn] already exists`,\n      );\n    }\n    if (this._searchSourcesFormat.has(sourceName)) {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > formatFn] already exists`,\n      );\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > searchFn] must be a function`,\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > readyCheckFn] must be a function`,\n      );\n    }\n    if (typeof formatFn !== 'function') {\n      throw new Error(\n        `[ContactSearch > SearchSource(${sourceName}) > formatFn] must be a function`,\n      );\n    }\n    this._searchSources.set(sourceName, searchFn);\n    this._searchSourcesFormat.set(sourceName, formatFn);\n    this._searchSourcesCheck.set(sourceName, readyCheckFn);\n  }\n\n  @proxify\n  async debouncedSearch({ searchString }: SearchStringOptions) {\n    this._debouncedSearchFn({ searchString });\n  }\n\n  @proxify\n  async search({ searchString }: SearchStringOptions) {\n    if (\n      !this.ready ||\n      !searchString ||\n      searchString.length < this._minimalSearchLength\n    ) {\n      this.setPrepareSearch();\n      return;\n    }\n    this._clearTimeout();\n    this._timeoutId = setTimeout(async () => {\n      const searching = { ...this.searching };\n      // @ts-expect-error\n      await this.search({ searchString: undefined });\n      await this.search(searching);\n    }, this._ttl);\n    const searchOnSources = Array.from(this._searchSources.keys());\n    for (const sourceName of searchOnSources) {\n      await this._searchSource({\n        searchOnSources,\n        sourceName,\n        searchString,\n      });\n    }\n    this.setSearchStatus(contactSearchStatus.idle);\n  }\n\n  _clearTimeout() {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  // TODO: Need to refactor, remove cache, and update data in real time.\n  @proxify\n  async _searchSource({\n    searchOnSources,\n    sourceName,\n    searchString,\n  }: SearchSourceOptions) {\n    const searchId = uuid.v4();\n    this._searchIds[sourceName] = searchId;\n    this.setSearchStatus(contactSearchStatus.searching);\n    try {\n      // search cache\n      // @ts-expect-error\n      let entities: Entities = null;\n      // @ts-expect-error\n      entities = this._searchFromCache({ sourceName, searchString });\n      if (entities) {\n        this._loadSearching({ searchOnSources, searchString, entities });\n        return;\n      }\n      // search source\n      const searchFn = this._searchSources.get(sourceName);\n      // @ts-expect-error\n      entities = await searchFn({ searchString });\n      // format result\n      const formatFn = this._searchSourcesFormat.get(sourceName);\n      // @ts-expect-error\n      entities = formatFn(entities);\n      // save result\n      this._saveSearching({ sourceName, searchString, entities });\n      if (this._searchIds[sourceName] === searchId) {\n        this._loadSearching({ searchOnSources, searchString, entities });\n      }\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      this._onSearchError();\n    }\n  }\n\n  _searchFromCache({ sourceName, searchString }: SearchFromCacheOptions) {\n    const key = `${sourceName}-${searchString}`;\n    const searching = this.contactSearch[key];\n    const now = Date.now();\n    if (searching && now - searching.timestamp < this._ttl) {\n      return searching.entities;\n    }\n    return null;\n  }\n\n  _readyCheck() {\n    for (const sourceName of this._searchSourcesCheck.keys()) {\n      // @ts-expect-error\n      if (!this._searchSourcesCheck.get(sourceName)()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _onSearchError() {\n    this.setPrepareSearch();\n  }\n\n  _loadSearching({\n    searchOnSources,\n    searchString,\n    entities,\n  }: SetSearchSuccessOptions) {\n    this.setSearchSuccess({\n      searchOnSources,\n      searchString,\n      entities,\n    });\n  }\n\n  _saveSearching({\n    sourceName,\n    searchString,\n    entities,\n  }: Pick<\n    SetContactSearchOptions,\n    Exclude<keyof SetContactSearchOptions, 'ttl'>\n  >) {\n    this.setContactSearch({\n      sourceName,\n      searchString,\n      entities,\n      ttl: this._ttl,\n    });\n  }\n\n  @computed(({ searching }: ContactSearch) => [searching])\n  get searchResult() {\n    return this.searching.result ?? [];\n  }\n\n  @computed(({ searching }: ContactSearch) => [searching])\n  get sortedResult() {\n    const { result = [], searchString = '' } = this.searching;\n    const list = [...result];\n    if (searchString === '') {\n      return list;\n    }\n    return list.sort((current, next) => {\n      const currentName = current.name || '';\n      const currentPhoneNumber = current.phoneNumber || '';\n      const nextName = next.name || '';\n      const nextPhoneNumber = next.phoneNumber || '';\n      return (\n        nextName.indexOf(searchString) -\n        currentName.indexOf(searchString) +\n        (nextPhoneNumber.indexOf(searchString) -\n          currentPhoneNumber.indexOf(searchString))\n      );\n    });\n  }\n\n  get minimalSearchLength() {\n    return this._minimalSearchLength;\n  }\n\n  get isIdle() {\n    return this.searchStatus === contactSearchStatus.idle;\n  }\n\n  get isSearching() {\n    return this.searchStatus === contactSearchStatus.searching;\n  }\n}\n"],"mappings":"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"}