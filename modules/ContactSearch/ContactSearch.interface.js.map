{"version":3,"file":"ContactSearch.interface.js","names":[],"sources":["modules/ContactSearch/ContactSearch.interface.ts"],"sourcesContent":["import type { Auth } from '../Auth';\nimport type { Storage } from '../Storage';\nimport type { TabManager } from '../TabManager';\n\nexport interface ContactSearchState {\n  entities: Entities;\n  timestamp: number;\n}\n\nexport interface SetSearchSuccessOptions {\n  searchOnSources: string[];\n  searchString: SearchString;\n  entities: Entities;\n}\n\nexport interface SetContactSearchOptions {\n  sourceName: SearchSource['sourceName'];\n  searchString: SearchString;\n  entities: Entities;\n  ttl: number;\n}\n\nexport interface Searching {\n  searchOnSources: SearchSource['sourceName'][];\n  searchString: SearchString;\n  result: Entities;\n}\n\nexport type Entities = {\n  id: string;\n  name: string;\n  phoneNumber: string;\n}[];\n\nexport interface SearchFromCacheOptions {\n  sourceName: SearchSource['sourceName'];\n  searchString: SearchString;\n}\n\nexport interface SearchSourceOptions {\n  searchOnSources: SearchSource['sourceName'][];\n  sourceName: SearchSource['sourceName'];\n  searchString: SearchString;\n}\n\nexport type SearchString = string;\n\nexport interface SearchStringOptions {\n  searchString: SearchString;\n}\n\nexport interface SearchSource {\n  sourceName: string;\n  searchFn: (\n    searchStringOptions: SearchStringOptions,\n  ) => Promise<null | Entities>;\n  readyCheckFn: () => boolean;\n  formatFn: (entities: Entities) => Entities;\n}\n\nexport interface ContactSearchOptions {\n  /**\n   * minimal search text length, default 3 characters\n   */\n  minimalSearchLength?: number;\n  /**\n   * timestamp of local cache, default 5 mins\n   */\n  ttl: number;\n  /**\n   * enable cache for local cache, default true\n   */\n  enableCache: boolean;\n}\n\nexport interface ContactsOptions {}\n\nexport interface Deps {\n  auth: Auth;\n  storage: Storage;\n  tabManager: TabManager;\n  contactSearchOptions: ContactSearchOptions;\n}\n"],"mappings":""}