{"version":3,"sources":["modules/BlockedNumberV2/BlockedNumber.ts"],"names":["BlockedNumber","name","deps","dep","optional","data","_source","DataSource","blockedNumberOptions","key","cleanOnReset","fetchFunction","params","_deps","client","account","extension","blockedNumber","list","readyCheckFunction","extensionFeatures","ready","dataFetcherV2","permissionCheckFunction","features","ReadBlockedNumbers","available","register","DataFetcherV2Consumer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYaA,a,WATZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,eADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,eAFI,EAGJ,mBAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,sBAAP;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAJI;AAFA,CAAP,C,UAoCE,oBAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAA6B,CAACA,IAAD,CAA7B;AAAA,CAAT,C;;;;;AAvBD,yBAAYH,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;AAGA,UAAKI,OAAL,GAAe,IAAIC,wBAAJ,iCACVL,IAAI,CAACM,oBADK;AAEbC,MAAAA,GAAG,EAAE,eAFQ;AAGbC,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,aAAa;AAAA,qFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,mDACb,2BAAU,UAACC,MAAD;AAAA,2BACR,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAlB,GAA4BC,SAA5B,GAAwCC,aAAxC,GAAwDC,IAAxD,CAA6DN,MAA7D,CADQ;AAAA,mBAAV,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAJA;AAQbO,MAAAA,kBAAkB,EAAE;AAAA,eAClB,CAAC,EACC,MAAKN,KAAL,CAAWO,iBAAX,CAA6BC,KAA7B,IAAsC,MAAKR,KAAL,CAAWS,aAAX,CAAyBD,KADhE,CADiB;AAAA,OARP;AAYbE,MAAAA,uBAAuB,EAAE;AAAA;;AAAA,kEACvB,MAAKV,KAAL,CAAWO,iBAAX,CAA6BI,QADN,qFACvB,uBAAuCC,kBADhB,2DACvB,uBAA2DC,SADpC,yEAEvB,KAFuB;AAAA;AAZZ,OAAf;;AAgBA,UAAKb,KAAL,CAAWS,aAAX,CAAyBK,QAAzB,CAAkC,MAAKrB,OAAvC;;AApBsB;AAqBvB;;;;wBAGa;AAAA;;AACZ,2BAAO,KAAKD,IAAZ,mDAAoB,EAApB;AACD;;;;EA9BgCuB,mC","sourcesContent":["import BlockedNumberInfo from 'ringcentral-client/build/definitions/BlockedNumberInfo';\n\nimport { computed } from '@ringcentral-integration/core';\n\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './BlockedNumber.interface';\n\n@Module({\n  name: 'BlockedNumber',\n  deps: [\n    'Client',\n    'DataFetcherV2',\n    'ExtensionFeatures',\n    { dep: 'BlockedNumberOptions', optional: true },\n  ],\n})\nexport class BlockedNumber extends DataFetcherV2Consumer<\n  Deps,\n  BlockedNumberInfo[]\n> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.blockedNumberOptions,\n      key: 'blockedNumber',\n      cleanOnReset: true,\n      fetchFunction: async (): Promise<BlockedNumberInfo[]> =>\n        fetchList((params: any) =>\n          this._deps.client.account().extension().blockedNumber().list(params),\n        ),\n      readyCheckFunction: () =>\n        !!(\n          this._deps.extensionFeatures.ready && this._deps.dataFetcherV2.ready\n        ),\n      permissionCheckFunction: () =>\n        this._deps.extensionFeatures.features?.ReadBlockedNumbers?.available ??\n        false,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  @computed(({ data }: BlockedNumber) => [data])\n  get numbers() {\n    return this.data ?? [];\n  }\n}\n"],"file":"BlockedNumber.js"}