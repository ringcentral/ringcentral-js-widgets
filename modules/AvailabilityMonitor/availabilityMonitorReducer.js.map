{"version":3,"sources":["modules/AvailabilityMonitor/availabilityMonitorReducer.ts"],"names":["hasLimitedStatusErrorReducer","types","state","type","limitedModeStatusError","normalMode","isLimitedModeReducer","limitedMode","isVoIPOnlyModeReducer","VoIPOnlyMode","VoIPOnlyReset","AvailabilityMonitorReducer","status","hasLimitedStatusError","isLimitedMode","isVoIPOnlyMode"],"mappings":";;;;;;;;;;;;AAAA;;AAEA;;;;AAEO,SAASA,4BAAT,CAAsCC,KAAtC,EAA6C;AAClD,SAAO,YAA6B;AAAA,QAA5BC,KAA4B,uEAApB,KAAoB;;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAClC,YAAQA,IAAR;AACE,WAAKF,KAAK,CAACG,sBAAX;AAAmC;AACjC,iBAAO,IAAP;AACD;;AACD,WAAKH,KAAK,CAACI,UAAX;AAAuB;AACrB,iBAAO,KAAP;AACD;;AACD;AACE,eAAOH,KAAP;AARJ;AAUD,GAXD;AAYD;;AAEM,SAASI,oBAAT,CAA8BL,KAA9B,EAAqC;AAC1C,SAAO,YAA6B;AAAA,QAA5BC,KAA4B,uEAApB,KAAoB;;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AAClC,YAAQA,IAAR;AACE,WAAKF,KAAK,CAACM,WAAX;AAAwB;AACtB,iBAAO,IAAP;AACD;;AACD,WAAKN,KAAK,CAACI,UAAX;AAAuB;AACrB,iBAAO,KAAP;AACD;;AACD;AACE,eAAOH,KAAP;AARJ;AAUD,GAXD;AAYD;;AAEM,SAASM,qBAAT,CAA+BP,KAA/B,EAAsC;AAC3C,SAAO,YAA6B;AAAA,QAA5BC,KAA4B,uEAApB,KAAoB;;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AAClC,YAAQA,IAAR;AACE,WAAKF,KAAK,CAACQ,YAAX;AAAyB;AACvB,iBAAO,IAAP;AACD;;AACD,WAAKR,KAAK,CAACS,aAAX;AAA0B;AACxB,iBAAO,KAAP;AACD;;AACD,WAAKT,KAAK,CAACI,UAAX;AAAuB;AACrB,iBAAO,KAAP;AACD;;AACD;AACE,eAAOH,KAAP;AAXJ;AAaD,GAdD;AAeD;;AAEc,SAASS,0BAAT,CAAoCV,KAApC,EAA2C;AACxD,SAAO,4BAAgB;AACrBW,IAAAA,MAAM,EAAE,wCAAuBX,KAAvB,CADa;AAErBY,IAAAA,qBAAqB,EAAEb,4BAA4B,CAACC,KAAD,CAF9B;AAGrBa,IAAAA,aAAa,EAAER,oBAAoB,CAACL,KAAD,CAHd;AAIrBc,IAAAA,cAAc,EAAEP,qBAAqB,CAACP,KAAD;AAJhB,GAAhB,CAAP;AAMD","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function hasLimitedStatusErrorReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.limitedModeStatusError: {\n        return true;\n      }\n      case types.normalMode: {\n        return false;\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function isLimitedModeReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.limitedMode: {\n        return true;\n      }\n      case types.normalMode: {\n        return false;\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function isVoIPOnlyModeReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.VoIPOnlyMode: {\n        return true;\n      }\n      case types.VoIPOnlyReset: {\n        return false;\n      }\n      case types.normalMode: {\n        return false;\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function AvailabilityMonitorReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    hasLimitedStatusError: hasLimitedStatusErrorReducer(types),\n    isLimitedMode: isLimitedModeReducer(types),\n    isVoIPOnlyMode: isVoIPOnlyModeReducer(types),\n  });\n}\n"],"file":"availabilityMonitorReducer.js"}