{"version":3,"file":"Storage.js","names":["_di","require","_StorageBase2","_Auth","_dec","_class","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","err","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","call","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","dataFetcherKey","Storage","Module","name","deps","dep","optional","_StorageBase","_super","_deps$storageOptions","_this$_deps$storageOp","_this$_deps$storageOp2","_this","StorageProvider","storageOptions","_disableInactiveTabsWrite","_storage","_storageHandler","storedData","_deps","disableInactiveTabsWrite","onStateChange","ready","storageWritable","currentData","data","setItem","_currentData$dataFetc","currentFetcherData","storedFetcherData","needToSave","cachedTimestamps","_key","cachedData","_onInit","regeneratorRuntime","mark","_callee","_this$_deps$storageOp3","_key2","wrap","_callee$","_context","prev","next","_StorageProvider","storageKey","getData","sent","disableClearUnused","t0","t1","_storageReducers","removeItem","setData","hasOwnProperty","stop","onInit","onInitSuccess","_this2","_ref","syncData","on","_shouldInit","auth","loginStatus","loggedIn","tabManager","pending","_shouldReset","notLoggedIn","onReset","off","removeListener","destroy","resetData","get","active","prefix","concat","ownerId","StorageBase","exports"],"sources":["modules/Storage/Storage.ts"],"sourcesContent":["// @ts-nocheck\nimport { Module } from '../../lib/di';\nimport type { IStorage } from '../../lib/StorageBase';\nimport { StorageBase } from '../../lib/StorageBase';\nimport { loginStatus } from '../Auth';\nimport type { Deps } from './Storage.interface';\n\nconst dataFetcherKey = 'dataFetcherV2-storageData';\n\n@Module({\n  name: 'Storage',\n  deps: [\n    'Auth',\n    { dep: 'TabManager', optional: true },\n    { dep: 'StorageOptions', optional: true },\n  ],\n})\nexport class Storage<T extends Deps = Deps> extends StorageBase<T> {\n  protected _disableInactiveTabsWrite: boolean;\n  protected _storage: IStorage;\n  protected _storageHandler: ({\n    key,\n    value,\n  }: {\n    key: string;\n    value: unknown;\n  }) => void = null;\n\n  constructor(deps: T) {\n    super(deps, {\n      name: 'storage',\n      StorageProvider: deps.storageOptions?.StorageProvider,\n    });\n    this._disableInactiveTabsWrite =\n      this._deps.storageOptions?.disableInactiveTabsWrite ?? true;\n  }\n\n  storedData: Record<string, any> = {};\n\n  get storageWritable() {\n    return (\n      !this._disableInactiveTabsWrite ||\n      !this._deps.tabManager ||\n      this._deps.tabManager.active\n    );\n  }\n\n  override onStateChange() {\n    if (this.ready && this.storageWritable) {\n      const currentData = this.data;\n      // save new data to storage when changed\n      for (const key in currentData) {\n        if (key !== dataFetcherKey) {\n          if (this.storedData[key] !== currentData[key]) {\n            this._storage.setItem(key, currentData[key]);\n            this.storedData[key] = currentData[key];\n          }\n        } else {\n          const currentFetcherData = currentData[dataFetcherKey] ?? {};\n          if (!this.storedData[dataFetcherKey]) {\n            this.storedData[dataFetcherKey] = {};\n          }\n          const storedFetcherData = this.storedData[dataFetcherKey];\n          let needToSave = false;\n          // initial state has no cachedTimestamps and need to save\n          if (!storedFetcherData.cachedTimestamps) {\n            needToSave = true;\n            this.storedData[dataFetcherKey] = currentFetcherData;\n          } else {\n            // if cachedTimestamps changed, cachedData should be changed too\n            // And an action only updates one data\n            for (const _key in currentFetcherData.cachedTimestamps) {\n              if (\n                storedFetcherData.cachedTimestamps[_key] !==\n                currentFetcherData.cachedTimestamps[_key]\n              ) {\n                needToSave = true;\n                storedFetcherData.cachedTimestamps[_key] =\n                  currentFetcherData.cachedTimestamps[_key];\n                storedFetcherData.cachedData[_key] =\n                  currentFetcherData.cachedData[_key];\n              }\n            }\n          }\n          if (needToSave) {\n            this._storage.setItem(\n              dataFetcherKey,\n              this.storedData[dataFetcherKey],\n            );\n          }\n        }\n      }\n    }\n  }\n\n  get storageKey() {\n    const prefix = this.prefix ? `${this.prefix}-` : '';\n\n    return `${prefix}storage-${this._deps.auth.ownerId}`;\n  }\n\n  override async onInit() {\n    this._storage = new this._StorageProvider({\n      storageKey: this.storageKey,\n    });\n    this.storedData = await this._storage.getData();\n    if (!this._deps.storageOptions?.disableClearUnused) {\n      for (const key in this.storedData) {\n        if (!this._storageReducers[key]) {\n          delete this.storedData[key];\n          await this._storage.removeItem(key);\n        }\n      }\n    }\n    this.setData({\n      ...this.data,\n      ...this.storedData,\n    });\n    const currentData = this.data;\n    for (const key in currentData) {\n      if (\n        !Object.prototype.hasOwnProperty.call(this.storedData, key) &&\n        this.storageWritable\n      ) {\n        this._storage.setItem(key, currentData[key]);\n      }\n    }\n  }\n\n  override onInitSuccess() {\n    this._storageHandler = ({ key, value }) => {\n      if (this.ready) {\n        this.storedData[key] = value;\n        this.syncData(key, value);\n      }\n    };\n    this._storage.on('storage', this._storageHandler);\n  }\n\n  override _shouldInit() {\n    return (\n      this._deps.auth.loginStatus === loginStatus.loggedIn &&\n      (!this._deps.tabManager || this._deps.tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  override _shouldReset() {\n    return (\n      ((!!this._deps.tabManager && !this._deps.tabManager.ready) ||\n        this._deps.auth.notLoggedIn) &&\n      this.ready\n    );\n  }\n\n  override onReset() {\n    if (this._storageHandler) {\n      if (this._storage.off) {\n        this._storage.off('storage', this._storageHandler);\n      } else if (this._storage.removeListener) {\n        this._storage.removeListener('storage', this._storageHandler);\n      }\n      this._storageHandler = null;\n    }\n    if (this._storage) {\n      this._storage.destroy();\n      this._storage = null;\n    }\n    this.resetData();\n  }\n}\n"],"mappings":"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"}