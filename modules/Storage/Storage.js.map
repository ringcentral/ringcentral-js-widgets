{"version":3,"file":"Storage.js","names":["_StorageBase2","require","_di","_Auth","_dec","_class","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","asyncGeneratorStep","n","a","c","i","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","call","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","dataFetcherKey","Storage","Module","name","deps","dep","optional","_StorageBase","_super","_deps$storageOptions","_this$_deps$storageOp","_this$_deps$storageOp2","_this","StorageProvider","storageOptions","_disableInactiveTabsWrite","_storage","_storageHandler","storedData","_deps","disableInactiveTabsWrite","onStateChange","ready","storageWritable","currentData","data","setItem","_currentData$dataFetc","currentFetcherData","storedFetcherData","needToSave","cachedTimestamps","_key","cachedData","_onInit","regeneratorRuntime","mark","_callee","_this$_deps$storageOp3","_key2","wrap","_callee$","_context","prev","next","_StorageProvider","storageKey","getData","sent","disableClearUnused","t0","t1","_storageReducers","removeItem","setData","hasOwnProperty","stop","onInit","onInitSuccess","_this2","_ref","syncData","on","_shouldInit","auth","loginStatus","loggedIn","tabManager","pending","_shouldReset","notLoggedIn","onReset","off","removeListener","destroy","resetData","get","active","prefix","concat","ownerId","StorageBase","exports"],"sources":["modules/Storage/Storage.ts"],"sourcesContent":["// @ts-nocheck\nimport type { IStorage } from '../../lib/StorageBase';\nimport { StorageBase } from '../../lib/StorageBase';\nimport { Module } from '../../lib/di';\nimport { loginStatus } from '../Auth';\n\nimport type { Deps } from './Storage.interface';\n\nconst dataFetcherKey = 'dataFetcherV2-storageData';\n\n@Module({\n  name: 'Storage',\n  deps: [\n    'Auth',\n    { dep: 'TabManager', optional: true },\n    { dep: 'StorageOptions', optional: true },\n  ],\n})\nexport class Storage<T extends Deps = Deps> extends StorageBase<T> {\n  protected _disableInactiveTabsWrite: boolean;\n  protected _storage: IStorage;\n  protected _storageHandler: ({\n    key,\n    value,\n  }: {\n    key: string;\n    value: unknown;\n  }) => void = null;\n\n  constructor(deps: T) {\n    super(deps, {\n      name: 'storage',\n      StorageProvider: deps.storageOptions?.StorageProvider,\n    });\n    this._disableInactiveTabsWrite =\n      this._deps.storageOptions?.disableInactiveTabsWrite ?? true;\n  }\n\n  storedData: Record<string, any> = {};\n\n  get storageWritable() {\n    return (\n      !this._disableInactiveTabsWrite ||\n      !this._deps.tabManager ||\n      this._deps.tabManager.active\n    );\n  }\n\n  override onStateChange() {\n    if (this.ready && this.storageWritable) {\n      const currentData = this.data;\n      // save new data to storage when changed\n      for (const key in currentData) {\n        if (key !== dataFetcherKey) {\n          if (this.storedData[key] !== currentData[key]) {\n            this._storage.setItem(key, currentData[key]);\n            this.storedData[key] = currentData[key];\n          }\n        } else {\n          const currentFetcherData = currentData[dataFetcherKey] ?? {};\n          if (!this.storedData[dataFetcherKey]) {\n            this.storedData[dataFetcherKey] = {};\n          }\n          const storedFetcherData = this.storedData[dataFetcherKey];\n          let needToSave = false;\n          // initial state has no cachedTimestamps and need to save\n          if (!storedFetcherData.cachedTimestamps) {\n            needToSave = true;\n            this.storedData[dataFetcherKey] = currentFetcherData;\n          } else {\n            // if cachedTimestamps changed, cachedData should be changed too\n            // And an action only updates one data\n            for (const _key in currentFetcherData.cachedTimestamps) {\n              if (\n                storedFetcherData.cachedTimestamps[_key] !==\n                currentFetcherData.cachedTimestamps[_key]\n              ) {\n                needToSave = true;\n                storedFetcherData.cachedTimestamps[_key] =\n                  currentFetcherData.cachedTimestamps[_key];\n                storedFetcherData.cachedData[_key] =\n                  currentFetcherData.cachedData[_key];\n              }\n            }\n          }\n          if (needToSave) {\n            this._storage.setItem(\n              dataFetcherKey,\n              this.storedData[dataFetcherKey],\n            );\n          }\n        }\n      }\n    }\n  }\n\n  get storageKey() {\n    const prefix = this.prefix ? `${this.prefix}-` : '';\n\n    return `${prefix}storage-${this._deps.auth.ownerId}`;\n  }\n\n  override async onInit() {\n    this._storage = new this._StorageProvider({\n      storageKey: this.storageKey,\n    });\n    this.storedData = await this._storage.getData();\n    if (!this._deps.storageOptions?.disableClearUnused) {\n      for (const key in this.storedData) {\n        if (!this._storageReducers[key]) {\n          delete this.storedData[key];\n          await this._storage.removeItem(key);\n        }\n      }\n    }\n    this.setData({\n      ...this.data,\n      ...this.storedData,\n    });\n    const currentData = this.data;\n    for (const key in currentData) {\n      if (\n        !Object.prototype.hasOwnProperty.call(this.storedData, key) &&\n        this.storageWritable\n      ) {\n        this._storage.setItem(key, currentData[key]);\n      }\n    }\n  }\n\n  override onInitSuccess() {\n    this._storageHandler = ({ key, value }) => {\n      if (this.ready) {\n        this.storedData[key] = value;\n        this.syncData(key, value);\n      }\n    };\n    this._storage.on('storage', this._storageHandler);\n  }\n\n  override _shouldInit() {\n    return (\n      this._deps.auth.loginStatus === loginStatus.loggedIn &&\n      (!this._deps.tabManager || this._deps.tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  override _shouldReset() {\n    return (\n      ((!!this._deps.tabManager && !this._deps.tabManager.ready) ||\n        this._deps.auth.notLoggedIn) &&\n      this.ready\n    );\n  }\n\n  override onReset() {\n    if (this._storageHandler) {\n      if (this._storage.off) {\n        this._storage.off('storage', this._storageHandler);\n      } else if (this._storage.removeListener) {\n        this._storage.removeListener('storage', this._storageHandler);\n      }\n      this._storageHandler = null;\n    }\n    if (this._storage) {\n      this._storage.destroy();\n      this._storage = null;\n    }\n    this.resetData();\n  }\n}\n"],"mappings":"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","ignoreList":[]}