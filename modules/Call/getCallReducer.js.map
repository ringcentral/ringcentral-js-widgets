{"version":3,"sources":["modules/Call/getCallReducer.ts"],"names":["getCallStatusReducer","types","state","callStatus","idle","type","connect","connecting","connectSuccess","connectError","getToNumberEntitiesReducer","data","toNumberMatched","cleanToNumberEntities","resetSuccess","getLastPhoneNumberReducer","isConference","phoneNumber","getLastRecipientReducer","recipient","getCallReducer","status","toNumberEntities"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;AAEO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9BC,uBAAWC,IAAmB;;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAC5C,YAAQA,IAAR;AACE,WAAKJ,KAAK,CAACK,OAAX;AACE,eAAOH,uBAAWI,UAAlB;;AAEF,WAAKN,KAAK,CAACO,cAAX;AACA,WAAKP,KAAK,CAACQ,YAAX;AACE,eAAON,uBAAWC,IAAlB;;AAEF;AACE,eAAOF,KAAP;AATJ;AAWD,GAZD;AAaD;;AAEM,SAASQ,0BAAT,CAAoCT,KAApC,EAA2C;AAChD,SAAO,YAAgC;AAAA,QAA/BC,KAA+B,uEAAvB,EAAuB;;AAAA;AAAA,QAAjBG,IAAiB,SAAjBA,IAAiB;AAAA,QAAXM,IAAW,SAAXA,IAAW;;AACrC,YAAQN,IAAR;AACE,WAAKJ,KAAK,CAACW,eAAX;AACE,4CAAWV,KAAX,IAAkBS,IAAlB;;AACF,WAAKV,KAAK,CAACY,qBAAX;AACA,WAAKZ,KAAK,CAACa,YAAX;AACE,eAAO,EAAP;;AACF;AACE,eAAOZ,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEM,SAASa,yBAAT,CAAmCd,KAAnC,EAA0C;AAC/C,SAAO,YAA8D;AAAA,QAA7DC,KAA6D,uEAArD,IAAqD;;AAAA;AAAA,QAA7CG,IAA6C,SAA7CA,IAA6C;AAAA,QAAvCW,YAAuC,SAAvCA,YAAuC;AAAA,kCAAzBC,WAAyB;AAAA,QAAzBA,WAAyB,kCAAX,IAAW;;AACnE,YAAQZ,IAAR;AACE,WAAKJ,KAAK,CAACK,OAAX;AACE,eAAOU,YAAY,GAAGd,KAAH,GAAWe,WAA9B;;AACF;AACE,eAAOf,KAAP;AAJJ;AAMD,GAPD;AAQD;;AACM,SAASgB,uBAAT,CAAiCjB,KAAjC,EAAwC;AAC7C,SAAO,YAA4D;AAAA,QAA3DC,KAA2D,uEAAnD,IAAmD;;AAAA;AAAA,QAA3CG,IAA2C,SAA3CA,IAA2C;AAAA,QAArCW,YAAqC,SAArCA,YAAqC;AAAA,gCAAvBG,SAAuB;AAAA,QAAvBA,SAAuB,gCAAX,IAAW;;AACjE,YAAQd,IAAR;AACE,WAAKJ,KAAK,CAACK,OAAX;AACE,eAAOU,YAAY,GAAGd,KAAH,GAAWiB,SAA9B;;AACF;AACE,eAAOjB,KAAP;AAJJ;AAMD,GAPD;AAQD;;AAEc,SAASkB,cAAT,CAAwBnB,KAAxB,EAA+B;AAC5C,SAAO,4BAAgB;AACrBoB,IAAAA,MAAM,EAAE,wCAAuBpB,KAAvB,CADa;AAErBE,IAAAA,UAAU,EAAEH,oBAAoB,CAACC,KAAD,CAFX;AAGrBqB,IAAAA,gBAAgB,EAAEZ,0BAA0B,CAACT,KAAD;AAHvB,GAAhB,CAAP;AAKD","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport { callStatus } from './callStatus';\n\nexport function getCallStatusReducer(types) {\n  return (state = callStatus.idle, { type }) => {\n    switch (type) {\n      case types.connect:\n        return callStatus.connecting;\n\n      case types.connectSuccess:\n      case types.connectError:\n        return callStatus.idle;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getToNumberEntitiesReducer(types) {\n  return (state = [], { type, data }) => {\n    switch (type) {\n      case types.toNumberMatched:\n        return [...state, data];\n      case types.cleanToNumberEntities:\n      case types.resetSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getLastPhoneNumberReducer(types) {\n  return (state = null, { type, isConference, phoneNumber = null }) => {\n    switch (type) {\n      case types.connect:\n        return isConference ? state : phoneNumber;\n      default:\n        return state;\n    }\n  };\n}\nexport function getLastRecipientReducer(types) {\n  return (state = null, { type, isConference, recipient = null }) => {\n    switch (type) {\n      case types.connect:\n        return isConference ? state : recipient;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getCallReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    callStatus: getCallStatusReducer(types),\n    toNumberEntities: getToNumberEntitiesReducer(types),\n  });\n}\n"],"file":"getCallReducer.js"}