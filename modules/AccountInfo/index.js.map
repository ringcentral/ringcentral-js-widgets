{"version":3,"sources":["modules/AccountInfo/index.ts"],"names":["AccountInfo","deps","dep","optional","client","extensionFeatures","alert","options","fetchFunction","account","get","readyCheckFn","_extensionFeatures","ready","console","warn","_alert","_auth","loginStatus","loggedIn","_hasPermission","logout","danger","message","permissionsMessages","insufficientPrivilege","ttl","info","id","serviceInfo","brand","homeCountry","country","isoCode","data","regionalSettings","mainNumber","features","ReadCompanyInfo","available","limits","maxExtensionNumberLength","DataFetcher","selector","servicePlan"],"mappings":"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","sourcesContent":["import { permissionsMessages } from '../../enums/permissionsMessages';\nimport DataFetcher from '../../lib/DataFetcher';\nimport { Module } from '../../lib/di';\nimport { selector } from '../../lib/selector';\nimport loginStatus from '../Auth/loginStatus';\n\n/**\n * @class\n * @description Accound info managing module.\n */\n@Module({\n  deps: [\n    'Client',\n    'ExtensionFeatures',\n    'Alert',\n    { dep: 'AccountInfoOptions', optional: true },\n  ],\n})\nexport default class AccountInfo extends DataFetcher {\n  /**\n   * @deprecated Please evaluate and use AccountInfoV2\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({ client, extensionFeatures, alert, ...options }) {\n    super({\n      client,\n      fetchFunction: async () => client.account().get(),\n      readyCheckFn: () => this._extensionFeatures.ready,\n      ...options,\n    });\n    console.warn(\n      'AccountInfo is deprecated, please evaluate and transition to use AccountInfoV2',\n    );\n    this._extensionFeatures = extensionFeatures;\n    this._alert = alert;\n  }\n\n  get _name() {\n    return 'accountInfo';\n  }\n\n  async _onStateChange() {\n    await super._onStateChange();\n    if (\n      this._auth.loginStatus === loginStatus.loggedIn &&\n      this.ready &&\n      !this._hasPermission\n    ) {\n      await this._auth.logout();\n      if (this._alert) {\n        this._alert.danger({\n          message: permissionsMessages.insufficientPrivilege,\n          ttl: 0,\n        });\n      }\n    }\n  }\n\n  @selector\n  info = [() => this.data, (data) => data || {}];\n\n  @selector\n  serviceInfo = [() => this.info, (info) => info.serviceInfo || {}];\n\n  @selector\n  servicePlan = [\n    () => this.serviceInfo,\n    (serviceInfo) => serviceInfo.servicePlan || {},\n  ];\n\n  get id() {\n    return this.info.id;\n  }\n\n  get country() {\n    return this.info.serviceInfo && this.info.serviceInfo.brand.homeCountry;\n  }\n\n  get countryCode() {\n    return (this.country && this.country.isoCode) || 'US';\n  }\n\n  get regionalSettings() {\n    return this.data.regionalSettings;\n  }\n\n  get mainCompanyNumber() {\n    return this.info.mainNumber;\n  }\n\n  get _hasPermission() {\n    return !!this._extensionFeatures.features?.ReadCompanyInfo?.available;\n  }\n\n  get maxExtensionNumberLength() {\n    return this.info.limits?.maxExtensionNumberLength ?? 6;\n  }\n}\n"],"file":"index.js"}