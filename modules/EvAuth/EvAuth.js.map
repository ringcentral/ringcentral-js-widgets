{"version":3,"file":"EvAuth.js","names":["_di","require","_utils","_core","_format","_interopRequireDefault","_events","_enums","_enums2","_EvTypeError","_sortByName","_trackEvents","_i18n","_dec","_dec2","_dec3","_dec4","_dec5","_dec6","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","e","__esModule","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","n","ownKeys","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_initializerDefineProperty","i","l","initializer","asyncGeneratorStep","c","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","_classCallCheck","_get","Reflect","get","bind","p","_superPropBase","hasOwnProperty","_getPrototypeOf","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","toPrimitive","String","Number","_inherits","create","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","_isNativeReflectConstruct","s","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","reverse","reduce","_initializerWarningHelper","Error","DEFAULT_COUNTRIES","EvAuth","Module","deps","dep","optional","computed","that","inboundSettings","availableQueues","availableRequeueQueues","agentSettings","callerIds","agentConfig","applicationSettings","availableCountries","_deps","locale","currentLocale","track","_","_ref","_agent$authenticateRe","_agent$authenticateRe2","_agent$authenticateRe3","_agent$authenticateRe4","connected","agent","trackEvents","loginAgent","authenticateResponse","agents","map","agentId","rcUserId","undefined","_RcModuleV","_super","_this$_deps$tabManage","tabManager","enable","_this$agent","_this","storageKey","enableGlobalCache","connecting","_eventEmitter","EventEmitter","canUserLogoutFn","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","_logout","_callee2","_callee2$","_context2","auth","logout","dismissAllAlert","setNotAuth","_logoutByOtherTab","_authenticateResponseWatcher","_agentConfigWatcher","_callee3","token","authenticateRes","_args3","_callee3$","_context3","accessToken","authenticateWithToken","rcAccessToken","shouldEmitAuthSuccess","sent","openSocketWithSelectedAgentId","addAfterLoggedInHandler","console","log","clearAgentId","addBeforeLogoutHandler","setAgentId","setConnectionData","_ref5","setAgent","setAuthSuccess","loginStatus","AUTH_SUCCESS","setLoginSuccess","LOGIN_SUCCESS","asyncAllTabs","NOT_AUTH","tabManagerEnabled","send","tabManagerEvents","LOGGED_OUT","_shouldInit","loggedIn","onInitOnce","_this2","evSubscription","subscribe","EvCallbackTypes","LOGOUT","_callee4","_callee4$","_context4","_emitLogoutBefore","alert","info","message","messageTypes","FORCE_LOGOUT","newReconnect","_onStateChange","_callee6","_this3","_callee6$","_context6","ready","_checkTabManagerEvent","block","_callee5","_callee5$","_context5","onStateChange","onceLogout","cb","once","_callee7","logoutAgentResponse","_callee7$","_context7","sendLogoutTabEvent","logoutAgent","evClient","beforeAgentLogout","callback","on","LOGOUT_BEFORE","isBlock","closeSocket","fn","_authenticateWithToken","_callee8","_ref8","_ref8$rcAccessToken","_ref8$tokenType","tokenType","_ref8$shouldEmitAuthS","_args8","_callee8$","_context8","initSDK","getAndHandleAuthenticateResponse","_emitAuthSuccess","t0","t1","type","NO_AGENT","CONNECT_TIMEOUT","UNEXPECTED_AGENT","warning","danger","CONNECT_ERROR","_openSocketWithSelectedAgentId","_callee9","_this4","_ref9","_ref9$syncOtherTabs","syncOtherTabs","_ref9$retryOpenSocket","retryOpenSocket","getAgentConfig","selectedAgentId","openSocketResult","_yield$this$_deps$aut","access_token","openSocketRes","_args9","_callee9$","_context9","LOGIN_PHASE_1","EvTypeError","openSocket","sleep","error","refreshToken","OPEN_SOCKET_ERROR","OPEN_SOCKET","_emitLoginSuccess","INVALID_BROWSER","onceLoginSuccess","onAuthSuccess","emit","_checkTabManagerEvent2","_callee11","_this5","event","_callee11$","_context11","_callee10","_callee10$","_context10","isFreshLogin","_this$agent2","_this$agent3","_this$agentConfig","_this$agentSettings","outboundManualDefaultRingtime","availableSkillProfiles","queues","skillProfile","_this$agentConfig2","agentPermissions","gateId","gateName","i18n","getString","concat","sortByName","description","number","callerId","format","phoneNumber","countryCode","_this$agentConfig3","_this$agentConfig$app","countriesUsaCan","_ref11","countryId","includes","countryName","RcModuleV2","globalStorage","state","action","exports"],"sources":["modules/EvAuth/EvAuth.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { sleep } from '@ringcentral-integration/commons/utils';\nimport {\n  action,\n  computed,\n  globalStorage,\n  RcModuleV2,\n  state,\n  track,\n} from '@ringcentral-integration/core';\nimport format from '@ringcentral-integration/phone-number/lib/format';\nimport { EventEmitter } from 'events';\nimport type { Unsubscribe } from 'redux';\n\nimport { loginStatus, messageTypes, tabManagerEvents } from '../../enums';\nimport type { EvAgentConfig, EvAgentData } from '../../lib/EvClient';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums';\nimport { EvTypeError } from '../../lib/EvTypeError';\nimport { sortByName } from '../../lib/sortByName';\nimport { trackEvents } from '../../lib/trackEvents';\n\nimport type {\n  Auth,\n  AuthenticateWithTokenType,\n  Deps,\n  State,\n} from './EvAuth.interface';\nimport i18n from './i18n';\n\nconst DEFAULT_COUNTRIES = ['USA', 'CAN'];\n\n@Module({\n  name: 'EvAuth',\n  deps: [\n    'EvClient',\n    'Auth',\n    'Block',\n    'Alert',\n    'Locale',\n    'RouterInteraction',\n    'EvSubscription',\n    'TabManager',\n    'GlobalStorage',\n    { dep: 'EvAuthOptions', optional: true },\n  ],\n})\nclass EvAuth extends RcModuleV2<Deps> implements Auth {\n  public connecting = false;\n\n  private _eventEmitter = new EventEmitter();\n\n  public canUserLogoutFn: () => Promise<boolean> = async () => true;\n\n  private _logout = async () => {\n    await this._deps.auth.logout({ dismissAllAlert: false });\n    this.setNotAuth(true);\n  };\n\n  private _logoutByOtherTab = false;\n\n  private _authenticateResponseWatcher: Unsubscribe = null;\n  private _agentConfigWatcher: Unsubscribe = null;\n\n  get tabManagerEnabled() {\n    return this._deps.tabManager?.enable;\n  }\n\n  get isOnlyOneAgent() {\n    return this.agent?.authenticateResponse.agents.length === 1;\n  }\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      storageKey: 'EvAuth',\n      enableGlobalCache: true,\n    });\n    this._deps.auth.addAfterLoggedInHandler(() => {\n      console.log('addAfterLoggedInHandler~~');\n      this.clearAgentId();\n    });\n\n    this._deps.auth.addBeforeLogoutHandler(() => {\n      console.log('addBeforeLogoutHandler~~');\n      this.clearAgentId();\n    });\n  }\n\n  @globalStorage\n  @state\n  connected = false;\n\n  @globalStorage\n  @state\n  agent: EvAgentData = null;\n\n  @globalStorage\n  @state\n  agentId = '';\n\n  @action\n  setAgentId(agentId: string) {\n    this.agentId = agentId;\n  }\n\n  get isFreshLogin() {\n    return this._deps.auth.isFreshLogin;\n  }\n\n  get agentConfig() {\n    return this.agent?.agentConfig || null;\n  }\n\n  get authenticateResponse() {\n    return this.agent?.authenticateResponse || null;\n  }\n\n  get agentSettings() {\n    return this.agentConfig?.agentSettings;\n  }\n\n  get outboundManualDefaultRingtime() {\n    return this.agentSettings?.outboundManualDefaultRingtime;\n  }\n\n  get inboundSettings() {\n    return (\n      this.agentConfig.inboundSettings || {\n        availableQueues: [] as Array<undefined>,\n        availableSkillProfiles: [] as Array<undefined>,\n        queues: [] as Array<undefined>,\n        skillProfile: {} as any,\n        availableRequeueQueues: [] as Array<undefined>,\n      }\n    );\n  }\n\n  get assignedQueue() {\n    return this.inboundSettings.queues;\n  }\n\n  get agentPermissions() {\n    return this.agentConfig?.agentPermissions;\n  }\n\n  @computed((that: EvAuth) => [that.inboundSettings.availableQueues])\n  get availableQueues() {\n    return [\n      {\n        gateId: '-1',\n        gateName: i18n.getString('default', this._deps.locale.currentLocale),\n      },\n      ...sortByName([...this.inboundSettings.availableQueues], 'gateName'),\n    ];\n  }\n\n  @computed((that: EvAuth) => [that.inboundSettings.availableRequeueQueues])\n  get availableRequeueQueues() {\n    return sortByName(\n      [...this.inboundSettings.availableRequeueQueues],\n      'groupName',\n    );\n  }\n\n  @computed((that: EvAuth) => [that.agentSettings.callerIds])\n  get callerIds() {\n    return [\n      {\n        description: i18n.getString('default', this._deps.locale.currentLocale),\n        number: '-1',\n      },\n      ...this.agentSettings.callerIds.map((callerId) => {\n        const number =\n          format({\n            phoneNumber: callerId.number,\n            countryCode: 'US',\n          }) || callerId.number;\n        return {\n          ...callerId,\n          number,\n        };\n      }),\n    ];\n  }\n\n  @computed((that: EvAuth) => [\n    that.agentConfig.applicationSettings.availableCountries,\n    that._deps.locale.currentLocale,\n  ])\n  get availableCountries() {\n    const { availableCountries } = this.agentConfig?.applicationSettings;\n    // The default Engage Voice service area is `USA` and `CAN` with `+1` international code.\n    const countriesUsaCan = availableCountries.filter(({ countryId }) =>\n      DEFAULT_COUNTRIES.includes(countryId),\n    );\n    return countriesUsaCan.length > 0\n      ? countriesUsaCan\n      : [\n          {\n            countryId: 'USA',\n            countryName: i18n.getString('us', this._deps.locale.currentLocale),\n          },\n        ];\n  }\n\n  @track((_: EvAuth, { connected, agent }: State) => {\n    return [\n      trackEvents.loginAgent,\n      connected\n        ? {\n            'agentId(s)': agent.authenticateResponse?.agents?.map(\n              (agent) => agent.agentId,\n            ),\n            'userId(s)': agent.authenticateResponse?.agents?.map(\n              (agent) => agent.rcUserId,\n            ),\n          }\n        : undefined,\n    ];\n  })\n  @action\n  setConnectionData({ connected, agent }: State) {\n    // ! agent must be set before connected\n    this.agent = agent;\n    this.connected = connected;\n  }\n\n  @action\n  setAgent(agent: EvAgentData) {\n    this.agent = agent;\n  }\n\n  @action\n  clearAgentId() {\n    this.agentId = '';\n  }\n\n  @state\n  loginStatus: string = null;\n\n  @action\n  setAuthSuccess() {\n    this.loginStatus = loginStatus.AUTH_SUCCESS;\n  }\n\n  @action\n  setLoginSuccess() {\n    this.loginStatus = loginStatus.LOGIN_SUCCESS;\n  }\n\n  get isEvLogged() {\n    return this.loginStatus === loginStatus.LOGIN_SUCCESS;\n  }\n\n  @action\n  setNotAuth(asyncAllTabs = false) {\n    this.loginStatus = loginStatus.NOT_AUTH;\n    if (asyncAllTabs && this.tabManagerEnabled) {\n      this._deps.tabManager.send(tabManagerEvents.LOGGED_OUT);\n    }\n  }\n\n  override _shouldInit() {\n    return super._shouldInit() && this._deps.auth.loggedIn && this.connected;\n  }\n\n  override onInitOnce() {\n    this._deps.evSubscription.subscribe(EvCallbackTypes.LOGOUT, async () => {\n      this._emitLogoutBefore();\n\n      // if that is logout by same browser that will only trigger emit\n      // if there is logout by other browser, that need redirect to home page,\n      if (!this._logoutByOtherTab) {\n        this._deps.alert.info({\n          message: messageTypes.FORCE_LOGOUT,\n        });\n\n        this._logoutByOtherTab = false;\n\n        await this.newReconnect();\n      }\n    });\n  }\n\n  override async onStateChange() {\n    // here not need check this.ready, because that should work when not login\n    if (this.tabManagerEnabled && this._deps.tabManager.ready) {\n      await this._checkTabManagerEvent();\n    }\n\n    if (\n      this._deps.auth.loggedIn &&\n      this.loginStatus !== loginStatus.AUTH_SUCCESS &&\n      this.loginStatus !== loginStatus.LOGIN_SUCCESS &&\n      !this.connecting\n    ) {\n      this.connecting = true;\n      // when login make sure the logoutByOtherTab is false\n      this._logoutByOtherTab = false;\n      await this._deps.block.next(async () => {\n        if (this.agentId) {\n          await this.loginAgent();\n        } else {\n          await this.authenticateWithToken();\n        }\n      });\n    }\n  }\n\n  onceLogout(cb: () => any) {\n    return this._deps.evSubscription.once(EvCallbackTypes.LOGOUT, cb);\n  }\n\n  async logout() {\n    if (!(await this.canUserLogoutFn())) {\n      return;\n    }\n    console.log('logout~~');\n\n    const agentId = this.agentId;\n\n    this.sendLogoutTabEvent();\n\n    await this._deps.block.next(this._logout);\n\n    const logoutAgentResponse = await this.logoutAgent(agentId);\n\n    // TODO: error handle when logout fail\n    // TODO: when failed need tell other tab not logout => this._deps.tabManager.send(tabManagerEvents.LOGOUT);\n    if (!logoutAgentResponse.message || logoutAgentResponse.message !== 'OK') {\n      console.log('logoutAgent failed');\n    }\n    this.setConnectionData({ connected: false, agent: null });\n  }\n\n  sendLogoutTabEvent() {\n    this._emitLogoutBefore();\n    if (this.tabManagerEnabled) {\n      this._deps.tabManager.send(tabManagerEvents.LOGOUT);\n    }\n  }\n\n  logoutAgent(agentId: string = this.agentId) {\n    return this._deps.evClient.logoutAgent(agentId);\n  }\n\n  beforeAgentLogout(callback: () => void) {\n    this._eventEmitter.on(loginStatus.LOGOUT_BEFORE, callback);\n  }\n\n  newReconnect(isBlock = true) {\n    this._deps.evClient.closeSocket();\n\n    const fn = this.loginAgent;\n\n    return isBlock ? this._deps.block.next(fn) : fn();\n  }\n\n  async authenticateWithToken({\n    rcAccessToken = this._deps.auth.accessToken,\n    tokenType = 'Bearer',\n    shouldEmitAuthSuccess = true,\n  }: AuthenticateWithTokenType = {}) {\n    console.log('authenticateWithToken', shouldEmitAuthSuccess);\n    try {\n      this._deps.evClient.initSDK();\n\n      const authenticateResponse =\n        await this._deps.evClient.getAndHandleAuthenticateResponse(\n          rcAccessToken,\n          tokenType,\n        );\n      const agent = { ...this.agent, authenticateResponse };\n      // if (shouldEmitAuthSuccess && !this._authenticateResponseWatcher) {\n      //   this._authenticateResponseWatcher = watch(\n      //     this,\n      //     () => this.agent?.authenticateResponse,\n      //     (authenticateResponse) => {\n      //       if (authenticateResponse) {\n      //         this._emitAuthSuccess();\n      //         this._authenticateResponseWatcher();\n      //         this._authenticateResponseWatcher = null;\n      //       }\n      //     },\n      //   );\n      // }\n      this.setAgent(agent);\n      this.setAuthSuccess();\n      if (shouldEmitAuthSuccess) {\n        this._emitAuthSuccess();\n      }\n      return authenticateResponse;\n    } catch (error) {\n      switch (error.type) {\n        case messageTypes.NO_AGENT:\n          this._deps.alert.warning({\n            message: error.type,\n          });\n          break;\n        case messageTypes.CONNECT_TIMEOUT:\n        case messageTypes.UNEXPECTED_AGENT:\n          this._deps.alert.danger({\n            message: error.type,\n          });\n          break;\n        default:\n          this._deps.alert.danger({\n            message: messageTypes.CONNECT_ERROR,\n          });\n      }\n      await this._logout();\n    }\n  }\n\n  async openSocketWithSelectedAgentId({\n    syncOtherTabs = false,\n    retryOpenSocket = false,\n  } = {}) {\n    console.log(\n      'openSocketWithSelectedAgentId',\n      syncOtherTabs,\n      retryOpenSocket,\n    );\n    try {\n      // TODO: here need check time when no message come back, that will block app.\n      const getAgentConfig = new Promise<EvAgentConfig>((resolve) => {\n        this._deps.evClient.on(EvCallbackTypes.LOGIN_PHASE_1, resolve);\n      });\n\n      const selectedAgentId = this.agentId;\n      if (!selectedAgentId) {\n        throw new EvTypeError({\n          type: messageTypes.NO_AGENT,\n        });\n      }\n      const openSocketResult = await this._deps.evClient.openSocket(\n        selectedAgentId,\n      );\n      // wait for socketOpened\n      // Because instance.socket Opened(); was performed after callback.\n      await sleep(0);\n      if (openSocketResult.error) {\n        console.log('retryOpenSocket~~', retryOpenSocket);\n        if (retryOpenSocket) {\n          const { access_token } = await this._deps.auth.refreshToken();\n          const authenticateRes = await this.authenticateWithToken({\n            rcAccessToken: access_token,\n            shouldEmitAuthSuccess: false,\n          });\n          if (!authenticateRes) return;\n          const openSocketRes: any = await this.openSocketWithSelectedAgentId({\n            syncOtherTabs,\n          });\n          return openSocketRes;\n        }\n        throw new EvTypeError({\n          type: messageTypes.OPEN_SOCKET_ERROR,\n        });\n      }\n\n      // TODO： implement multiple sync back drop\n      if (syncOtherTabs && this.tabManagerEnabled) {\n        this._deps.tabManager.send(tabManagerEvents.OPEN_SOCKET);\n      }\n\n      const agentConfig = await getAgentConfig;\n\n      const agent = { ...this.agent, agentConfig };\n\n      // if (!this._agentConfigWatcher) {\n      //   this._agentConfigWatcher = watch(\n      //     this,\n      //     () => this.agent?.agentConfig,\n      //     (agentConfig) => {\n      //       if (agentConfig) {\n      //         this._emitLoginSuccess();\n      //         this._agentConfigWatcher();\n      //         this._agentConfigWatcher = null;\n      //       }\n      //     },\n      //   );\n      // }\n\n      this.setConnectionData({ agent, connected: true });\n\n      this.connecting = false;\n\n      this.setLoginSuccess();\n\n      this._emitLoginSuccess();\n\n      return agentConfig;\n    } catch (error) {\n      switch (error.type) {\n        case messageTypes.NO_AGENT:\n          this._deps.alert.warning({\n            message: error.type,\n          });\n          break;\n        case messageTypes.INVALID_BROWSER:\n        case messageTypes.OPEN_SOCKET_ERROR:\n          this._deps.alert.danger({\n            message: error.type,\n          });\n          break;\n        default:\n          this._deps.alert.danger({\n            message: messageTypes.CONNECT_ERROR,\n          });\n      }\n\n      await this._logout();\n    }\n  }\n\n  loginAgent = async (token: string = this._deps.auth.accessToken) => {\n    const authenticateRes = await this.authenticateWithToken({\n      rcAccessToken: token,\n      shouldEmitAuthSuccess: false,\n    });\n    if (!authenticateRes) return;\n    await this.openSocketWithSelectedAgentId();\n  };\n\n  onceLoginSuccess(callback: () => void) {\n    this._eventEmitter.once(loginStatus.LOGIN_SUCCESS, callback);\n  }\n\n  onAuthSuccess(callback: () => void) {\n    this._eventEmitter.on(loginStatus.AUTH_SUCCESS, callback);\n  }\n\n  private _emitLogoutBefore() {\n    this._eventEmitter.emit(loginStatus.LOGOUT_BEFORE);\n  }\n\n  private _emitLoginSuccess() {\n    this._eventEmitter.emit(loginStatus.LOGIN_SUCCESS);\n  }\n\n  private _emitAuthSuccess() {\n    this._eventEmitter.emit(loginStatus.AUTH_SUCCESS);\n  }\n\n  private async _checkTabManagerEvent() {\n    const { event } = this._deps.tabManager;\n    if (event) {\n      switch (event.name) {\n        case tabManagerEvents.LOGOUT:\n          this._logoutByOtherTab = true;\n          break;\n        case tabManagerEvents.OPEN_SOCKET:\n          await this._deps.block.next(async () => {\n            await this.openSocketWithSelectedAgentId({\n              retryOpenSocket: true,\n            });\n          });\n          break;\n        case tabManagerEvents.LOGGED_OUT:\n          this.setNotAuth();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n\nexport { EvAuth };\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAAA,GAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAQA,IAAAG,OAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,OAAA,GAAAL,OAAA;AAGA,IAAAM,MAAA,GAAAN,OAAA;AAEA,IAAAO,OAAA,GAAAP,OAAA;AACA,IAAAQ,YAAA,GAAAR,OAAA;AACA,IAAAS,WAAA,GAAAT,OAAA;AACA,IAAAU,YAAA,GAAAV,OAAA;AAQA,IAAAW,KAAA,GAAAP,sBAAA,CAAAJ,OAAA;AAA0B,IAAAY,IAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,YAAA;AAAA,SAAAnB,uBAAAoB,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAAA,SAAAE,mBAAAC,CAAA,WAAAC,kBAAA,CAAAD,CAAA,KAAAE,gBAAA,CAAAF,CAAA,KAAAG,2BAAA,CAAAH,CAAA,KAAAI,kBAAA;AAAA,SAAAA,mBAAA,cAAAC,SAAA;AAAA,SAAAF,4BAAAH,CAAA,EAAAM,CAAA,QAAAN,CAAA,2BAAAA,CAAA,SAAAO,iBAAA,CAAAP,CAAA,EAAAM,CAAA,OAAAE,CAAA,MAAAC,QAAA,CAAAC,IAAA,CAAAV,CAAA,EAAAW,KAAA,6BAAAH,CAAA,IAAAR,CAAA,CAAAY,WAAA,KAAAJ,CAAA,GAAAR,CAAA,CAAAY,WAAA,CAAAC,IAAA,aAAAL,CAAA,cAAAA,CAAA,GAAAM,KAAA,CAAAC,IAAA,CAAAf,CAAA,oBAAAQ,CAAA,+CAAAQ,IAAA,CAAAR,CAAA,IAAAD,iBAAA,CAAAP,CAAA,EAAAM,CAAA;AAAA,SAAAJ,iBAAAF,CAAA,8BAAAiB,MAAA,YAAAjB,CAAA,CAAAiB,MAAA,CAAAC,QAAA,aAAAlB,CAAA,uBAAAc,KAAA,CAAAC,IAAA,CAAAf,CAAA;AAAA,SAAAC,mBAAAD,CAAA,QAAAc,KAAA,CAAAK,OAAA,CAAAnB,CAAA,UAAAO,iBAAA,CAAAP,CAAA;AAAA,SAAAO,kBAAAP,CAAA,EAAAM,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAN,CAAA,CAAAoB,MAAA,MAAAd,CAAA,GAAAN,CAAA,CAAAoB,MAAA,YAAAvB,CAAA,MAAAwB,CAAA,GAAAP,KAAA,CAAAR,CAAA,GAAAT,CAAA,GAAAS,CAAA,EAAAT,CAAA,MAAAwB,CAAA,CAAAxB,CAAA,IAAAG,CAAA,CAAAH,CAAA,YAAAwB,CAAA;AAAA,SAAAC,QAAAzB,CAAA,EAAAG,CAAA,QAAAQ,CAAA,GAAAe,MAAA,CAAAC,IAAA,CAAA3B,CAAA,OAAA0B,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAA5B,CAAA,GAAAG,CAAA,KAAA0B,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAA3B,CAAA,WAAAuB,MAAA,CAAAK,wBAAA,CAAA/B,CAAA,EAAAG,CAAA,EAAA6B,UAAA,OAAArB,CAAA,CAAAsB,IAAA,CAAAC,KAAA,CAAAvB,CAAA,EAAAkB,CAAA,YAAAlB,CAAA;AAAA,SAAAwB,cAAAnC,CAAA,aAAAG,CAAA,MAAAA,CAAA,GAAAiC,SAAA,CAAAb,MAAA,EAAApB,CAAA,UAAAQ,CAAA,WAAAyB,SAAA,CAAAjC,CAAA,IAAAiC,SAAA,CAAAjC,CAAA,QAAAA,CAAA,OAAAsB,OAAA,CAAAC,MAAA,CAAAf,CAAA,OAAA0B,OAAA,WAAAlC,CAAA,IAAAmC,eAAA,CAAAtC,CAAA,EAAAG,CAAA,EAAAQ,CAAA,CAAAR,CAAA,SAAAuB,MAAA,CAAAa,yBAAA,GAAAb,MAAA,CAAAc,gBAAA,CAAAxC,CAAA,EAAA0B,MAAA,CAAAa,yBAAA,CAAA5B,CAAA,KAAAc,OAAA,CAAAC,MAAA,CAAAf,CAAA,GAAA0B,OAAA,WAAAlC,CAAA,IAAAuB,MAAA,CAAAe,cAAA,CAAAzC,CAAA,EAAAG,CAAA,EAAAuB,MAAA,CAAAK,wBAAA,CAAApB,CAAA,EAAAR,CAAA,iBAAAH,CAAA;AAAA,SAAAsC,gBAAAtC,CAAA,EAAAG,CAAA,EAAAQ,CAAA,YAAAR,CAAA,GAAAuC,cAAA,CAAAvC,CAAA,MAAAH,CAAA,GAAA0B,MAAA,CAAAe,cAAA,CAAAzC,CAAA,EAAAG,CAAA,IAAAwC,KAAA,EAAAhC,CAAA,EAAAqB,UAAA,MAAAY,YAAA,MAAAC,QAAA,UAAA7C,CAAA,CAAAG,CAAA,IAAAQ,CAAA,EAAAX,CAAA;AAAA,SAAA8C,2BAAA9C,CAAA,EAAA+C,CAAA,EAAA5C,CAAA,EAAA6C,CAAA,IAAA7C,CAAA,IAAAuB,MAAA,CAAAe,cAAA,CAAAzC,CAAA,EAAA+C,CAAA,IAAAf,UAAA,EAAA7B,CAAA,CAAA6B,UAAA,EAAAY,YAAA,EAAAzC,CAAA,CAAAyC,YAAA,EAAAC,QAAA,EAAA1C,CAAA,CAAA0C,QAAA,EAAAF,KAAA,EAAAxC,CAAA,CAAA8C,WAAA,GAAA9C,CAAA,CAAA8C,WAAA,CAAApC,IAAA,CAAAmC,CAAA;AAAA,SAAAE,mBAAA1B,CAAA,EAAAb,CAAA,EAAAX,CAAA,EAAAG,CAAA,EAAA0B,CAAA,EAAApB,CAAA,EAAA0C,CAAA,cAAAJ,CAAA,GAAAvB,CAAA,CAAAf,CAAA,EAAA0C,CAAA,GAAAC,CAAA,GAAAL,CAAA,CAAAJ,KAAA,WAAAnB,CAAA,gBAAAxB,CAAA,CAAAwB,CAAA,KAAAuB,CAAA,CAAAM,IAAA,GAAA1C,CAAA,CAAAyC,CAAA,IAAAE,OAAA,CAAAC,OAAA,CAAAH,CAAA,EAAAI,IAAA,CAAArD,CAAA,EAAA0B,CAAA;AAAA,SAAA4B,kBAAAjC,CAAA,6BAAAb,CAAA,SAAAX,CAAA,GAAAoC,SAAA,aAAAkB,OAAA,WAAAnD,CAAA,EAAA0B,CAAA,QAAApB,CAAA,GAAAe,CAAA,CAAAU,KAAA,CAAAvB,CAAA,EAAAX,CAAA,YAAA0D,MAAAlC,CAAA,IAAA0B,kBAAA,CAAAzC,CAAA,EAAAN,CAAA,EAAA0B,CAAA,EAAA6B,KAAA,EAAAC,MAAA,UAAAnC,CAAA,cAAAmC,OAAAnC,CAAA,IAAA0B,kBAAA,CAAAzC,CAAA,EAAAN,CAAA,EAAA0B,CAAA,EAAA6B,KAAA,EAAAC,MAAA,WAAAnC,CAAA,KAAAkC,KAAA;AAAA,SAAAE,gBAAAnD,CAAA,EAAAe,CAAA,UAAAf,CAAA,YAAAe,CAAA,aAAAhB,SAAA;AAAA,SAAAqD,KAAA,WAAAA,IAAA,yBAAAC,OAAA,IAAAA,OAAA,CAAAC,GAAA,GAAAD,OAAA,CAAAC,GAAA,CAAAC,IAAA,eAAAhE,CAAA,EAAAW,CAAA,EAAAR,CAAA,QAAA8D,CAAA,GAAAC,cAAA,CAAAlE,CAAA,EAAAW,CAAA,OAAAsD,CAAA,QAAAzC,CAAA,GAAAE,MAAA,CAAAK,wBAAA,CAAAkC,CAAA,EAAAtD,CAAA,UAAAa,CAAA,CAAAuC,GAAA,GAAAvC,CAAA,CAAAuC,GAAA,CAAAlD,IAAA,CAAAuB,SAAA,CAAAb,MAAA,OAAAvB,CAAA,GAAAG,CAAA,IAAAqB,CAAA,CAAAmB,KAAA,OAAAkB,IAAA,CAAA3B,KAAA,OAAAE,SAAA;AAAA,SAAA8B,eAAAvD,CAAA,EAAAkB,CAAA,eAAAsC,cAAA,CAAAtD,IAAA,CAAAF,CAAA,EAAAkB,CAAA,eAAAlB,CAAA,GAAAyD,eAAA,CAAAzD,CAAA,kBAAAA,CAAA;AAAA,SAAA0D,kBAAArE,CAAA,EAAAG,CAAA,aAAAQ,CAAA,MAAAA,CAAA,GAAAR,CAAA,CAAAoB,MAAA,EAAAZ,CAAA,UAAAkB,CAAA,GAAA1B,CAAA,CAAAQ,CAAA,GAAAkB,CAAA,CAAAG,UAAA,GAAAH,CAAA,CAAAG,UAAA,QAAAH,CAAA,CAAAe,YAAA,kBAAAf,CAAA,KAAAA,CAAA,CAAAgB,QAAA,QAAAnB,MAAA,CAAAe,cAAA,CAAAzC,CAAA,EAAA0C,cAAA,CAAAb,CAAA,CAAAyC,GAAA,GAAAzC,CAAA;AAAA,SAAA0C,aAAAvE,CAAA,EAAAG,CAAA,EAAAQ,CAAA,WAAAR,CAAA,IAAAkE,iBAAA,CAAArE,CAAA,CAAAwE,SAAA,EAAArE,CAAA,GAAAQ,CAAA,IAAA0D,iBAAA,CAAArE,CAAA,EAAAW,CAAA,GAAAe,MAAA,CAAAe,cAAA,CAAAzC,CAAA,iBAAA6C,QAAA,SAAA7C,CAAA;AAAA,SAAA0C,eAAA/B,CAAA,QAAAoC,CAAA,GAAA0B,YAAA,CAAA9D,CAAA,gCAAA+D,OAAA,CAAA3B,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,SAAA0B,aAAA9D,CAAA,EAAAR,CAAA,oBAAAuE,OAAA,CAAA/D,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAX,CAAA,GAAAW,CAAA,CAAAS,MAAA,CAAAuD,WAAA,kBAAA3E,CAAA,QAAA+C,CAAA,GAAA/C,CAAA,CAAAa,IAAA,CAAAF,CAAA,EAAAR,CAAA,gCAAAuE,OAAA,CAAA3B,CAAA,UAAAA,CAAA,YAAAvC,SAAA,yEAAAL,CAAA,GAAAyE,MAAA,GAAAC,MAAA,EAAAlE,CAAA;AAAA,SAAAmE,UAAAnE,CAAA,EAAAX,CAAA,6BAAAA,CAAA,aAAAA,CAAA,YAAAQ,SAAA,wDAAAG,CAAA,CAAA6D,SAAA,GAAA9C,MAAA,CAAAqD,MAAA,CAAA/E,CAAA,IAAAA,CAAA,CAAAwE,SAAA,IAAAzD,WAAA,IAAA4B,KAAA,EAAAhC,CAAA,EAAAkC,QAAA,MAAAD,YAAA,WAAAlB,MAAA,CAAAe,cAAA,CAAA9B,CAAA,iBAAAkC,QAAA,SAAA7C,CAAA,IAAAgF,eAAA,CAAArE,CAAA,EAAAX,CAAA;AAAA,SAAAgF,gBAAArE,CAAA,EAAAX,CAAA,WAAAgF,eAAA,GAAAtD,MAAA,CAAAuD,cAAA,GAAAvD,MAAA,CAAAuD,cAAA,CAAAjB,IAAA,eAAArD,CAAA,EAAAX,CAAA,WAAAW,CAAA,CAAAuE,SAAA,GAAAlF,CAAA,EAAAW,CAAA,KAAAqE,eAAA,CAAArE,CAAA,EAAAX,CAAA;AAAA,SAAAmF,aAAAxE,CAAA,QAAAR,CAAA,GAAAiF,yBAAA,6BAAApF,CAAA,EAAA6B,CAAA,GAAAuC,eAAA,CAAAzD,CAAA,OAAAR,CAAA,QAAAkF,CAAA,GAAAjB,eAAA,OAAArD,WAAA,EAAAf,CAAA,GAAA8D,OAAA,CAAAwB,SAAA,CAAAzD,CAAA,EAAAO,SAAA,EAAAiD,CAAA,UAAArF,CAAA,GAAA6B,CAAA,CAAAK,KAAA,OAAAE,SAAA,UAAAmD,0BAAA,OAAAvF,CAAA;AAAA,SAAAuF,2BAAA5E,CAAA,EAAAX,CAAA,QAAAA,CAAA,iBAAA0E,OAAA,CAAA1E,CAAA,0BAAAA,CAAA,UAAAA,CAAA,iBAAAA,CAAA,YAAAQ,SAAA,qEAAAgF,sBAAA,CAAA7E,CAAA;AAAA,SAAA6E,uBAAAxF,CAAA,mBAAAA,CAAA,YAAAyF,cAAA,sEAAAzF,CAAA;AAAA,SAAAoF,0BAAA,cAAAzE,CAAA,IAAA+E,OAAA,CAAAlB,SAAA,CAAAmB,OAAA,CAAA9E,IAAA,CAAAiD,OAAA,CAAAwB,SAAA,CAAAI,OAAA,iCAAA/E,CAAA,aAAAyE,yBAAA,YAAAA,0BAAA,aAAAzE,CAAA;AAAA,SAAAyD,gBAAAzD,CAAA,WAAAyD,eAAA,GAAA1C,MAAA,CAAAuD,cAAA,GAAAvD,MAAA,CAAAkE,cAAA,CAAA5B,IAAA,eAAArD,CAAA,WAAAA,CAAA,CAAAuE,SAAA,IAAAxD,MAAA,CAAAkE,cAAA,CAAAjF,CAAA,MAAAyD,eAAA,CAAAzD,CAAA;AAAA,SAAAkF,0BAAA9C,CAAA,EAAA/C,CAAA,EAAAG,CAAA,EAAAqB,CAAA,EAAAwB,CAAA,QAAAvC,CAAA,cAAAiB,MAAA,CAAAC,IAAA,CAAAH,CAAA,EAAAa,OAAA,WAAAU,CAAA,IAAAtC,CAAA,CAAAsC,CAAA,IAAAvB,CAAA,CAAAuB,CAAA,OAAAtC,CAAA,CAAAuB,UAAA,KAAAvB,CAAA,CAAAuB,UAAA,EAAAvB,CAAA,CAAAmC,YAAA,KAAAnC,CAAA,CAAAmC,YAAA,cAAAnC,CAAA,IAAAA,CAAA,CAAAwC,WAAA,MAAAxC,CAAA,CAAAoC,QAAA,QAAApC,CAAA,GAAAN,CAAA,CAAAW,KAAA,GAAAgF,OAAA,GAAAC,MAAA,WAAA5F,CAAA,EAAAqB,CAAA,WAAAA,CAAA,CAAAuB,CAAA,EAAA/C,CAAA,EAAAG,CAAA,KAAAA,CAAA,KAAAM,CAAA,GAAAuC,CAAA,eAAAvC,CAAA,CAAAwC,WAAA,KAAAxC,CAAA,CAAAkC,KAAA,GAAAlC,CAAA,CAAAwC,WAAA,GAAAxC,CAAA,CAAAwC,WAAA,CAAApC,IAAA,CAAAmC,CAAA,YAAAvC,CAAA,CAAAwC,WAAA,uBAAAxC,CAAA,CAAAwC,WAAA,IAAAvB,MAAA,CAAAe,cAAA,CAAAM,CAAA,EAAA/C,CAAA,EAAAS,CAAA,WAAAA,CAAA;AAAA,SAAAuF,0BAAA7F,CAAA,EAAAH,CAAA,UAAAiG,KAAA;AAE1B,IAAMC,iBAAiB,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;AAAC,IAiBnCC,MAAM,IAAA/G,IAAA,GAfX,IAAAgH,UAAM,EAAC;EACNpF,IAAI,EAAE,QAAQ;EACdqF,IAAI,EAAE,CACJ,UAAU,EACV,MAAM,EACN,OAAO,EACP,OAAO,EACP,QAAQ,EACR,mBAAmB,EACnB,gBAAgB,EAChB,YAAY,EACZ,eAAe,EACf;IAAEC,GAAG,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAK,CAAC;AAE5C,CAAC,CAAC,EAAAlH,KAAA,GAoGC,IAAAmH,cAAQ,EAAC,UAACC,IAAY;EAAA,OAAK,CAACA,IAAI,CAACC,eAAe,CAACC,eAAe,CAAC;AAAA,EAAC,EAAArH,KAAA,GAWlE,IAAAkH,cAAQ,EAAC,UAACC,IAAY;EAAA,OAAK,CAACA,IAAI,CAACC,eAAe,CAACE,sBAAsB,CAAC;AAAA,EAAC,EAAArH,KAAA,GAQzE,IAAAiH,cAAQ,EAAC,UAACC,IAAY;EAAA,OAAK,CAACA,IAAI,CAACI,aAAa,CAACC,SAAS,CAAC;AAAA,EAAC,EAAAtH,KAAA,GAqB1D,IAAAgH,cAAQ,EAAC,UAACC,IAAY;EAAA,OAAK,CAC1BA,IAAI,CAACM,WAAW,CAACC,mBAAmB,CAACC,kBAAkB,EACvDR,IAAI,CAACS,KAAK,CAACC,MAAM,CAACC,aAAa,CAChC;AAAA,EAAC,EAAA3H,KAAA,GAiBD,IAAA4H,WAAK,EAAC,UAACC,CAAS,EAAAC,IAAA,EAAkC;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAAA,IAA9BC,SAAS,GAAAL,IAAA,CAATK,SAAS;IAAEC,KAAK,GAAAN,IAAA,CAALM,KAAK;EACnC,OAAO,CACLC,wBAAW,CAACC,UAAU,EACtBH,SAAS,GACL;IACE,YAAY,GAAAJ,qBAAA,GAAEK,KAAK,CAACG,oBAAoB,cAAAR,qBAAA,wBAAAC,sBAAA,GAA1BD,qBAAA,CAA4BS,MAAM,cAAAR,sBAAA,uBAAlCA,sBAAA,CAAoCS,GAAG,CACnD,UAACL,KAAK;MAAA,OAAKA,KAAK,CAACM,OAAO;IAAA,CAC1B,CAAC;IACD,WAAW,GAAAT,sBAAA,GAAEG,KAAK,CAACG,oBAAoB,cAAAN,sBAAA,wBAAAC,sBAAA,GAA1BD,sBAAA,CAA4BO,MAAM,cAAAN,sBAAA,uBAAlCA,sBAAA,CAAoCO,GAAG,CAClD,UAACL,KAAK;MAAA,OAAKA,KAAK,CAACO,QAAQ;IAAA,CAC3B;EACF,CAAC,GACDC,SAAS,CACd;AACH,CAAC,CAAC,EAAAjJ,IAAA,CAAAM,MAAA,IAAAC,OAAA,0BAAA2I,UAAA;EAAAxD,SAAA,CAAAqB,MAAA,EAAAmC,UAAA;EAAA,IAAAC,MAAA,GAAApD,YAAA,CAAAgB,MAAA;EAAA5B,YAAA,CAAA4B,MAAA;IAAA7B,GAAA;IAAAP,GAAA,WAAAA,IAAA,EA5JsB;MAAA,IAAAyE,qBAAA;MACtB,QAAAA,qBAAA,GAAO,IAAI,CAACtB,KAAK,CAACuB,UAAU,cAAAD,qBAAA,uBAArBA,qBAAA,CAAuBE,MAAM;IACtC;EAAC;IAAApE,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAEoB;MAAA,IAAA4E,WAAA;MACnB,OAAO,EAAAA,WAAA,OAAI,CAACd,KAAK,cAAAc,WAAA,uBAAVA,WAAA,CAAYX,oBAAoB,CAACC,MAAM,CAAC1G,MAAM,MAAK,CAAC;IAC7D;EAAC;EAED,SAAA4E,OAAYE,IAAU,EAAE;IAAA,IAAAuC,KAAA;IAAAhF,eAAA,OAAAuC,MAAA;IACtByC,KAAA,GAAAL,MAAA,CAAA1H,IAAA,OAAM;MACJwF,IAAI,EAAJA,IAAI;MACJwC,UAAU,EAAE,QAAQ;MACpBC,iBAAiB,EAAE;IACrB,CAAC;IAAEF,KAAA,CA7BEG,UAAU,GAAG,KAAK;IAAAH,KAAA,CAEjBI,aAAa,GAAG,IAAIC,oBAAY,CAAC,CAAC;IAAAL,KAAA,CAEnCM,eAAe,gBAAAzF,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,CAA2B,SAAAC,QAAA;MAAA,OAAAF,kBAAA,CAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA;UAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA,WAAY,IAAI;YAAA;YAAA;cAAA,OAAAH,QAAA,CAAAI,IAAA;UAAA;QAAA;MAAA,GAAAP,OAAA;IAAA;IAAAT,KAAA,CAEzDiB,OAAO,gBAAApG,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,CAAG,SAAAU,SAAA;MAAA,OAAAX,kBAAA,CAAAG,IAAA,UAAAS,UAAAC,SAAA;QAAA;UAAA,QAAAA,SAAA,CAAAP,IAAA,GAAAO,SAAA,CAAAN,IAAA;YAAA;cAAAM,SAAA,CAAAN,IAAA;cAAA,OACVd,KAAA,CAAK1B,KAAK,CAAC+C,IAAI,CAACC,MAAM,CAAC;gBAAEC,eAAe,EAAE;cAAM,CAAC,CAAC;YAAA;cACxDvB,KAAA,CAAKwB,UAAU,CAAC,IAAI,CAAC;YAAC;YAAA;cAAA,OAAAJ,SAAA,CAAAJ,IAAA;UAAA;QAAA;MAAA,GAAAE,QAAA;IAAA,CACvB;IAAAlB,KAAA,CAEOyB,iBAAiB,GAAG,KAAK;IAAAzB,KAAA,CAEzB0B,4BAA4B,GAAgB,IAAI;IAAA1B,KAAA,CAChD2B,mBAAmB,GAAgB,IAAI;IAAAzH,0BAAA,CAAA8F,KAAA,eAAAhJ,WAAA,EAAA4F,sBAAA,CAAAoD,KAAA;IAAA9F,0BAAA,CAAA8F,KAAA,WAAA/I,YAAA,EAAA2F,sBAAA,CAAAoD,KAAA;IAAA9F,0BAAA,CAAA8F,KAAA,aAAA9I,YAAA,EAAA0F,sBAAA,CAAAoD,KAAA;IAAA9F,0BAAA,CAAA8F,KAAA,iBAAA7I,YAAA,EAAAyF,sBAAA,CAAAoD,KAAA;IAAAA,KAAA,CAsc/Cb,UAAU,gBAAAtE,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,CAAG,SAAAoB,SAAA;MAAA,IAAAC,KAAA;QAAAC,eAAA;QAAAC,MAAA,GAAAvI,SAAA;MAAA,OAAA+G,kBAAA,CAAAG,IAAA,UAAAsB,UAAAC,SAAA;QAAA;UAAA,QAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;YAAA;cAAOe,KAAa,GAAAE,MAAA,CAAApJ,MAAA,QAAAoJ,MAAA,QAAAtC,SAAA,GAAAsC,MAAA,MAAG/B,KAAA,CAAK1B,KAAK,CAAC+C,IAAI,CAACa,WAAW;cAAAD,SAAA,CAAAnB,IAAA;cAAA,OAC/Bd,KAAA,CAAKmC,qBAAqB,CAAC;gBACvDC,aAAa,EAAEP,KAAK;gBACpBQ,qBAAqB,EAAE;cACzB,CAAC,CAAC;YAAA;cAHIP,eAAe,GAAAG,SAAA,CAAAK,IAAA;cAAA,IAIhBR,eAAe;gBAAAG,SAAA,CAAAnB,IAAA;gBAAA;cAAA;cAAA,OAAAmB,SAAA,CAAAlB,MAAA;YAAA;cAAAkB,SAAA,CAAAnB,IAAA;cAAA,OACdd,KAAA,CAAKuC,6BAA6B,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAN,SAAA,CAAAjB,IAAA;UAAA;QAAA;MAAA,GAAAY,QAAA;IAAA,CAC3C;IA7bC5B,KAAA,CAAK1B,KAAK,CAAC+C,IAAI,CAACmB,uBAAuB,CAAC,YAAM;MAC5CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC1C,KAAA,CAAK2C,YAAY,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF3C,KAAA,CAAK1B,KAAK,CAAC+C,IAAI,CAACuB,sBAAsB,CAAC,YAAM;MAC3CH,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC1C,KAAA,CAAK2C,YAAY,CAAC,CAAC;IACrB,CAAC,CAAC;IAAC,OAAA3C,KAAA;EACL;EAACrE,YAAA,CAAA4B,MAAA;IAAA7B,GAAA;IAAA3B,KAAA,WAAA8I,WAeUtD,OAAe,EAAE;MAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB;EAAC;IAAA7D,GAAA;IAAA3B,KAAA,WAAA+I,kBAAAC,KAAA,EAsH8C;MAAA,IAA3B/D,SAAS,GAAA+D,KAAA,CAAT/D,SAAS;QAAEC,KAAK,GAAA8D,KAAA,CAAL9D,KAAK;MAClC;MACA,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC5B;EAAC;IAAAtD,GAAA;IAAA3B,KAAA,WAAAiJ,SAGQ/D,KAAkB,EAAE;MAC3B,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB;EAAC;IAAAvD,GAAA;IAAA3B,KAAA,WAAA4I,aAAA,EAGc;MACb,IAAI,CAACpD,OAAO,GAAG,EAAE;IACnB;EAAC;IAAA7D,GAAA;IAAA3B,KAAA,WAAAkJ,eAAA,EAMgB;MACf,IAAI,CAACC,WAAW,GAAGA,kBAAW,CAACC,YAAY;IAC7C;EAAC;IAAAzH,GAAA;IAAA3B,KAAA,WAAAqJ,gBAAA,EAGiB;MAChB,IAAI,CAACF,WAAW,GAAGA,kBAAW,CAACG,aAAa;IAC9C;EAAC;IAAA3H,GAAA;IAAA3B,KAAA,WAAAyH,WAAA,EAOgC;MAAA,IAAtB8B,YAAY,GAAA9J,SAAA,CAAAb,MAAA,QAAAa,SAAA,QAAAiG,SAAA,GAAAjG,SAAA,MAAG,KAAK;MAC7B,IAAI,CAAC0J,WAAW,GAAGA,kBAAW,CAACK,QAAQ;MACvC,IAAID,YAAY,IAAI,IAAI,CAACE,iBAAiB,EAAE;QAC1C,IAAI,CAAClF,KAAK,CAACuB,UAAU,CAAC4D,IAAI,CAACC,uBAAgB,CAACC,UAAU,CAAC;MACzD;IACF;EAAC;IAAAjI,GAAA;IAAA3B,KAAA,WAAA6J,YAAA,EAEsB;MACrB,OAAO3I,IAAA,CAAAO,eAAA,CAAA+B,MAAA,CAAA3B,SAAA,wBAAA3D,IAAA,UAAuB,IAAI,CAACqG,KAAK,CAAC+C,IAAI,CAACwC,QAAQ,IAAI,IAAI,CAAC7E,SAAS;IAC1E;EAAC;IAAAtD,GAAA;IAAA3B,KAAA,WAAA+J,WAAA,EAEqB;MAAA,IAAAC,MAAA;MACpB,IAAI,CAACzF,KAAK,CAAC0F,cAAc,CAACC,SAAS,CAACC,uBAAe,CAACC,MAAM,eAAAtJ,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,CAAE,SAAA4D,SAAA;QAAA,OAAA7D,kBAAA,CAAAG,IAAA,UAAA2D,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAzD,IAAA,GAAAyD,SAAA,CAAAxD,IAAA;cAAA;gBAC1DiD,MAAI,CAACQ,iBAAiB,CAAC,CAAC;;gBAExB;gBACA;gBAAA,IACKR,MAAI,CAACtC,iBAAiB;kBAAA6C,SAAA,CAAAxD,IAAA;kBAAA;gBAAA;gBACzBiD,MAAI,CAACzF,KAAK,CAACkG,KAAK,CAACC,IAAI,CAAC;kBACpBC,OAAO,EAAEC,mBAAY,CAACC;gBACxB,CAAC,CAAC;gBAEFb,MAAI,CAACtC,iBAAiB,GAAG,KAAK;gBAAC6C,SAAA,CAAAxD,IAAA;gBAAA,OAEzBiD,MAAI,CAACc,YAAY,CAAC,CAAC;cAAA;cAAA;gBAAA,OAAAP,SAAA,CAAAtD,IAAA;YAAA;UAAA;QAAA,GAAAoD,QAAA;MAAA,CAE5B,GAAC;IACJ;EAAC;IAAA1I,GAAA;IAAA3B,KAAA;MAAA,IAAA+K,cAAA,GAAAjK,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,UAAAuE,SAAA;QAAA,IAAAC,MAAA;QAAA,OAAAzE,kBAAA,CAAAG,IAAA,UAAAuE,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAArE,IAAA,GAAAqE,SAAA,CAAApE,IAAA;cAAA;gBAAA,MAIK,IAAI,CAAC0C,iBAAiB,IAAI,IAAI,CAAClF,KAAK,CAACuB,UAAU,CAACsF,KAAK;kBAAAD,SAAA,CAAApE,IAAA;kBAAA;gBAAA;gBAAAoE,SAAA,CAAApE,IAAA;gBAAA,OACjD,IAAI,CAACsE,qBAAqB,CAAC,CAAC;cAAA;gBAAA,MAIlC,IAAI,CAAC9G,KAAK,CAAC+C,IAAI,CAACwC,QAAQ,IACxB,IAAI,CAACX,WAAW,KAAKA,kBAAW,CAACC,YAAY,IAC7C,IAAI,CAACD,WAAW,KAAKA,kBAAW,CAACG,aAAa,IAC9C,CAAC,IAAI,CAAClD,UAAU;kBAAA+E,SAAA,CAAApE,IAAA;kBAAA;gBAAA;gBAEhB,IAAI,CAACX,UAAU,GAAG,IAAI;gBACtB;gBACA,IAAI,CAACsB,iBAAiB,GAAG,KAAK;gBAACyD,SAAA,CAAApE,IAAA;gBAAA,OACzB,IAAI,CAACxC,KAAK,CAAC+G,KAAK,CAACvE,IAAI,eAAAjG,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,CAAC,SAAA8E,SAAA;kBAAA,OAAA/E,kBAAA,CAAAG,IAAA,UAAA6E,UAAAC,SAAA;oBAAA;sBAAA,QAAAA,SAAA,CAAA3E,IAAA,GAAA2E,SAAA,CAAA1E,IAAA;wBAAA;0BAAA,KACtBkE,MAAI,CAACzF,OAAO;4BAAAiG,SAAA,CAAA1E,IAAA;4BAAA;0BAAA;0BAAA0E,SAAA,CAAA1E,IAAA;0BAAA,OACRkE,MAAI,CAAC7F,UAAU,CAAC,CAAC;wBAAA;0BAAAqG,SAAA,CAAA1E,IAAA;0BAAA;wBAAA;0BAAA0E,SAAA,CAAA1E,IAAA;0BAAA,OAEjBkE,MAAI,CAAC7C,qBAAqB,CAAC,CAAC;wBAAA;wBAAA;0BAAA,OAAAqD,SAAA,CAAAxE,IAAA;sBAAA;oBAAA;kBAAA,GAAAsE,QAAA;gBAAA,CAErC,GAAC;cAAA;cAAA;gBAAA,OAAAJ,SAAA,CAAAlE,IAAA;YAAA;UAAA;QAAA,GAAA+D,QAAA;MAAA;MAAA,SAAAU,cAAA;QAAA,OAAAX,cAAA,CAAAxL,KAAA,OAAAE,SAAA;MAAA;MAAA,OAAAiM,aAAA;IAAA;EAAA;IAAA/J,GAAA;IAAA3B,KAAA,WAAA2L,WAIKC,EAAa,EAAE;MACxB,OAAO,IAAI,CAACrH,KAAK,CAAC0F,cAAc,CAAC4B,IAAI,CAAC1B,uBAAe,CAACC,MAAM,EAAEwB,EAAE,CAAC;IACnE;EAAC;IAAAjK,GAAA;IAAA3B,KAAA;MAAA,IAAAkH,OAAA,GAAApG,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,UAAAqF,SAAA;QAAA,IAAAtG,OAAA,EAAAuG,mBAAA;QAAA,OAAAvF,kBAAA,CAAAG,IAAA,UAAAqF,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAnF,IAAA,GAAAmF,SAAA,CAAAlF,IAAA;cAAA;gBAAAkF,SAAA,CAAAlF,IAAA;gBAAA,OAGa,IAAI,CAACR,eAAe,CAAC,CAAC;cAAA;gBAAA,IAAA0F,SAAA,CAAA1D,IAAA;kBAAA0D,SAAA,CAAAlF,IAAA;kBAAA;gBAAA;gBAAA,OAAAkF,SAAA,CAAAjF,MAAA;cAAA;gBAGlC0B,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;gBAEjBnD,OAAO,GAAG,IAAI,CAACA,OAAO;gBAE5B,IAAI,CAAC0G,kBAAkB,CAAC,CAAC;gBAACD,SAAA,CAAAlF,IAAA;gBAAA,OAEpB,IAAI,CAACxC,KAAK,CAAC+G,KAAK,CAACvE,IAAI,CAAC,IAAI,CAACG,OAAO,CAAC;cAAA;gBAAA+E,SAAA,CAAAlF,IAAA;gBAAA,OAEP,IAAI,CAACoF,WAAW,CAAC3G,OAAO,CAAC;cAAA;gBAArDuG,mBAAmB,GAAAE,SAAA,CAAA1D,IAAA;gBAEzB;gBACA;gBACA,IAAI,CAACwD,mBAAmB,CAACpB,OAAO,IAAIoB,mBAAmB,CAACpB,OAAO,KAAK,IAAI,EAAE;kBACxEjC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;gBACnC;gBACA,IAAI,CAACI,iBAAiB,CAAC;kBAAE9D,SAAS,EAAE,KAAK;kBAAEC,KAAK,EAAE;gBAAK,CAAC,CAAC;cAAC;cAAA;gBAAA,OAAA+G,SAAA,CAAAhF,IAAA;YAAA;UAAA;QAAA,GAAA6E,QAAA;MAAA;MAAA,SAAAvE,OAAA;QAAA,OAAAL,OAAA,CAAA3H,KAAA,OAAAE,SAAA;MAAA;MAAA,OAAA8H,MAAA;IAAA;EAAA;IAAA5F,GAAA;IAAA3B,KAAA,WAAAkM,mBAAA,EAGvC;MACnB,IAAI,CAAC1B,iBAAiB,CAAC,CAAC;MACxB,IAAI,IAAI,CAACf,iBAAiB,EAAE;QAC1B,IAAI,CAAClF,KAAK,CAACuB,UAAU,CAAC4D,IAAI,CAACC,uBAAgB,CAACS,MAAM,CAAC;MACrD;IACF;EAAC;IAAAzI,GAAA;IAAA3B,KAAA,WAAAmM,YAAA,EAE2C;MAAA,IAAhC3G,OAAe,GAAA/F,SAAA,CAAAb,MAAA,QAAAa,SAAA,QAAAiG,SAAA,GAAAjG,SAAA,MAAG,IAAI,CAAC+F,OAAO;MACxC,OAAO,IAAI,CAACjB,KAAK,CAAC6H,QAAQ,CAACD,WAAW,CAAC3G,OAAO,CAAC;IACjD;EAAC;IAAA7D,GAAA;IAAA3B,KAAA,WAAAqM,kBAEiBC,QAAoB,EAAE;MACtC,IAAI,CAACjG,aAAa,CAACkG,EAAE,CAACpD,kBAAW,CAACqD,aAAa,EAAEF,QAAQ,CAAC;IAC5D;EAAC;IAAA3K,GAAA;IAAA3B,KAAA,WAAA8K,aAAA,EAE4B;MAAA,IAAhB2B,OAAO,GAAAhN,SAAA,CAAAb,MAAA,QAAAa,SAAA,QAAAiG,SAAA,GAAAjG,SAAA,MAAG,IAAI;MACzB,IAAI,CAAC8E,KAAK,CAAC6H,QAAQ,CAACM,WAAW,CAAC,CAAC;MAEjC,IAAMC,EAAE,GAAG,IAAI,CAACvH,UAAU;MAE1B,OAAOqH,OAAO,GAAG,IAAI,CAAClI,KAAK,CAAC+G,KAAK,CAACvE,IAAI,CAAC4F,EAAE,CAAC,GAAGA,EAAE,CAAC,CAAC;IACnD;EAAC;IAAAhL,GAAA;IAAA3B,KAAA;MAAA,IAAA4M,sBAAA,GAAA9L,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,UAAAoG,SAAA;QAAA,IAAAC,KAAA;UAAAC,mBAAA;UAAA1E,aAAA;UAAA2E,eAAA;UAAAC,SAAA;UAAAC,qBAAA;UAAA5E,qBAAA;UAAAjD,oBAAA;UAAAH,KAAA;UAAAiI,MAAA,GAAA1N,SAAA;QAAA,OAAA+G,kBAAA,CAAAG,IAAA,UAAAyG,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAvG,IAAA,GAAAuG,SAAA,CAAAtG,IAAA;cAAA;gBAAA+F,KAAA,GAAAK,MAAA,CAAAvO,MAAA,QAAAuO,MAAA,QAAAzH,SAAA,GAAAyH,MAAA,MAM8B,CAAC,CAAC,EAAAJ,mBAAA,GAAAD,KAAA,CAH/BzE,aAAa,EAAbA,aAAa,GAAA0E,mBAAA,cAAG,IAAI,CAACxI,KAAK,CAAC+C,IAAI,CAACa,WAAW,GAAA4E,mBAAA,EAAAC,eAAA,GAAAF,KAAA,CAC3CG,SAAS,EAATA,SAAS,GAAAD,eAAA,cAAG,QAAQ,GAAAA,eAAA,EAAAE,qBAAA,GAAAJ,KAAA,CACpBxE,qBAAqB,EAArBA,qBAAqB,GAAA4E,qBAAA,cAAG,IAAI,GAAAA,qBAAA;gBAE5BxE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEL,qBAAqB,CAAC;gBAAC+E,SAAA,CAAAvG,IAAA;gBAE1D,IAAI,CAACvC,KAAK,CAAC6H,QAAQ,CAACkB,OAAO,CAAC,CAAC;gBAACD,SAAA,CAAAtG,IAAA;gBAAA,OAGtB,IAAI,CAACxC,KAAK,CAAC6H,QAAQ,CAACmB,gCAAgC,CACxDlF,aAAa,EACb4E,SACF,CAAC;cAAA;gBAJG5H,oBAAoB,GAAAgI,SAAA,CAAA9E,IAAA;gBAKpBrD,KAAK,GAAA1F,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAAC0F,KAAK;kBAAEG,oBAAoB,EAApBA;gBAAoB,IACnD;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,IAAI,CAAC4D,QAAQ,CAAC/D,KAAK,CAAC;gBACpB,IAAI,CAACgE,cAAc,CAAC,CAAC;gBACrB,IAAIZ,qBAAqB,EAAE;kBACzB,IAAI,CAACkF,gBAAgB,CAAC,CAAC;gBACzB;gBAAC,OAAAH,SAAA,CAAArG,MAAA,WACM3B,oBAAoB;cAAA;gBAAAgI,SAAA,CAAAvG,IAAA;gBAAAuG,SAAA,CAAAI,EAAA,GAAAJ,SAAA;gBAAAA,SAAA,CAAAK,EAAA,GAEnBL,SAAA,CAAAI,EAAA,CAAME,IAAI;gBAAAN,SAAA,CAAAtG,IAAA,GAAAsG,SAAA,CAAAK,EAAA,KACX9C,mBAAY,CAACgD,QAAQ,QAAAP,SAAA,CAAAK,EAAA,KAKrB9C,mBAAY,CAACiD,eAAe,QAAAR,SAAA,CAAAK,EAAA,KAC5B9C,mBAAY,CAACkD,gBAAgB;gBAAA;cAAA;gBALhC,IAAI,CAACvJ,KAAK,CAACkG,KAAK,CAACsD,OAAO,CAAC;kBACvBpD,OAAO,EAAE0C,SAAA,CAAAI,EAAA,CAAME;gBACjB,CAAC,CAAC;gBAAC,OAAAN,SAAA,CAAArG,MAAA;cAAA;gBAIH,IAAI,CAACzC,KAAK,CAACkG,KAAK,CAACuD,MAAM,CAAC;kBACtBrD,OAAO,EAAE0C,SAAA,CAAAI,EAAA,CAAME;gBACjB,CAAC,CAAC;gBAAC,OAAAN,SAAA,CAAArG,MAAA;cAAA;gBAGH,IAAI,CAACzC,KAAK,CAACkG,KAAK,CAACuD,MAAM,CAAC;kBACtBrD,OAAO,EAAEC,mBAAY,CAACqD;gBACxB,CAAC,CAAC;cAAC;gBAAAZ,SAAA,CAAAtG,IAAA;gBAAA,OAED,IAAI,CAACG,OAAO,CAAC,CAAC;cAAA;cAAA;gBAAA,OAAAmG,SAAA,CAAApG,IAAA;YAAA;UAAA;QAAA,GAAA4F,QAAA;MAAA;MAAA,SAAAzE,sBAAA;QAAA,OAAAwE,sBAAA,CAAArN,KAAA,OAAAE,SAAA;MAAA;MAAA,OAAA2I,qBAAA;IAAA;EAAA;IAAAzG,GAAA;IAAA3B,KAAA;MAAA,IAAAkO,8BAAA,GAAApN,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,UAAA0H,SAAA;QAAA,IAAAC,MAAA;QAAA,IAAAC,KAAA;UAAAC,mBAAA;UAAAC,aAAA;UAAAC,qBAAA;UAAAC,eAAA;UAAAC,cAAA;UAAAC,eAAA;UAAAC,gBAAA;UAAAC,qBAAA;UAAAC,YAAA;UAAA/G,eAAA;UAAAgH,aAAA;UAAA3K,WAAA;UAAAc,KAAA;UAAA8J,MAAA,GAAAvP,SAAA;QAAA,OAAA+G,kBAAA,CAAAG,IAAA,UAAAsI,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAApI,IAAA,GAAAoI,SAAA,CAAAnI,IAAA;cAAA;gBAAAsH,KAAA,GAAAW,MAAA,CAAApQ,MAAA,QAAAoQ,MAAA,QAAAtJ,SAAA,GAAAsJ,MAAA,MAOpB,CAAC,CAAC,EAAAV,mBAAA,GAAAD,KAAA,CAFJE,aAAa,EAAbA,aAAa,GAAAD,mBAAA,cAAG,KAAK,GAAAA,mBAAA,EAAAE,qBAAA,GAAAH,KAAA,CACrBI,eAAe,EAAfA,eAAe,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;gBAEvB9F,OAAO,CAACC,GAAG,CACT,+BAA+B,EAC/B4F,aAAa,EACbE,eACF,CAAC;gBAACS,SAAA,CAAApI,IAAA;gBAEA;gBACM4H,cAAc,GAAG,IAAI/N,OAAO,CAAgB,UAACC,OAAO,EAAK;kBAC7DwN,MAAI,CAAC7J,KAAK,CAAC6H,QAAQ,CAACG,EAAE,CAACpC,uBAAe,CAACgF,aAAa,EAAEvO,OAAO,CAAC;gBAChE,CAAC,CAAC;gBAEI+N,eAAe,GAAG,IAAI,CAACnJ,OAAO;gBAAA,IAC/BmJ,eAAe;kBAAAO,SAAA,CAAAnI,IAAA;kBAAA;gBAAA;gBAAA,MACZ,IAAIqI,wBAAW,CAAC;kBACpBzB,IAAI,EAAE/C,mBAAY,CAACgD;gBACrB,CAAC,CAAC;cAAA;gBAAAsB,SAAA,CAAAnI,IAAA;gBAAA,OAE2B,IAAI,CAACxC,KAAK,CAAC6H,QAAQ,CAACiD,UAAU,CAC3DV,eACF,CAAC;cAAA;gBAFKC,gBAAgB,GAAAM,SAAA,CAAA3G,IAAA;gBAAA2G,SAAA,CAAAnI,IAAA;gBAAA,OAKhB,IAAAuI,YAAK,EAAC,CAAC,CAAC;cAAA;gBAAA,KACVV,gBAAgB,CAACW,KAAK;kBAAAL,SAAA,CAAAnI,IAAA;kBAAA;gBAAA;gBACxB2B,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE8F,eAAe,CAAC;gBAAC,KAC9CA,eAAe;kBAAAS,SAAA,CAAAnI,IAAA;kBAAA;gBAAA;gBAAAmI,SAAA,CAAAnI,IAAA;gBAAA,OACc,IAAI,CAACxC,KAAK,CAAC+C,IAAI,CAACkI,YAAY,CAAC,CAAC;cAAA;gBAAAX,qBAAA,GAAAK,SAAA,CAAA3G,IAAA;gBAArDuG,YAAY,GAAAD,qBAAA,CAAZC,YAAY;gBAAAI,SAAA,CAAAnI,IAAA;gBAAA,OACU,IAAI,CAACqB,qBAAqB,CAAC;kBACvDC,aAAa,EAAEyG,YAAY;kBAC3BxG,qBAAqB,EAAE;gBACzB,CAAC,CAAC;cAAA;gBAHIP,eAAe,GAAAmH,SAAA,CAAA3G,IAAA;gBAAA,IAIhBR,eAAe;kBAAAmH,SAAA,CAAAnI,IAAA;kBAAA;gBAAA;gBAAA,OAAAmI,SAAA,CAAAlI,MAAA;cAAA;gBAAAkI,SAAA,CAAAnI,IAAA;gBAAA,OACa,IAAI,CAACyB,6BAA6B,CAAC;kBAClE+F,aAAa,EAAbA;gBACF,CAAC,CAAC;cAAA;gBAFIQ,aAAkB,GAAAG,SAAA,CAAA3G,IAAA;gBAAA,OAAA2G,SAAA,CAAAlI,MAAA,WAGjB+H,aAAa;cAAA;gBAAA,MAEhB,IAAIK,wBAAW,CAAC;kBACpBzB,IAAI,EAAE/C,mBAAY,CAAC6E;gBACrB,CAAC,CAAC;cAAA;gBAGJ;gBACA,IAAIlB,aAAa,IAAI,IAAI,CAAC9E,iBAAiB,EAAE;kBAC3C,IAAI,CAAClF,KAAK,CAACuB,UAAU,CAAC4D,IAAI,CAACC,uBAAgB,CAAC+F,WAAW,CAAC;gBAC1D;gBAACR,SAAA,CAAAnI,IAAA;gBAAA,OAEyB2H,cAAc;cAAA;gBAAlCtK,WAAW,GAAA8K,SAAA,CAAA3G,IAAA;gBAEXrD,KAAK,GAAA1F,aAAA,CAAAA,aAAA,KAAQ,IAAI,CAAC0F,KAAK;kBAAEd,WAAW,EAAXA;gBAAW,IAE1C;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBAEA,IAAI,CAAC2E,iBAAiB,CAAC;kBAAE7D,KAAK,EAALA,KAAK;kBAAED,SAAS,EAAE;gBAAK,CAAC,CAAC;gBAElD,IAAI,CAACmB,UAAU,GAAG,KAAK;gBAEvB,IAAI,CAACiD,eAAe,CAAC,CAAC;gBAEtB,IAAI,CAACsG,iBAAiB,CAAC,CAAC;gBAAC,OAAAT,SAAA,CAAAlI,MAAA,WAElB5C,WAAW;cAAA;gBAAA8K,SAAA,CAAApI,IAAA;gBAAAoI,SAAA,CAAAzB,EAAA,GAAAyB,SAAA;gBAAAA,SAAA,CAAAxB,EAAA,GAEVwB,SAAA,CAAAzB,EAAA,CAAME,IAAI;gBAAAuB,SAAA,CAAAnI,IAAA,GAAAmI,SAAA,CAAAxB,EAAA,KACX9C,mBAAY,CAACgD,QAAQ,QAAAsB,SAAA,CAAAxB,EAAA,KAKrB9C,mBAAY,CAACgF,eAAe,QAAAV,SAAA,CAAAxB,EAAA,KAC5B9C,mBAAY,CAAC6E,iBAAiB;gBAAA;cAAA;gBALjC,IAAI,CAAClL,KAAK,CAACkG,KAAK,CAACsD,OAAO,CAAC;kBACvBpD,OAAO,EAAEuE,SAAA,CAAAzB,EAAA,CAAME;gBACjB,CAAC,CAAC;gBAAC,OAAAuB,SAAA,CAAAlI,MAAA;cAAA;gBAIH,IAAI,CAACzC,KAAK,CAACkG,KAAK,CAACuD,MAAM,CAAC;kBACtBrD,OAAO,EAAEuE,SAAA,CAAAzB,EAAA,CAAME;gBACjB,CAAC,CAAC;gBAAC,OAAAuB,SAAA,CAAAlI,MAAA;cAAA;gBAGH,IAAI,CAACzC,KAAK,CAACkG,KAAK,CAACuD,MAAM,CAAC;kBACtBrD,OAAO,EAAEC,mBAAY,CAACqD;gBACxB,CAAC,CAAC;cAAC;gBAAAiB,SAAA,CAAAnI,IAAA;gBAAA,OAGD,IAAI,CAACG,OAAO,CAAC,CAAC;cAAA;cAAA;gBAAA,OAAAgI,SAAA,CAAAjI,IAAA;YAAA;UAAA;QAAA,GAAAkH,QAAA;MAAA;MAAA,SAAA3F,8BAAA;QAAA,OAAA0F,8BAAA,CAAA3O,KAAA,OAAAE,SAAA;MAAA;MAAA,OAAA+I,6BAAA;IAAA;EAAA;IAAA7G,GAAA;IAAA3B,KAAA,WAAA6P,iBAaPvD,QAAoB,EAAE;MACrC,IAAI,CAACjG,aAAa,CAACwF,IAAI,CAAC1C,kBAAW,CAACG,aAAa,EAAEgD,QAAQ,CAAC;IAC9D;EAAC;IAAA3K,GAAA;IAAA3B,KAAA,WAAA8P,cAEaxD,QAAoB,EAAE;MAClC,IAAI,CAACjG,aAAa,CAACkG,EAAE,CAACpD,kBAAW,CAACC,YAAY,EAAEkD,QAAQ,CAAC;IAC3D;EAAC;IAAA3K,GAAA;IAAA3B,KAAA,WAAAwK,kBAAA,EAE2B;MAC1B,IAAI,CAACnE,aAAa,CAAC0J,IAAI,CAAC5G,kBAAW,CAACqD,aAAa,CAAC;IACpD;EAAC;IAAA7K,GAAA;IAAA3B,KAAA,WAAA2P,kBAAA,EAE2B;MAC1B,IAAI,CAACtJ,aAAa,CAAC0J,IAAI,CAAC5G,kBAAW,CAACG,aAAa,CAAC;IACpD;EAAC;IAAA3H,GAAA;IAAA3B,KAAA,WAAAwN,iBAAA,EAE0B;MACzB,IAAI,CAACnH,aAAa,CAAC0J,IAAI,CAAC5G,kBAAW,CAACC,YAAY,CAAC;IACnD;EAAC;IAAAzH,GAAA;IAAA3B,KAAA;MAAA,IAAAgQ,sBAAA,GAAAlP,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,UAAAwJ,UAAA;QAAA,IAAAC,MAAA;QAAA,IAAAC,KAAA;QAAA,OAAA3J,kBAAA,CAAAG,IAAA,UAAAyJ,WAAAC,UAAA;UAAA;YAAA,QAAAA,UAAA,CAAAvJ,IAAA,GAAAuJ,UAAA,CAAAtJ,IAAA;cAAA;gBAGSoJ,KAAK,GAAK,IAAI,CAAC5L,KAAK,CAACuB,UAAU,CAA/BqK,KAAK;gBAAA,KACTA,KAAK;kBAAAE,UAAA,CAAAtJ,IAAA;kBAAA;gBAAA;gBAAAsJ,UAAA,CAAA5C,EAAA,GACC0C,KAAK,CAAC9R,IAAI;gBAAAgS,UAAA,CAAAtJ,IAAA,GAAAsJ,UAAA,CAAA5C,EAAA,KACX9D,uBAAgB,CAACS,MAAM,OAAAiG,UAAA,CAAA5C,EAAA,KAGvB9D,uBAAgB,CAAC+F,WAAW,OAAAW,UAAA,CAAA5C,EAAA,KAO5B9D,uBAAgB,CAACC,UAAU;gBAAA;cAAA;gBAT9B,IAAI,CAAClC,iBAAiB,GAAG,IAAI;gBAAC,OAAA2I,UAAA,CAAArJ,MAAA;cAAA;gBAAAqJ,UAAA,CAAAtJ,IAAA;gBAAA,OAGxB,IAAI,CAACxC,KAAK,CAAC+G,KAAK,CAACvE,IAAI,eAAAjG,iBAAA,eAAA0F,kBAAA,CAAAC,IAAA,CAAC,SAAA6J,UAAA;kBAAA,OAAA9J,kBAAA,CAAAG,IAAA,UAAA4J,WAAAC,UAAA;oBAAA;sBAAA,QAAAA,UAAA,CAAA1J,IAAA,GAAA0J,UAAA,CAAAzJ,IAAA;wBAAA;0BAAAyJ,UAAA,CAAAzJ,IAAA;0BAAA,OACpBmJ,MAAI,CAAC1H,6BAA6B,CAAC;4BACvCiG,eAAe,EAAE;0BACnB,CAAC,CAAC;wBAAA;wBAAA;0BAAA,OAAA+B,UAAA,CAAAvJ,IAAA;sBAAA;oBAAA;kBAAA,GAAAqJ,SAAA;gBAAA,CACH,GAAC;cAAA;gBAAA,OAAAD,UAAA,CAAArJ,MAAA;cAAA;gBAGF,IAAI,CAACS,UAAU,CAAC,CAAC;gBAAC,OAAA4I,UAAA,CAAArJ,MAAA;cAAA;gBAAA,OAAAqJ,UAAA,CAAArJ,MAAA;cAAA;cAAA;gBAAA,OAAAqJ,UAAA,CAAApJ,IAAA;YAAA;UAAA;QAAA,GAAAgJ,SAAA;MAAA;MAAA,SAAA5E,sBAAA;QAAA,OAAA2E,sBAAA,CAAAzQ,KAAA,OAAAE,SAAA;MAAA;MAAA,OAAA4L,qBAAA;IAAA;EAAA;IAAA1J,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAtcP;MACjB,OAAO,IAAI,CAACmD,KAAK,CAAC+C,IAAI,CAACmJ,YAAY;IACrC;EAAC;IAAA9O,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAEiB;MAAA,IAAAsP,YAAA;MAChB,OAAO,EAAAA,YAAA,OAAI,CAACxL,KAAK,cAAAwL,YAAA,uBAAVA,YAAA,CAAYtM,WAAW,KAAI,IAAI;IACxC;EAAC;IAAAzC,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAE0B;MAAA,IAAAuP,YAAA;MACzB,OAAO,EAAAA,YAAA,OAAI,CAACzL,KAAK,cAAAyL,YAAA,uBAAVA,YAAA,CAAYtL,oBAAoB,KAAI,IAAI;IACjD;EAAC;IAAA1D,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAEmB;MAAA,IAAAwP,iBAAA;MAClB,QAAAA,iBAAA,GAAO,IAAI,CAACxM,WAAW,cAAAwM,iBAAA,uBAAhBA,iBAAA,CAAkB1M,aAAa;IACxC;EAAC;IAAAvC,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAEmC;MAAA,IAAAyP,mBAAA;MAClC,QAAAA,mBAAA,GAAO,IAAI,CAAC3M,aAAa,cAAA2M,mBAAA,uBAAlBA,mBAAA,CAAoBC,6BAA6B;IAC1D;EAAC;IAAAnP,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAEqB;MACpB,OACE,IAAI,CAACgD,WAAW,CAACL,eAAe,IAAI;QAClCC,eAAe,EAAE,EAAsB;QACvC+M,sBAAsB,EAAE,EAAsB;QAC9CC,MAAM,EAAE,EAAsB;QAC9BC,YAAY,EAAE,CAAC,CAAQ;QACvBhN,sBAAsB,EAAE;MAC1B,CAAC;IAEL;EAAC;IAAAtC,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAEmB;MAClB,OAAO,IAAI,CAAC2C,eAAe,CAACiN,MAAM;IACpC;EAAC;IAAArP,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAEsB;MAAA,IAAA8P,kBAAA;MACrB,QAAAA,kBAAA,GAAO,IAAI,CAAC9M,WAAW,cAAA8M,kBAAA,uBAAhBA,kBAAA,CAAkBC,gBAAgB;IAC3C;EAAC;IAAAxP,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAGqB;MACpB,QACE;QACEgQ,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAEC,gBAAI,CAACC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAChN,KAAK,CAACC,MAAM,CAACC,aAAa;MACrE,CAAC,EAAA+M,MAAA,CAAAjU,kBAAA,CACE,IAAAkU,sBAAU,EAAAlU,kBAAA,CAAK,IAAI,CAACwG,eAAe,CAACC,eAAe,GAAG,UAAU,CAAC;IAExE;EAAC;IAAArC,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAG4B;MAC3B,OAAO,IAAAqQ,sBAAU,EAAAlU,kBAAA,CACX,IAAI,CAACwG,eAAe,CAACE,sBAAsB,GAC/C,WACF,CAAC;IACH;EAAC;IAAAtC,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAGe;MACd,QACE;QACEsQ,WAAW,EAAEJ,gBAAI,CAACC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAChN,KAAK,CAACC,MAAM,CAACC,aAAa,CAAC;QACvEkN,MAAM,EAAE;MACV,CAAC,EAAAH,MAAA,CAAAjU,kBAAA,CACE,IAAI,CAAC2G,aAAa,CAACC,SAAS,CAACoB,GAAG,CAAC,UAACqM,QAAQ,EAAK;QAChD,IAAMD,MAAM,GACV,IAAAE,kBAAM,EAAC;UACLC,WAAW,EAAEF,QAAQ,CAACD,MAAM;UAC5BI,WAAW,EAAE;QACf,CAAC,CAAC,IAAIH,QAAQ,CAACD,MAAM;QACvB,OAAAnS,aAAA,CAAAA,aAAA,KACKoS,QAAQ;UACXD,MAAM,EAANA;QAAM;MAEV,CAAC,CAAC;IAEN;EAAC;IAAAhQ,GAAA;IAAAP,GAAA,WAAAA,IAAA,EAMwB;MAAA,IAAA4Q,kBAAA;MAAA,IAAAC,qBAAA,IAAAD,kBAAA,GACQ,IAAI,CAAC5N,WAAW,cAAA4N,kBAAA,uBAAhBA,kBAAA,CAAkB3N,mBAAmB;QAA5DC,kBAAkB,GAAA2N,qBAAA,CAAlB3N,kBAAkB,EAC1B;MACA,IAAM4N,eAAe,GAAG5N,kBAAkB,CAACnF,MAAM,CAAC,UAAAgT,MAAA;QAAA,IAAGC,SAAS,GAAAD,MAAA,CAATC,SAAS;QAAA,OAC5D7O,iBAAiB,CAAC8O,QAAQ,CAACD,SAAS,CAAC;MAAA,CACvC,CAAC;MACD,OAAOF,eAAe,CAACtT,MAAM,GAAG,CAAC,GAC7BsT,eAAe,GACf,CACE;QACEE,SAAS,EAAE,KAAK;QAChBE,WAAW,EAAEhB,gBAAI,CAACC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAChN,KAAK,CAACC,MAAM,CAACC,aAAa;MACnE,CAAC,CACF;IACP;EAAC;IAAA9C,GAAA;IAAAP,GAAA,WAAAA,IAAA,EA+CgB;MACf,OAAO,IAAI,CAAC+H,WAAW,KAAKA,kBAAW,CAACG,aAAa;IACvD;EAAC;EAAA,OAAA9F,MAAA;AAAA,EA9MkB+O,gBAAU,IAAAtV,WAAA,GAAAiG,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,gBA0C5B2Q,mBAAa,EACbC,WAAK;EAAAxS,YAAA;EAAAZ,UAAA;EAAAa,QAAA;EAAAI,WAAA,WAAAA,YAAA;IAAA,OACM,KAAK;EAAA;AAAA,IAAApD,YAAA,GAAAgG,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,YAEhB2Q,mBAAa,EACbC,WAAK;EAAAxS,YAAA;EAAAZ,UAAA;EAAAa,QAAA;EAAAI,WAAA,WAAAA,YAAA;IAAA,OACe,IAAI;EAAA;AAAA,IAAAnD,YAAA,GAAA+F,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,cAExB2Q,mBAAa,EACbC,WAAK;EAAAxS,YAAA;EAAAZ,UAAA;EAAAa,QAAA;EAAAI,WAAA,WAAAA,YAAA;IAAA,OACI,EAAE;EAAA;AAAA,IAAA4C,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,iBAEX6Q,YAAM,GAAA3T,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,iBAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,sBAAAnF,KAAA,GAAAqC,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,sBAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,6BAAAlF,KAAA,GAAAoC,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,6BAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,gBAAAjF,KAAA,GAAAmC,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,gBAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,yBAAAhF,KAAA,GAAAkC,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,yBAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,wBAAA/E,KAAA,EAwHN4V,YAAM,GAAA3T,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,wBAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,eAON6Q,YAAM,GAAA3T,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,eAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,mBAKN6Q,YAAM,GAAA3T,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,mBAAA7E,OAAA,CAAA6E,SAAA,GAAAzE,YAAA,GAAA8F,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,kBAKN4Q,WAAK;EAAAxS,YAAA;EAAAZ,UAAA;EAAAa,QAAA;EAAAI,WAAA,WAAAA,YAAA;IAAA,OACgB,IAAI;EAAA;AAAA,IAAA4C,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,qBAEzB6Q,YAAM,GAAA3T,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,qBAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,sBAKN6Q,YAAM,GAAA3T,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,sBAAA7E,OAAA,CAAA6E,SAAA,GAAAqB,yBAAA,CAAAlG,OAAA,CAAA6E,SAAA,iBASN6Q,YAAM,GAAA3T,MAAA,CAAAK,wBAAA,CAAApC,OAAA,CAAA6E,SAAA,iBAAA7E,OAAA,CAAA6E,SAAA,IAAA7E,OAAA,MAAAD,MAAA;AAAA4V,OAAA,CAAAnP,MAAA,GAAAA,MAAA","ignoreList":[]}