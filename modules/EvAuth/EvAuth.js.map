{"version":3,"file":"EvAuth.js","names":["_events","require","_di","_utils","_core","_format","_interopRequireDefault","_enums","_enums2","_EvTypeError","_sortByName","_trackEvents","_i18n","_dec","_dec2","_dec3","_dec4","_dec5","_dec6","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","_initializerDefineProperty","property","descriptor","context","initializer","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","err","undefined","_classCallCheck","instance","Constructor","_get","Reflect","get","bind","receiver","base","_superPropBase","desc","hasOwnProperty","_getPrototypeOf","_defineProperties","props","_createClass","protoProps","staticProps","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","reverse","reduce","decorator","_initializerWarningHelper","Error","DEFAULT_COUNTRIES","EvAuth","Module","deps","dep","optional","computed","that","inboundSettings","availableQueues","availableRequeueQueues","agentSettings","callerIds","agentConfig","applicationSettings","availableCountries","_deps","locale","currentLocale","track","_","_ref","_agent$authenticateRe","_agent$authenticateRe2","_agent$authenticateRe3","_agent$authenticateRe4","connected","agent","trackEvents","loginAgent","authenticateResponse","agents","map","agentId","rcUserId","_RcModuleV","_super","_this$_deps$tabManage","tabManager","enable","_this$agent","_this","storageKey","enableGlobalCache","connecting","_eventEmitter","EventEmitter","canUserLogoutFn","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","_logout","_callee2","_callee2$","_context2","auth","logout","dismissAllAlert","setNotAuth","_logoutByOtherTab","_authenticateResponseWatcher","_agentConfigWatcher","_callee3","token","authenticateRes","_args3","_callee3$","_context3","accessToken","authenticateWithToken","rcAccessToken","shouldEmitAuthSuccess","sent","openSocketWithSelectedAgentId","addAfterLoggedInHandler","console","log","clearAgentId","addBeforeLogoutHandler","setAgentId","setConnectionData","_ref5","setAgent","setAuthSuccess","loginStatus","AUTH_SUCCESS","setLoginSuccess","LOGIN_SUCCESS","asyncAllTabs","NOT_AUTH","tabManagerEnabled","send","tabManagerEvents","LOGGED_OUT","_shouldInit","loggedIn","onInitOnce","_this2","evSubscription","subscribe","EvCallbackTypes","LOGOUT","_callee4","_callee4$","_context4","_emitLogoutBefore","alert","message","messageTypes","FORCE_LOGOUT","newReconnect","_onStateChange","_callee6","_this3","_callee6$","_context6","ready","_checkTabManagerEvent","block","_callee5","_callee5$","_context5","onStateChange","onceLogout","cb","once","_callee7","logoutAgentResponse","_callee7$","_context7","sendLogoutTabEvent","logoutAgent","evClient","beforeAgentLogout","callback","on","LOGOUT_BEFORE","isBlock","closeSocket","_authenticateWithToken","_callee8","_ref8","_ref8$rcAccessToken","_ref8$tokenType","tokenType","_ref8$shouldEmitAuthS","_args8","_callee8$","_context8","initSDK","getAndHandleAuthenticateResponse","_emitAuthSuccess","t0","t1","type","NO_AGENT","CONNECT_TIMEOUT","UNEXPECTED_AGENT","warning","danger","CONNECT_ERROR","_openSocketWithSelectedAgentId","_callee9","_this4","_ref9","_ref9$syncOtherTabs","syncOtherTabs","_ref9$retryOpenSocket","retryOpenSocket","getAgentConfig","selectedAgentId","openSocketResult","_yield$this$_deps$aut","access_token","openSocketRes","_args9","_callee9$","_context9","LOGIN_PHASE_1","EvTypeError","openSocket","sleep","refreshToken","OPEN_SOCKET_ERROR","OPEN_SOCKET","_emitLoginSuccess","INVALID_BROWSER","onceLoginSuccess","onAuthSuccess","emit","_checkTabManagerEvent2","_callee11","_this5","event","_callee11$","_context11","_callee10","_callee10$","_context10","isFreshLogin","_this$agent2","_this$agent3","_this$agentConfig","_this$agentSettings","outboundManualDefaultRingtime","availableSkillProfiles","queues","skillProfile","_this$agentConfig2","agentPermissions","gateId","gateName","i18n","getString","concat","sortByName","description","number","callerId","format","phoneNumber","countryCode","_this$agentConfig3","_this$agentConfig$app","countriesUsaCan","_ref11","countryId","includes","countryName","RcModuleV2","globalStorage","state","action","exports"],"sources":["modules/EvAuth/EvAuth.ts"],"sourcesContent":["import { EventEmitter } from 'events';\nimport type { Unsubscribe } from 'redux';\n\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport { sleep } from '@ringcentral-integration/commons/utils';\nimport {\n  action,\n  computed,\n  globalStorage,\n  RcModuleV2,\n  state,\n  track,\n} from '@ringcentral-integration/core';\nimport format from '@ringcentral-integration/phone-number/lib/format';\n\nimport { loginStatus, messageTypes, tabManagerEvents } from '../../enums';\nimport type { EvAgentConfig, EvAgentData } from '../../lib/EvClient';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums';\nimport { EvTypeError } from '../../lib/EvTypeError';\nimport { sortByName } from '../../lib/sortByName';\nimport { trackEvents } from '../../lib/trackEvents';\nimport type {\n  Auth,\n  AuthenticateWithTokenType,\n  Deps,\n  State,\n} from './EvAuth.interface';\nimport i18n from './i18n';\n\nconst DEFAULT_COUNTRIES = ['USA', 'CAN'];\n\n@Module({\n  name: 'EvAuth',\n  deps: [\n    'EvClient',\n    'Auth',\n    'Block',\n    'Alert',\n    'Locale',\n    'RouterInteraction',\n    'EvSubscription',\n    'TabManager',\n    'GlobalStorage',\n    { dep: 'EvAuthOptions', optional: true },\n  ],\n})\nclass EvAuth extends RcModuleV2<Deps> implements Auth {\n  public connecting = false;\n\n  private _eventEmitter = new EventEmitter();\n\n  public canUserLogoutFn: () => Promise<boolean> = async () => true;\n\n  private _logout = async () => {\n    await this._deps.auth.logout({ dismissAllAlert: false });\n    this.setNotAuth(true);\n  };\n\n  private _logoutByOtherTab = false;\n\n  private _authenticateResponseWatcher: Unsubscribe = null;\n  private _agentConfigWatcher: Unsubscribe = null;\n\n  get tabManagerEnabled() {\n    return this._deps.tabManager?.enable;\n  }\n\n  get isOnlyOneAgent() {\n    return this.agent?.authenticateResponse.agents.length === 1;\n  }\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      storageKey: 'EvAuth',\n      enableGlobalCache: true,\n    });\n    this._deps.auth.addAfterLoggedInHandler(() => {\n      console.log('addAfterLoggedInHandler~~');\n      this.clearAgentId();\n    });\n\n    this._deps.auth.addBeforeLogoutHandler(() => {\n      console.log('addBeforeLogoutHandler~~');\n      this.clearAgentId();\n    });\n  }\n\n  @globalStorage\n  @state\n  connected = false;\n\n  @globalStorage\n  @state\n  agent: EvAgentData = null;\n\n  @globalStorage\n  @state\n  agentId = '';\n\n  @action\n  setAgentId(agentId: string) {\n    this.agentId = agentId;\n  }\n\n  get isFreshLogin() {\n    return this._deps.auth.isFreshLogin;\n  }\n\n  get agentConfig() {\n    return this.agent?.agentConfig || null;\n  }\n\n  get authenticateResponse() {\n    return this.agent?.authenticateResponse || null;\n  }\n\n  get agentSettings() {\n    return this.agentConfig?.agentSettings;\n  }\n\n  get outboundManualDefaultRingtime() {\n    return this.agentSettings?.outboundManualDefaultRingtime;\n  }\n\n  get inboundSettings() {\n    return (\n      this.agentConfig.inboundSettings || {\n        availableQueues: [] as Array<undefined>,\n        availableSkillProfiles: [] as Array<undefined>,\n        queues: [] as Array<undefined>,\n        skillProfile: {} as any,\n        availableRequeueQueues: [] as Array<undefined>,\n      }\n    );\n  }\n\n  get assignedQueue() {\n    return this.inboundSettings.queues;\n  }\n\n  get agentPermissions() {\n    return this.agentConfig?.agentPermissions;\n  }\n\n  @computed((that: EvAuth) => [that.inboundSettings.availableQueues])\n  get availableQueues() {\n    return [\n      {\n        gateId: '-1',\n        gateName: i18n.getString('default', this._deps.locale.currentLocale),\n      },\n      ...sortByName([...this.inboundSettings.availableQueues], 'gateName'),\n    ];\n  }\n\n  @computed((that: EvAuth) => [that.inboundSettings.availableRequeueQueues])\n  get availableRequeueQueues() {\n    return sortByName(\n      [...this.inboundSettings.availableRequeueQueues],\n      'groupName',\n    );\n  }\n\n  @computed((that: EvAuth) => [that.agentSettings.callerIds])\n  get callerIds() {\n    return [\n      {\n        description: i18n.getString('default', this._deps.locale.currentLocale),\n        number: '-1',\n      },\n      ...this.agentSettings.callerIds.map((callerId) => {\n        const number =\n          format({\n            phoneNumber: callerId.number,\n            countryCode: 'US',\n          }) || callerId.number;\n        return {\n          ...callerId,\n          number,\n        };\n      }),\n    ];\n  }\n\n  @computed((that: EvAuth) => [\n    that.agentConfig.applicationSettings.availableCountries,\n    that._deps.locale.currentLocale,\n  ])\n  get availableCountries() {\n    const { availableCountries } = this.agentConfig?.applicationSettings;\n    // The default Engage Voice service area is `USA` and `CAN` with `+1` international code.\n    const countriesUsaCan = availableCountries.filter(({ countryId }) =>\n      DEFAULT_COUNTRIES.includes(countryId),\n    );\n    return countriesUsaCan.length > 0\n      ? countriesUsaCan\n      : [\n          {\n            countryId: 'USA',\n            countryName: i18n.getString('us', this._deps.locale.currentLocale),\n          },\n        ];\n  }\n\n  @track((_: EvAuth, { connected, agent }: State) => {\n    return [\n      trackEvents.loginAgent,\n      connected\n        ? {\n            'agentId(s)': agent.authenticateResponse?.agents?.map(\n              (agent) => agent.agentId,\n            ),\n            'userId(s)': agent.authenticateResponse?.agents?.map(\n              (agent) => agent.rcUserId,\n            ),\n          }\n        : undefined,\n    ];\n  })\n  @action\n  setConnectionData({ connected, agent }: State) {\n    // ! agent must be set before connected\n    this.agent = agent;\n    this.connected = connected;\n  }\n\n  @action\n  setAgent(agent: EvAgentData) {\n    this.agent = agent;\n  }\n\n  @action\n  clearAgentId() {\n    this.agentId = '';\n  }\n\n  @state\n  loginStatus: string = null;\n\n  @action\n  setAuthSuccess() {\n    this.loginStatus = loginStatus.AUTH_SUCCESS;\n  }\n\n  @action\n  setLoginSuccess() {\n    this.loginStatus = loginStatus.LOGIN_SUCCESS;\n  }\n\n  get isEvLogged() {\n    return this.loginStatus === loginStatus.LOGIN_SUCCESS;\n  }\n\n  @action\n  setNotAuth(asyncAllTabs = false) {\n    this.loginStatus = loginStatus.NOT_AUTH;\n    if (asyncAllTabs && this.tabManagerEnabled) {\n      this._deps.tabManager.send(tabManagerEvents.LOGGED_OUT);\n    }\n  }\n\n  override _shouldInit() {\n    return super._shouldInit() && this._deps.auth.loggedIn && this.connected;\n  }\n\n  override onInitOnce() {\n    this._deps.evSubscription.subscribe(EvCallbackTypes.LOGOUT, async () => {\n      this._emitLogoutBefore();\n\n      // if that is logout by same browser that will only trigger emit\n      // if there is logout by other browser, that need redirect to home page,\n      if (!this._logoutByOtherTab) {\n        this._deps.alert.info({\n          message: messageTypes.FORCE_LOGOUT,\n        });\n\n        this._logoutByOtherTab = false;\n\n        await this.newReconnect();\n      }\n    });\n  }\n\n  override async onStateChange() {\n    // here not need check this.ready, because that should work when not login\n    if (this.tabManagerEnabled && this._deps.tabManager.ready) {\n      await this._checkTabManagerEvent();\n    }\n\n    if (\n      this._deps.auth.loggedIn &&\n      this.loginStatus !== loginStatus.AUTH_SUCCESS &&\n      this.loginStatus !== loginStatus.LOGIN_SUCCESS &&\n      !this.connecting\n    ) {\n      this.connecting = true;\n      // when login make sure the logoutByOtherTab is false\n      this._logoutByOtherTab = false;\n      await this._deps.block.next(async () => {\n        if (this.agentId) {\n          await this.loginAgent();\n        } else {\n          await this.authenticateWithToken();\n        }\n      });\n    }\n  }\n\n  onceLogout(cb: () => any) {\n    return this._deps.evSubscription.once(EvCallbackTypes.LOGOUT, cb);\n  }\n\n  async logout() {\n    if (!(await this.canUserLogoutFn())) {\n      return;\n    }\n    console.log('logout~~');\n\n    const agentId = this.agentId;\n\n    this.sendLogoutTabEvent();\n\n    await this._deps.block.next(this._logout);\n\n    const logoutAgentResponse = await this.logoutAgent(agentId);\n\n    // TODO: error handle when logout fail\n    // TODO: when failed need tell other tab not logout => this._deps.tabManager.send(tabManagerEvents.LOGOUT);\n    if (!logoutAgentResponse.message || logoutAgentResponse.message !== 'OK') {\n      console.log('logoutAgent failed');\n    }\n    this.setConnectionData({ connected: false, agent: null });\n  }\n\n  sendLogoutTabEvent() {\n    this._emitLogoutBefore();\n    if (this.tabManagerEnabled) {\n      this._deps.tabManager.send(tabManagerEvents.LOGOUT);\n    }\n  }\n\n  logoutAgent(agentId: string = this.agentId) {\n    return this._deps.evClient.logoutAgent(agentId);\n  }\n\n  beforeAgentLogout(callback: () => void) {\n    this._eventEmitter.on(loginStatus.LOGOUT_BEFORE, callback);\n  }\n\n  newReconnect(isBlock = true) {\n    this._deps.evClient.closeSocket();\n\n    const fn = this.loginAgent;\n\n    return isBlock ? this._deps.block.next(fn) : fn();\n  }\n\n  async authenticateWithToken({\n    rcAccessToken = this._deps.auth.accessToken,\n    tokenType = 'Bearer',\n    shouldEmitAuthSuccess = true,\n  }: AuthenticateWithTokenType = {}) {\n    console.log('authenticateWithToken', shouldEmitAuthSuccess);\n    try {\n      this._deps.evClient.initSDK();\n\n      const authenticateResponse =\n        await this._deps.evClient.getAndHandleAuthenticateResponse(\n          rcAccessToken,\n          tokenType,\n        );\n      const agent = { ...this.agent, authenticateResponse };\n      // if (shouldEmitAuthSuccess && !this._authenticateResponseWatcher) {\n      //   this._authenticateResponseWatcher = watch(\n      //     this,\n      //     () => this.agent?.authenticateResponse,\n      //     (authenticateResponse) => {\n      //       if (authenticateResponse) {\n      //         this._emitAuthSuccess();\n      //         this._authenticateResponseWatcher();\n      //         this._authenticateResponseWatcher = null;\n      //       }\n      //     },\n      //   );\n      // }\n      this.setAgent(agent);\n      this.setAuthSuccess();\n      if (shouldEmitAuthSuccess) {\n        this._emitAuthSuccess();\n      }\n      return authenticateResponse;\n    } catch (error) {\n      switch (error.type) {\n        case messageTypes.NO_AGENT:\n          this._deps.alert.warning({\n            message: error.type,\n          });\n          break;\n        case messageTypes.CONNECT_TIMEOUT:\n        case messageTypes.UNEXPECTED_AGENT:\n          this._deps.alert.danger({\n            message: error.type,\n          });\n          break;\n        default:\n          this._deps.alert.danger({\n            message: messageTypes.CONNECT_ERROR,\n          });\n      }\n      await this._logout();\n    }\n  }\n\n  async openSocketWithSelectedAgentId({\n    syncOtherTabs = false,\n    retryOpenSocket = false,\n  } = {}) {\n    console.log(\n      'openSocketWithSelectedAgentId',\n      syncOtherTabs,\n      retryOpenSocket,\n    );\n    try {\n      // TODO: here need check time when no message come back, that will block app.\n      const getAgentConfig = new Promise<EvAgentConfig>((resolve) => {\n        this._deps.evClient.on(EvCallbackTypes.LOGIN_PHASE_1, resolve);\n      });\n\n      const selectedAgentId = this.agentId;\n      if (!selectedAgentId) {\n        throw new EvTypeError({\n          type: messageTypes.NO_AGENT,\n        });\n      }\n      const openSocketResult = await this._deps.evClient.openSocket(\n        selectedAgentId,\n      );\n      // wait for socketOpened\n      // Because instance.socket Opened(); was performed after callback.\n      await sleep(0);\n      if (openSocketResult.error) {\n        console.log('retryOpenSocket~~', retryOpenSocket);\n        if (retryOpenSocket) {\n          const { access_token } = await this._deps.auth.refreshToken();\n          const authenticateRes = await this.authenticateWithToken({\n            rcAccessToken: access_token,\n            shouldEmitAuthSuccess: false,\n          });\n          if (!authenticateRes) return;\n          const openSocketRes: any = await this.openSocketWithSelectedAgentId({\n            syncOtherTabs,\n          });\n          return openSocketRes;\n        }\n        throw new EvTypeError({\n          type: messageTypes.OPEN_SOCKET_ERROR,\n        });\n      }\n\n      // TODO： implement multiple sync back drop\n      if (syncOtherTabs && this.tabManagerEnabled) {\n        this._deps.tabManager.send(tabManagerEvents.OPEN_SOCKET);\n      }\n\n      const agentConfig = await getAgentConfig;\n\n      const agent = { ...this.agent, agentConfig };\n\n      // if (!this._agentConfigWatcher) {\n      //   this._agentConfigWatcher = watch(\n      //     this,\n      //     () => this.agent?.agentConfig,\n      //     (agentConfig) => {\n      //       if (agentConfig) {\n      //         this._emitLoginSuccess();\n      //         this._agentConfigWatcher();\n      //         this._agentConfigWatcher = null;\n      //       }\n      //     },\n      //   );\n      // }\n\n      this.setConnectionData({ agent, connected: true });\n\n      this.connecting = false;\n\n      this.setLoginSuccess();\n\n      this._emitLoginSuccess();\n\n      return agentConfig;\n    } catch (error) {\n      switch (error.type) {\n        case messageTypes.NO_AGENT:\n          this._deps.alert.warning({\n            message: error.type,\n          });\n          break;\n        case messageTypes.INVALID_BROWSER:\n        case messageTypes.OPEN_SOCKET_ERROR:\n          this._deps.alert.danger({\n            message: error.type,\n          });\n          break;\n        default:\n          this._deps.alert.danger({\n            message: messageTypes.CONNECT_ERROR,\n          });\n      }\n\n      await this._logout();\n    }\n  }\n\n  loginAgent = async (token: string = this._deps.auth.accessToken) => {\n    const authenticateRes = await this.authenticateWithToken({\n      rcAccessToken: token,\n      shouldEmitAuthSuccess: false,\n    });\n    if (!authenticateRes) return;\n    await this.openSocketWithSelectedAgentId();\n  };\n\n  onceLoginSuccess(callback: () => void) {\n    this._eventEmitter.once(loginStatus.LOGIN_SUCCESS, callback);\n  }\n\n  onAuthSuccess(callback: () => void) {\n    this._eventEmitter.on(loginStatus.AUTH_SUCCESS, callback);\n  }\n\n  private _emitLogoutBefore() {\n    this._eventEmitter.emit(loginStatus.LOGOUT_BEFORE);\n  }\n\n  private _emitLoginSuccess() {\n    this._eventEmitter.emit(loginStatus.LOGIN_SUCCESS);\n  }\n\n  private _emitAuthSuccess() {\n    this._eventEmitter.emit(loginStatus.AUTH_SUCCESS);\n  }\n\n  private async _checkTabManagerEvent() {\n    const { event } = this._deps.tabManager;\n    if (event) {\n      switch (event.name) {\n        case tabManagerEvents.LOGOUT:\n          this._logoutByOtherTab = true;\n          break;\n        case tabManagerEvents.OPEN_SOCKET:\n          await this._deps.block.next(async () => {\n            await this.openSocketWithSelectedAgentId({\n              retryOpenSocket: true,\n            });\n          });\n          break;\n        case tabManagerEvents.LOGGED_OUT:\n          this.setNotAuth();\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n\nexport { EvAuth };\n"],"mappings":"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"}