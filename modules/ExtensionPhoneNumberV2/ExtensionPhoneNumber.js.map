{"version":3,"sources":["modules/ExtensionPhoneNumberV2/ExtensionPhoneNumber.ts"],"names":["ExtensionPhoneNumber","name","deps","dep","optional","data","numbers","_stopWatching","_source","DataSource","extensionPhoneNumberOptions","key","cleanOnReset","fetchFunction","params","_deps","client","account","extension","phoneNumber","list","readyCheckFunction","extensionFeatures","ready","subscription","permissionCheckFunction","features","ReadExtensionPhoneNumbers","available","dataFetcherV2","register","message","disableCache","tabManager","active","body","hints","includes","subscriptionHints","companyNumbers","fetchData","subscribe","subscriptionFilters","extensionInfo","newMessage","_handleSubscription","usageType","usageTypes","CompanyNumber","MainCompanyNumber","DirectNumber","indexOf","ForwardedNumber","ForwardedCompanyNumber","status","DataFetcherV2Consumer"],"mappings":"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","sourcesContent":["import {\n  ExtensionInfoEvent,\n  UserPhoneNumberInfo,\n} from '@rc-ex/core/definitions';\nimport { computed, watch } from '@ringcentral-integration/core';\nimport { filter, find } from 'ramda';\nimport { Unsubscribe } from 'redux';\nimport { subscriptionFilters } from '../../enums/subscriptionFilters';\nimport { subscriptionHints } from '../../enums/subscriptionHints';\nimport { usageTypes } from '../../enums/usageTypes';\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './ExtensionPhoneNumber.interface';\n\n@Module({\n  name: 'ExtensionPhoneNumber',\n  deps: [\n    'Client',\n    'DataFetcherV2',\n    'ExtensionFeatures',\n    'Subscription',\n    { dep: 'TabManager', optional: true },\n    { dep: 'ExtensionPhoneNumberOptions', optional: true },\n  ],\n})\nexport class ExtensionPhoneNumber extends DataFetcherV2Consumer<\n  Deps,\n  UserPhoneNumberInfo[]\n> {\n  protected _stopWatching: Unsubscribe;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._source = new DataSource({\n      ...deps.extensionPhoneNumberOptions,\n      key: 'extensionPhoneNumber',\n      cleanOnReset: true,\n      fetchFunction: async (): Promise<UserPhoneNumberInfo[]> =>\n        fetchList((params: any) =>\n          this._deps.client.account().extension().phoneNumber().list(params),\n        ),\n      readyCheckFunction: () =>\n        !!(this._deps.extensionFeatures.ready && this._deps.subscription.ready),\n      permissionCheckFunction: () =>\n        this._deps.extensionFeatures.features?.ReadExtensionPhoneNumbers\n          ?.available ?? false,\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  protected _handleSubscription(message: ExtensionInfoEvent) {\n    if (\n      this.ready &&\n      (this._source.disableCache || (this._deps.tabManager?.active ?? true)) &&\n      message?.body?.hints?.includes(subscriptionHints.companyNumbers)\n    ) {\n      this.fetchData();\n    }\n  }\n\n  onInit() {\n    this._deps.subscription.subscribe([subscriptionFilters.extensionInfo]);\n    this._stopWatching = watch(\n      this,\n      () => this._deps.subscription.message,\n      (newMessage) => this._handleSubscription(newMessage),\n    );\n  }\n\n  onReset() {\n    this._stopWatching?.();\n    this._stopWatching = null;\n  }\n\n  @computed(({ data }: ExtensionPhoneNumber) => [data])\n  get numbers() {\n    return this.data ?? [];\n  }\n\n  @computed(({ numbers }: ExtensionPhoneNumber) => [numbers])\n  get companyNumbers() {\n    return filter(\n      (phoneNumber) => phoneNumber.usageType === usageTypes.CompanyNumber,\n      this.numbers,\n    );\n  }\n\n  @computed(({ numbers }: ExtensionPhoneNumber) => [numbers])\n  get mainCompanyNumber() {\n    return find(\n      (phoneNumber) => phoneNumber.usageType === usageTypes.MainCompanyNumber,\n      this.numbers,\n    );\n  }\n\n  @computed(({ numbers }: ExtensionPhoneNumber) => [numbers])\n  get directNumbers() {\n    return filter(\n      (phoneNumber) => phoneNumber.usageType === usageTypes.DirectNumber,\n      this.numbers,\n    );\n  }\n\n  @computed(({ numbers }: ExtensionPhoneNumber) => [numbers])\n  get callerIdNumbers() {\n    return filter(\n      (phoneNumber) =>\n        phoneNumber.features?.indexOf('CallerId') !== -1 ||\n        ((phoneNumber.usageType === usageTypes.ForwardedNumber ||\n          phoneNumber.usageType === usageTypes.ForwardedCompanyNumber) &&\n          (phoneNumber.status === 'PortedIn' ||\n            phoneNumber.status === 'Normal')),\n      this.numbers,\n    );\n  }\n\n  @computed(({ numbers }: ExtensionPhoneNumber) => [numbers])\n  get smsSenderNumbers() {\n    return filter(\n      (phoneNumber) => phoneNumber.features?.indexOf('SmsSender') !== -1,\n      this.numbers,\n    );\n  }\n}\n"],"file":"ExtensionPhoneNumber.js"}