{"version":3,"file":"EvAgentSession.interface.js","names":[],"sources":["modules/EvAgentSession/EvAgentSession.interface.ts"],"sourcesContent":["import type { Alert } from '@ringcentral-integration/commons/modules/Alert';\nimport type { Auth } from '@ringcentral-integration/commons/modules/Auth';\nimport type { Locale } from '@ringcentral-integration/commons/modules/Locale';\nimport type { Beforeunload } from '@ringcentral-integration/widgets/modules/Beforeunload';\nimport type { Block } from '@ringcentral-integration/widgets/modules/Block';\nimport type { ModalUI } from '@ringcentral-integration/widgets/modules/ModalUI';\nimport type RouterInteraction from '@ringcentral-integration/widgets/modules/RouterInteraction';\n\nimport type { LoginTypes } from '../../enums';\nimport type { EvClient } from '../../lib/EvClient';\nimport type { EvAuth } from '../EvAuth';\nimport type { EvCallDataSource } from '../EvCallDataSource';\nimport type { EvPresence } from '../EvPresence';\nimport type { EvStorage } from '../EvStorage';\nimport type { EvTabManager } from '../EvTabManager';\n\nexport interface EvAgentSessionOptions {}\n\nexport type FormGroup = Partial<\n  Pick<\n    State,\n    | 'selectedInboundQueueIds'\n    | 'loginType'\n    | 'selectedSkillProfileId'\n    | 'extensionNumber'\n    | 'autoAnswer'\n  >\n>;\n\nexport interface Deps {\n  evAuth: EvAuth;\n  evClient: EvClient;\n  storage: EvStorage;\n  alert: Alert;\n  auth: Auth;\n  modalUI: ModalUI;\n  locale: Locale;\n  tabManager?: EvTabManager;\n  evCallDataSource: EvCallDataSource;\n  evAgentSessionOptions?: EvAgentSessionOptions;\n  routerInteraction: RouterInteraction;\n  block: Block;\n  presence: EvPresence;\n  beforeunload: Beforeunload;\n}\n\nexport interface State {\n  selectedInboundQueueIds: string[];\n  selectedSkillProfileId: string;\n  loginType: LoginTypes;\n  extensionNumber: string;\n  takingCall: boolean;\n  autoAnswer: boolean;\n  configSuccess: boolean;\n  configured: boolean;\n  tabManagerEnabled: boolean;\n}\n\nexport interface AgentSession extends State {\n  setLoginType(loginType: LoginTypes): void;\n  setInboundQueueIds(ids: string[]): void;\n  setSkillProfileId(skillProfile: string): void;\n  setExtensionNumber(extensionNumber: string): void;\n  setTakingCall(takingCall: boolean): void;\n  setAutoAnswer(autoAnswer: boolean): void;\n  setConfigSuccess(configSuccess: boolean): void;\n}\n"],"mappings":""}