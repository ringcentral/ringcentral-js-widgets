{"version":3,"file":"Beforeunload.js","names":["_core","require","_di","_dec","_class","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","iter","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","undefined","res","Number","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","getPrototypeOf","UNLOAD_EVENT_NAME","Beforeunload","Module","deps","dep","optional","_RcModuleV","_super","get","_list","set","_bindState","_window","removeEventListener","_beforeunloadHandler","addEventListener","_this$_deps$beforeunl","_this$_deps$beforeunl2","_this","event","checkShouldBlock","preventDefault","returnValue","_deps","beforeunloadOptions","originWindow","window","add","cb","index","list","indexOf","concat","remove","_removeItem","clear","_iterator","_step","fn","onAfterUnload","_this2","notNeedCheck","removeAfterUnloadListener","console","log","splice","RcModuleV2","exports"],"sources":["modules/Beforeunload/Beforeunload.ts"],"sourcesContent":["import { RcModuleV2 } from '@ringcentral-integration/core';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport type { Deps } from './Beforeunload.interface';\n\nconst UNLOAD_EVENT_NAME = 'beforeunload';\n\ntype BeforeunloadFn = () => boolean;\n\n@Module({\n  name: 'Beforeunload',\n  deps: [{ dep: 'BeforeunloadOptions', optional: true }],\n})\nexport class Beforeunload extends RcModuleV2<Deps> {\n  _window: Window;\n\n  private get list() {\n    return this._list;\n  }\n\n  private set list(value) {\n    this._list = value;\n\n    if (this._bindState && this._list.length === 0) {\n      this._window.removeEventListener(\n        UNLOAD_EVENT_NAME,\n        this._beforeunloadHandler,\n      );\n      // TODO: binding event here, that will not emit when close tab, not sure why\n      // this._window.removeEventListener('unload', this._onAfterUnload);\n      this._bindState = false;\n    } else if (!this._bindState && this._list.length > 0) {\n      this._window.addEventListener(\n        UNLOAD_EVENT_NAME,\n        this._beforeunloadHandler,\n      );\n      // TODO: binding event here, that will not emit when close tab, not sure why\n      // this._window.addEventListener('unload', this._onAfterUnload);\n      this._bindState = true;\n    }\n  }\n\n  private _list: BeforeunloadFn[] = [];\n\n  private _bindState = false;\n\n  constructor() {\n    super({\n      deps: {},\n    });\n    this._window = this._deps.beforeunloadOptions?.originWindow ?? window;\n  }\n\n  /**\n   * add method into window event beforeunload\n   * @param cb a callback with boolean, if return `true` that will block browser close.\n   */\n  add(cb: BeforeunloadFn) {\n    const index = this.list.indexOf(cb);\n\n    if (index === -1) {\n      this.list = [...this.list, cb];\n      return this.list.length;\n    }\n\n    return index;\n  }\n\n  /**\n   * remove check from check list.\n   * @param cb a callback that you add previous.\n   */\n  remove(cb: BeforeunloadFn) {\n    const index = this.list.indexOf(cb);\n\n    if (index > -1) {\n      this._removeItem(index);\n    }\n\n    return index;\n  }\n\n  /**\n   * clear all check methods\n   */\n  clear() {\n    this.list = [];\n  }\n\n  /**\n   * check all should block callback, and return should we need block\n   */\n  checkShouldBlock() {\n    for (const fn of this._list) {\n      if (fn()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * that method will trigger after check not leave success\n   */\n  onAfterUnload(cb: () => void, notNeedCheck = false) {\n    this._window.addEventListener('unload', () => {\n      if (notNeedCheck || this.checkShouldBlock()) {\n        cb();\n      }\n    });\n  }\n\n  removeAfterUnloadListener(cb: () => void) {\n    console.log('removeAfterUnloadListener~~');\n    this._window.removeEventListener('unload', cb);\n  }\n\n  private _removeItem(i: number) {\n    const list = [...this.list];\n    list.splice(i, 1);\n\n    this.list = list;\n  }\n\n  private _beforeunloadHandler = (event: BeforeUnloadEvent) => {\n    if (this.checkShouldBlock()) {\n      event.preventDefault();\n      event.returnValue = '';\n      return;\n    }\n\n    // Guarantee the browser unload by removing the returnValue property of the event\n    delete event.returnValue;\n  };\n}\n"],"mappings":"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"}