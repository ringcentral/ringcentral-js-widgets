{"version":3,"file":"Beforeunload.js","names":["_di","require","_core","_dec","_class","_createForOfIteratorHelper","r","e","t","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","n","done","value","f","TypeError","o","a","u","call","next","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","constructor","name","from","test","_classCallCheck","_defineProperties","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","prototype","i","_toPrimitive","_typeof","toPrimitive","String","Number","_inherits","create","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","UNLOAD_EVENT_NAME","Beforeunload","Module","deps","dep","optional","_RcModuleV","_super","get","_list","set","_bindState","_window","removeEventListener","_beforeunloadHandler","addEventListener","_this$_deps$beforeunl","_this$_deps$beforeunl2","_this","event","checkShouldBlock","preventDefault","returnValue","_deps","beforeunloadOptions","originWindow","window","add","cb","index","list","indexOf","concat","remove","_removeItem","clear","_iterator","_step","fn","err","onAfterUnload","_this2","notNeedCheck","undefined","removeAfterUnloadListener","console","log","splice","RcModuleV2","exports"],"sources":["modules/Beforeunload/Beforeunload.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport { RcModuleV2 } from '@ringcentral-integration/core';\n\nimport type { Deps } from './Beforeunload.interface';\n\nconst UNLOAD_EVENT_NAME = 'beforeunload';\n\ntype BeforeunloadFn = () => boolean;\n\n@Module({\n  name: 'Beforeunload',\n  deps: [{ dep: 'BeforeunloadOptions', optional: true }],\n})\nexport class Beforeunload extends RcModuleV2<Deps> {\n  _window: Window;\n\n  private get list() {\n    return this._list;\n  }\n\n  private set list(value) {\n    this._list = value;\n\n    if (this._bindState && this._list.length === 0) {\n      this._window.removeEventListener(\n        UNLOAD_EVENT_NAME,\n        this._beforeunloadHandler,\n      );\n      // TODO: binding event here, that will not emit when close tab, not sure why\n      // this._window.removeEventListener('pagehide', this._onAfterUnload);\n      this._bindState = false;\n    } else if (!this._bindState && this._list.length > 0) {\n      this._window.addEventListener(\n        UNLOAD_EVENT_NAME,\n        this._beforeunloadHandler,\n      );\n      // TODO: binding event here, that will not emit when close tab, not sure why\n      // this._window.addEventListener('pagehide', this._onAfterUnload);\n      this._bindState = true;\n    }\n  }\n\n  private _list: BeforeunloadFn[] = [];\n\n  private _bindState = false;\n\n  constructor() {\n    super({\n      deps: {},\n    });\n    this._window = this._deps.beforeunloadOptions?.originWindow ?? window;\n  }\n\n  /**\n   * add method into window event beforeunload\n   * @param cb a callback with boolean, if return `true` that will block browser close.\n   */\n  add(cb: BeforeunloadFn) {\n    const index = this.list.indexOf(cb);\n\n    if (index === -1) {\n      this.list = [...this.list, cb];\n      return this.list.length;\n    }\n\n    return index;\n  }\n\n  /**\n   * remove check from check list.\n   * @param cb a callback that you add previous.\n   */\n  remove(cb: BeforeunloadFn) {\n    const index = this.list.indexOf(cb);\n\n    if (index > -1) {\n      this._removeItem(index);\n    }\n\n    return index;\n  }\n\n  /**\n   * clear all check methods\n   */\n  clear() {\n    this.list = [];\n  }\n\n  /**\n   * check all should block callback, and return should we need block\n   */\n  checkShouldBlock() {\n    for (const fn of this._list) {\n      if (fn()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * that method will trigger after check not leave success\n   */\n  onAfterUnload(cb: () => void, notNeedCheck = false) {\n    this._window.addEventListener('pagehide', () => {\n      if (notNeedCheck || this.checkShouldBlock()) {\n        cb();\n      }\n    });\n  }\n\n  removeAfterUnloadListener(cb: () => void) {\n    console.log('removeAfterUnloadListener~~');\n    this._window.removeEventListener('pagehide', cb);\n  }\n\n  private _removeItem(i: number) {\n    const list = [...this.list];\n    list.splice(i, 1);\n\n    this.list = list;\n  }\n\n  private _beforeunloadHandler = (event: BeforeUnloadEvent) => {\n    if (this.checkShouldBlock()) {\n      event.preventDefault();\n      event.returnValue = '';\n      return;\n    }\n\n    // Guarantee the browser unload by removing the returnValue property of the event\n    delete event.returnValue;\n  };\n}\n"],"mappings":"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","ignoreList":[]}