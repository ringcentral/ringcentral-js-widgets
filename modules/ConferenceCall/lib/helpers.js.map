{"version":3,"file":"helpers.js","names":["_ramda","require","_constants","ascendSortParties","parties","sort","last","next","id","split","filter","party","conferenceRole","toLowerCase","host","mergeParty","newParties","oldParties","map","oldParty","newParty","find"],"sources":["modules/ConferenceCall/lib/helpers.ts"],"sourcesContent":["import { filter, find, map, sort } from 'ramda';\n\nimport type { Party } from '../ConferenceCall.interface';\nimport { conferenceRole } from './constants';\n\nexport function ascendSortParties(parties: Party[]): Party[] {\n  return sort(\n    (last: Party, next: Party) =>\n      // @ts-expect-error\n      +last.id.split('-')[1] - +next.id.split('-')[1],\n    filter(\n      (party) => party.conferenceRole.toLowerCase() !== conferenceRole.host,\n      parties,\n    ),\n  );\n}\n\nexport function mergeParty(newParties: Party[], oldParties: Party[]) {\n  return map((oldParty) => {\n    const newParty = find((newParty) => {\n      if (newParty.id === oldParty.id) {\n        return true;\n      }\n      return false;\n    }, newParties);\n    if (newParty) {\n      return newParty;\n    }\n    return oldParty;\n  }, oldParties);\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAGA,IAAAC,UAAA,GAAAD,OAAA;AAEO,SAASE,iBAAiBA,CAACC,OAAgB,EAAW;EAC3D,OAAO,IAAAC,WAAI,EACT,UAACC,IAAW,EAAEC,IAAW;IAAA;MACvB;MACA,CAACD,IAAI,CAACE,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAACF,IAAI,CAACC,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAAC;EAAA,GACjD,IAAAC,aAAM,EACJ,UAACC,KAAK;IAAA,OAAKA,KAAK,CAACC,cAAc,CAACC,WAAW,CAAC,CAAC,KAAKD,yBAAc,CAACE,IAAI;EAAA,GACrEV,OACF,CACF,CAAC;AACH;AAEO,SAASW,UAAUA,CAACC,UAAmB,EAAEC,UAAmB,EAAE;EACnE,OAAO,IAAAC,UAAG,EAAC,UAACC,QAAQ,EAAK;IACvB,IAAMC,QAAQ,GAAG,IAAAC,WAAI,EAAC,UAACD,QAAQ,EAAK;MAClC,IAAIA,QAAQ,CAACZ,EAAE,KAAKW,QAAQ,CAACX,EAAE,EAAE;QAC/B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,EAAEQ,UAAU,CAAC;IACd,IAAII,QAAQ,EAAE;MACZ,OAAOA,QAAQ;IACjB;IACA,OAAOD,QAAQ;EACjB,CAAC,EAAEF,UAAU,CAAC;AAChB"}