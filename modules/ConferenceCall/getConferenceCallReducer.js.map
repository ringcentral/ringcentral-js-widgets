{"version":3,"sources":["modules/ConferenceCall/getConferenceCallReducer.ts"],"names":["getConferenceCallStatusReducer","types","state","conferenceCallStatus","idle","type","makeConference","terminateConference","updateConference","bringInConference","removeFromConference","getParty","requesting","makeConferenceSucceeded","makeConferenceFailed","terminateConferenceSucceeded","terminateConferenceFailed","updateConferenceSucceeded","updateConferenceFailed","bringInConferenceSucceeded","bringInConferenceFailed","removeFromConferenceSucceeded","removeFromConferenceFailed","getPartySucceeded","getPartyFailed","resetSuccess","getMakeConferenceCallReducer","conference","sessionId","partyProfile","res","id","profiles","getMergingStatusReducer","mergeStart","mergeSucceeded","mergeFailed","getMergingPairReducer","fromSessionId","toSessionId","updateFromSession","updateToSession","closeMergingPair","getCurrentConferenceIdReducer","conferenceId","updateCurrentConferenceId","initSuccess","getConferenceCallReducer","status","conferences","isMerging","mergingPair","currentConferenceId"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport conferenceCallStatus from './conferenceCallStatus';\n\nexport function getConferenceCallStatusReducer(types) {\n  return (state = conferenceCallStatus.idle, { type }) => {\n    switch (type) {\n      case types.makeConference:\n      case types.terminateConference:\n      case types.updateConference:\n      case types.bringInConference:\n      case types.removeFromConference:\n      case types.getParty:\n        return conferenceCallStatus.requesting;\n\n      case types.makeConferenceSucceeded:\n      case types.makeConferenceFailed:\n      case types.terminateConferenceSucceeded:\n      case types.terminateConferenceFailed:\n      case types.updateConferenceSucceeded:\n      case types.updateConferenceFailed:\n      case types.bringInConferenceSucceeded:\n      case types.bringInConferenceFailed:\n      case types.removeFromConferenceSucceeded:\n      case types.removeFromConferenceFailed:\n      case types.getPartySucceeded:\n      case types.getPartyFailed:\n      case types.resetSuccess:\n        return conferenceCallStatus.idle;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMakeConferenceCallReducer(types) {\n  return (\n    state = {},\n    {\n      type,\n      conference, // platform conference session data\n      sessionId, // session id of the conference\n      partyProfile,\n    },\n  ) => {\n    const res = {\n      ...state,\n    };\n    switch (type) {\n      case types.resetSuccess:\n        return {};\n      case types.makeConferenceSucceeded:\n      case types.updateConferenceSucceeded:\n        res[conference.id] = {\n          conference,\n          sessionId,\n          profiles: (res[conference.id] && res[conference.id].profiles) || [],\n        };\n        return res;\n      case types.bringInConferenceSucceeded:\n        res[conference.id] = {\n          conference,\n          sessionId,\n          profiles: [...res[conference.id].profiles, partyProfile],\n        };\n        return res;\n      case types.terminateConferenceSucceeded:\n        delete res[conference.id];\n        return res;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMergingStatusReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.mergeStart:\n        return true;\n      case types.mergeSucceeded:\n      case types.mergeFailed:\n      case types.resetSuccess:\n        return false;\n      default:\n        return state;\n    }\n  };\n}\n\n/**\n * interface MergingPairState = {fromSessionId:string, toSessionId:string}\n *\n * The `from` and `to` is relative to the [adding call](https://app.zeplin.io/project/59df2e4346294d03f96d15a9/screen/5b2c64f7db2860b90ddd5939) flow\n * which is in [RCINT-7378](https://jira.ringcentral.com/browse/RCINT-7378)\n */\nexport function getMergingPairReducer(types) {\n  return (state = {}, { type, fromSessionId, toSessionId }) => {\n    switch (type) {\n      case types.updateFromSession:\n        return { fromSessionId };\n      case types.updateToSession:\n        return { ...state, toSessionId };\n      case types.closeMergingPair:\n      case types.mergeSucceeded:\n      case types.resetSuccess:\n        return {};\n      // restore the pair when failure\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentConferenceIdReducer(types) {\n  return (state = null, { type, conferenceId }) => {\n    switch (type) {\n      case types.updateCurrentConferenceId:\n        return conferenceId;\n      case types.initSuccess:\n      case types.resetSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getConferenceCallReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    conferences: getMakeConferenceCallReducer(types),\n    conferenceCallStatus: getConferenceCallStatusReducer(types),\n    isMerging: getMergingStatusReducer(types),\n    mergingPair: getMergingPairReducer(types),\n    currentConferenceId: getCurrentConferenceIdReducer(types),\n  });\n}\n"],"file":"getConferenceCallReducer.js"}