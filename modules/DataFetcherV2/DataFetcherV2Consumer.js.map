{"version":3,"sources":["modules/DataFetcherV2/DataFetcherV2Consumer.ts"],"names":["baseEvents","ObjectMap","fromKeys","DataFetcherV2Consumer","_source","_emitter","EventEmitter","ready","data","emit","events","dataReady","multiple","on","off","_deps","dataFetcherV2","getSourceStatus","sourceStatus","fetchData","getData","RcModuleV2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,UAAU,GAAGC,qBAAUC,QAAV,CAAmB,CAAC,WAAD,CAAnB,CAAnB;;;;IAEeC,qB;;;;;;;;;;;;;;;UAIVC,O;UACAC,Q,GAAW,IAAIC,oBAAJ,E;;;;;;iCAUR;AAAA;;AACX,uBACE,IADF,EAEE;AAAA,eAAM,CAAC,MAAI,CAACC,KAAN,EAAa,MAAI,CAACC,IAAlB,CAAN;AAAA,OAFF,EAGE,gBAAmB;AAAA;AAAA,YAAjBD,KAAiB;AAAA,YAAVC,IAAU;;AACjB,YAAID,KAAK,IAAIC,IAAb,EAAmB;AACjB,UAAA,MAAI,CAACH,QAAL,CAAcI,IAAd,CAAmB,MAAI,CAACC,MAAL,CAAYC,SAA/B;AACD;AACF,OAPH,EAQE;AACEC,QAAAA,QAAQ,EAAE;AADZ,OARF;AAYD;;;yBAE2C;AAAA;;AAC1C,aAAO,uBAAKP,QAAL,EAAcQ,EAAd,iCAAP;AACD;;;0BAE6C;AAAA;;AAC5C,aAAO,wBAAKR,QAAL,EAAcS,GAAd,kCAAP;AACD;;;kCAEa;AACZ,aAAO,CAAC,EACN,0FACA,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,eAAzB,CAAyC,KAAKb,OAA9C,MACEc,2BAAaX,KAHT,CAAR;AAKD;;;mCAEc;AACb,aAAO,CAAC,EACN,2FACC,KAAKA,KAAL,IACC,KAAKQ,KAAL,CAAWC,aAAX,CAAyBC,eAAzB,CAAyC,KAAKb,OAA9C,MACEc,2BAAaX,KAJX,CAAR;AAMD;;;;;;;;;qBAGK,KAAKA,K;;;;;iDACA,KAAKQ,KAAL,CAAWC,aAAX,CAAyBG,SAAzB,CAAmC,KAAKf,OAAxC,C;;;;;;;;;;;;;;;;;;wBAlDA;AACT,aAAO,KAAKW,KAAL,CAAWC,aAAX,CAAyBI,OAAzB,CAAiC,KAAKhB,OAAtC,CAAP;AACD;;;wBAEY;AACX,aAAOJ,UAAP;AACD;;;;EAVOqB,gB","sourcesContent":["import { EventEmitter } from 'events';\n\nimport { RcModuleV2, watch } from '@ringcentral-integration/core';\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\n\nimport { DataFetcherV2ConsumerBaseDeps } from './DataFetcherV2Consumer.interface';\nimport { DataSource } from './DataSource';\nimport { sourceStatus } from './sourceStatus';\n\nexport const baseEvents = ObjectMap.fromKeys(['dataReady']);\n\nexport abstract class DataFetcherV2Consumer<\n  D extends DataFetcherV2ConsumerBaseDeps,\n  T,\n> extends RcModuleV2<D> {\n  protected _source: DataSource<T>;\n  protected _emitter = new EventEmitter();\n\n  get data() {\n    return this._deps.dataFetcherV2.getData(this._source);\n  }\n\n  get events() {\n    return baseEvents;\n  }\n\n  onInitOnce() {\n    watch(\n      this,\n      () => [this.ready, this.data],\n      ([ready, data]) => {\n        if (ready && data) {\n          this._emitter.emit(this.events.dataReady);\n        }\n      },\n      {\n        multiple: true,\n      },\n    );\n  }\n\n  on(...args: Parameters<EventEmitter['on']>) {\n    return this._emitter.on(...args);\n  }\n\n  off(...args: Parameters<EventEmitter['off']>) {\n    return this._emitter.off(...args);\n  }\n\n  _shouldInit() {\n    return !!(\n      super._shouldInit() &&\n      this._deps.dataFetcherV2.getSourceStatus(this._source) ===\n        sourceStatus.ready\n    );\n  }\n\n  _shouldReset() {\n    return !!(\n      super._shouldReset() ||\n      (this.ready &&\n        this._deps.dataFetcherV2.getSourceStatus(this._source) !==\n          sourceStatus.ready)\n    );\n  }\n\n  async fetchData() {\n    if (this.ready) {\n      return this._deps.dataFetcherV2.fetchData(this._source);\n    }\n  }\n}\n"],"file":"DataFetcherV2Consumer.js"}