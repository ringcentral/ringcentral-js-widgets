{"version":3,"sources":["modules/Analytics/getAnalyticsReducer.ts"],"names":["getLastActions","types","state","action","type","clear","_state","getAnalyticsReducer","status","lastActions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;AAEO,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,SAAO,YAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC7B,QAAIA,MAAM,CAACC,IAAP,KAAgBH,KAAK,CAACI,KAA1B,EAAiC;AAC/B,aAAO,EAAP;AACD;;AACD,QAAIF,MAAM,CAACC,IAAP,IAAe,CAACD,MAAM,CAACG,MAA3B,EAAmC;AACjC,0CAAWJ,KAAX,IAAkBC,MAAlB;AACD;;AACD,WAAOD,KAAP;AACD,GARD;AASD;;AAEc,SAASK,mBAAT,CAA6BN,KAA7B,EAAoC;AACjD,SAAO,4BAAgB;AACrBO,IAAAA,MAAM,EAAE,wCAAuBP,KAAvB,CADa;AAErBQ,IAAAA,WAAW,EAAET,cAAc,CAACC,KAAD;AAFN,GAAhB,CAAP;AAID","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getLastActions(types) {\n  return (state = [], action) => {\n    if (action.type === types.clear) {\n      return [];\n    }\n    if (action.type && !action._state) {\n      return [...state, action];\n    }\n    return state;\n  };\n}\n\nexport default function getAnalyticsReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    lastActions: getLastActions(types),\n  });\n}\n"],"file":"getAnalyticsReducer.js"}