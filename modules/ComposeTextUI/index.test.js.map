{"version":3,"file":"index.test.js","names":["_ComposeTextUI","require","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","describe","phone","composeText","validatePhoneNumber","string","test","addToNumber","jest","fn","mockResolvedValue","beforeEach","clearAllMocks","regeneratorRuntime","mark","_callee","funcs","result","wrap","_callee$","_context","prev","next","ComposeTextUI","getUIFunctions","detectPhoneNumbers","sent","expect","toBe","not","toHaveBeenCalled","stop","_callee2","_callee2$","_context2","toHaveBeenCalledTimes","toHaveBeenCalledWith","phoneNumber","_callee3","_callee3$","_context3","_callee4","_callee4$","_context4","toHaveBeenNthCalledWith"],"sources":["modules/ComposeTextUI/index.test.ts"],"sourcesContent":["import { ComposeTextUI } from './ComposeTextUI';\n\n// @ts-expect-error TS(2582): Cannot find name 'describe'. Do you need to instal... Remove this comment to see the full error message\ndescribe('detectPhoneNumbers', () => {\n  const phone = {\n    composeText: {\n      validatePhoneNumber(string: any) {\n        return /^\\d*$/.test(string);\n      },\n      // @ts-expect-error TS(2304): Cannot find name 'jest'.\n      addToNumber: jest.fn().mockResolvedValue(true),\n    },\n  };\n\n  // @ts-expect-error TS(2304): Cannot find name 'beforeEach'.\n  beforeEach(() => {\n    // @ts-expect-error TS(2304): Cannot find name 'jest'.\n    jest.clearAllMocks();\n  });\n\n  // @ts-expect-error TS(2582): Cannot find name 'test'. Do you need to install ty... Remove this comment to see the full error message\n  test('when text is a plain text without valid phone number', async () => {\n    // @ts-expect-error TS(2345): Argument of type '{ composeText: { validatePhoneNu... Remove this comment to see the full error message\n    const funcs = new ComposeTextUI(phone).getUIFunctions({ phone });\n    const result = await funcs.detectPhoneNumbers('sabasdf, qwerrrr');\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(result).toBe(false);\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(phone.composeText.addToNumber).not.toHaveBeenCalled();\n  });\n\n  // @ts-expect-error TS(2582): Cannot find name 'test'. Do you need to install ty... Remove this comment to see the full error message\n  test('when text is a valid phone number', async () => {\n    // @ts-expect-error TS(2345): Argument of type '{ composeText: { validatePhoneNu... Remove this comment to see the full error message\n    const funcs = new ComposeTextUI(phone).getUIFunctions({ phone });\n    const result = await funcs.detectPhoneNumbers('123444');\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(result).toBe(true);\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(phone.composeText.addToNumber).toHaveBeenCalledTimes(1);\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(phone.composeText.addToNumber).toHaveBeenCalledWith({\n      phoneNumber: '123444',\n    });\n  });\n\n  // @ts-expect-error TS(2582): Cannot find name 'test'. Do you need to install ty... Remove this comment to see the full error message\n  test('when text is \"sabasdf, 1234\"', async () => {\n    // @ts-expect-error TS(2345): Argument of type '{ composeText: { validatePhoneNu... Remove this comment to see the full error message\n    const funcs = new ComposeTextUI(phone).getUIFunctions({ phone });\n    const result = await funcs.detectPhoneNumbers('sabasdf, 1234');\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(result).toBe(true);\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(phone.composeText.addToNumber).toHaveBeenCalledTimes(1);\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(phone.composeText.addToNumber).toHaveBeenCalledWith({\n      phoneNumber: '1234',\n    });\n  });\n\n  // @ts-expect-error TS(2582): Cannot find name 'test'. Do you need to install ty... Remove this comment to see the full error message\n  test('when text is \"1234,5555\"', async () => {\n    // @ts-expect-error TS(2345): Argument of type '{ composeText: { validatePhoneNu... Remove this comment to see the full error message\n    const funcs = new ComposeTextUI(phone).getUIFunctions({ phone });\n    const result = await funcs.detectPhoneNumbers('1234,5555');\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(result).toBe(true);\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(phone.composeText.addToNumber).toHaveBeenCalledTimes(2);\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(phone.composeText.addToNumber).toHaveBeenNthCalledWith(1, {\n      phoneNumber: '1234',\n    });\n    // @ts-expect-error TS(2304): Cannot find name 'expect'.\n    expect(phone.composeText.addToNumber).toHaveBeenNthCalledWith(2, {\n      phoneNumber: '5555',\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}