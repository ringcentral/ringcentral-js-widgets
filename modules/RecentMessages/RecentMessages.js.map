{"version":3,"file":"RecentMessages.js","names":["_core","require","_concurrentExecute","_interopRequireDefault","_di","_getDateFrom","_messageHelper","_proxify","_messageStatus","_recentMessagesHelper","_dec","_dec2","_class","_class2","_descriptor","_descriptor2","_descriptor3","e","__esModule","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","asyncGeneratorStep","n","a","c","i","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","_initializerDefineProperty","l","initializer","call","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","slice","reverse","reduce","_initializerWarningHelper","Error","RecentMessages","Module","name","deps","computed","that","messages","_RcModuleV","_super","_this","onInitOnce","_this2","watch","_deps","messageStore","timestamp","ready","_i","_Object$keys","contacts","getMessages","currentContact","sessionId","indexOf","split","fromLocal","forceUpdate","initLoad","messageStatus","MessageStatus","loading","loadSuccess","_ref","contact","loaded","contactId","id","concat","loadReset","_ref2","_getMessages","regeneratorRuntime","mark","_callee","_ref3","_ref3$sessionId","_ref3$fromLocal","_ref3$forceUpdate","wrap","_callee$","_context","prev","next","abrupt","_getRecentMessages","textConversations","sent","stop","_x","cleanUpMessages","_ref4","_ref4$sessionId","_getRecentMessages2","_callee2","conversations","daySpan","dateFrom","recentMessages","dateTo","_args2","_callee2$","_context2","undefined","getDateFrom","_getLocalRecentMessages","Date","creationTime","t0","_fetchRemoteRecentMessages","toISOString","t1","t2","console","error","dedup","_x2","_ref5","phoneNumbers","matches","conversation","messageList","conversationStore","conversationId","find","filterPhoneNumber","sort","sortByDate","_fetchRemoteRecentMessages2","_callee3","_ref6","_this3","params","recentMessagesPromise","allMessages","messageRecords","remoteMessage","_args3","_callee3$","_context3","messageType","perPage","acc","_ref7","phoneNumber","promise","_fetchMessageList","concurrentExecute","delay","flattenToMessageRecords","markAsRemoteMessage","sortMessages","_x3","_x4","_this4","client","account","extension","list","get","_this5","unreadCounts","cur","readStatus","RcModuleV2","state","action","proxify","exports"],"sources":["modules/RecentMessages/RecentMessages.ts"],"sourcesContent":["import type GetMessageList from '@rc-ex/core/lib/definitions/GetMessageList';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  watch,\n} from '@ringcentral-integration/core';\n\nimport type { Entity } from '../../interfaces/Entity.interface';\nimport type { Message, Messages } from '../../interfaces/MessageStore.model';\nimport concurrentExecute from '../../lib/concurrentExecute';\nimport { Module } from '../../lib/di';\nimport getDateFrom from '../../lib/getDateFrom';\nimport { sortByDate } from '../../lib/messageHelper';\nimport { proxify } from '../../lib/proxy/proxify';\nimport type { MessageStoreConversations } from '../MessageStore';\n\nimport type {\n  CleanUpMessagesOptions,\n  Deps,\n  FetchMessageListOptions,\n  GetMessagesOptions,\n  LoadResetOptions,\n  LoadSuccessOptions,\n  RecentMessage,\n} from './RecentMessages.interface';\nimport { MessageStatus } from './messageStatus';\nimport {\n  dedup,\n  filterPhoneNumber,\n  flattenToMessageRecords,\n  markAsRemoteMessage,\n  sortMessages,\n} from './recentMessagesHelper';\n\n/**\n * Retrieve all recent messages related to a specified contact.\n */\n@Module({\n  name: 'RecentMessages',\n  deps: ['Client', 'MessageStore'],\n})\nexport class RecentMessages extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  override onInitOnce() {\n    watch(\n      this,\n      () => this._deps.messageStore.timestamp,\n      () => {\n        if (this.ready && Object.keys(this.messages).length > 0) {\n          for (const key of Object.keys(this.contacts)) {\n            this.getMessages({\n              currentContact: this.contacts[key],\n              // @ts-expect-error TS(2322): Type 'string | null' is not assignable to type 'st... Remove this comment to see the full error message\n              sessionId: key.indexOf('-') > -1 ? key.split('-')[1] : null,\n              fromLocal: false,\n              forceUpdate: true,\n            });\n          }\n        }\n      },\n    );\n  }\n\n  @state\n  contacts: Record<string, Entity> = {};\n\n  @state\n  messages: Record<string, (Message | RecentMessage)[]> = {};\n\n  @state\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'MessageStat... Remove this comment to see the full error message\n  messageStatus: MessageStatus = null;\n\n  @action\n  initLoad() {\n    this.messageStatus = MessageStatus.loading;\n  }\n\n  @action\n  loadSuccess({ contact, messages, sessionId }: LoadSuccessOptions) {\n    this.messageStatus = MessageStatus.loaded;\n    const contactId = String(contact && contact.id);\n    const id = sessionId ? `${contactId}-${sessionId}` : contactId;\n    this.contacts[id] = contact;\n    this.messages[id] = messages;\n  }\n\n  @action\n  loadReset({ contact, sessionId }: LoadResetOptions) {\n    const contactId = String(contact && contact.id);\n    const id = sessionId ? `${contactId}-${sessionId}` : contactId;\n    delete this.contacts[id];\n    delete this.messages[id];\n  }\n\n  @computed((that: RecentMessages) => [that.messages])\n  get unreadMessageCounts() {\n    return Object.keys(this.messages).reduce((unreadCounts, contactId) => {\n      unreadCounts[contactId] = this.messages[contactId].reduce(\n        (acc, cur) => acc + (cur.readStatus !== 'Read' ? 1 : 0),\n        0,\n      );\n      return unreadCounts;\n    }, {} as Record<string, number>);\n  }\n\n  get isMessagesLoaded() {\n    return this.messageStatus === MessageStatus.loaded;\n  }\n\n  @proxify\n  async getMessages({\n    currentContact,\n    // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n    sessionId = null,\n    fromLocal = false,\n    forceUpdate = false,\n  }: GetMessagesOptions) {\n    // No need to calculate recent messages of the same contact repeatly\n    if (!currentContact) {\n      return;\n    }\n    const contactId = currentContact.id;\n    if (\n      !forceUpdate &&\n      !!this.messages[sessionId ? `${contactId}-${sessionId}` : contactId]\n    ) {\n      return;\n    }\n    this.initLoad();\n    const messages = await this._getRecentMessages(\n      currentContact,\n      this._deps.messageStore.textConversations,\n      fromLocal,\n    );\n    this.loadSuccess({\n      messages,\n      contact: currentContact,\n      sessionId,\n    });\n  }\n\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n  cleanUpMessages({ contact, sessionId = null }: CleanUpMessagesOptions) {\n    this.loadReset({\n      contact,\n      sessionId,\n    });\n  }\n\n  /**\n   * Searching for recent messages of specific contact.\n   * @param currentContact - Current contact\n   * @param messages - Messages in messageStore\n   * @param fromLocal - Only get recent messages locally\n   * @param daySpan - Find messages within certain days\n   * @param length - Maximum length of recent messages\n   * @return\n   * @private\n   */\n  async _getRecentMessages(\n    currentContact: Entity,\n    conversations: MessageStoreConversations = [],\n    fromLocal: boolean,\n    daySpan = 60,\n    length = 5,\n  ) {\n    const dateFrom = getDateFrom(daySpan);\n    let recentMessages: (Message | RecentMessage)[] =\n      this._getLocalRecentMessages(\n        currentContact,\n        conversations,\n        dateFrom,\n        length,\n      );\n\n    // If we could not find enough recent messages,\n    // we need to search for messages on server.\n    if (!fromLocal && recentMessages.length < length) {\n      const dateTo =\n        recentMessages.length > 0\n          ? // @ts-expect-error TS(2769): No overload matches this call.\n            new Date(recentMessages[recentMessages.length - 1].creationTime)\n          : undefined;\n\n      try {\n        // This will always be sorted\n        recentMessages = recentMessages.concat(\n          await this._fetchRemoteRecentMessages(\n            currentContact,\n            dateFrom.toISOString(),\n            dateTo && dateTo.toISOString(),\n            length,\n          ),\n        );\n      } catch (error: any /** TODO: confirm with instanceof */) {\n        console.error(error);\n      }\n    }\n\n    recentMessages = dedup(recentMessages);\n    return recentMessages.length > length\n      ? recentMessages.slice(0, length)\n      : recentMessages;\n  }\n\n  /**\n   * Get recent messages from messageStore.\n   */\n  _getLocalRecentMessages(\n    { phoneNumbers }: Entity,\n    conversations: MessageStoreConversations,\n    dateFrom: Date,\n    length: number,\n  ) {\n    // Get all messages related to this contact\n    let recentMessages: Messages = [];\n    let matches;\n    for (let i = conversations.length - 1; i >= 0; i -= 1) {\n      const conversation = conversations[i];\n      const messageList =\n        this._deps.messageStore.conversationStore[\n          // @ts-expect-error TS(2538): Type 'undefined' cannot be used as an index type.\n          conversation.conversationId\n        ] || [];\n      // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n      matches = phoneNumbers.find(filterPhoneNumber(conversation));\n      // Check if message is within certain days\n      // @ts-expect-error TS(2769): No overload matches this call.\n      if (!!matches && new Date(conversation.creationTime) > dateFrom) {\n        recentMessages = recentMessages.concat(messageList);\n      }\n      if (recentMessages.length >= length) break;\n    }\n    return recentMessages.sort(sortByDate).slice(0, length);\n  }\n\n  /**\n   * Fetch recent messages from server by given current contact.\n   */\n  async _fetchRemoteRecentMessages(\n    { phoneNumbers }: Entity,\n    dateFrom: string,\n    dateTo = new Date().toISOString(),\n    length: number,\n  ) {\n    const params = {\n      dateTo,\n      dateFrom,\n      messageType: ['SMS', 'Text', 'Pager'],\n      perPage: length,\n    };\n    // @ts-expect-error TS(2532): Object is possibly 'undefined'.\n    const recentMessagesPromise = phoneNumbers.reduce(\n      (acc, { phoneNumber }) => {\n        if (phoneNumber) {\n          const promise = this._fetchMessageList({\n            ...params,\n            phoneNumber,\n          });\n          return acc.concat(promise);\n        }\n        return acc;\n      },\n      [] as (() => Promise<GetMessageList>)[],\n    );\n\n    // TODO: Because we need to navigate to the message page,\n    // So we may need to push new messages to messageStore\n    const allMessages = await concurrentExecute(recentMessagesPromise, 5, {\n      delay: 500,\n    });\n    const messageRecords = flattenToMessageRecords(allMessages);\n    const remoteMessage = markAsRemoteMessage(messageRecords);\n    return sortMessages(remoteMessage);\n  }\n\n  _fetchMessageList(params: FetchMessageListOptions) {\n    return () =>\n      this._deps.client\n        .account()\n        .extension()\n        .messageStore()\n        .list(params) as Promise<GetMessageList>;\n  }\n}\n"],"mappings":"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","ignoreList":[]}