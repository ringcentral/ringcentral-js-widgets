{"version":3,"file":"RecentMessages.js","names":["_core","require","_concurrentExecute","_interopRequireDefault","_di","_getDateFrom","_messageHelper","_proxify","_messageStatus","_recentMessagesHelper","_dec","_dec2","_class","_class2","_descriptor","_descriptor2","_descriptor3","obj","__esModule","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","err","undefined","_initializerDefineProperty","property","descriptor","context","initializer","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","desc","slice","reverse","reduce","decorator","_initializerWarningHelper","Error","RecentMessages","Module","name","deps","computed","that","messages","_RcModuleV","_super","_this","onInitOnce","_this2","watch","_deps","messageStore","timestamp","ready","_i","_Object$keys","contacts","getMessages","currentContact","sessionId","indexOf","split","fromLocal","forceUpdate","initLoad","messageStatus","MessageStatus","loading","loadSuccess","_ref","contact","loaded","contactId","id","concat","loadReset","_ref2","_getMessages","regeneratorRuntime","mark","_callee","_ref3","_ref3$sessionId","_ref3$fromLocal","_ref3$forceUpdate","wrap","_callee$","_context","prev","next","abrupt","_getRecentMessages","textConversations","sent","stop","_x","cleanUpMessages","_ref4","_ref4$sessionId","_getRecentMessages2","_callee2","conversations","daySpan","dateFrom","recentMessages","dateTo","_args2","_callee2$","_context2","getDateFrom","_getLocalRecentMessages","Date","creationTime","t0","_fetchRemoteRecentMessages","toISOString","t1","t2","console","dedup","_x2","_ref5","phoneNumbers","matches","conversation","messageList","conversationStore","conversationId","find","filterPhoneNumber","sort","sortByDate","_fetchRemoteRecentMessages2","_callee3","_ref6","_this3","params","recentMessagesPromise","allMessages","messageRecords","remoteMessage","_args3","_callee3$","_context3","messageType","perPage","acc","_ref7","phoneNumber","promise","_fetchMessageList","concurrentExecute","delay","flattenToMessageRecords","markAsRemoteMessage","sortMessages","_x3","_x4","_this4","client","account","extension","list","get","_this5","unreadCounts","cur","readStatus","RcModuleV2","state","action","proxify","exports"],"sources":["modules/RecentMessages/RecentMessages.ts"],"sourcesContent":["import type GetMessageList from '@rc-ex/core/lib/definitions/GetMessageList';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  watch,\n} from '@ringcentral-integration/core';\n\nimport type { Entity } from '../../interfaces/Entity.interface';\nimport type { Message, Messages } from '../../interfaces/MessageStore.model';\nimport concurrentExecute from '../../lib/concurrentExecute';\nimport { Module } from '../../lib/di';\nimport getDateFrom from '../../lib/getDateFrom';\nimport { sortByDate } from '../../lib/messageHelper';\nimport { proxify } from '../../lib/proxy/proxify';\nimport type { MessageStoreConversations } from '../MessageStore';\nimport { MessageStatus } from './messageStatus';\nimport type {\n  CleanUpMessagesOptions,\n  Deps,\n  FetchMessageListOptions,\n  GetMessagesOptions,\n  LoadResetOptions,\n  LoadSuccessOptions,\n  RecentMessage,\n} from './RecentMessages.interface';\nimport {\n  dedup,\n  filterPhoneNumber,\n  flattenToMessageRecords,\n  markAsRemoteMessage,\n  sortMessages,\n} from './recentMessagesHelper';\n\n/**\n * Retrieve all recent messages related to a specified contact.\n */\n@Module({\n  name: 'RecentMessages',\n  deps: ['Client', 'MessageStore'],\n})\nexport class RecentMessages extends RcModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  override onInitOnce() {\n    watch(\n      this,\n      () => this._deps.messageStore.timestamp,\n      () => {\n        if (this.ready && Object.keys(this.messages).length > 0) {\n          for (const key of Object.keys(this.contacts)) {\n            this.getMessages({\n              currentContact: this.contacts[key],\n              sessionId: key.indexOf('-') > -1 ? key.split('-')[1] : null,\n              fromLocal: false,\n              forceUpdate: true,\n            });\n          }\n        }\n      },\n    );\n  }\n\n  @state\n  contacts: Record<string, Entity> = {};\n\n  @state\n  messages: Record<string, (Message | RecentMessage)[]> = {};\n\n  @state\n  messageStatus: MessageStatus = null;\n\n  @action\n  initLoad() {\n    this.messageStatus = MessageStatus.loading;\n  }\n\n  @action\n  loadSuccess({ contact, messages, sessionId }: LoadSuccessOptions) {\n    this.messageStatus = MessageStatus.loaded;\n    const contactId = String(contact && contact.id);\n    const id = sessionId ? `${contactId}-${sessionId}` : contactId;\n    this.contacts[id] = contact;\n    this.messages[id] = messages;\n  }\n\n  @action\n  loadReset({ contact, sessionId }: LoadResetOptions) {\n    const contactId = String(contact && contact.id);\n    const id = sessionId ? `${contactId}-${sessionId}` : contactId;\n    delete this.contacts[id];\n    delete this.messages[id];\n  }\n\n  @computed((that: RecentMessages) => [that.messages])\n  get unreadMessageCounts() {\n    return Object.keys(this.messages).reduce((unreadCounts, contactId) => {\n      unreadCounts[contactId] = this.messages[contactId].reduce(\n        (acc, cur) => acc + (cur.readStatus !== 'Read' ? 1 : 0),\n        0,\n      );\n      return unreadCounts;\n    }, {} as Record<string, number>);\n  }\n\n  get isMessagesLoaded() {\n    return this.messageStatus === MessageStatus.loaded;\n  }\n\n  @proxify\n  async getMessages({\n    currentContact,\n    sessionId = null,\n    fromLocal = false,\n    forceUpdate = false,\n  }: GetMessagesOptions) {\n    // No need to calculate recent messages of the same contact repeatly\n    if (!currentContact) {\n      return;\n    }\n    const contactId = currentContact.id;\n    if (\n      !forceUpdate &&\n      !!this.messages[sessionId ? `${contactId}-${sessionId}` : contactId]\n    ) {\n      return;\n    }\n    this.initLoad();\n    const messages = await this._getRecentMessages(\n      currentContact,\n      this._deps.messageStore.textConversations,\n      fromLocal,\n    );\n    this.loadSuccess({\n      messages,\n      contact: currentContact,\n      sessionId,\n    });\n  }\n\n  cleanUpMessages({ contact, sessionId = null }: CleanUpMessagesOptions) {\n    this.loadReset({\n      contact,\n      sessionId,\n    });\n  }\n\n  /**\n   * Searching for recent messages of specific contact.\n   * @param currentContact - Current contact\n   * @param messages - Messages in messageStore\n   * @param fromLocal - Only get recent messages locally\n   * @param daySpan - Find messages within certain days\n   * @param length - Maximum length of recent messages\n   * @return\n   * @private\n   */\n  async _getRecentMessages(\n    currentContact: Entity,\n    conversations: MessageStoreConversations = [],\n    fromLocal: boolean,\n    daySpan = 60,\n    length = 5,\n  ) {\n    const dateFrom = getDateFrom(daySpan);\n    let recentMessages: (Message | RecentMessage)[] =\n      this._getLocalRecentMessages(\n        currentContact,\n        conversations,\n        dateFrom,\n        length,\n      );\n\n    // If we could not find enough recent messages,\n    // we need to search for messages on server.\n    if (!fromLocal && recentMessages.length < length) {\n      const dateTo =\n        recentMessages.length > 0\n          ? new Date(recentMessages[recentMessages.length - 1].creationTime)\n          : undefined;\n\n      try {\n        // This will always be sorted\n        recentMessages = recentMessages.concat(\n          await this._fetchRemoteRecentMessages(\n            currentContact,\n            dateFrom.toISOString(),\n            dateTo && dateTo.toISOString(),\n            length,\n          ),\n        );\n      } catch (error: any /** TODO: confirm with instanceof */) {\n        console.error(error);\n      }\n    }\n\n    recentMessages = dedup(recentMessages);\n    return recentMessages.length > length\n      ? recentMessages.slice(0, length)\n      : recentMessages;\n  }\n\n  /**\n   * Get recent messages from messageStore.\n   */\n  _getLocalRecentMessages(\n    { phoneNumbers }: Entity,\n    conversations: MessageStoreConversations,\n    dateFrom: Date,\n    length: number,\n  ) {\n    // Get all messages related to this contact\n    let recentMessages: Messages = [];\n    let matches;\n    for (let i = conversations.length - 1; i >= 0; i -= 1) {\n      const conversation = conversations[i];\n      const messageList =\n        this._deps.messageStore.conversationStore[\n          conversation.conversationId\n        ] || [];\n      matches = phoneNumbers.find(filterPhoneNumber(conversation));\n      // Check if message is within certain days\n      if (!!matches && new Date(conversation.creationTime) > dateFrom) {\n        recentMessages = recentMessages.concat(messageList);\n      }\n      if (recentMessages.length >= length) break;\n    }\n    return recentMessages.sort(sortByDate).slice(0, length);\n  }\n\n  /**\n   * Fetch recent messages from server by given current contact.\n   */\n  async _fetchRemoteRecentMessages(\n    { phoneNumbers }: Entity,\n    dateFrom: string,\n    dateTo = new Date().toISOString(),\n    length: number,\n  ) {\n    const params = {\n      dateTo,\n      dateFrom,\n      messageType: ['SMS', 'Text', 'Pager'],\n      perPage: length,\n    };\n    const recentMessagesPromise = phoneNumbers.reduce(\n      (acc, { phoneNumber }) => {\n        if (phoneNumber) {\n          const promise = this._fetchMessageList({\n            ...params,\n            phoneNumber,\n          });\n          return acc.concat(promise);\n        }\n        return acc;\n      },\n      [] as (() => Promise<GetMessageList>)[],\n    );\n\n    // TODO: Because we need to navigate to the message page,\n    // So we may need to push new messages to messageStore\n    const allMessages = await concurrentExecute(recentMessagesPromise, 5, {\n      delay: 500,\n    });\n    const messageRecords = flattenToMessageRecords(allMessages);\n    const remoteMessage = markAsRemoteMessage(messageRecords);\n    return sortMessages(remoteMessage);\n  }\n\n  _fetchMessageList(params: FetchMessageListOptions) {\n    return () =>\n      this._deps.client\n        .account()\n        .extension()\n        .messageStore()\n        .list(params) as Promise<GetMessageList>;\n  }\n}\n"],"mappings":"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"}