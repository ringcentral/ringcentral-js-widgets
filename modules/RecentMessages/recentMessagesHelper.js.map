{"version":3,"file":"recentMessagesHelper.js","names":["filterPhoneNumber","message","_ref","phoneNumber","from","to","find","extensionNumber","exports","flattenToMessageRecords","allMessages","reduce","acc","_ref2","records","concat","sortMessages","recentMessages","sort","a","b","Date","creationTime","getTime","markAsRemoteMessage","messages","map","_objectSpread","fromRemote","dedup","hash","cur","id"],"sources":["modules/RecentMessages/recentMessagesHelper.ts"],"sourcesContent":["import type GetMessageInfoResponse from '@rc-ex/core/lib/definitions/GetMessageInfoResponse';\nimport type GetMessageList from '@rc-ex/core/lib/definitions/GetMessageList';\n\nimport type { Entity } from '../../interfaces/Entity.interface';\nimport type { Message } from '../../interfaces/MessageStore.model';\nimport type { MessageStoreItem } from '../MessageStore';\nimport type { RecentMessage } from './RecentMessages.interface';\n\nexport const filterPhoneNumber = (message: MessageStoreItem) => {\n  return ({ phoneNumber }: Entity['phoneNumbers'][number]) =>\n    phoneNumber === message.from.phoneNumber ||\n    !!message.to.find((to) => to.phoneNumber === phoneNumber) ||\n    phoneNumber === message.from.extensionNumber ||\n    !!message.to.find((to) => to.extensionNumber === phoneNumber);\n};\n\nexport const flattenToMessageRecords = (allMessages: GetMessageList[]) => {\n  return allMessages.reduce(\n    (acc, { records }) => acc.concat(records),\n    [] as GetMessageInfoResponse[],\n  );\n};\n\nexport const sortMessages = (recentMessages: RecentMessage[]) => {\n  // Sort by time in descending order\n  return recentMessages.sort(\n    (a, b) =>\n      new Date(b.creationTime).getTime() - new Date(a.creationTime).getTime(),\n  );\n};\n\nexport const markAsRemoteMessage = (messages: GetMessageInfoResponse[]) => {\n  return messages.map((message) => {\n    return {\n      ...message,\n      fromRemote: true,\n    } as RecentMessage;\n  });\n};\n\nexport const dedup = (messages: (Message | RecentMessage)[]) => {\n  const hash: Record<string, boolean> = {};\n  return messages.reduce((acc, cur) => {\n    if (hash[cur.id]) return acc;\n    hash[cur.id] = true;\n    return acc.concat(cur);\n  }, []);\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAQO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,OAAyB,EAAK;EAC9D,OAAO,UAAAC,IAAA;IAAA,IAAGC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAA,OACnBA,WAAW,KAAKF,OAAO,CAACG,IAAI,CAACD,WAAW,IACxC,CAAC,CAACF,OAAO,CAACI,EAAE,CAACC,IAAI,CAAC,UAACD,EAAE;MAAA,OAAKA,EAAE,CAACF,WAAW,KAAKA,WAAW;IAAA,EAAC,IACzDA,WAAW,KAAKF,OAAO,CAACG,IAAI,CAACG,eAAe,IAC5C,CAAC,CAACN,OAAO,CAACI,EAAE,CAACC,IAAI,CAAC,UAACD,EAAE;MAAA,OAAKA,EAAE,CAACE,eAAe,KAAKJ,WAAW;IAAA,EAAC;EAAA;AACjE,CAAC;AAACK,OAAA,CAAAR,iBAAA,GAAAA,iBAAA;AAEK,IAAMS,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,WAA6B,EAAK;EACxE,OAAOA,WAAW,CAACC,MAAM,CACvB,UAACC,GAAG,EAAAC,KAAA;IAAA,IAAIC,OAAO,GAAAD,KAAA,CAAPC,OAAO;IAAA,OAAOF,GAAG,CAACG,MAAM,CAACD,OAAO,CAAC;EAAA,GACzC,EACF,CAAC;AACH,CAAC;AAACN,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AAEK,IAAMO,YAAY,GAAG,SAAfA,YAAYA,CAAIC,cAA+B,EAAK;EAC/D;EACA,OAAOA,cAAc,CAACC,IAAI,CACxB,UAACC,CAAC,EAAEC,CAAC;IAAA,OACH,IAAIC,IAAI,CAACD,CAAC,CAACE,YAAY,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,YAAY,CAAC,CAACC,OAAO,CAAC,CAAC;EAAA,CAC3E,CAAC;AACH,CAAC;AAACf,OAAA,CAAAQ,YAAA,GAAAA,YAAA;AAEK,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,QAAkC,EAAK;EACzE,OAAOA,QAAQ,CAACC,GAAG,CAAC,UAACzB,OAAO,EAAK;IAC/B,OAAA0B,aAAA,CAAAA,aAAA,KACK1B,OAAO;MACV2B,UAAU,EAAE;IAAI;EAEpB,CAAC,CAAC;AACJ,CAAC;AAACpB,OAAA,CAAAgB,mBAAA,GAAAA,mBAAA;AAEK,IAAMK,KAAK,GAAG,SAARA,KAAKA,CAAIJ,QAAqC,EAAK;EAC9D,IAAMK,IAA6B,GAAG,CAAC,CAAC;EACxC,OAAOL,QAAQ,CAACd,MAAM,CAAC,UAACC,GAAG,EAAEmB,GAAG,EAAK;IACnC,IAAID,IAAI,CAACC,GAAG,CAACC,EAAE,CAAC,EAAE,OAAOpB,GAAG;IAC5BkB,IAAI,CAACC,GAAG,CAACC,EAAE,CAAC,GAAG,IAAI;IACnB,OAAOpB,GAAG,CAACG,MAAM,CAACgB,GAAG,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAACvB,OAAA,CAAAqB,KAAA,GAAAA,KAAA"}