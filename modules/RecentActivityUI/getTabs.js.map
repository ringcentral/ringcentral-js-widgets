{"version":3,"sources":["modules/RecentActivityUI/getTabs.tsx"],"names":["trackTabsMap","recentCalls","trackEvents","clickRecentActivityCall","faxes","clickRecentActivityFaxes","recentMessages","clickRecentActivitySms","voicemails","clickRecentActivityVoicemails","getTabs","ready","currentLocale","dateTimeFormatter","navigateTo","currentContact","sessionId","showRecentCalls","showRecentMessage","showFax","showVoiceMails","messages","calls","id","contactId","activityCardId","icon","label","i18n","getString","path","isActive","view","getData","cleanUp","dynamicsFont","composeText","isMessagesLoaded","getMessages","cleanUpMessages","contact","active","isCallsLoaded","getCalls","cleanUpCalls","filter","item"],"mappings":"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","sourcesContent":["import React, { ReactElement } from 'react';\n\nimport { Entity } from '@ringcentral-integration/commons/interfaces/Entity.interface';\nimport { Message } from '@ringcentral-integration/commons/interfaces/MessageStore.model';\nimport { trackEvents } from '@ringcentral-integration/commons/modules/Analytics';\nimport { HistoryCall } from '@ringcentral-integration/commons/modules/CallHistoryV2';\nimport { FormatDateTimeOptions } from '@ringcentral-integration/commons/modules/DateTimeFormatV2';\nimport { RecentCalls } from '@ringcentral-integration/commons/modules/RecentCallsV2';\nimport {\n  RecentMessage,\n  RecentMessages,\n} from '@ringcentral-integration/commons/modules/RecentMessagesV2';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport FaxIcon from '../../assets/images/Fax.svg';\nimport VoicemailIcon from '../../assets/images/VoicemailIcon.svg';\nimport RecentActivityCalls from '../../components/RecentActivityCalls';\nimport RecentActivityMessages from '../../components/RecentActivityMessages';\nimport i18n from './i18n';\n\nexport interface Tab {\n  icon: ReactElement;\n  label: string;\n  path: string;\n  isActive: (path: string) => boolean;\n  view: ReactElement;\n  getData: () => void;\n  cleanUp: () => void;\n}\n\nexport const trackTabsMap = {\n  recentCalls: trackEvents.clickRecentActivityCall,\n  faxes: trackEvents.clickRecentActivityFaxes,\n  recentMessages: trackEvents.clickRecentActivitySms,\n  voicemails: trackEvents.clickRecentActivityVoicemails,\n};\n\nexport interface GetTabsOptions {\n  ready: boolean;\n  currentLocale: string;\n  dateTimeFormatter: (options: Partial<FormatDateTimeOptions>) => string;\n  navigateTo: (path: string) => void;\n  recentMessages: RecentMessages;\n  recentCalls: RecentCalls;\n  currentContact: Entity;\n  sessionId: string;\n  showRecentCalls: boolean;\n  showRecentMessage: boolean;\n  showFax: boolean;\n  showVoiceMails: boolean;\n}\n\nexport const getTabs = ({\n  ready,\n  currentLocale,\n  dateTimeFormatter,\n  navigateTo,\n  recentMessages,\n  recentCalls,\n  currentContact,\n  sessionId,\n  showRecentCalls,\n  showRecentMessage,\n  showFax,\n  showVoiceMails,\n}: GetTabsOptions) => {\n  if (!ready) return [];\n  let messages: (Message | RecentMessage)[] = [];\n  let calls: HistoryCall[] = [];\n  if (currentContact && currentContact.id) {\n    const contactId = currentContact.id;\n    const activityCardId = sessionId ? `${contactId}-${sessionId}` : contactId;\n    if (recentMessages.messages[activityCardId]) {\n      messages = recentMessages.messages[activityCardId];\n    }\n    if (recentCalls.calls[activityCardId]) {\n      calls = recentCalls.calls[activityCardId];\n    }\n  }\n\n  return (\n    [\n      showVoiceMails\n        ? {\n            icon: <VoicemailIcon width={21} height={21} />,\n            label: i18n.getString('voicemail', currentLocale),\n            path: 'voicemails',\n            isActive: (path) => path === 'voicemails',\n            view: null,\n            getData() {},\n            cleanUp() {},\n          }\n        : null,\n      showRecentMessage\n        ? {\n            icon: <span className={dynamicsFont.composeText} />,\n            label: i18n.getString('text', currentLocale),\n            path: 'recentMessages',\n            isActive: (path) => path === 'recentMessages',\n            view: (\n              <RecentActivityMessages\n                messages={messages}\n                navigateTo={navigateTo}\n                dateTimeFormatter={dateTimeFormatter}\n                currentLocale={currentLocale}\n                isMessagesLoaded={recentMessages.isMessagesLoaded}\n              />\n            ),\n            getData() {\n              recentMessages.getMessages({ currentContact, sessionId });\n            },\n            cleanUp: () =>\n              recentMessages.cleanUpMessages({\n                contact: currentContact,\n                sessionId,\n              }),\n          }\n        : null,\n      showFax\n        ? {\n            icon: <FaxIcon width={21} height={21} />,\n            label: i18n.getString('fax', currentLocale),\n            path: 'faxes',\n            isActive: (path) => path === 'faxes',\n            view: null,\n            getData() {},\n            cleanUp() {},\n          }\n        : null,\n      showRecentCalls\n        ? {\n            icon: <span className={dynamicsFont.active} />,\n            label: i18n.getString('call', currentLocale),\n            path: 'recentCalls',\n            isActive: (path) => path === 'recentCalls',\n            view: (\n              <RecentActivityCalls\n                calls={calls}\n                dateTimeFormatter={dateTimeFormatter}\n                currentLocale={currentLocale}\n                isCallsLoaded={recentCalls.isCallsLoaded}\n              />\n            ),\n            getData() {\n              recentCalls.getCalls({ currentContact, sessionId });\n            },\n            cleanUp: () =>\n              recentCalls.cleanUpCalls({ contact: currentContact, sessionId }),\n          }\n        : null,\n    ] as Tab[]\n  ).filter((item) => item !== null);\n};\n"],"file":"getTabs.js"}