{"version":3,"file":"MicLevelHelper.js","names":["_MicLevel","require","_const","_typeof","o","Symbol","iterator","constructor","prototype","asyncGeneratorStep","n","t","e","r","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","TypeError","_defineProperties","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","call","String","Number","MicLevelHelper","micLevel","MicLevel","setInterval","LEVEL_CHECK_INTERVAL","_setupMicMedia","regeneratorRuntime","mark","_callee","deviceId","result","wrap","_callee$","_context","prev","next","setupMicMedia","sent","Error","console","warn","abrupt","stop","_x","_listenToMic","_callee2","dataCallback","_callee2$","_context2","listenToMic","_x2","clear","exports"],"sources":["modules/VolumeInspector/MicLevelHelper.ts"],"sourcesContent":["import { MicLevel } from './MicLevel';\nimport { LEVEL_CHECK_INTERVAL } from './const';\n\nexport class MicLevelHelper {\n  private readonly micLevel = new MicLevel();\n\n  constructor() {\n    this.micLevel.setInterval(LEVEL_CHECK_INTERVAL);\n  }\n\n  async setupMicMedia(deviceId?: string): Promise<MediaStream> {\n    const result = await this.micLevel.setupMicMedia(deviceId);\n    if (result instanceof Error) {\n      console.warn('setup mic media error.', result);\n      throw result;\n    }\n    return result;\n  }\n\n  async listenToMic(dataCallback: (volume: number) => void): Promise<any> {\n    const result = await this.micLevel.listenToMic(dataCallback);\n    if (result instanceof Error) {\n      console.warn('register mic listener error.', result);\n      throw result;\n    }\n    return result;\n  }\n\n  clear(): void {\n    this.micLevel.clear();\n  }\n}\n"],"mappings":"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","ignoreList":[]}