{"version":3,"file":"MicLevel.js","names":["_AudioDetector","require","_typeof","o","Symbol","iterator","constructor","prototype","asyncGeneratorStep","n","t","e","r","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","TypeError","_defineProperties","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","call","String","Number","MicLevel","_interval","_audioDetector","AudioDetector","_preInputDeviceId","_audioStream","_detectorListenDisposer","_setupMicMedia","regeneratorRuntime","mark","_callee","deviceId","audioConstraint","mediaStream","wrap","_callee$","_context","prev","next","console","warn","concat","abrupt","audio","exact","navigator","mediaDevices","getUserMedia","sent","t0","Error","clear","stop","setupMicMedia","_x","_listenToMic","_callee2","dataCallback","result","_callee2$","_context2","connect","registerListener","setInterval","start","listenToMic","_x2","_this$_detectorListen","disconnect","getTracks","forEach","track","interval","exports"],"sources":["modules/VolumeInspector/MicLevel.ts"],"sourcesContent":["import { AudioDetector } from './AudioDetector';\n\n/**\n * MicLevel is recommended to be a singleton when it is setupMedia for the same deviceId.\n * listenToMic() can be called repeatedly for registering different listener.\n */\nexport class MicLevel {\n  // unit: ms\n  private _interval: number = 100;\n\n  private readonly _audioDetector: AudioDetector = new AudioDetector();\n\n  private _preInputDeviceId?: string;\n  private _audioStream?: MediaStream;\n  private _detectorListenDisposer?: (() => void) | null;\n\n  constructor() {}\n\n  /**\n   * setup microphone media by deviceId\n   * if deviceId is undefined, then it will try to get user media by default\n   * @param deviceId string\n   * @return MediaStream or SetupMediaError when getUserMedia failed.\n   */\n  public async setupMicMedia(\n    deviceId: string | undefined,\n  ): Promise<MediaStream | Error> {\n    if (!deviceId && deviceId === this._preInputDeviceId) {\n      console.warn(\n        `deviceId is same, not reset for setupMicMedia, deviceId:${deviceId}`,\n      );\n      return this._audioStream!;\n    }\n\n    const audioConstraint = {\n      audio: deviceId\n        ? {\n            deviceId: { exact: deviceId },\n          }\n        : true,\n    };\n\n    let mediaStream;\n    try {\n      mediaStream = await navigator.mediaDevices.getUserMedia(audioConstraint);\n    } catch (err) {\n      console.warn(`getUserMedia error, deviceId:${deviceId}, err:`, err);\n      // to make user handle this error\n      return new Error(err as string);\n    }\n\n    // make sure new mediaStream is ready then clear current mediaStream\n    this.clear();\n\n    this._audioStream = mediaStream;\n    this._preInputDeviceId = deviceId || '';\n    return mediaStream;\n  }\n\n  /**\n   * start to listen microphone mediaStream by interval\n   * @param dataCallback\n   * @return disposer of listener\n   */\n  public async listenToMic(\n    dataCallback: (volume: number) => void,\n  ): Promise<any> {\n    if (!this._audioStream) {\n      console.warn('No audio stream to listen.');\n      throw new Error('No media stream was setup.');\n    }\n    await this._audioDetector.connect(this._audioStream);\n    // all listener will also be cleared when audioDetector disconnect.\n    const result = this._audioDetector.registerListener(dataCallback);\n    if (result instanceof Error) {\n      console.warn('register detector listener error.');\n      return result;\n    }\n    this._detectorListenDisposer = result.setInterval(this._interval).start();\n  }\n\n  public clear(): void {\n    if (this._audioStream) {\n      this._audioDetector.disconnect();\n      this._audioStream.getTracks().forEach((track) => {\n        track.stop();\n      });\n      delete this._audioStream;\n      delete this._preInputDeviceId;\n    }\n    this._detectorListenDisposer?.();\n    this._detectorListenDisposer = null;\n  }\n\n  /**\n   * set interval for listener\n   * @param interval number, default 100 ms\n   */\n  public setInterval(interval: number): MicLevel {\n    this._interval = interval;\n    return this;\n  }\n}\n"],"mappings":"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","ignoreList":[]}