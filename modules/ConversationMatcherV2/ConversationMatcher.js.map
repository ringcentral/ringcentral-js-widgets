{"version":3,"sources":["modules/ConversationMatcherV2/ConversationMatcher.ts"],"names":["ConversationMatcher","name","deps","dep","optional","conversationMatcherOptions","disableCache","_deps","DataMatcher"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAOMA,mB,WAJL,gBAAO;AACNC,EAAAA,IAAI,EAAE,qBADA;AAENC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE,4BAAP;AAAqCC,IAAAA,QAAQ,EAAE;AAA/C,GAAD;AAFA,CAAP,C;;;;;AAKC,+BAAYF,IAAZ,EAAwB;AAAA;;AAAA;;AAAA,6BAEpBA,IAFoB,EAGpB,qBAHoB,2BAIpBA,IAAI,CAACG,0BAJe,0DAIpB,sBAAiCC,YAJb;AAMvB;;;;wBAE4C;AAC3C,aAAO,KAAKC,KAAL,CAAWF,0BAAlB;AACD;;;;EAX+BG,yB","sourcesContent":["import { Entity } from '../../interfaces/Entity.interface';\nimport { DataMatcher, DataMatcherOptions } from '../../lib/DataMatcherV2';\nimport { Module } from '../../lib/di';\nimport { Deps } from './ConversationMatcher.interface';\n\n@Module({\n  name: 'ConversationMatcher',\n  deps: [{ dep: 'ConversationMatcherOptions', optional: true }],\n})\nclass ConversationMatcher extends DataMatcher<Entity, Deps> {\n  constructor(deps: Deps) {\n    super(\n      deps,\n      'ConversationMatcher',\n      deps.conversationMatcherOptions?.disableCache,\n    );\n  }\n\n  get dataMatcherOptions(): DataMatcherOptions {\n    return this._deps.conversationMatcherOptions;\n  }\n}\n\nexport { ConversationMatcher };\n"],"file":"ConversationMatcher.js"}