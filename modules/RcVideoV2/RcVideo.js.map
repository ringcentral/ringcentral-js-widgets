{"version":3,"sources":["modules/RcVideoV2/RcVideo.ts"],"names":["RcVideo","name","deps","dep","optional","that","status","videoStatus","creating","analytics","target","getTrackTarget","trackEvents","clickMeetingSchedulePage","router","currentUser","_deps","locale","currentLocale","preferences","isInstantMeeting","settingLocks","personalMeeting","initialVideoSetting","transformedPreferences","transformedSettingLocks","defaultTopic","extensionName","brand","shortName","brandConfig","rcvMeetingTopic","extensionId","accountId","delegator","loginUser","enableCache","storageKey","_showSaveAsDefault","_isInstantMeeting","_enableE2EE","_enableWaitingRoom","_enablePersonalMeeting","_enableScheduleOnBehalf","_enableHostCountryDialinNumbers","_enableReloadAfterSchedule","_enableInvitationApi","_currentLocale","_createMeetingPromise","rcVideoOptions","enableInvitationApi","showSaveAsDefault","enableE2EE","enableWaitingRoom","enablePersonalMeeting","enableScheduleOnBehalf","enableHostCountryDialinNumbers","enableReloadAfterSchedule","DEFAULT_LOCALE","settings","personalVideo","savedDefaultSetting","info","patch","meeting","videoConfiguration","isRCV","ready","isPreferencesChanged","delegatorList","delegators","isChanged","hasSettingsChanged","_init","updateDelegator","Promise","all","_initMeeting","initScheduleFor","usePersonalMeetingId","_initMeetingSettings","_updateDelegator","userExtensionId","length","hostId","user","Number","_initDelegators","_updateVideoStatus","initializing","_initPersonalMeeting","_initPreferences","initialized","_getPreferences","password_instant","_updatePreference","_updateMeetingSettingLocks","console","log","client","service","platform","get","meetingResult","json","_savePersonalMeeting","error","_resetPersonalMeeting","_errorHandle","result","processedDelegators","unshift","_updateDelegatorList","allowJoinBeforeHost","isOnlyAuthUserJoin","isOnlyCoworkersJoin","allowScreenSharing","muteAudio","muteVideo","e2ee","isMeetingSecret","notShowAgain","waitingRoomMode","updateInfo","_saved","_saveDefaultVideoSetting","password","isSecret","isAlertSuccess","saveAsDefault","saveAsDefaultSetting","meetingDetail","condition","key","RCV_WAITING_ROOM_API_KEYS","RCV_E2EE_API_KEYS","_postBridges","_getDialinNumbers","getExtensionInfo","newMeeting","dialInNumber","extensionInfo","updateMeetingSettings","getMeetingInvitation","hostName","shortId","meetingPassword","meetingPasswordPSTN","meetingPasswordMasked","joinUri","dialInNumbers","brandName","brandId","id","isSIPAvailable","appFeatures","hasRoomConnectorBeta","invitationInfo","savePreferencesChanges","setTimeout","alert","success","message","meetingStatus","scheduledSuccess","created","_updateHasSettingsChanged","meetingResponse","idle","isScheduling","createMeetingDirectly","createMeeting","expiresIn","type","RcVideoTypes","invitationRequest","data","post","response","text","blobData","replace","warn","meetingId","send","method","url","body","phoneNumbers","Array","isArray","defaultPhoneNumber","obj","countryDialinNumbers","country","isoCode","phoneNumber","RCV_PREFERENCES_IDS","res","list","forEach","value","readOnly","account","extension","_updateMeetingPreferences","preferenceId","isOverwrite","preferencesPayload","dirtyPreferences","Object","entries","filter","kvPairs","newValue","oldValue","isLocked","map","_saveSinglePreference","updating","_patchBridges","updatedSuccess","updated","personalVideoSetting","defaultVideoSetting","RCV_E2EE_DEFAULT_SECURITY_OPTIONS","settingLock","processedMeeting","_updateMeetingSettings","isMeetingPasswordValid","validatePasswordSettings","_comparePreferences","_updateIsPreferencesChanged","errors","MeetingErrors","warning","clone","errorCode","permissionName","danger","insufficientPermissions","payload","availabilityMonitor","checkIfHAError","internalError","accountInfo","processedSettings","startTime","Date","savedSetting","savedDefaultVideoSetting","topic","ASSISTED_USERS_MYSELF","isLoginUser","RcModuleV2","storage","state","action","proxify","background"],"mappings":"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","sourcesContent":["import { filter, find } from 'ramda';\n\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  track,\n} from '@ringcentral-integration/core';\nimport { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { DEFAULT_LOCALE } from '@ringcentral-integration/i18n';\n\nimport { getInitializedStartTime } from '../../helpers/meetingHelper';\nimport { IMeeting } from '../../interfaces/Meeting.interface';\nimport {\n  RcVDialInNumberGET,\n  RcVDialInNumberObj,\n  RcVideoAPI,\n  RcvInvitationRequest,\n  RcVMeetingModel,\n  RcVPreferenceDataItem,\n  RcVPreferences,\n  RcVPreferencesAPIResult,\n  RcVPreferencesGET,\n  RcVSettingLocks,\n  RcVSettingLocksGET,\n} from '../../interfaces/Rcv.model';\nimport background from '../../lib/background';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { trackEvents } from '../Analytics';\nimport { MeetingErrors } from '../Meeting';\nimport meetingStatus from '../Meeting/meetingStatus';\nimport {\n  ASSISTED_USERS_MYSELF,\n  RCV_E2EE_API_KEYS,\n  RCV_WAITING_ROOM_API_KEYS,\n  RcvWaitingRoomModeProps,\n} from './constants';\nimport { Deps, RcvDelegator, RcVideoResponse } from './RcVideo.interface';\nimport {\n  assignObject,\n  comparePreferences,\n  generateRandomPassword,\n  getDefaultVideoSettings,\n  getLockedPreferences,\n  getTopic,\n  patchWaitingRoomRelated,\n  pruneMeetingObject,\n  RCV_E2EE_DEFAULT_SECURITY_OPTIONS,\n  RCV_PREFERENCES_IDS,\n  RcVideoTypes,\n  reversePreferences,\n  transformPreferences,\n  transformSettingLocks,\n  validatePasswordSettings,\n  formatRcvInvitationRequestData,\n} from './videoHelper';\nimport { videoStatus } from './videoStatus';\n\n@Module({\n  name: 'RcVideo',\n  deps: [\n    'Alert',\n    'Client',\n    'Brand',\n    'Storage',\n    'AccountInfo',\n    'ExtensionInfo',\n    'VideoConfiguration',\n    'Locale',\n    'AppFeatures',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'RcVideoOptions', optional: true },\n  ],\n})\nexport class RcVideo extends RcModuleV2<Deps> implements IMeeting {\n  protected _showSaveAsDefault: boolean;\n  protected _isInstantMeeting: boolean;\n  protected _enableE2EE: boolean;\n  protected _enableWaitingRoom: boolean;\n  protected _enablePersonalMeeting: boolean;\n  protected _enableScheduleOnBehalf: boolean;\n  protected _enableHostCountryDialinNumbers: boolean;\n  protected _enableReloadAfterSchedule: boolean;\n  protected _enableInvitationApi: boolean;\n  protected _currentLocale: string;\n  private _createMeetingPromise: any = null;\n\n  constructor(deps: Deps) {\n    super({\n      enableCache: true,\n      storageKey: 'RcVideo',\n      deps,\n    });\n\n    this._enableInvitationApi =\n      this._deps.rcVideoOptions?.enableInvitationApi ?? false;\n    this._showSaveAsDefault =\n      this._deps.rcVideoOptions?.showSaveAsDefault ?? false;\n    this._isInstantMeeting =\n      this._deps.rcVideoOptions?.isInstantMeeting ?? false;\n    this._enableE2EE = this._deps.rcVideoOptions?.enableE2EE ?? false;\n    this._enableWaitingRoom =\n      this._deps.rcVideoOptions?.enableWaitingRoom ?? false;\n    this._enablePersonalMeeting =\n      this._deps.rcVideoOptions?.enablePersonalMeeting ?? false;\n    this._enableScheduleOnBehalf =\n      this._deps.rcVideoOptions?.enableScheduleOnBehalf ?? false;\n    this._enableHostCountryDialinNumbers =\n      this._deps.rcVideoOptions?.enableHostCountryDialinNumbers ?? false;\n    this._enableReloadAfterSchedule =\n      this._deps.rcVideoOptions?.enableReloadAfterSchedule ?? true;\n    this._currentLocale = this._deps.locale?.currentLocale ?? DEFAULT_LOCALE;\n  }\n\n  @storage\n  @state\n  personalVideo: Partial<RcVideoAPI> = null;\n\n  // when migrate to rcv v2, computed defaultVideoSetting has conflict with storage key 'defaultVideoSetting'\n  // rcv save as default toggle has not opened yet, so change the key into 'savedDefaultSetting'\n  @storage\n  @state\n  savedDefaultSetting: Partial<RcVMeetingModel> = {};\n\n  @state\n  meeting: Partial<RcVMeetingModel> = null;\n\n  @state\n  videoStatus: ObjectMapValue<typeof videoStatus> = videoStatus.idle;\n\n  @state\n  preferences: RcVPreferencesGET = {};\n\n  @state\n  isPreferencesChanged: boolean = false;\n\n  @state\n  settingLocks: RcVSettingLocksGET = {};\n\n  @state\n  delegator: RcvDelegator = null;\n\n  @state\n  delegators: RcvDelegator[] = [];\n\n  @state\n  hasSettingsChanged: boolean = false;\n\n  @action\n  protected _savePersonalMeeting(settings: Partial<RcVideoAPI>) {\n    this.personalVideo = {\n      ...this.personalVideo,\n      ...settings,\n    };\n  }\n\n  @action\n  protected _resetPersonalMeeting() {\n    this.personalVideo = {};\n  }\n\n  @action\n  protected _saveDefaultVideoSetting(settings: Partial<RcVMeetingModel>) {\n    this.savedDefaultSetting = {\n      ...this.savedDefaultSetting,\n      ...settings,\n    };\n  }\n\n  @action\n  protected _updateMeetingSettings(\n    info: Partial<RcVMeetingModel>,\n    patch: boolean = true,\n  ) {\n    this.meeting = patch\n      ? {\n          ...this.meeting,\n          ...info,\n        }\n      : (info as RcVMeetingModel);\n  }\n\n  _shouldInit() {\n    return super._shouldInit() && this._deps.videoConfiguration.isRCV;\n  }\n\n  _shouldReset() {\n    return (\n      super._shouldReset() ||\n      (this.ready && !this._deps.videoConfiguration.isRCV)\n    );\n  }\n\n  @track((that: RcVideo, status: string) => {\n    if (status !== videoStatus.creating) return;\n    return (analytics) => {\n      const target = analytics.getTrackTarget();\n      if (target) {\n        return [\n          trackEvents.clickMeetingSchedulePage,\n          { router: target.router, 'Meeting Type': 'RCV' },\n        ];\n      }\n    };\n  })\n  @action\n  protected _updateVideoStatus(status: ObjectMapValue<typeof videoStatus>) {\n    this.videoStatus = status;\n  }\n\n  @action\n  protected _updateMeetingPreferences(preferences: RcVPreferencesGET) {\n    this.preferences = preferences;\n  }\n\n  @action\n  protected _updateIsPreferencesChanged(isPreferencesChanged: boolean) {\n    this.isPreferencesChanged = isPreferencesChanged;\n  }\n\n  @action\n  protected _updateMeetingSettingLocks(settingLocks: RcVSettingLocksGET) {\n    this.settingLocks = settingLocks;\n  }\n\n  @action\n  protected _updateDelegator(delegator: RcvDelegator) {\n    this.delegator = delegator;\n  }\n\n  @action\n  protected _updateDelegatorList(delegatorList: RcvDelegator[]) {\n    this.delegators = delegatorList;\n  }\n\n  @action\n  protected _updateHasSettingsChanged(isChanged: boolean) {\n    this.hasSettingsChanged = isChanged;\n  }\n\n  @proxify\n  async onInit() {\n    await this._init();\n  }\n\n  async _init() {\n    this.updateDelegator(this.loginUser);\n    await Promise.all([this._initMeeting(), this.initScheduleFor()]);\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  async init() {\n    await this._init();\n  }\n\n  @proxify\n  async reload() {\n    await this._init();\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this._initMeetingSettings(usePersonalMeetingId);\n  }\n\n  @proxify\n  async updateDelegator(delegator: RcvDelegator) {\n    if (this._enableScheduleOnBehalf) {\n      this._updateDelegator(delegator);\n    }\n  }\n\n  @proxify\n  async updateScheduleFor(\n    userExtensionId: string | number = `${this.extensionId}`,\n  ) {\n    if (!this.delegators || this.delegators.length === 0) {\n      return;\n    }\n\n    const hostId = `${userExtensionId}`;\n    const delegator: RcvDelegator = find(\n      (user: RcvDelegator) => user.extensionId === hostId,\n      this.delegators,\n    );\n\n    if (!delegator) {\n      return;\n    }\n\n    this.updateDelegator(delegator);\n\n    await this._initMeeting(Number(delegator.extensionId));\n  }\n\n  async initScheduleFor() {\n    if (this._enableScheduleOnBehalf) {\n      await this._initDelegators();\n    }\n  }\n\n  async _initMeeting(extensionId = this.extensionId) {\n    this._updateVideoStatus(videoStatus.initializing);\n\n    await Promise.all([\n      this._initPersonalMeeting(this.accountId, extensionId),\n      this._initPreferences(),\n    ]);\n\n    this._initMeetingSettings(false);\n\n    this._updateVideoStatus(videoStatus.initialized);\n  }\n\n  async _initPreferences() {\n    try {\n      const { preferences, settingLocks } = await this._getPreferences(\n        this.accountId,\n        this.extensionId,\n      );\n      // TODO Remove the next line after rcv implement ui to manage password_instant\n      preferences.password_instant = false;\n\n      this._updatePreference(preferences);\n      this._updateMeetingSettingLocks(settingLocks);\n    } catch (errors) {\n      console.log('preference error:', errors);\n      // this._errorHandle(errors);\n    }\n  }\n\n  async _initPersonalMeeting(\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ) {\n    if (!this._enablePersonalMeeting) {\n      return;\n    }\n    try {\n      const meetingResult = await this._deps.client.service\n        .platform()\n        .get('/rcvideo/v1/bridges', {\n          default: true,\n          accountId,\n          extensionId,\n        });\n      const meeting = (await meetingResult.json()) as RcVideoAPI;\n      this._savePersonalMeeting(meeting);\n    } catch (errors) {\n      console.error('fetch personal meeting error:', errors);\n      this._resetPersonalMeeting();\n      this._errorHandle(errors);\n    }\n  }\n\n  protected async _initDelegators() {\n    try {\n      const result = await this._deps.client.service\n        .platform()\n        .get('/rcvideo/v1/accounts/~/extensions/~/delegators');\n      const delegators = (await result.json()) as RcvDelegator[];\n      // to make sure it will equal to v1\n      const processedDelegators = delegators;\n      if (processedDelegators.length) {\n        processedDelegators.unshift(this.loginUser);\n      }\n      this._updateDelegatorList(processedDelegators);\n    } catch (errors) {\n      this._errorHandle(errors);\n    }\n  }\n\n  saveAsDefaultSetting(meeting: RcVMeetingModel) {\n    const {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      e2ee,\n      isMeetingSecret,\n      notShowAgain,\n      waitingRoomMode,\n    } = meeting;\n    const updateInfo: {\n      allowJoinBeforeHost: boolean;\n      isOnlyAuthUserJoin: boolean;\n      isOnlyCoworkersJoin: boolean;\n      allowScreenSharing: boolean;\n      muteAudio: boolean;\n      muteVideo: boolean;\n      e2ee: boolean;\n      isMeetingSecret: boolean;\n      waitingRoomMode: RcvWaitingRoomModeProps;\n      _saved?: boolean;\n    } = {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n      waitingRoomMode,\n      e2ee,\n    };\n    if (notShowAgain) {\n      updateInfo._saved = notShowAgain;\n    }\n\n    this._saveDefaultVideoSetting(updateInfo);\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    return validatePasswordSettings(password, isSecret);\n  }\n\n  @proxify\n  async createMeetingDirectly(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this._updateVideoStatus(videoStatus.creating);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      const meetingDetail = pruneMeetingObject(meeting, [\n        {\n          condition: this.enableWaitingRoom,\n          key: RCV_WAITING_ROOM_API_KEYS,\n        },\n        {\n          condition: this.enableE2EE && !meeting.usePersonalMeetingId,\n          key: RCV_E2EE_API_KEYS,\n        },\n      ]);\n\n      const [newMeeting, dialInNumber, extensionInfo] = await Promise.all([\n        this._postBridges(meetingDetail),\n        this._getDialinNumbers(),\n        this.getExtensionInfo(this.currentUser.extensionId),\n      ]);\n      this.updateMeetingSettings({\n        ...meeting,\n        saveAsDefault: false,\n      });\n\n      // After Create\n      const invitationInfo = await this.getMeetingInvitation({\n        hostName: extensionInfo.name,\n        shortId: newMeeting.shortId,\n        e2ee: newMeeting.e2ee,\n        isMeetingSecret: newMeeting.isMeetingSecret,\n        meetingPassword: newMeeting.meetingPassword,\n        meetingPasswordPSTN: newMeeting.meetingPasswordPSTN,\n        meetingPasswordMasked: newMeeting.meetingPasswordMasked,\n        joinUri: newMeeting.joinUri || '',\n        dialInNumbers: dialInNumber,\n        currentLocale: this.currentLocale,\n        brandName: this._deps.brand.name,\n        brandId: this._deps.brand.id,\n        isSIPAvailable: this._deps.appFeatures.hasRoomConnectorBeta,\n      });\n\n      // sync preferences changes to rcv backend\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting);\n      }\n      // this will also fetch preference from rcv backend\n      if (this._enableReloadAfterSchedule) {\n        await this._initMeeting(Number(this.currentUser.extensionId));\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._deps.alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n\n      this._updateVideoStatus(videoStatus.created);\n      this._updateHasSettingsChanged(false);\n\n      const meetingResponse = {\n        invitationInfo,\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n\n      return {\n        ...meetingResponse,\n        ...meeting,\n      };\n    } catch (errors) {\n      console.log('failed to create rcv:', errors);\n      this._updateVideoStatus(videoStatus.idle);\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  @proxify\n  async createMeeting(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    if (this.isScheduling) return this._createMeetingPromise;\n\n    this._createMeetingPromise = this.createMeetingDirectly(meeting, {\n      isAlertSuccess,\n    });\n    const result = await this._createMeetingPromise;\n    this._createMeetingPromise = null;\n    return result;\n  }\n\n  async startMeeting(\n    meeting: RcVMeetingModel,\n    isAlertSuccess: boolean = true,\n  ): Promise<any> {\n    // When user click on button \"start\", client create bridge type=0, but doesn't send time-to-life for this bridge. Backend has default ttl = 24 hours.\n    return this.createMeeting(\n      {\n        ...meeting,\n        expiresIn: null,\n        type: RcVideoTypes.meeting,\n      },\n      { isAlertSuccess },\n    );\n  }\n\n  @proxify\n  async getMeetingInvitation(\n    invitationRequest: RcvInvitationRequest,\n  ): Promise<string> {\n    if (!this._enableInvitationApi) {\n      return null;\n    }\n\n    try {\n      const data = formatRcvInvitationRequestData(invitationRequest);\n      const response = await this._deps.client.service\n        .platform()\n        .post('/restapi/v1.0/uns/render-document', data);\n      const blobData = await response.text();\n      return blobData.replace(\n        /-*Boundary(_\\d+)*-*(\\r\\n)?|((Content-Type|Content-Disposition).+((\\r\\n)+(\\s+\\n)?))|-{3}(\\n\\r\\n)*/g,\n        '',\n      );\n    } catch (ex) {\n      console.warn('failed to get invitation', ex);\n      return null;\n    }\n  }\n\n  @proxify\n  protected async _postBridges(meetingDetail: RcVideoAPI) {\n    const result = await this._deps.client.service\n      .platform()\n      .post('/rcvideo/v1/bridges', meetingDetail);\n    return result.json();\n  }\n\n  @proxify\n  protected async _patchBridges(meetingId: string, meetingDetail: RcVideoAPI) {\n    const result = await this._deps.client.service.platform().send({\n      method: 'PATCH',\n      url: `/rcvideo/v1/bridges/${meetingId}`,\n      body: meetingDetail,\n    });\n    return result.json();\n  }\n\n  @proxify\n  protected async _getDialinNumbers(): Promise<string | RcVDialInNumberObj[]> {\n    const result = await this._deps.client.service\n      .platform()\n      .get('/rcvideo/v1/dial-in-numbers');\n    const data = (await result.json()) as RcVDialInNumberGET;\n    const phoneNumbers = data?.phoneNumbers;\n    if (Array.isArray(phoneNumbers)) {\n      const defaultPhoneNumber = find((obj) => obj.default, phoneNumbers);\n\n      if (this._enableHostCountryDialinNumbers) {\n        const countryDialinNumbers = filter(\n          (obj) => obj?.country?.isoCode === this.country.isoCode,\n          phoneNumbers,\n        );\n        if (countryDialinNumbers.length > 0) {\n          return countryDialinNumbers;\n        }\n        return [defaultPhoneNumber];\n      }\n\n      return defaultPhoneNumber.phoneNumber;\n    }\n    return [];\n  }\n\n  protected async _getPreferences(\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ): Promise<RcVPreferencesAPIResult> {\n    const res = await this._deps.client.service\n      .platform()\n      .get(\n        `/rcvideo/v1/account/${accountId}/extension/${extensionId}/preferences`,\n        {\n          id: RCV_PREFERENCES_IDS,\n        },\n      );\n    const list: Array<RcVPreferenceDataItem> = await res.json();\n    const preferences: RcVPreferencesGET = {};\n    const settingLocks: RcVSettingLocksGET = {};\n\n    list.forEach(({ id, value, readOnly }) => {\n      assignObject(preferences, value, id);\n      assignObject(settingLocks, readOnly, id);\n    });\n    return { preferences, settingLocks };\n  }\n\n  @proxify\n  async getExtensionInfo(extensionId: string) {\n    if (Number(extensionId) === this.extensionId) {\n      return this._deps.extensionInfo.info;\n    }\n    return this._deps.client.account().extension(extensionId).get();\n  }\n\n  protected _updatePreference(preferences: Partial<RcVPreferencesGET>) {\n    this._updateMeetingPreferences(preferences);\n  }\n\n  protected async _saveSinglePreference(\n    preferenceId: keyof RcVPreferencesGET,\n    value: boolean,\n  ): Promise<void> {\n    return this._deps.client.service.platform().send({\n      method: 'PATCH',\n      url: `/rcvideo/v1/account/~/extension/~/preferences/${preferenceId}`,\n      body: { value },\n    });\n  }\n\n  /**\n   * Determined the different between client and server, then save them to the server.\n   * @param preferences preference fileds in meeting object\n   * @param isOverwrite if true, dispatch updateMeetingPreferences on success\n   */\n  async savePreferencesChanges(\n    preferences: RcVPreferences,\n    isOverwrite = false,\n  ): Promise<void> {\n    const preferencesPayload = reversePreferences(\n      preferences,\n      this._isInstantMeeting,\n    );\n    type PreferenceEntries = [keyof RcVPreferencesGET, boolean];\n    const dirtyPreferences = Object.entries(preferencesPayload).filter(\n      (kvPairs): kvPairs is PreferenceEntries => {\n        const [preferenceId, newValue] = kvPairs as PreferenceEntries;\n        const oldValue = this.preferences[preferenceId];\n        const isLocked = this.settingLocks[preferenceId];\n        // hack for watingRoom, it will change locked option\n        return newValue !== oldValue && !isLocked;\n      },\n    );\n    try {\n      await Promise.all(\n        dirtyPreferences.map(([preferenceId, newValue]: PreferenceEntries) => {\n          return this._saveSinglePreference(preferenceId, newValue);\n        }),\n      );\n      if (isOverwrite) {\n        this._updatePreference(preferencesPayload);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async getMeeting(\n    meetingId: string,\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ): Promise<RcVideoAPI> {\n    const result = await this._deps.client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', {\n        shortId: meetingId,\n        accountId,\n        extensionId,\n      });\n    const meeting = (await result.json()) as RcVideoAPI;\n    return meeting;\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = false }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this._updateVideoStatus(videoStatus.updating);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      const meetingDetail = pruneMeetingObject(meeting, [\n        {\n          condition: this.enableWaitingRoom,\n          key: RCV_WAITING_ROOM_API_KEYS,\n        },\n        {\n          condition: this.enableE2EE && !meeting.usePersonalMeetingId,\n          key: RCV_E2EE_API_KEYS,\n        },\n      ]);\n\n      const [newMeeting, dialInNumber, extensionInfo] = await Promise.all([\n        this._patchBridges(meeting.id, meetingDetail),\n        this._getDialinNumbers(),\n        this.getExtensionInfo(this.currentUser.extensionId),\n      ]);\n\n      const invitationInfo = await this.getMeetingInvitation({\n        hostName: extensionInfo.name,\n        shortId: newMeeting.shortId,\n        e2ee: newMeeting.e2ee,\n        isMeetingSecret: newMeeting.isMeetingSecret,\n        meetingPassword: newMeeting.meetingPassword,\n        meetingPasswordPSTN: newMeeting.meetingPasswordPSTN,\n        meetingPasswordMasked: newMeeting.meetingPasswordMasked,\n        joinUri: newMeeting.joinUri || '',\n        dialInNumbers: dialInNumber,\n        currentLocale: this.currentLocale,\n        brandName: this._deps.brand.name,\n        brandId: this._deps.brand.id,\n        isSIPAvailable: this._deps.appFeatures.hasRoomConnectorBeta,\n      });\n\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting, true);\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._deps.alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n\n      this._updateVideoStatus(videoStatus.updated);\n      this._updateHasSettingsChanged(false);\n\n      if (this.personalMeeting && newMeeting.id === this.personalMeeting.id) {\n        this._savePersonalMeeting(newMeeting);\n      }\n\n      const meetingResponse = {\n        invitationInfo,\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      } as RcVideoResponse;\n\n      return meetingResponse;\n    } catch (errors) {\n      this._updateVideoStatus(videoStatus.idle);\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  protected _initMeetingSettings(usePersonalMeetingId: boolean) {\n    if (usePersonalMeetingId) {\n      this.updateMeetingSettings({\n        ...this.personalVideoSetting,\n      });\n    } else {\n      this.updateMeetingSettings({\n        ...this.defaultVideoSetting,\n      });\n    }\n  }\n\n  @proxify\n  async turnOnE2ee() {\n    this.updateMeetingSettings({\n      e2ee: true,\n      ...RCV_E2EE_DEFAULT_SECURITY_OPTIONS,\n      // if jbh is locked, do not change its value\n      allowJoinBeforeHost: this.meeting.settingLock.allowJoinBeforeHost\n        ? this.meeting.allowJoinBeforeHost\n        : RCV_E2EE_DEFAULT_SECURITY_OPTIONS.allowJoinBeforeHost,\n    });\n  }\n\n  @proxify\n  async updateMeetingSettings(\n    meeting: Partial<RcVMeetingModel>,\n    patch: boolean = true,\n  ) {\n    let processedMeeting = meeting;\n    if (this.enableWaitingRoom) {\n      processedMeeting = {\n        ...processedMeeting,\n        ...patchWaitingRoomRelated(\n          {\n            ...this.meeting,\n            ...processedMeeting,\n          } as RcVMeetingModel,\n          this.transformedPreferences,\n          true,\n        ),\n      };\n    }\n    this._updateMeetingSettings(\n      {\n        ...processedMeeting,\n        isMeetingPasswordValid: this.validatePasswordSettings(\n          processedMeeting.meetingPassword ?? this.meeting?.meetingPassword,\n          processedMeeting.isMeetingSecret ?? this.meeting?.isMeetingSecret,\n        ),\n      },\n      patch,\n    );\n    this._comparePreferences();\n  }\n\n  protected _comparePreferences() {\n    this._updateIsPreferencesChanged(\n      comparePreferences(\n        this.transformedPreferences,\n        this.meeting as RcVMeetingModel,\n      ),\n    );\n  }\n\n  updateHasSettingsChanged(isChanged: boolean) {\n    this._updateHasSettingsChanged(isChanged);\n  }\n\n  protected async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._deps.alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const { errorCode, permissionName } = await errors.response\n        .clone()\n        .json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._deps.alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._deps.availabilityMonitor ||\n        !(await this._deps.availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._deps.alert.danger({\n          message: meetingStatus.internalError,\n        });\n      }\n    } else {\n      console.log('errors:', errors);\n      this._deps.alert.danger({ message: meetingStatus.internalError });\n    }\n  }\n\n  get personalMeeting(): Partial<RcVideoAPI> {\n    return this._enablePersonalMeeting ? this.personalVideo : null;\n  }\n\n  get savedDefaultVideoSetting(): Partial<RcVMeetingModel> {\n    return this._showSaveAsDefault ? this.savedDefaultSetting : null;\n  }\n\n  get country() {\n    return this._deps.extensionInfo.country;\n  }\n\n  @computed((that: RcVideo) => [that.currentUser])\n  get extensionName() {\n    let extensionName = this._deps.extensionInfo.info?.name;\n    if (this.currentUser?.extensionId !== `${this.extensionId}`) {\n      extensionName = this.currentUser?.name;\n    }\n    return extensionName;\n  }\n\n  get extensionId(): number {\n    return this._deps.extensionInfo.info.id;\n  }\n\n  get accountId(): number {\n    return this._deps.accountInfo.id;\n  }\n\n  get brandName(): string {\n    return this._deps.brand.name;\n  }\n\n  get isInitializing(): boolean {\n    return this.videoStatus === videoStatus.initializing;\n  }\n\n  get isScheduling(): boolean {\n    return this.videoStatus === videoStatus.creating;\n  }\n\n  get showSaveAsDefault(): boolean {\n    return this._showSaveAsDefault;\n  }\n\n  get enablePersonalMeeting(): boolean {\n    return this._enablePersonalMeeting;\n  }\n\n  get enableWaitingRoom(): boolean {\n    return this._enableWaitingRoom;\n  }\n\n  // will follow dynamic brand config\n  get enableE2EE() {\n    return this._deps.brand.brandConfig?.enableE2EE ?? this._enableE2EE;\n  }\n\n  get enableScheduleOnBehalf() {\n    return this._enableScheduleOnBehalf;\n  }\n\n  get isInstantMeeting(): boolean {\n    return this._isInstantMeeting;\n  }\n\n  @computed((that: RcVideo) => [that._deps.locale.currentLocale])\n  get currentLocale() {\n    return this._deps.locale.currentLocale || DEFAULT_LOCALE;\n  }\n\n  @computed(({ preferences, isInstantMeeting }: RcVideo) => [\n    preferences,\n    isInstantMeeting,\n  ])\n  get transformedPreferences(): RcVPreferences {\n    return transformPreferences(this.preferences, this.isInstantMeeting);\n  }\n\n  @computed(({ settingLocks, isInstantMeeting }: RcVideo) => [\n    settingLocks,\n    isInstantMeeting,\n  ])\n  get transformedSettingLocks(): RcVSettingLocks {\n    return transformSettingLocks(this.settingLocks, this.isInstantMeeting);\n  }\n\n  @computed(\n    ({\n      personalMeeting,\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    }: RcVideo) => [\n      personalMeeting,\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    ],\n  )\n  get personalVideoSetting() {\n    if (!this.personalMeeting) {\n      return null;\n    }\n    const processedSettings = {\n      ...this.initialVideoSetting,\n      ...this.personalMeeting,\n      ...getLockedPreferences(\n        this.transformedSettingLocks,\n        this.transformedPreferences,\n      ),\n      meetingPassword:\n        this.personalMeeting.meetingPassword || generateRandomPassword(10),\n      startTime: new Date(getInitializedStartTime()),\n      isMeetingPasswordValid: true, // assume personal meeting password is valid\n      id: this.personalMeeting.id,\n      usePersonalMeetingId: true,\n      settingLock: {\n        ...this.transformedSettingLocks,\n      },\n    } as RcVMeetingModel;\n    if (this.enableWaitingRoom) {\n      return {\n        ...processedSettings,\n        ...patchWaitingRoomRelated(\n          processedSettings,\n          this.transformedPreferences,\n        ),\n      };\n    }\n    return processedSettings;\n  }\n\n  @computed(\n    ({\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    }: RcVideo) => [\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    ],\n  )\n  get defaultVideoSetting(): RcVMeetingModel {\n    const savedSetting = this._showSaveAsDefault\n      ? this.savedDefaultVideoSetting\n      : null;\n    return {\n      ...this.initialVideoSetting,\n      ...savedSetting,\n      ...this.transformedPreferences,\n      meetingPassword: generateRandomPassword(10),\n      startTime: new Date(getInitializedStartTime()),\n      isMeetingPasswordValid: true, // generated random password is valid\n      id: null,\n      usePersonalMeetingId: false,\n      settingLock: {\n        ...this.transformedSettingLocks,\n      },\n    };\n  }\n\n  @computed(({ currentUser, defaultTopic }: RcVideo) => [\n    currentUser,\n    defaultTopic,\n  ])\n  get initialVideoSetting(): RcVMeetingModel {\n    return getDefaultVideoSettings({\n      topic: this.defaultTopic,\n      accountId: this.currentUser.accountId,\n      extensionId: this.currentUser.extensionId,\n    });\n  }\n\n  @computed((that: RcVideo) => [\n    that.currentUser,\n    that.extensionName,\n    that._deps.brand.shortName,\n    that._deps.brand.brandConfig.rcvMeetingTopic,\n  ])\n  get defaultTopic() {\n    return getTopic({\n      extensionName: this.extensionName,\n      brandName: this.brandName,\n      shortName: this._deps.brand.shortName,\n      rcvMeetingTopic: this._deps.brand.brandConfig.rcvMeetingTopic,\n    });\n  }\n\n  @computed(({ extensionId, accountId }: RcVideo) => [extensionId, accountId])\n  get loginUser(): RcvDelegator {\n    return {\n      name: ASSISTED_USERS_MYSELF,\n      id: `${this.extensionId}`,\n      extensionId: `${this.extensionId}`,\n      accountId: `${this.accountId}`,\n      isLoginUser: true,\n    };\n  }\n\n  @computed(({ delegator, loginUser }: RcVideo) => [delegator, loginUser])\n  get currentUser(): RcvDelegator {\n    return this.delegator || this.loginUser;\n  }\n}\n"],"file":"RcVideo.js"}