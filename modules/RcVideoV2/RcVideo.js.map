{"version":3,"sources":["modules/RcVideoV2/RcVideo.ts"],"names":["RcVideo","name","deps","dep","optional","that","status","videoStatus","creating","analytics","target","getTrackTarget","trackEvents","clickMeetingSchedulePage","router","_deps","locale","currentLocale","preferences","isInstantMeeting","settingLocks","personalMeeting","initialVideoSetting","transformedPreferences","transformedSettingLocks","currentUser","defaultTopic","extensionName","brandName","extensionId","accountId","delegator","loginUser","enableCache","storageKey","_showSaveAsDefault","_isInstantMeeting","_enableE2EE","_enableWaitingRoom","_enablePersonalMeeting","_enableScheduleOnBehalf","_enableHostCountryDialinNumbers","_enableReloadAfterSchedule","_enableInvitationApi","_currentLocale","_createMeetingPromise","rcVideoOptions","enableInvitationApi","showSaveAsDefault","enableE2EE","enableWaitingRoom","enablePersonalMeeting","enableScheduleOnBehalf","enableHostCountryDialinNumbers","enableReloadAfterSchedule","DEFAULT_LOCALE","settings","personalVideo","savedDefaultSetting","info","patch","meeting","videoConfiguration","isRCV","ready","isPreferencesChanged","delegatorList","delegators","isChanged","hasSettingsChanged","_initMeeting","_initDelegators","updateDelegator","onInit","usePersonalMeetingId","_initMeetingSettings","_updateDelegator","userExtensionId","length","user","Number","_updateVideoStatus","initializing","_initPersonalMeeting","_initPreferences","initialized","_getPreferences","password_instant","_updatePreference","_updateMeetingSettingLocks","console","log","client","service","platform","get","meetingResult","json","_savePersonalMeeting","error","_resetPersonalMeeting","_errorHandle","result","processedDelegators","unshift","_updateDelegatorList","allowJoinBeforeHost","isOnlyAuthUserJoin","isOnlyCoworkersJoin","allowScreenSharing","muteAudio","muteVideo","e2ee","isMeetingSecret","notShowAgain","waitingRoomMode","updateInfo","_saved","_saveDefaultVideoSetting","password","isSecret","isAlertSuccess","saveAsDefault","saveAsDefaultSetting","meetingDetail","condition","key","RCV_WAITING_ROOM_API_KEYS","RCV_E2EE_API_KEYS","post","newMeeting","updateMeetingSettings","_getDialinNumbers","dialInNumber","getExtensionInfo","extensionInfo","getMeetingInvitation","hostName","meetingName","meetingId","id","meetingUrl","joinUri","participantCode","mainPhoneNumber","meetingPassword","dialInPassword","meetingPasswordPSTN","premiumNumbers","invitationInfo","savePreferencesChanges","setTimeout","alert","success","message","meetingStatus","scheduledSuccess","created","_updateHasSettingsChanged","meetingResponse","idle","isScheduling","createMeetingDirectly","createMeeting","expiresIn","type","RcVideoTypes","invitationRequest","apiResponse","warn","phoneNumbers","Array","isArray","countryDialinNumbers","obj","country","isoCode","defaultPhoneNumber","phoneNumber","RCV_PREFERENCES_IDS","res","list","forEach","value","readOnly","account","extension","_updateMeetingPreferences","preferenceId","send","method","url","body","isOverwrite","preferencesPayload","dirtyPreferences","Object","entries","filter","kvPairs","newValue","oldValue","isLocked","Promise","all","map","_saveSinglePreference","shortId","updating","updatedSuccess","updated","personalVideoSetting","defaultVideoSetting","processedMeeting","_updateMeetingSettings","isMeetingPasswordValid","validatePasswordSettings","_comparePreferences","_updateIsPreferencesChanged","errors","MeetingErrors","warning","response","clone","errorCode","permissionName","danger","insufficientPermissions","payload","availabilityMonitor","checkIfHAError","internalError","accountInfo","brand","processedSettings","startTime","Date","settingLock","savedSetting","savedDefaultVideoSetting","topic","shortName","fullName","brandCode","code","ASSISTED_USERS_MYSELF","isLoginUser","dynamicConfig","rcvUriRegExp","RcModuleV2","storage","state","action","proxify","background"],"mappings":"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","sourcesContent":["import {\n  state,\n  action,\n  computed,\n  RcModuleV2,\n  storage,\n  track,\n} from '@ringcentral-integration/core';\nimport { ObjectMapValue } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { filter, find } from 'ramda';\nimport { DEFAULT_LOCALE } from '@ringcentral-integration/i18n';\nimport { Module } from '../../lib/di';\nimport { Deps, RcvDelegator, RcVideoResponse } from './RcVideo.interface';\nimport background from '../../lib/background';\nimport { proxify } from '../../lib/proxy/proxify';\nimport meetingStatus from '../Meeting/meetingStatus';\nimport { videoStatus } from './videoStatus';\nimport { MeetingErrors } from '../Meeting';\nimport {\n  ASSISTED_USERS_MYSELF,\n  RcvWaitingRoomModeProps,\n  RCV_WAITING_ROOM_API_KEYS,\n  RCV_E2EE_API_KEYS,\n} from './constants';\nimport { getInitializedStartTime } from '../../helpers/meetingHelper';\nimport {\n  getDefaultVideoSettings,\n  validatePasswordSettings,\n  generateRandomPassword,\n  getTopic,\n  pruneMeetingObject,\n  RcVideoTypes,\n  transformPreferences,\n  reversePreferences,\n  comparePreferences,\n  transformSettingLocks,\n  getLockedPreferences,\n  RCV_PREFERENCES_IDS,\n  patchWaitingRoomRelated,\n  assignObject,\n  formatPremiumNumbers,\n  formatMainPhoneNumber,\n} from './videoHelper';\nimport {\n  RcVideoAPI,\n  RcVMeetingModel,\n  RcVSettingLocks,\n  RcVPreferencesGET,\n  RcVSettingLocksGET,\n  RcVPreferences,\n  RcVDialInNumberGET,\n  RcVPreferencesAPIResult,\n  RcVPreferenceDataItem,\n  RcVDialInNumberObj,\n  RcvInvitationInfo,\n  RcvInvitationRequest,\n} from '../../interfaces/Rcv.model';\nimport { IMeeting } from '../../interfaces/Meeting.interface';\nimport { trackEvents } from '../Analytics';\n\n@Module({\n  name: 'RcVideo',\n  deps: [\n    'Alert',\n    'Client',\n    'Brand',\n    'Storage',\n    'AccountInfo',\n    'ExtensionInfo',\n    'VideoConfiguration',\n    'Locale',\n    { dep: 'DynamicConfig', optional: true },\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'RcVideoOptions', optional: true },\n  ],\n})\nexport class RcVideo extends RcModuleV2<Deps> implements IMeeting {\n  protected _showSaveAsDefault: boolean;\n  protected _isInstantMeeting: boolean;\n  protected _enableE2EE: boolean;\n  protected _enableWaitingRoom: boolean;\n  protected _enablePersonalMeeting: boolean;\n  protected _enableScheduleOnBehalf: boolean;\n  protected _enableHostCountryDialinNumbers: boolean;\n  protected _enableReloadAfterSchedule: boolean;\n  protected _enableInvitationApi: boolean;\n  protected _currentLocale: string;\n  private _createMeetingPromise: any = null;\n\n  constructor(deps: Deps) {\n    super({\n      enableCache: true,\n      storageKey: 'RcVideo',\n      deps,\n    });\n\n    this._enableInvitationApi =\n      this._deps.rcVideoOptions?.enableInvitationApi ?? false;\n    this._showSaveAsDefault =\n      this._deps.rcVideoOptions?.showSaveAsDefault ?? false;\n    this._isInstantMeeting =\n      this._deps.rcVideoOptions?.isInstantMeeting ?? false;\n    this._enableE2EE = this._deps.rcVideoOptions?.enableE2EE ?? false;\n    this._enableWaitingRoom =\n      this._deps.rcVideoOptions?.enableWaitingRoom ?? false;\n    this._enablePersonalMeeting =\n      this._deps.rcVideoOptions?.enablePersonalMeeting ?? false;\n    this._enableScheduleOnBehalf =\n      this._deps.rcVideoOptions?.enableScheduleOnBehalf ?? false;\n    this._enableHostCountryDialinNumbers =\n      this._deps.rcVideoOptions?.enableHostCountryDialinNumbers ?? false;\n    this._enableReloadAfterSchedule =\n      this._deps.rcVideoOptions?.enableReloadAfterSchedule ?? true;\n    this._currentLocale = this._deps.locale?.currentLocale ?? DEFAULT_LOCALE;\n  }\n\n  @storage\n  @state\n  personalVideo: Partial<RcVideoAPI> = null;\n\n  // when migrate to rcv v2, computed defaultVideoSetting has conflict with storage key 'defaultVideoSetting'\n  // rcv save as default toggle has not opened yet, so change the key into 'savedDefaultSetting'\n  @storage\n  @state\n  savedDefaultSetting: Partial<RcVMeetingModel> = {};\n\n  @state\n  meeting: Partial<RcVMeetingModel> = null;\n\n  @state\n  videoStatus: ObjectMapValue<typeof videoStatus> = videoStatus.idle;\n\n  @state\n  preferences: RcVPreferencesGET = {};\n\n  @state\n  isPreferencesChanged: boolean = false;\n\n  @state\n  settingLocks: RcVSettingLocksGET = {};\n\n  @state\n  delegator: RcvDelegator = null;\n\n  @state\n  delegators: RcvDelegator[] = [];\n\n  @state\n  hasSettingsChanged: boolean = false;\n\n  @action\n  protected _savePersonalMeeting(settings: Partial<RcVideoAPI>) {\n    this.personalVideo = {\n      ...this.personalVideo,\n      ...settings,\n    };\n  }\n\n  @action\n  protected _resetPersonalMeeting() {\n    this.personalVideo = {};\n  }\n\n  @action\n  protected _saveDefaultVideoSetting(settings: Partial<RcVMeetingModel>) {\n    this.savedDefaultSetting = {\n      ...this.savedDefaultSetting,\n      ...settings,\n    };\n  }\n\n  @action\n  protected _updateMeetingSettings(\n    info: Partial<RcVMeetingModel>,\n    patch: boolean = true,\n  ) {\n    this.meeting = patch\n      ? {\n          ...this.meeting,\n          ...info,\n        }\n      : (info as RcVMeetingModel);\n  }\n\n  _shouldInit() {\n    return super._shouldInit() && this._deps.videoConfiguration.isRCV;\n  }\n\n  _shouldReset() {\n    return (\n      super._shouldReset() ||\n      (this.ready && !this._deps.videoConfiguration.isRCV)\n    );\n  }\n\n  @track((that: RcVideo, status: string) => {\n    if (status !== videoStatus.creating) return;\n    return (analytics) => {\n      const target = analytics.getTrackTarget();\n      if (target) {\n        return [\n          trackEvents.clickMeetingSchedulePage,\n          { router: target.router, 'Meeting Type': 'RCV' },\n        ];\n      }\n    };\n  })\n  @action\n  protected _updateVideoStatus(status: ObjectMapValue<typeof videoStatus>) {\n    this.videoStatus = status;\n  }\n\n  @action\n  protected _updateMeetingPreferences(preferences: RcVPreferencesGET) {\n    this.preferences = preferences;\n  }\n\n  @action\n  protected _updateIsPreferencesChanged(isPreferencesChanged: boolean) {\n    this.isPreferencesChanged = isPreferencesChanged;\n  }\n\n  @action\n  protected _updateMeetingSettingLocks(settingLocks: RcVSettingLocksGET) {\n    this.settingLocks = settingLocks;\n  }\n\n  @action\n  protected _updateDelegator(delegator: RcvDelegator) {\n    this.delegator = delegator;\n  }\n\n  @action\n  protected _updateDelegatorList(delegatorList: RcvDelegator[]) {\n    this.delegators = delegatorList;\n  }\n\n  @action\n  protected _updateHasSettingsChanged(isChanged: boolean) {\n    this.hasSettingsChanged = isChanged;\n  }\n\n  @proxify\n  async onInit() {\n    await this._initMeeting();\n    if (this._enableScheduleOnBehalf) {\n      await this._initDelegators();\n      this.updateDelegator(this.loginUser);\n    }\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting setting from previous one.\n   */\n  @background\n  async init() {\n    await this.onInit();\n  }\n\n  @proxify\n  async reload() {\n    await this.onInit();\n  }\n\n  @proxify\n  async switchUsePersonalMeetingId(usePersonalMeetingId: boolean) {\n    this._initMeetingSettings(usePersonalMeetingId);\n  }\n\n  @proxify\n  async updateDelegator(delegator: RcvDelegator) {\n    this._updateDelegator(delegator);\n  }\n\n  @proxify\n  async updateScheduleFor(userExtensionId: string) {\n    if (!userExtensionId || !this.delegators || this.delegators.length === 0) {\n      return;\n    }\n\n    const delegator: RcvDelegator = find(\n      (user: RcvDelegator) => user.extensionId === userExtensionId,\n      this.delegators,\n    );\n\n    if (!delegator) {\n      return;\n    }\n\n    this.updateDelegator(delegator);\n\n    await this._initMeeting(Number(delegator.extensionId));\n  }\n\n  protected async _initMeeting(extensionId = this.extensionId) {\n    this._updateVideoStatus(videoStatus.initializing);\n\n    if (this._enablePersonalMeeting) {\n      await this._initPersonalMeeting(this.accountId, extensionId);\n    }\n    await this._initPreferences(this.accountId, extensionId);\n\n    this._initMeetingSettings(false);\n\n    this._updateVideoStatus(videoStatus.initialized);\n  }\n\n  async _initPreferences(\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ) {\n    try {\n      const { preferences, settingLocks } = await this._getPreferences(\n        accountId,\n        extensionId,\n      );\n      // TODO Remove the next line after rcv implement ui to manage password_instant\n      preferences.password_instant = false;\n\n      this._updatePreference(preferences);\n      this._updateMeetingSettingLocks(settingLocks);\n    } catch (errors) {\n      console.log('preference error:', errors);\n      // this._errorHandle(errors);\n    }\n  }\n\n  async _initPersonalMeeting(\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ) {\n    try {\n      const meetingResult = await this._deps.client.service\n        .platform()\n        .get('/rcvideo/v1/bridges', {\n          default: true,\n          accountId,\n          extensionId,\n        });\n      const meeting = (await meetingResult.json()) as RcVideoAPI;\n      this._savePersonalMeeting(meeting);\n    } catch (errors) {\n      console.error('fetch personal meeting error:', errors);\n      this._resetPersonalMeeting();\n      this._errorHandle(errors);\n    }\n  }\n\n  protected async _initDelegators() {\n    try {\n      const result = await this._deps.client.service\n        .platform()\n        .get('/rcvideo/v1/accounts/~/extensions/~/delegators');\n      const delegators = (await result.json()) as RcvDelegator[];\n      // to make sure it will equal to v1\n      const processedDelegators = delegators;\n      if (processedDelegators.length) {\n        processedDelegators.unshift(this.loginUser);\n      }\n      this._updateDelegatorList(processedDelegators);\n    } catch (errors) {\n      this._errorHandle(errors);\n    }\n  }\n\n  saveAsDefaultSetting(meeting: RcVMeetingModel) {\n    const {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      e2ee,\n      isMeetingSecret,\n      notShowAgain,\n      waitingRoomMode,\n    } = meeting;\n    const updateInfo: {\n      allowJoinBeforeHost: boolean;\n      isOnlyAuthUserJoin: boolean;\n      isOnlyCoworkersJoin: boolean;\n      allowScreenSharing: boolean;\n      muteAudio: boolean;\n      muteVideo: boolean;\n      e2ee: boolean;\n      isMeetingSecret: boolean;\n      waitingRoomMode: RcvWaitingRoomModeProps;\n      _saved?: boolean;\n    } = {\n      allowJoinBeforeHost,\n      isOnlyAuthUserJoin,\n      isOnlyCoworkersJoin,\n      allowScreenSharing,\n      muteAudio,\n      muteVideo,\n      isMeetingSecret,\n      waitingRoomMode,\n      e2ee,\n    };\n    if (notShowAgain) {\n      updateInfo._saved = notShowAgain;\n    }\n\n    this._saveDefaultVideoSetting(updateInfo);\n  }\n\n  validatePasswordSettings(password: string, isSecret: boolean): boolean {\n    return validatePasswordSettings(password, isSecret);\n  }\n\n  @proxify\n  async createMeetingDirectly(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this._updateVideoStatus(videoStatus.creating);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      const meetingDetail = pruneMeetingObject(meeting, [\n        {\n          condition: this.enableWaitingRoom,\n          key: RCV_WAITING_ROOM_API_KEYS,\n        },\n        {\n          condition: this.enableE2EE && !meeting.usePersonalMeetingId,\n          key: RCV_E2EE_API_KEYS,\n        },\n      ]);\n\n      const result = await this._deps.client.service\n        .platform()\n        .post('/rcvideo/v1/bridges', meetingDetail);\n\n      const newMeeting = await result.json();\n\n      this.updateMeetingSettings({\n        ...meeting,\n        saveAsDefault: false,\n      });\n\n      // After Create\n      const dialInNumber = await this._getDialinNumbers();\n      const extensionInfo = await this.getExtensionInfo(\n        this.currentUser.extensionId,\n      );\n\n      const invitationInfo = await this.getMeetingInvitation({\n        hostName: extensionInfo.name,\n        meetingName: newMeeting.name,\n        meetingId: newMeeting.id,\n        meetingUrl: newMeeting.joinUri,\n        participantCode: newMeeting.participantCode,\n        mainPhoneNumber: formatMainPhoneNumber(dialInNumber),\n        password: newMeeting.meetingPassword,\n        dialInPassword: newMeeting.meetingPasswordPSTN,\n        premiumNumbers: formatPremiumNumbers(dialInNumber),\n      });\n\n      // sync preferences changes to rcv backend\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting);\n      }\n      // this will also fetch preference from rcv backend\n      if (this._enableReloadAfterSchedule) {\n        await this._initMeeting(Number(this.currentUser.extensionId));\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._deps.alert.success({\n            message: meetingStatus.scheduledSuccess,\n          });\n        }, 50);\n      }\n\n      this._updateVideoStatus(videoStatus.created);\n      this._updateHasSettingsChanged(false);\n\n      const meetingResponse = {\n        invitationInfo,\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      };\n\n      return {\n        ...meetingResponse,\n        ...meeting,\n      };\n    } catch (errors) {\n      console.log('failed to create rcv:', errors);\n      this._updateVideoStatus(videoStatus.idle);\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  @proxify\n  async createMeeting(\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = true }: { isAlertSuccess?: boolean } = {},\n  ) {\n    if (this.isScheduling) return this._createMeetingPromise;\n\n    this._createMeetingPromise = this.createMeetingDirectly(meeting, {\n      isAlertSuccess,\n    });\n    const result = await this._createMeetingPromise;\n    this._createMeetingPromise = null;\n    return result;\n  }\n\n  async startMeeting(\n    meeting: RcVMeetingModel,\n    isAlertSuccess: boolean = true,\n  ): Promise<any> {\n    // When user click on button \"start\", client create bridge type=0, but doesn't send time-to-life for this bridge. Backend has default ttl = 24 hours.\n    return this.createMeeting(\n      {\n        ...meeting,\n        expiresIn: null,\n        type: RcVideoTypes.meeting,\n      },\n      { isAlertSuccess },\n    );\n  }\n\n  @proxify\n  async getMeetingInvitation(\n    invitationRequest: RcvInvitationRequest,\n  ): Promise<RcvInvitationInfo> {\n    if (!this._enableInvitationApi) {\n      return null;\n    }\n\n    try {\n      const apiResponse = await this._deps.client.service\n        .platform()\n        .post('/rcvideo/v1/invitations/render', invitationRequest);\n      return await apiResponse.json();\n    } catch (ex) {\n      console.warn('failed to get invitation', ex);\n      return null;\n    }\n  }\n\n  @proxify\n  protected async _getDialinNumbers(): Promise<string | RcVDialInNumberObj[]> {\n    const result = await this._deps.client.service\n      .platform()\n      .get('/rcvideo/v1/dial-in-numbers');\n    const { phoneNumbers } = (await result.json()) as RcVDialInNumberGET;\n    if (Array.isArray(phoneNumbers)) {\n      if (this._enableHostCountryDialinNumbers) {\n        const countryDialinNumbers = filter(\n          (obj) => obj?.country?.isoCode === this.country.isoCode,\n          phoneNumbers,\n        );\n        if (countryDialinNumbers.length > 0) {\n          return countryDialinNumbers;\n        }\n      }\n\n      const defaultPhoneNumber = find((obj) => obj.default, phoneNumbers);\n      if (defaultPhoneNumber) {\n        return defaultPhoneNumber.phoneNumber;\n      }\n    }\n    return [];\n  }\n\n  protected async _getPreferences(\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ): Promise<RcVPreferencesAPIResult> {\n    const res = await this._deps.client.service\n      .platform()\n      .get(\n        `/rcvideo/v1/account/${accountId}/extension/${extensionId}/preferences`,\n        {\n          id: RCV_PREFERENCES_IDS,\n        },\n      );\n    const list: Array<RcVPreferenceDataItem> = await res.json();\n    const preferences: RcVPreferencesGET = {};\n    const settingLocks: RcVSettingLocksGET = {};\n\n    list.forEach(({ id, value, readOnly }) => {\n      assignObject(preferences, value, id);\n      assignObject(settingLocks, readOnly, id);\n    });\n    return { preferences, settingLocks };\n  }\n\n  @proxify\n  async getExtensionInfo(extensionId: string) {\n    if (Number(extensionId) === this.extensionId) {\n      return this._deps.extensionInfo.info;\n    }\n    return this._deps.client.account().extension(extensionId).get();\n  }\n\n  protected _updatePreference(preferences: Partial<RcVPreferencesGET>) {\n    this._updateMeetingPreferences(preferences);\n  }\n\n  protected async _saveSinglePreference(\n    preferenceId: keyof RcVPreferencesGET,\n    value: boolean,\n  ): Promise<void> {\n    return this._deps.client.service.platform().send({\n      method: 'PATCH',\n      url: `/rcvideo/v1/account/~/extension/~/preferences/${preferenceId}`,\n      body: { value },\n    });\n  }\n\n  /**\n   * Determined the different between client and server, then save them to the server.\n   * @param preferences preference fileds in meeting object\n   * @param isOverwrite if true, dispatch updateMeetingPreferences on success\n   */\n  async savePreferencesChanges(\n    preferences: RcVPreferences,\n    isOverwrite = false,\n  ): Promise<void> {\n    const preferencesPayload = reversePreferences(\n      preferences,\n      this._isInstantMeeting,\n    );\n    type PreferenceEntries = [keyof RcVPreferencesGET, boolean];\n    const dirtyPreferences = Object.entries(preferencesPayload).filter(\n      (kvPairs): kvPairs is PreferenceEntries => {\n        const [preferenceId, newValue] = kvPairs as PreferenceEntries;\n        const oldValue = this.preferences[preferenceId];\n        const isLocked = this.settingLocks[preferenceId];\n        // hack for watingRoom, it will change locked option\n        return newValue !== oldValue && !isLocked;\n      },\n    );\n    try {\n      await Promise.all(\n        dirtyPreferences.map(([preferenceId, newValue]: PreferenceEntries) => {\n          return this._saveSinglePreference(preferenceId, newValue);\n        }),\n      );\n      if (isOverwrite) {\n        this._updatePreference(preferencesPayload);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async getMeeting(\n    meetingId: string,\n    accountId: number = this.accountId,\n    extensionId: number = this.extensionId,\n  ): Promise<RcVideoAPI> {\n    const result = await this._deps.client.service\n      .platform()\n      .get('/rcvideo/v1/bridges', {\n        shortId: meetingId,\n        accountId,\n        extensionId,\n      });\n    const meeting = (await result.json()) as RcVideoAPI;\n    return meeting;\n  }\n\n  @proxify\n  async updateMeeting(\n    meetingId: string,\n    meeting: RcVMeetingModel,\n    { isAlertSuccess = false }: { isAlertSuccess?: boolean } = {},\n  ) {\n    try {\n      this._updateVideoStatus(videoStatus.updating);\n\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this.saveAsDefaultSetting(meeting);\n      }\n\n      const meetingDetail = pruneMeetingObject(meeting, [\n        {\n          condition: this.enableWaitingRoom,\n          key: RCV_WAITING_ROOM_API_KEYS,\n        },\n        {\n          condition: this.enableE2EE && !meeting.usePersonalMeetingId,\n          key: RCV_E2EE_API_KEYS,\n        },\n      ]);\n\n      const meetingResult = await this._deps.client.service.platform().send({\n        method: 'PATCH',\n        url: `/rcvideo/v1/bridges/${meeting.id}`,\n        body: meetingDetail,\n      });\n      const newMeeting = await meetingResult.json();\n\n      // After Update\n      const dialInNumber = await this._getDialinNumbers();\n      const extensionInfo = await this.getExtensionInfo(\n        this.currentUser.extensionId,\n      );\n\n      const invitationInfo = await this.getMeetingInvitation({\n        hostName: extensionInfo.name,\n        meetingName: newMeeting.name,\n        meetingId: newMeeting.id,\n        meetingUrl: newMeeting.joinUri,\n        participantCode: newMeeting.participantCode,\n        mainPhoneNumber: formatMainPhoneNumber(dialInNumber),\n        password: newMeeting.meetingPassword,\n        dialInPassword: newMeeting.meetingPasswordPSTN,\n        premiumNumbers: formatPremiumNumbers(dialInNumber),\n      });\n\n      if (meeting.saveAsDefault) {\n        await this.savePreferencesChanges(meeting, true);\n      }\n\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._deps.alert.success({\n            message: meetingStatus.updatedSuccess,\n          });\n        }, 50);\n      }\n\n      this._updateVideoStatus(videoStatus.updated);\n      this._updateHasSettingsChanged(false);\n\n      if (this.personalMeeting && newMeeting.id === this.personalMeeting.id) {\n        this._savePersonalMeeting(newMeeting);\n      }\n\n      const meetingResponse = {\n        invitationInfo,\n        extensionInfo,\n        dialInNumber,\n        meeting: { ...meeting, ...newMeeting },\n      } as RcVideoResponse;\n\n      return meetingResponse;\n    } catch (errors) {\n      this._updateVideoStatus(videoStatus.idle);\n      this._errorHandle(errors);\n      return null;\n    }\n  }\n\n  protected _initMeetingSettings(usePersonalMeetingId: boolean) {\n    if (usePersonalMeetingId) {\n      this.updateMeetingSettings({\n        ...this.personalVideoSetting,\n      });\n    } else {\n      this.updateMeetingSettings({\n        ...this.defaultVideoSetting,\n      });\n    }\n  }\n\n  @proxify\n  async updateMeetingSettings(\n    meeting: Partial<RcVMeetingModel>,\n    patch: boolean = true,\n  ) {\n    let processedMeeting = meeting;\n    if (this.enableWaitingRoom) {\n      processedMeeting = {\n        ...processedMeeting,\n        ...patchWaitingRoomRelated(\n          {\n            ...this.meeting,\n            ...processedMeeting,\n          } as RcVMeetingModel,\n          this.transformedPreferences,\n          true,\n        ),\n      };\n    }\n    this._updateMeetingSettings(\n      {\n        ...processedMeeting,\n        isMeetingPasswordValid: this.validatePasswordSettings(\n          processedMeeting.meetingPassword ?? this.meeting?.meetingPassword,\n          processedMeeting.isMeetingSecret ?? this.meeting?.isMeetingSecret,\n        ),\n      },\n      patch,\n    );\n    this._comparePreferences();\n  }\n\n  protected _comparePreferences() {\n    this._updateIsPreferencesChanged(\n      comparePreferences(\n        this.transformedPreferences,\n        this.meeting as RcVMeetingModel,\n      ),\n    );\n  }\n\n  updateHasSettingsChanged(isChanged: boolean) {\n    this._updateHasSettingsChanged(isChanged);\n  }\n\n  protected async _errorHandle(errors: any) {\n    if (errors instanceof MeetingErrors) {\n      for (const error of errors.all) {\n        this._deps.alert.warning(error);\n      }\n    } else if (errors && errors.response) {\n      const {\n        errorCode,\n        permissionName,\n      } = await errors.response.clone().json();\n      if (errorCode === 'InsufficientPermissions' && permissionName) {\n        this._deps.alert.danger({\n          message: meetingStatus.insufficientPermissions,\n          payload: {\n            permissionName,\n          },\n        });\n      } else if (\n        !this._deps.availabilityMonitor ||\n        !(await this._deps.availabilityMonitor.checkIfHAError(errors))\n      ) {\n        this._deps.alert.danger({\n          message: meetingStatus.internalError,\n        });\n      }\n    } else {\n      console.log('errors:', errors);\n      this._deps.alert.danger({ message: meetingStatus.internalError });\n    }\n  }\n\n  get personalMeeting(): Partial<RcVideoAPI> {\n    return this._enablePersonalMeeting ? this.personalVideo : null;\n  }\n\n  get savedDefaultVideoSetting(): Partial<RcVMeetingModel> {\n    return this._showSaveAsDefault ? this.savedDefaultSetting : null;\n  }\n\n  get country() {\n    return this._deps.extensionInfo.country;\n  }\n\n  get extensionName(): string {\n    return this._deps.extensionInfo.info?.name;\n  }\n\n  get extensionId(): number {\n    return this._deps.extensionInfo.info.id;\n  }\n\n  get accountId(): number {\n    return this._deps.accountInfo.id;\n  }\n\n  get brandName(): string {\n    return this._deps.brand.name;\n  }\n\n  get isInitializing(): boolean {\n    return this.videoStatus === videoStatus.initializing;\n  }\n\n  get isScheduling(): boolean {\n    return this.videoStatus === videoStatus.creating;\n  }\n\n  get showSaveAsDefault(): boolean {\n    return this._showSaveAsDefault;\n  }\n\n  get enablePersonalMeeting(): boolean {\n    return this._enablePersonalMeeting;\n  }\n\n  get enableWaitingRoom(): boolean {\n    return this._enableWaitingRoom;\n  }\n\n  get enableE2EE(): boolean {\n    return this._enableE2EE;\n  }\n\n  get enableScheduleOnBehalf() {\n    return this._enableScheduleOnBehalf;\n  }\n\n  get isInstantMeeting(): boolean {\n    return this._isInstantMeeting;\n  }\n\n  @computed((that: RcVideo) => [that._deps.locale.currentLocale])\n  get currentLocale() {\n    return this._deps.locale.currentLocale || DEFAULT_LOCALE;\n  }\n\n  @computed(({ preferences, isInstantMeeting }: RcVideo) => [\n    preferences,\n    isInstantMeeting,\n  ])\n  get transformedPreferences(): RcVPreferences {\n    return transformPreferences(this.preferences, this.isInstantMeeting);\n  }\n\n  @computed(({ settingLocks, isInstantMeeting }: RcVideo) => [\n    settingLocks,\n    isInstantMeeting,\n  ])\n  get transformedSettingLocks(): RcVSettingLocks {\n    return transformSettingLocks(this.settingLocks, this.isInstantMeeting);\n  }\n\n  @computed(\n    ({\n      personalMeeting,\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    }: RcVideo) => [\n      personalMeeting,\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    ],\n  )\n  get personalVideoSetting() {\n    if (!this.personalMeeting) {\n      return null;\n    }\n    const processedSettings = {\n      ...this.initialVideoSetting,\n      ...this.personalMeeting,\n      ...getLockedPreferences(\n        this.transformedSettingLocks,\n        this.transformedPreferences,\n      ),\n      meetingPassword:\n        this.personalMeeting.meetingPassword || generateRandomPassword(10),\n      startTime: new Date(getInitializedStartTime()),\n      isMeetingPasswordValid: true, // assume personal meeting password is valid\n      id: this.personalMeeting.id,\n      usePersonalMeetingId: true,\n      settingLock: {\n        ...this.transformedSettingLocks,\n      },\n    } as RcVMeetingModel;\n    if (this.enableWaitingRoom) {\n      return {\n        ...processedSettings,\n        ...patchWaitingRoomRelated(\n          processedSettings,\n          this.transformedPreferences,\n        ),\n      };\n    }\n    return processedSettings;\n  }\n\n  @computed(\n    ({\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    }: RcVideo) => [\n      initialVideoSetting,\n      transformedPreferences,\n      transformedSettingLocks,\n    ],\n  )\n  get defaultVideoSetting(): RcVMeetingModel {\n    const savedSetting = this._showSaveAsDefault\n      ? this.savedDefaultVideoSetting\n      : null;\n    return {\n      ...this.initialVideoSetting,\n      ...savedSetting,\n      ...this.transformedPreferences,\n      meetingPassword: generateRandomPassword(10),\n      startTime: new Date(getInitializedStartTime()),\n      isMeetingPasswordValid: true, // generated random password is valid\n      id: null,\n      usePersonalMeetingId: false,\n      settingLock: {\n        ...this.transformedSettingLocks,\n      },\n    };\n  }\n\n  @computed(({ currentUser, defaultTopic }: RcVideo) => [\n    currentUser,\n    defaultTopic,\n  ])\n  get initialVideoSetting(): RcVMeetingModel {\n    return getDefaultVideoSettings({\n      topic: this.defaultTopic,\n      accountId: this.currentUser.accountId,\n      extensionId: this.currentUser.extensionId,\n    });\n  }\n\n  @computed(\n    ({ currentUser, extensionName, brandName, currentLocale }: RcVideo) => [\n      currentUser,\n      extensionName,\n      brandName,\n      currentLocale,\n    ],\n  )\n  get defaultTopic(): string {\n    let extensionName = this.extensionName;\n    if (this.currentUser?.extensionId !== `${this.extensionId}`) {\n      extensionName = this.currentUser?.name;\n    }\n    return getTopic({\n      extensionName,\n      brandName: this.brandName,\n      shortName: this._deps.brand.shortName,\n      fullName: this._deps.brand.fullName,\n      brandCode: this._deps.brand.code,\n      currentLocale: this.currentLocale,\n    });\n  }\n\n  @computed(({ extensionId, accountId }: RcVideo) => [extensionId, accountId])\n  get loginUser(): RcvDelegator {\n    return {\n      name: ASSISTED_USERS_MYSELF,\n      id: `${this.extensionId}`,\n      extensionId: `${this.extensionId}`,\n      accountId: `${this.accountId}`,\n      isLoginUser: true,\n    };\n  }\n\n  @computed(({ delegator, loginUser }: RcVideo) => [delegator, loginUser])\n  get currentUser(): RcvDelegator {\n    return this.delegator || this.loginUser;\n  }\n\n  get uriRegExp() {\n    return this._deps.dynamicConfig?.rcvUriRegExp;\n  }\n}\n"],"file":"RcVideo.js"}