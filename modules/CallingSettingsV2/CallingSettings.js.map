{"version":3,"sources":["modules/CallingSettingsV2/CallingSettings.ts"],"names":["LOCATION_NUMBER_ORDER","BLOCKED_ID_VALUE","CallingSettings","name","deps","dep","optional","that","_deps","extensionPhoneNumber","directNumbers","mainCompanyNumber","extensionInfo","extensionNumber","forwardingNumber","flipNumbers","callerIdNumbers","appFeatures","isRingOutEnabled","isWebPhoneEnabled","otherPhoneNumbers","length","numbers","myPhoneNumbers","availableNumbers","enableCache","storageKey","_myPhoneNumbers","_onFirstLogin","_ringoutEnabled","_otherPhoneNumbers","_webphoneEnabled","initRingoutPrompt","_blockedIdDisabled","_showCallWithJupiter","_emergencyCallAvailable","_availableNumbers","callingSettingsOptions","onFirstLogin","defaultRingoutPrompt","showCallWithJupiter","emergencyCallAvailable","storage","migrationMapping","callWith","ringoutPrompt","myLocation","timestamp","isCustomLocation","data","number","fromNumber","phoneNumber","_updateFromNumber","_shouldReset","_shouldInit","_shouldValidate","isBlockedIdDisabled","_validateSettings","ready","_init","resetSuccess","defaultCallWith","callWithOptions","setDataAction","Date","now","_warningEmergencyCallingNotAvailable","isCallingEnabled","_handleFirstTimeLogin","deprecatedCallingOptions","myphone","otherphone","customphone","callingOptions","ringout","_initFromNumber","browser","alert","info","message","callingSettingsMessages","emergencyCallingNotAvailable","ttl","_hasWebphonePermissionRemoved","isSoftphoneEnabled","_setSoftPhoneToCallWith","danger","webphonePermissionRemoved","_hasPermissionChanged","permissionChanged","_hasPhoneNumberChanged","phoneNumberChanged","softphone","webphone","indexOf","devices","extensionDevice","mainPhoneNumber","registeredWithDevice","forEach","device","phoneLines","find","phoneLine","phoneInfo","isFlipNumber","flipNumber","label","defaultCallerId","fromNumbers","callerId","ringOut","type","defaultPhoneNumber","defaultEntry","item","updateFromNumber","withPrompt","saveSuccessWithSoftphone","jupiter","saveSuccessWithJupiter","saveSuccess","map","push","filterMapping","filter","sort","a","b","hasExtensionPhoneNumber","brand","isRingCentralAppEnabled","sortedPhoneNumbers","firstItem","lastItem","usageType","concat","result","locationLabel","_getLocationLabel","value","callingMode","callingModes","driver","jupiterAppName","extensionFeatures","features","BlockingCallerId","available","RcModuleV2","state","action","proxify"],"mappings":"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","sourcesContent":["import {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport { callingModes } from './callingModes';\nimport { callingOptions, CallingOptionsType } from './callingOptions';\nimport { Deps } from './CallingSettings.interface';\nimport { callingSettingsMessages } from './callingSettingsMessages';\nimport { deprecatedCallingOptions } from './deprecatedCallingOptions';\nimport { mapOptionToMode } from './mapOptionToMode';\n\nconst LOCATION_NUMBER_ORDER = ['Other', 'Main'];\nexport const BLOCKED_ID_VALUE = 'anonymous';\n/**\n * @class\n * @description Call setting managing module\n */\n@Module({\n  name: 'CallingSettings',\n  deps: [\n    'Alert',\n    'Brand',\n    'Storage',\n    'ExtensionInfo',\n    'ExtensionDevice',\n    'ForwardingNumber',\n    'AppFeatures',\n    'ExtensionFeatures',\n    'ExtensionPhoneNumber',\n    { dep: 'CallerId', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'Softphone', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'CallingSettingsOptions', optional: true },\n  ],\n})\nclass CallingSettings extends RcModuleV2<Deps> {\n  _myPhoneNumbers: string[];\n  _onFirstLogin?: () => {};\n  _ringoutEnabled: boolean;\n  _otherPhoneNumbers: string[];\n  _webphoneEnabled: boolean;\n  initRingoutPrompt?: boolean;\n  _blockedIdDisabled: boolean;\n  _showCallWithJupiter?: boolean;\n  _emergencyCallAvailable?: boolean;\n  _availableNumbers: string[];\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'CallingSettings',\n    });\n    this._onFirstLogin = this._deps.callingSettingsOptions?.onFirstLogin;\n    this.initRingoutPrompt = this._deps.callingSettingsOptions?.defaultRingoutPrompt;\n    this._showCallWithJupiter =\n      this._deps.callingSettingsOptions?.showCallWithJupiter ?? true;\n    this._emergencyCallAvailable =\n      this._deps.callingSettingsOptions?.emergencyCallAvailable ?? false;\n    /* migration storage v1 to v2 */\n    if (this._deps.storage) {\n      this._deps.storage.migrationMapping =\n        this._deps.storage.migrationMapping ?? {};\n      this._deps.storage.migrationMapping['CallingSettings-data'] =\n        'callingSettingsData';\n    }\n    /* migration storage v1 to v2 */\n  }\n\n  get callWith() {\n    return this.data.callWith;\n  }\n\n  get ringoutPrompt() {\n    return this.data.ringoutPrompt;\n  }\n\n  get myLocation() {\n    return this.data.myLocation;\n  }\n\n  get fromNumber() {\n    return this.data.fromNumber;\n  }\n\n  get timestamp() {\n    return this.data.timestamp;\n  }\n\n  get isCustomLocation() {\n    return this.data.isCustomLocation;\n  }\n\n  @storage\n  @state\n  data: {\n    callWith: string;\n    ringoutPrompt: boolean;\n    myLocation: string;\n    fromNumber: string;\n    timestamp: number;\n    isCustomLocation: boolean;\n  } = {\n    callWith: null,\n    ringoutPrompt: true,\n    myLocation: '',\n    fromNumber: null,\n    timestamp: null,\n    isCustomLocation: false,\n  };\n\n  @action\n  setDataAction({\n    callWith = this.callWith,\n    ringoutPrompt = this.ringoutPrompt,\n    myLocation = this.myLocation,\n    timestamp = this.timestamp,\n    isCustomLocation = this.isCustomLocation,\n  }: {\n    callWith?: CallingOptionsType;\n    ringoutPrompt?: boolean;\n    myLocation?: string;\n    timestamp?: number;\n    isCustomLocation?: boolean;\n  }) {\n    this.data.callWith = callWith;\n    this.data.ringoutPrompt = ringoutPrompt;\n    this.data.myLocation = myLocation;\n    this.data.timestamp = timestamp;\n    this.data.isCustomLocation = isCustomLocation;\n  }\n\n  @action\n  _updateFromNumber(number: { phoneNumber?: string }) {\n    this.data.fromNumber = number && number?.phoneNumber;\n  }\n\n  @proxify\n  async updateFromNumber(number: { phoneNumber?: string }) {\n    this._updateFromNumber(number);\n  }\n\n  @action\n  resetSuccess() {\n    this.data.fromNumber = null;\n  }\n\n  async onStateChange() {\n    if (!this._shouldReset() && !this._shouldInit() && this._shouldValidate()) {\n      this._ringoutEnabled = this._deps.appFeatures.isRingOutEnabled;\n      this._webphoneEnabled = this._deps.appFeatures.isWebPhoneEnabled;\n      this._myPhoneNumbers = this.myPhoneNumbers;\n      this._otherPhoneNumbers = this.otherPhoneNumbers;\n      this._blockedIdDisabled = this.isBlockedIdDisabled;\n      await this._validateSettings();\n    }\n  }\n\n  _shouldValidate() {\n    return (\n      this.ready &&\n      (this._ringoutEnabled !== this._deps.appFeatures.isRingOutEnabled ||\n        this._webphoneEnabled !== this._deps.appFeatures.isWebPhoneEnabled ||\n        this._myPhoneNumbers !== this.myPhoneNumbers ||\n        this._otherPhoneNumbers !== this.otherPhoneNumbers ||\n        this._blockedIdDisabled !== this.isBlockedIdDisabled)\n    );\n  }\n\n  async onInit() {\n    await this._init();\n  }\n\n  onReset() {\n    this.resetSuccess();\n  }\n\n  _handleFirstTimeLogin() {\n    if (!this.timestamp) {\n      // first time login\n      const defaultCallWith = this.callWithOptions && this.callWithOptions[0];\n      this.setDataAction({ callWith: defaultCallWith, timestamp: Date.now() });\n      if (!this._emergencyCallAvailable) {\n        this._warningEmergencyCallingNotAvailable();\n      }\n      if (typeof this._onFirstLogin === 'function') {\n        this._onFirstLogin();\n      }\n    }\n  }\n\n  async _init() {\n    if (!this._deps.appFeatures.isCallingEnabled) return;\n\n    this._myPhoneNumbers = this.myPhoneNumbers;\n    this._otherPhoneNumbers = this.otherPhoneNumbers;\n    this._availableNumbers = this.availableNumbers;\n    this._ringoutEnabled = this._deps.appFeatures.isRingOutEnabled;\n    this._webphoneEnabled = this._deps.appFeatures.isWebPhoneEnabled;\n    this._blockedIdDisabled = this.isBlockedIdDisabled;\n\n    this._handleFirstTimeLogin();\n\n    if (\n      this.callWith === deprecatedCallingOptions.myphone ||\n      this.callWith === deprecatedCallingOptions.otherphone ||\n      this.callWith === deprecatedCallingOptions.customphone\n    ) {\n      this.setDataAction({\n        callWith: callingOptions.ringout,\n        isCustomLocation:\n          this.callWith === deprecatedCallingOptions.customphone,\n      });\n    }\n    await this._validateSettings();\n    await this._initFromNumber();\n  }\n\n  @proxify\n  async _warningEmergencyCallingNotAvailable() {\n    if (this.callWith === callingOptions.browser) {\n      this._deps.alert.info({\n        message: callingSettingsMessages.emergencyCallingNotAvailable,\n        ttl: 0,\n      });\n    }\n  }\n\n  @proxify\n  async _validateSettings() {\n    if (this._hasWebphonePermissionRemoved()) {\n      if (this._deps.appFeatures.isSoftphoneEnabled) {\n        await this._setSoftPhoneToCallWith();\n      }\n      this._deps.alert.danger({\n        message: callingSettingsMessages.webphonePermissionRemoved,\n        ttl: 0,\n      });\n    } else if (this._hasPermissionChanged()) {\n      if (this._deps.appFeatures.isSoftphoneEnabled) {\n        await this._setSoftPhoneToCallWith();\n      }\n      this._deps.alert.danger({\n        message: callingSettingsMessages.permissionChanged,\n        ttl: 0,\n      });\n    } else if (this._hasPhoneNumberChanged()) {\n      this.setDataAction({\n        callWith: callingOptions.ringout,\n        myLocation: this._myPhoneNumbers[0],\n        timestamp: Date.now(),\n      });\n      this._deps.alert.danger({\n        message: callingSettingsMessages.phoneNumberChanged,\n        ttl: 0,\n      });\n    }\n\n    if (this.isBlockedIdDisabled && this.fromNumber === BLOCKED_ID_VALUE) {\n      this._initFromNumber();\n    }\n  }\n\n  @proxify\n  async _setSoftPhoneToCallWith() {\n    this.setDataAction({\n      callWith: callingOptions.softphone,\n      timestamp: Date.now(),\n    });\n  }\n\n  _hasWebphonePermissionRemoved() {\n    return (\n      !(this._webphoneEnabled && this._deps.webphone) &&\n      this.callWith === callingOptions.browser\n    );\n  }\n\n  _hasPermissionChanged() {\n    return !this._ringoutEnabled && this.callWith === callingOptions.ringout;\n  }\n\n  _hasPhoneNumberChanged() {\n    return (\n      this.callWith === callingOptions.ringout &&\n      !this.isCustomLocation &&\n      this._availableNumbers.indexOf(this.myLocation) === -1\n    );\n  }\n\n  _getLocationLabel(phoneNumber: string) {\n    const { devices } = this._deps.extensionDevice;\n    const { flipNumbers } = this._deps.forwardingNumber;\n    const { mainCompanyNumber } = this._deps.extensionPhoneNumber;\n    const { extensionNumber } = this._deps.extensionInfo;\n    const mainPhoneNumber = `${mainCompanyNumber.phoneNumber}*${extensionNumber}`;\n    let name = null;\n    if (devices.length) {\n      let registeredWithDevice = false;\n      devices.forEach((device) => {\n        const { phoneLines } = device;\n        if (phoneLines.length) {\n          registeredWithDevice = !!phoneLines.find((phoneLine) => {\n            return phoneLine.phoneInfo.phoneNumber === phoneNumber;\n          });\n          if (registeredWithDevice) {\n            name = device.name;\n          }\n        }\n      });\n      if (name) return name;\n    }\n    if (flipNumbers.length) {\n      const isFlipNumber = flipNumbers.find(\n        (flipNumber) => flipNumber.phoneNumber === phoneNumber,\n      );\n      if (isFlipNumber) {\n        return isFlipNumber.label || 'Other';\n      }\n    }\n\n    if (phoneNumber === mainPhoneNumber) {\n      return 'Main';\n    }\n    return 'Other';\n  }\n\n  @proxify\n  async _initFromNumber() {\n    const fromNumber = this.fromNumber;\n    if (\n      !fromNumber ||\n      (fromNumber === BLOCKED_ID_VALUE && this.isBlockedIdDisabled)\n    ) {\n      let defaultCallerId = this.fromNumbers[0];\n      if (this._deps.callerId?.ringOut) {\n        if (\n          this._deps.callerId.ringOut.type === 'Blocked' &&\n          !this.isBlockedIdDisabled\n        ) {\n          defaultCallerId = { phoneNumber: BLOCKED_ID_VALUE };\n        } else if (this._deps.callerId.ringOut.type === 'PhoneNumber') {\n          const defaultPhoneNumber = this._deps.callerId?.ringOut.phoneInfo\n            ?.phoneNumber;\n          const defaultEntry = this.fromNumbers.find(\n            (item) => item.phoneNumber === defaultPhoneNumber,\n          );\n          if (defaultEntry) {\n            defaultCallerId = defaultEntry;\n          }\n        }\n      }\n      await this.updateFromNumber(defaultCallerId);\n    }\n  }\n\n  @proxify\n  async setData(\n    {\n      callWith,\n      myLocation,\n      ringoutPrompt,\n      isCustomLocation,\n    }: {\n      callWith: CallingOptionsType;\n      myLocation: string;\n      ringoutPrompt: boolean;\n      isCustomLocation: boolean;\n    },\n    withPrompt: boolean,\n  ) {\n    // TODO validate myLocation\n    this.setDataAction({\n      callWith,\n      myLocation,\n      ringoutPrompt,\n      timestamp: Date.now(),\n      isCustomLocation,\n    });\n    if (withPrompt) {\n      if (this.callWith === callingOptions.softphone) {\n        this._deps.alert.info({\n          message: callingSettingsMessages.saveSuccessWithSoftphone,\n        });\n      } else if (this.callWith === callingOptions.jupiter) {\n        this._deps.alert.info({\n          message: callingSettingsMessages.saveSuccessWithJupiter,\n        });\n      } else {\n        this._deps.alert.info({\n          message: callingSettingsMessages.saveSuccess,\n        });\n        if (!this._emergencyCallAvailable) {\n          this._warningEmergencyCallingNotAvailable();\n        }\n      }\n    }\n  }\n\n  @computed((that: CallingSettings) => [\n    that._deps.extensionPhoneNumber.directNumbers,\n    that._deps.extensionPhoneNumber.mainCompanyNumber,\n    that._deps.extensionInfo.extensionNumber,\n  ])\n  get myPhoneNumbers() {\n    const {\n      directNumbers,\n      mainCompanyNumber,\n    } = this._deps.extensionPhoneNumber;\n    const { extensionNumber } = this._deps.extensionInfo;\n    const myPhoneNumbers = directNumbers.map((item) => item.phoneNumber);\n    if (mainCompanyNumber && extensionNumber) {\n      myPhoneNumbers.push(\n        `${mainCompanyNumber.phoneNumber}*${extensionNumber}`,\n      );\n    }\n    return myPhoneNumbers;\n  }\n\n  @computed((that: CallingSettings) => [\n    that._deps.forwardingNumber.flipNumbers,\n    that._deps.extensionPhoneNumber.callerIdNumbers,\n    that._deps.extensionPhoneNumber.directNumbers,\n  ])\n  get otherPhoneNumbers() {\n    const { flipNumbers } = this._deps.forwardingNumber;\n    const { callerIdNumbers, directNumbers } = this._deps.extensionPhoneNumber;\n    const filterMapping: { [k: string]: boolean } = {};\n    callerIdNumbers.forEach((item) => {\n      filterMapping[item.phoneNumber] = true;\n    });\n    directNumbers.forEach((item) => {\n      filterMapping[item.phoneNumber] = true;\n    });\n    return flipNumbers\n      .filter((item) => !filterMapping[item.phoneNumber])\n      .sort((a, b) => (a.label === 'Mobile' && a.label !== b.label ? -1 : 1))\n      .map((item) => item.phoneNumber);\n  }\n\n  @computed((that: CallingSettings) => [\n    that._deps.appFeatures.isRingOutEnabled,\n    that._deps.appFeatures.isWebPhoneEnabled,\n    that.otherPhoneNumbers.length,\n    that._deps.extensionPhoneNumber.numbers.length,\n  ])\n  get callWithOptions() {\n    const { isRingOutEnabled, isWebPhoneEnabled } = this._deps.appFeatures;\n    const hasExtensionPhoneNumber =\n      this._deps.extensionPhoneNumber.numbers.length > 0;\n    if (!hasExtensionPhoneNumber && this._deps.appFeatures.isSoftphoneEnabled) {\n      return [callingOptions.softphone];\n    }\n    if (\n      !hasExtensionPhoneNumber &&\n      !this._deps.appFeatures.isSoftphoneEnabled\n    ) {\n      return [];\n    }\n    const callWithOptions = [];\n    if (this._deps.webphone && isWebPhoneEnabled) {\n      callWithOptions.push(callingOptions.browser);\n    }\n    if (\n      this._deps.brand &&\n      this._showCallWithJupiter &&\n      this._deps.appFeatures.isRingCentralAppEnabled\n    ) {\n      callWithOptions.push(callingOptions.jupiter);\n    }\n\n    if (this._deps.appFeatures.isSoftphoneEnabled) {\n      callWithOptions.push(callingOptions.softphone);\n    }\n    if (isRingOutEnabled && this._deps.appFeatures.isRingOutEnabled) {\n      callWithOptions.push(callingOptions.ringout);\n    }\n    return callWithOptions;\n  }\n\n  @computed((that: CallingSettings) => [\n    that._deps.extensionPhoneNumber.callerIdNumbers,\n  ])\n  get fromNumbers() {\n    const { callerIdNumbers } = this._deps.extensionPhoneNumber;\n    const sortedPhoneNumbers = callerIdNumbers.sort((firstItem, lastItem) => {\n      if (firstItem.usageType === 'DirectNumber') return -1;\n      if (lastItem.usageType === 'DirectNumber') return 1;\n      if (firstItem.usageType === 'MainCompanyNumber') return -1;\n      if (lastItem.usageType === 'MainCompanyNumber') return 1;\n      if (firstItem.usageType < lastItem.usageType) return -1;\n      if (firstItem.usageType > lastItem.usageType) return 1;\n      return 0;\n    });\n    return sortedPhoneNumbers;\n  }\n\n  @computed((that: CallingSettings) => [\n    that.myPhoneNumbers,\n    that.otherPhoneNumbers,\n  ])\n  get availableNumbers() {\n    return this.myPhoneNumbers.concat(this.otherPhoneNumbers);\n  }\n\n  @computed((that: CallingSettings) => [that.availableNumbers])\n  get availableNumbersWithLabel() {\n    const { availableNumbers } = this;\n    const result: { label: string; value: string }[] = [];\n    if (availableNumbers.length) {\n      availableNumbers.forEach((phoneNumber) => {\n        const locationLabel = this._getLocationLabel(phoneNumber);\n        result.push({\n          label: locationLabel,\n          value: phoneNumber,\n        });\n      });\n    }\n    result.sort(\n      (a, b) =>\n        LOCATION_NUMBER_ORDER.indexOf(a.label) -\n        LOCATION_NUMBER_ORDER.indexOf(b.label),\n    );\n    return result;\n  }\n\n  get callingMode() {\n    return mapOptionToMode(this.callWith);\n  }\n\n  get defaultRingoutPrompt() {\n    return this.initRingoutPrompt;\n  }\n\n  get isWebphoneMode() {\n    return this.callingMode === callingModes.webphone;\n  }\n\n  /* ringtone */\n  get isChangeRingToneAllowed() {\n    return (\n      this._deps.webphone &&\n      (this._deps.storage.driver === 'INDEXEDDB' ||\n        this._deps.storage.driver === 'WEBSQL')\n    );\n  }\n\n  get jupiterAppName() {\n    return this._deps.softphone?.jupiterAppName;\n  }\n\n  /* India go */\n  get isBlockedIdDisabled() {\n    return (\n      this._deps.extensionFeatures.features?.BlockingCallerId?.available ===\n      false\n    );\n  }\n}\nexport { CallingSettings };\n"],"file":"CallingSettings.js"}