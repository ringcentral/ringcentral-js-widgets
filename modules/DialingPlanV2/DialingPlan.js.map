{"version":3,"sources":["modules/DialingPlanV2/DialingPlan.ts"],"names":["DialingPlan","name","deps","dep","optional","data","dialingPlanOptions","polling","_source","DataSource","key","cleanOnReset","fetchFunction","readyCheckFunction","permissionCheckFunction","_deps","dataFetcherV2","register","params","client","service","platform","get","response","json","extensionFeatures","ready","features","ReadCompanyInfo","available","DataFetcherV2Consumer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYaA,W,WATZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,aADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ,eAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAJI;AAFA,CAAP,C,UA8BE,oBAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAA2B,CAACA,IAAD,CAA3B;AAAA,CAAT,C;;;;;AAjBD,uBAAYH,IAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AACnB,8BAAM;AACJA,MAAAA,IAAI,EAAJA;AADI,KAAN;;AADmB,yCAIQA,IAAI,CAACI,kBAJb,yEAImC,EAJnC;AAAA,8BAIXC,OAJW;AAAA,QAIXA,OAJW,8BAID,IAJC;;AAKnB,UAAKC,OAAL,GAAe,IAAIC,wBAAJ,iCACVP,IAAI,CAACI,kBADK;AAEbI,MAAAA,GAAG,EAAE,aAFQ;AAGbH,MAAAA,OAAO,EAAPA,OAHa;AAIbI,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,aAAa,EAAE;AAAA,eAAM,MAAKA,aAAL,EAAN;AAAA,OALF;AAMbC,MAAAA,kBAAkB,EAAE;AAAA,eAAM,MAAKA,kBAAL,EAAN;AAAA,OANP;AAObC,MAAAA,uBAAuB,EAAE;AAAA,eAAM,MAAKA,uBAAL,EAAN;AAAA;AAPZ,OAAf;;AASA,UAAKC,KAAL,CAAWC,aAAX,CAAyBC,QAAzB,CAAkC,MAAKT,OAAvC;;AAdmB;AAepB;;;;oCAOe;AAAA;;AACd,aAAO;AAAA,4EAAU,iBAAOU,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACQ,MAAI,CAACH,KAAL,CAAWI,MAAX,CAAkBC,OAAlB,CACpBC,QADoB,GAEpBC,GAFoB,CAEhB,sCAFgB,EAEwBJ,MAFxB,CADR;;AAAA;AACTK,kBAAAA,QADS;AAAA,mDAIRA,QAAQ,CAACC,IAAT,EAJQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV;;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD;;;yCAEoB;AACnB,aAAO,KAAKT,KAAL,CAAWU,iBAAX,CAA6BC,KAApC;AACD;;;8CAEyB;AAAA;;AACxB,gEACE,KAAKX,KAAL,CAAWU,iBAAX,CAA6BE,QAD/B,qFACE,uBAAuCC,eADzC,2DACE,uBAAwDC,SAD1D,yEACuE,KADvE;AAGD;;;wBArBW;AAAA;;AACV,2BAAO,KAAKxB,IAAZ,mDAAoB,EAApB;AACD;;;;EAxBqDyB,mC","sourcesContent":["import { CountryInfo } from '@rc-ex/core/definitions';\nimport { computed } from '@ringcentral-integration/core';\n\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport { DataFetcherV2Consumer, DataSource } from '../DataFetcherV2';\nimport { Deps } from './DialingPlan.interface';\n\n@Module({\n  name: 'DialingPlan',\n  deps: [\n    'Client',\n    'ExtensionFeatures',\n    'DataFetcherV2',\n    { dep: 'DialingPlanOptions', optional: true },\n  ],\n})\nexport class DialingPlan<T extends Deps = Deps> extends DataFetcherV2Consumer<\n  T,\n  CountryInfo[]\n> {\n  constructor(deps: T) {\n    super({\n      deps,\n    });\n    const { polling = true } = deps.dialingPlanOptions ?? {};\n    this._source = new DataSource({\n      ...deps.dialingPlanOptions,\n      key: 'dialingPlan',\n      polling,\n      cleanOnReset: true,\n      fetchFunction: () => this.fetchFunction(),\n      readyCheckFunction: () => this.readyCheckFunction(),\n      permissionCheckFunction: () => this.permissionCheckFunction(),\n    });\n    this._deps.dataFetcherV2.register(this._source);\n  }\n\n  @computed(({ data }: DialingPlan) => [data])\n  get plans() {\n    return this.data ?? [];\n  }\n\n  fetchFunction() {\n    return fetchList(async (params: any) => {\n      const response = await this._deps.client.service\n        .platform()\n        .get('/restapi/v1.0/account/~/dialing-plan', params);\n      return response.json();\n    });\n  }\n\n  readyCheckFunction() {\n    return this._deps.extensionFeatures.ready;\n  }\n\n  permissionCheckFunction() {\n    return (\n      this._deps.extensionFeatures.features?.ReadCompanyInfo?.available ?? false\n    );\n  }\n}\n"],"file":"DialingPlan.js"}