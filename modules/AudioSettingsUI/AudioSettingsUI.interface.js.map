{"version":3,"file":"AudioSettingsUI.interface.js","names":[],"sources":["modules/AudioSettingsUI/AudioSettingsUI.interface.ts"],"sourcesContent":["import type { AudioSettings } from '@ringcentral-integration/commons/modules/AudioSettings';\nimport type { CallingSettings } from '@ringcentral-integration/commons/modules/CallingSettings';\nimport type { CallMonitor } from '@ringcentral-integration/commons/modules/CallMonitor';\nimport type { Locale } from '@ringcentral-integration/commons/modules/Locale';\nimport type { Webphone } from '@ringcentral-integration/commons/modules/Webphone';\n\nimport type { RouterInteraction } from '../RouterInteraction';\n\nexport interface AudioSettingsUIOptions {\n  //\n}\n\nexport interface Deps {\n  audioSettings: AudioSettings;\n  locale: Locale;\n  callingSettings: CallingSettings;\n  routerInteraction: RouterInteraction;\n  callMonitor: CallMonitor;\n  webphone?: Webphone;\n  audioSettingsUIOptions?: AudioSettingsUIOptions;\n}\n\n// TODO: move to AudioSettingsPanel\nexport interface AudioSettingsPanelProps {\n  currentLocale: string;\n  dialButtonVolume: number;\n  dialButtonMuted: boolean;\n  ringtoneVolume: number;\n  ringtoneMuted: boolean;\n  callVolume: number;\n  availableInputDevices: MediaDeviceInfo[];\n  inputDeviceId: string;\n  availableOutputDevices: MediaDeviceInfo[];\n  outputDeviceId: string;\n  supportDevices: boolean;\n  userMedia: boolean;\n  isWebRTC: boolean;\n  outputDeviceDisabled: boolean;\n  inputDeviceDisabled: boolean;\n  onBackButtonClick: () => Promise<void>;\n  onSave: AudioSettings['setData'];\n  checkUserMedia: () => Promise<void>;\n}\n"],"mappings":""}