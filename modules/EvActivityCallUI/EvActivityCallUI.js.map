{"version":3,"file":"EvActivityCallUI.js","names":["_di","require","_core","_ramda","_enums","_EvActivityCallUI","_i18n","_interopRequireDefault","_dec","_dec2","_dec3","_dec4","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","e","__esModule","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","asyncGeneratorStep","n","a","c","i","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","_initializerDefineProperty","l","initializer","call","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","slice","reverse","reduce","_initializerWarningHelper","Error","EvActivityCallUI","Module","name","deps","dep","optional","computed","that","_that$agentRecording","_that$agentRecording2","_deps","evTransferCall","allowTransferCall","evRequeueCall","allowRequeueCall","currentEvMainCall","agentRecording","pause","currentEvCall","callId","evCallDisposition","callsMapping","validated","required","locale","currentLocale","dispositionPickList","evCallMonitor","callIds","otherCallIds","callList","isMultipleCalls","evAuth","agentId","_ref","_super","openAgentScriptTab","console","warn","_this","enableCache","storageKey","isFirstTimeHandled","pickUpDirectly","_stopWatching","goToActivityCallPage","id","undefined","routerInteraction","concat","goToActivityCallListPage","setKeypadValue","keypadValue","activeCallControl","onKeypadClick","match","pop","error","message","setKeypadIsOpen","status","isKeypadOpen","resetKeypadStatus","onInitOnce","_this2","onCallRinging","watch","setIsRecording","isDefaultRecord","_onRecord","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","record","t0","stop","onRecord","_onStopRecord","_callee2","_callee2$","_context2","stopRecord","onStopRecord","_onPauseRecord","_callee3","_callee3$","_context3","pauseRecord","_sendTabManager","tabManagerEvents","RECORD_PAUSED","alert","success","messageTypes","onPauseRecord","_onRestartTimer","_callee4","_callee4$","_context4","onRestartTimer","onResumeRecord","resumeRecord","RECORD_RESUME","changeSavingStatus","saveStatus","changeFormStatus","_ref2","disabled","setScrollTo","scrollTo","reset","dispositionId","notes","submit","onStateChange","ready","tabManagerEnabled","tabManager","_checkTabManagerEvent","callStatus","onUpdateCallLog","_ref3","task","isEvCallDisposition","hasOwnProperty","data","setDisposition","goToRequeueCallPage","_this$_deps$evCallMon","gate","gateGroupId","gateId","setStatus","selectedQueueGroupId","selectedGateId","stayOnCall","requeuing","changeTransferType","transferTypes","queue","_redirectTransferCall","goToTransferCallPage","type","resetTransferStatus","fetchAgentList","url","goBack","evCall","setDialoutStatus","dialoutStatuses","idle","_this$getPageRole","getPageRole","backUrl","activityCallId","pageRoles","activityCallLog","initSaveStatus","tabManagerEventSuccess","CALL_DISPOSITION_SUCCESS","logTypesEventSuccess","logTypes","logTypesEventFailure","CALL_DISPOSITION_FAILURE","callLogCreate","callLogMethods","CALL_LOG_CREATE_SUCCESS","CALL_LOG_CREATE_FAILURE","currentPath","indexOf","test","_disposeCall","_callee5","evAgentScript","_callee5$","_context5","disposeCall","scriptId","setCurrentCallScript","saveScriptResult","event","_dispositionSuccess","_hasError","_this3","some","_submitData2","_callee6","saveFields","_this$getPageRole2","_e$error","_e$error2","_this$getPageRole3","_callee6$","_context6","abrupt","saving","danger","ttl","payload","_submitData","_x","_this4","saved","_this$getPageRole4","setTimeout","evWorkingState","setIsPendingDisposition","_onHoldOrUnHold","_this$_deps$tabManage","send","_onHangup","_callee7","_callee7$","_context7","hangUp","session","sessionId","onHangup","getUIProps","_ref4","_this$activityCallLog","_this$activityCallLog2","_this$agentRecording","currentLog","showSmallCallControl","currentEvRawCall","endedCall","isInbound","isOnMute","evIntegratedSoftphone","muteActive","isOnHold","isOnActive","isInComingCall","smallCallControlSize","environment","isWide","currentCallControlPermission","disableDispose","disableLinks","disableTransfer","allowTransfer","disableInternalTransfer","allowInternalTransfer","disableHold","allowHoldCall","disableHangup","allowHangupCall","disableMute","evAgentSession","isIntegratedSoftphone","showMuteButton","showRecordCall","allowRecordControl","disableActive","isRecording","disableRecordControl","ivrAlertData","disablePauseRecord","allowPauseRecord","agentScriptData","recordPauseCount","timeStamp","getUIFunctions","_this5","onMute","mute","onUnmute","unmute","onReject","reject","onHold","onUnHold","onActive","_disposeCall2","_callee8","_callee8$","_context8","onCopySuccess","toUpperCase","info","action","transferType","get","_this$agentRecording2","connectivityMonitor","connectivity","rateLimiter","throttling","_this$_deps$tabManage2","enable","currentCall","_this$currentEvMainCa","_this$currentEvMainCa2","_this$agentRecording3","_this$agentRecording4","allowHold","allowHangup","_this$currentEvCall","_this$currentEvCall$o","_this$currentEvCall$o2","outdialDispositions","dispositions","map","item","label","disposition","_this6","callDisposition","callType","dnis","uii","ani","queueDts","fromNumber","toNumber","_ref5","direction","from","phoneNumber","to","telephonyStatus","telephonySessionId","partyId","startTime","Date","getTime","offset","fromMatches","toMatches","activityMatches","currentSessionId","currentLogCall","isFailed","isAutoSave","isCreated","customLogFields","sort","maxLength","onChange","placeholder","i18n","getString","picklistOptions","enableScrollError","helperText","currentDisposition","find","noteRequired","requireNote","_this$currentEvCall2","_this$currentEvMainCa3","isHold","getMainCall","_this$_deps$evCallMon2","getActiveCallList","_this7","_this8","getIsAgentScript","onClick","baggage","ivrAlertSubject","ivrAlertBody","subject","body","_this$currentEvMainCa4","RcUIModuleV2","storage","state","exports"],"sources":["modules/EvActivityCallUI/EvActivityCallUI.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  action,\n  computed,\n  RcUIModuleV2,\n  state,\n  storage,\n  watch,\n} from '@ringcentral-integration/core';\nimport type { CallLogPanelProps } from '@ringcentral-integration/widgets/components/CallLogPanel';\nimport { keys } from 'ramda';\nimport type { Unsubscribe } from 'redux';\n\nimport type { EvTransferType, MessageTypes } from '../../enums';\nimport {\n  dialoutStatuses,\n  logTypes,\n  messageTypes,\n  tabManagerEvents,\n  transferTypes,\n} from '../../enums';\nimport type {\n  CallLogMethods,\n  EvActivityCallUIFunctions,\n  EvActivityCallUIProps,\n  EvCurrentLog,\n  SaveStatus,\n} from '../../interfaces/EvActivityCallUI.interface';\nimport {\n  callLogMethods,\n  saveStatus,\n} from '../../interfaces/EvActivityCallUI.interface';\nimport type {\n  EvAgentScriptData,\n  EvCallData,\n  EvIvrData,\n} from '../../interfaces/EvData.interface';\nimport type { EvBaggage } from '../../lib/EvClient';\n\nimport type { ActivityCallUI, Deps } from './EvActivityCallUI.interface';\nimport i18n from './i18n';\n\ntype FormState = {\n  validated?: Partial<EvActivityCallUI['validated']>;\n  required?: Partial<EvActivityCallUI['required']>;\n  disabled?: Partial<EvActivityCallUI['disabled']>;\n};\n\n@Module({\n  name: 'EvActivityCallUI',\n  deps: [\n    'Locale',\n    'Alert',\n    'ActiveCallControl',\n    'EvCallMonitor',\n    'EvCall',\n    'EvAgentScript',\n    'EvRequeueCall',\n    'EvTransferCall',\n    'EvCallDisposition',\n    'EvWorkingState',\n    'EvAgentSession',\n    'EvIntegratedSoftphone',\n    'RouterInteraction',\n    'ConnectivityMonitor',\n    'RateLimiter',\n    'Environment',\n    'Storage',\n    'EvAuth',\n    { dep: 'TabManager', optional: true },\n    { dep: 'EvActivityCallUIOptions', optional: true },\n  ],\n})\nclass EvActivityCallUI<T extends Deps = Deps>\n  extends RcUIModuleV2<T>\n  implements ActivityCallUI\n{\n  public isFirstTimeHandled = false;\n\n  /** Is the call pick up directly */\n  pickUpDirectly = true;\n  protected _stopWatching: Unsubscribe = null;\n\n  protected openAgentScriptTab() {\n    console.warn('this should be implement in extend module');\n  }\n\n  constructor(deps: T) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvActivityCallUI',\n    });\n  }\n\n  @storage\n  @state\n  validated = {\n    dispositionId: true,\n    notes: true,\n  };\n\n  @storage\n  @state\n  required = {\n    notes: false,\n  };\n\n  @storage\n  @state\n  disabled: any = {};\n\n  @storage\n  @state\n  saveStatus: SaveStatus | CallLogMethods = saveStatus.submit;\n\n  @storage\n  @state\n  scrollTo: string = null;\n\n  @storage\n  @state\n  isKeypadOpen = false;\n\n  @storage\n  @state\n  keypadValue = '';\n\n  @action\n  setKeypadValue(value: string) {\n    this.keypadValue = value;\n    try {\n      this._deps.activeCallControl.onKeypadClick(value.match(/.$/).pop());\n    } catch (error) {\n      console.error(error?.message);\n    }\n  }\n\n  @action\n  setKeypadIsOpen(status: boolean) {\n    this.isKeypadOpen = status;\n  }\n\n  get isDefaultRecord() {\n    return this.agentRecording?.default === 'ON';\n  }\n\n  @action\n  resetKeypadStatus() {\n    this.keypadValue = '';\n    this.isKeypadOpen = false;\n  }\n\n  override onInitOnce() {\n    this.resetKeypadStatus();\n\n    this._deps.evCallMonitor.onCallRinging(() => {\n      this._stopWatching = watch(\n        this,\n        () => this.currentEvMainCall,\n        (currentEvMainCall: EvCallData) => {\n          if (currentEvMainCall) {\n            this._deps.activeCallControl.setIsRecording(this.isDefaultRecord);\n          }\n          this._stopWatching();\n          this._stopWatching = null;\n        },\n      );\n    });\n  }\n\n  async onRecord() {\n    try {\n      await this._deps.activeCallControl.record();\n    } catch (error) {\n      console.error(error?.message);\n    }\n  }\n\n  async onStopRecord() {\n    try {\n      await this._deps.activeCallControl.stopRecord();\n    } catch (error) {\n      console.error(error?.message);\n    }\n  }\n\n  async onPauseRecord() {\n    try {\n      await this._deps.activeCallControl.pauseRecord();\n      this._sendTabManager(tabManagerEvents.RECORD_PAUSED);\n\n      this._deps.alert.success({\n        message: messageTypes.RECORD_PAUSED,\n      });\n    } catch (error) {\n      console.error(error?.message);\n    }\n  }\n\n  async onRestartTimer() {\n    try {\n      await this._deps.activeCallControl.pauseRecord();\n    } catch (error) {\n      console.error(error?.message);\n    }\n  }\n\n  onResumeRecord() {\n    this._deps.activeCallControl.resumeRecord();\n    this._deps.alert.success({\n      message: messageTypes.RECORD_RESUME,\n    });\n  }\n\n  get callId() {\n    return this._deps.evCall.activityCallId;\n  }\n\n  get disableLinks() {\n    return (\n      !this._deps.connectivityMonitor.connectivity ||\n      this._deps.rateLimiter.throttling\n    );\n  }\n\n  get tabManagerEnabled() {\n    return this._deps.tabManager?.enable;\n  }\n\n  get currentEvCall() {\n    return this._deps.evCall.currentCall;\n  }\n\n  // TODO: should check with outbound call\n  get isInComingCall() {\n    return this._deps.evCall.isInbound && !this.pickUpDirectly;\n    // currentSession.callStatus === telephonyStatuses.ringing\n  }\n\n  // transferCall and requeueCall are two parts of transfer menu\n  get allowTransfer() {\n    return (\n      this._deps.evTransferCall.allowTransferCall ||\n      this._deps.evRequeueCall.allowRequeueCall\n    );\n  }\n\n  @computed((that: EvActivityCallUI) => [\n    that._deps.evTransferCall.allowTransferCall,\n    that._deps.evRequeueCall.allowRequeueCall,\n    that.currentEvMainCall,\n    that.agentRecording?.agentRecording,\n    that.agentRecording?.pause,\n  ])\n  get currentCallControlPermission() {\n    return {\n      allowTransferCall: this._deps.evTransferCall.allowTransferCall,\n      allowRequeueCall: this._deps.evRequeueCall.allowRequeueCall,\n      allowHoldCall: this.currentEvMainCall?.allowHold,\n      allowHangupCall: this.currentEvMainCall?.allowHangup,\n      allowRecordControl: this.agentRecording?.agentRecording,\n      allowPauseRecord: typeof this.agentRecording?.pause === 'number',\n    };\n  }\n\n  @computed((that: EvActivityCallUI) => [that.currentEvCall])\n  get dispositionPickList() {\n    return (\n      this.currentEvCall?.outdialDispositions?.dispositions?.map((item) => ({\n        ...item,\n        label: item.disposition,\n        value: item.dispositionId,\n      })) || []\n    );\n  }\n\n  // TODO: add `callDisposition` in CallLog\n  @computed((that: EvActivityCallUI) => [\n    that.callId,\n    that.currentEvCall,\n    that._deps.evCallDisposition.callsMapping[that.callId],\n    that.validated,\n    that.required,\n    that._deps.locale.currentLocale,\n    that.dispositionPickList,\n  ])\n  get activityCallLog(): EvCurrentLog {\n    const {\n      callId,\n      currentEvCall: currentCall,\n\n      validated,\n      required,\n    } = this;\n\n    const callDisposition =\n      this._deps.evCallDisposition.callsMapping[this.callId];\n\n    if (!currentCall) {\n      return undefined;\n    }\n    const { callType, dnis, uii, ani, queueDts, agentId } = currentCall;\n\n    // TODO: confirm about  dialDest or dnis?\n    const fromNumber = callType === 'OUTBOUND' ? dnis : ani;\n    // TODO: confirm about  dialDest or dnis?\n    const toNumber = callType === 'OUTBOUND' ? ani : dnis;\n    const { dispositionId, notes } = callDisposition || {};\n\n    const dispositionPickList = this.dispositionPickList;\n\n    return {\n      currentEvRawCall: currentCall,\n      // the call which maps for rc component\n      call: {\n        id: uii,\n        direction: callType,\n        from: {\n          phoneNumber: fromNumber,\n          name: fromNumber,\n        },\n        to: {\n          phoneNumber: toNumber,\n          name: toNumber,\n        },\n        telephonyStatus: 'CallConnected', // TODO: handle with call state and agent state\n        sessionId: currentCall.session.sessionId,\n        telephonySessionId: uii,\n        partyId: agentId,\n        startTime: new Date(queueDts).getTime(),\n        offset: 0,\n        fromMatches: [],\n        toMatches: [],\n        activityMatches: [],\n      },\n      currentSessionId: callId,\n      // TODO: this will be remove when api can using.\n      currentLogCall: {\n        isFailed: false,\n        isAutoSave: false,\n        isCreated: false,\n        phoneNumber: currentCall.ani,\n      },\n      customLogFields:\n        dispositionPickList.length === 0\n          ? []\n          : [\n              {\n                label: 'Notes',\n                sort: 3,\n                type: 'textarea',\n                value: 'notes',\n                maxLength: 32000,\n                required: required.notes,\n                error: !validated.notes,\n                onChange: (value: string) => {\n                  if (required.notes) {\n                    this.changeFormStatus({ validated: { notes: !!value } });\n                  } else {\n                    this.changeFormStatus({ validated: { notes: true } });\n                  }\n                },\n              },\n              {\n                label: 'Disposition',\n                sort: 5,\n                type: 'picklist',\n                value: 'dispositionId',\n                placeholder: i18n.getString(\n                  'pleaseSelect',\n                  this._deps.locale.currentLocale,\n                ),\n                required: true,\n                picklistOptions: dispositionPickList,\n                enableScrollError: true,\n                error: !validated.dispositionId,\n                helperText: !validated.dispositionId\n                  ? i18n.getString(\n                      'dispositionError',\n                      this._deps.locale.currentLocale,\n                    )\n                  : undefined,\n                onChange: (value: string) => {\n                  const currentDisposition = dispositionPickList.find(\n                    (item) => item.value === value,\n                  );\n\n                  const noteRequired =\n                    currentDisposition && currentDisposition.requireNote;\n\n                  this.changeFormStatus({\n                    validated: {\n                      dispositionId: !!value,\n                      notes: !noteRequired || (noteRequired && !!notes),\n                    },\n                    required: {\n                      notes: noteRequired,\n                    },\n                  });\n                },\n              },\n            ],\n      task: {\n        dispositionId,\n        notes,\n      },\n    };\n  }\n\n  @computed((that: EvActivityCallUI) => [\n    that.currentEvCall,\n    that.currentEvMainCall,\n  ])\n  get callStatus() {\n    let status: EvActivityCallUIProps['status'] = 'active';\n\n    if (this.currentEvCall?.endedCall) {\n      status = 'callEnd';\n    } else if (this.currentEvMainCall?.isHold) {\n      status = 'onHold';\n    }\n    return status;\n  }\n\n  @computed((that: EvActivityCallUI) => [that.currentEvCall])\n  get currentEvMainCall() {\n    return this.currentEvCall\n      ? this._deps.activeCallControl.getMainCall(this.currentEvCall.uii)\n      : null;\n  }\n\n  @computed((that: EvActivityCallUI) => [\n    that.callId,\n    that._deps.evCallMonitor.callIds,\n    that._deps.evCallMonitor.otherCallIds,\n    that._deps.evCallMonitor.callsMapping,\n  ])\n  get callList() {\n    const { callIds, otherCallIds, callsMapping } = this._deps.evCallMonitor;\n\n    return this._deps.evCallMonitor.getActiveCallList(\n      callIds,\n      otherCallIds,\n      callsMapping,\n      this.callId,\n    );\n  }\n\n  @computed((that: EvActivityCallUI) => [that.callList])\n  get isMultipleCalls() {\n    return this.callList.length > 2;\n  }\n\n  @computed((that: EvActivityCallUI) => [\n    that.isMultipleCalls,\n    that.callList,\n    that._deps.evAuth.agentId,\n    that.currentEvMainCall,\n  ])\n  get isOnHold() {\n    const { isMultipleCalls, callList, currentEvMainCall } = this;\n    if (isMultipleCalls) {\n      return !!callList.find(\n        (call) =>\n          !(call.session.agentId === this._deps.evAuth.agentId) &&\n          !!call.isHold,\n      );\n    }\n    return currentEvMainCall?.isHold;\n  }\n\n  @computed((that: EvActivityCallUI) => [that.currentEvCall])\n  get agentScriptData() {\n    const call = this.currentEvCall;\n    let agentScriptData: EvAgentScriptData = null;\n    if (\n      this._deps.environment.isWide &&\n      this._deps.evAgentScript.getIsAgentScript(call)\n    ) {\n      agentScriptData = { onClick: () => this.openAgentScriptTab() };\n    }\n    return agentScriptData;\n  }\n\n  @computed((that: EvActivityCallUI) => [that.currentEvCall])\n  get ivrAlertData() {\n    const call = this.currentEvCall;\n    const ivrAlertData: EvIvrData[] = [];\n\n    if (call?.baggage) {\n      for (let i = 1; i <= 3; i++) {\n        const ivrAlertSubject =\n          call.baggage[`ivrAlertSubject_${i}` as keyof EvBaggage];\n        const ivrAlertBody =\n          call.baggage[`ivrAlertBody_${i}` as keyof EvBaggage];\n        if (ivrAlertSubject || ivrAlertBody)\n          ivrAlertData.push({\n            subject: ivrAlertSubject || '',\n            body: ivrAlertBody || '',\n          });\n      }\n    }\n    return ivrAlertData as EvIvrData[];\n  }\n\n  @action\n  changeSavingStatus(status: SaveStatus | CallLogMethods) {\n    this.saveStatus = status;\n  }\n\n  @action\n  protected changeFormStatus({ validated, required, disabled }: FormState) {\n    if (validated) {\n      this.validated = {\n        ...this.validated,\n        ...validated,\n      };\n    }\n    if (required) {\n      this.required = {\n        ...this.required,\n        ...required,\n      };\n    }\n    if (disabled) {\n      this.disabled = {\n        ...this.disabled,\n        ...disabled,\n      };\n    }\n  }\n\n  @action\n  setScrollTo(id: string) {\n    this.scrollTo = id;\n  }\n\n  @action\n  reset() {\n    this.validated = {\n      dispositionId: true,\n      notes: true,\n    };\n    this.required = {\n      notes: false,\n    };\n    this.disabled = {};\n    this.saveStatus = saveStatus.submit;\n    this.resetKeypadStatus();\n  }\n\n  override onStateChange() {\n    if (this.ready && this.tabManagerEnabled && this._deps.tabManager.ready) {\n      this._checkTabManagerEvent();\n\n      // * when call end reset keypad status\n      if (this.callStatus === 'callEnd') {\n        this.resetKeypadStatus();\n      }\n    }\n  }\n\n  onUpdateCallLog(\n    { task }: Parameters<CallLogPanelProps['onUpdateCallLog']>[0],\n    id: Parameters<CallLogPanelProps['onUpdateCallLog']>[1],\n  ) {\n    const isEvCallDisposition =\n      Object.hasOwnProperty.call(task, 'dispositionId') ||\n      Object.hasOwnProperty.call(task, 'notes');\n    if (isEvCallDisposition) {\n      const data = {\n        ...this._deps.evCallDisposition.callsMapping[id],\n        ...task,\n      };\n      this._deps.evCallDisposition.setDisposition(id, {\n        dispositionId: data.dispositionId,\n        notes: data.notes,\n      });\n    }\n  }\n\n  goToActivityCallPage = (id: string = this.callId) => {\n    this._deps.routerInteraction.push(`/activityCallLog/${id}`);\n  };\n\n  goToActivityCallListPage = (id: string = this.callId) => {\n    this._deps.routerInteraction.push(`/activityCallLog/${id}/activeCallList`);\n  };\n\n  goToRequeueCallPage() {\n    const { gateGroupId, gateId } =\n      this._deps.evCallMonitor.callsMapping[this.callId].gate;\n    this._deps.evRequeueCall.setStatus({\n      selectedQueueGroupId: gateGroupId,\n      selectedGateId: gateId,\n      stayOnCall: false,\n      requeuing: false,\n    });\n    this._deps.evTransferCall.changeTransferType(transferTypes.queue);\n    this._redirectTransferCall('/transferCall');\n  }\n\n  goToTransferCallPage(type: EvTransferType) {\n    this._deps.evTransferCall.resetTransferStatus();\n    this._deps.evTransferCall.fetchAgentList();\n    this._redirectTransferCall(`/transferCall/${type}`);\n  }\n\n  private _redirectTransferCall(url = '') {\n    this._deps.routerInteraction.push(`/activityCallLog/${this.callId}${url}`);\n  }\n\n  goBack() {\n    // set status to 'idle' in case of EvCallMonitor does not emit ENDED\n    this._deps.evCall.setDialoutStatus(dialoutStatuses.idle);\n\n    const { backUrl } = this.getPageRole();\n    this._deps.routerInteraction.push(backUrl);\n    this.reset();\n    this._deps.evCall.activityCallId = null;\n  }\n\n  private getPageRole(): {\n    initSaveStatus: SaveStatus | CallLogMethods;\n    backUrl: string;\n    tabManagerEventSuccess: string;\n    logTypesEventSuccess: string;\n    logTypesEventFailure: string;\n  } {\n    const pageRoles = {\n      activityCallLog: {\n        initSaveStatus: saveStatus.submit,\n        backUrl: '/dialer',\n        tabManagerEventSuccess: tabManagerEvents.CALL_DISPOSITION_SUCCESS,\n        logTypesEventSuccess: logTypes.CALL_DISPOSITION_SUCCESS,\n        logTypesEventFailure: logTypes.CALL_DISPOSITION_FAILURE,\n      },\n      callLogCreate: {\n        initSaveStatus: callLogMethods.create,\n        backUrl: '/history',\n        tabManagerEventSuccess: tabManagerEvents.CALL_DISPOSITION_SUCCESS,\n        logTypesEventSuccess: logTypes.CALL_LOG_CREATE_SUCCESS,\n        logTypesEventFailure: logTypes.CALL_LOG_CREATE_FAILURE,\n      },\n    };\n\n    const { currentPath } = this._deps.routerInteraction;\n    if (currentPath.indexOf('/activityCallLog') > -1) {\n      return pageRoles.activityCallLog;\n    }\n    if (/^\\/history\\/callLog\\/.*\\/create$/.test(currentPath)) {\n      return pageRoles.callLogCreate;\n    }\n\n    // return activityCallLog by default\n    return pageRoles.activityCallLog;\n  }\n\n  async disposeCall() {\n    this._deps.evCallDisposition.disposeCall(this.callId);\n\n    const { evAgentScript } = this._deps;\n    const call = this.currentEvCall;\n    // evAgentScript.isDisplayAgentScript &&\n    if (call.scriptId) {\n      evAgentScript.setCurrentCallScript(null);\n      evAgentScript.saveScriptResult(call);\n    }\n  }\n\n  private _checkTabManagerEvent() {\n    const { event } = this._deps.tabManager;\n    if (event) {\n      // const data = event.args[0];\n      switch (event.name) {\n        case tabManagerEvents.CALL_DISPOSITION_SUCCESS:\n        case tabManagerEvents.CALL_LOG_CREATE_SUCCESS:\n          this._dispositionSuccess();\n          break;\n        case tabManagerEvents.RECORD_PAUSED:\n          this._deps.alert.success({\n            message: messageTypes.RECORD_PAUSED,\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  private _hasError() {\n    return keys(this.validated).some((key) => {\n      return !this.validated[key];\n    });\n  }\n\n  private async _submitData(id: string) {\n    try {\n      const saveFields = this._deps.evCallDisposition.callsMapping[id];\n      if (saveFields) {\n        this.changeFormStatus({\n          validated: {\n            dispositionId: !!saveFields.dispositionId,\n            notes:\n              !this.required.notes || (saveFields.notes && this.required.notes),\n          },\n        });\n      }\n\n      if (this._hasError()) {\n        return;\n      }\n      this.changeSavingStatus(saveStatus.saving);\n      await this.disposeCall();\n\n      const { tabManagerEventSuccess } = this.getPageRole();\n      this._sendTabManager(tabManagerEventSuccess);\n      this._dispositionSuccess();\n    } catch (e) {\n      const { logTypesEventFailure, initSaveStatus } = this.getPageRole();\n      this._deps.alert.danger({\n        message: logTypesEventFailure,\n        ttl: 0,\n        payload: e?.error?.status === false ? e?.error?.message : undefined,\n      });\n      this.changeSavingStatus(initSaveStatus);\n      console.error(e);\n      throw new Error(`Failed to save log.`);\n    }\n  }\n\n  private _dispositionSuccess() {\n    this.changeSavingStatus(saveStatus.saved);\n\n    const { logTypesEventSuccess } = this.getPageRole();\n    this._deps.alert.success({\n      message: logTypesEventSuccess,\n    });\n    // delay for animation with loading ui.\n    setTimeout(() => this.goBack(), 1000);\n\n    this._deps.evWorkingState.setIsPendingDisposition(false);\n  }\n\n  private _onHoldOrUnHold(type: 'hold' | 'unhold') {\n    if (this.isMultipleCalls) {\n      return this.goToActivityCallListPage();\n    }\n    this._deps.activeCallControl[type]();\n  }\n\n  private _sendTabManager(event: string, value?: any) {\n    this._deps.tabManager?.send(event, value);\n  }\n\n  async onHangup() {\n    await this._deps.activeCallControl.hangUp(\n      this.currentEvCall.session.sessionId,\n    );\n    this.changeSavingStatus(saveStatus.submit);\n  }\n\n  get agentRecording() {\n    return this.currentEvMainCall?.agentRecording;\n  }\n\n  getUIProps({ id }: { id: string }): EvActivityCallUIProps {\n    this._deps.evCall.activityCallId = id;\n\n    return {\n      scrollTo: this.scrollTo,\n      currentLog: this.activityCallLog,\n      showSmallCallControl: !this.activityCallLog?.currentEvRawCall?.endedCall,\n      currentLocale: this._deps.locale.currentLocale,\n      currentEvCall: this.currentEvCall,\n      saveStatus: this.saveStatus,\n      status: this.callStatus,\n      isInbound: this._deps.evCall.isInbound,\n      isOnMute: this._deps.evIntegratedSoftphone.muteActive,\n      isOnHold: this.isOnHold,\n      isOnActive: this.isMultipleCalls,\n      isInComingCall: this.isInComingCall,\n      smallCallControlSize: this._deps.environment.isWide ? 'medium' : 'small',\n      currentCallControlPermission: this.currentCallControlPermission,\n      disableDispose:\n        this.disableLinks || this.saveStatus === saveStatus.saving,\n      disableTransfer:\n        this.disableLinks || this.isInComingCall || !this.allowTransfer,\n      disableInternalTransfer:\n        this.disableLinks ||\n        this.isInComingCall ||\n        !this.allowTransfer ||\n        !this._deps.evTransferCall.allowInternalTransfer,\n      disableHold:\n        this.disableLinks ||\n        this.isInComingCall ||\n        !this.currentCallControlPermission.allowHoldCall,\n      disableHangup:\n        this.disableLinks || !this.currentCallControlPermission.allowHangupCall,\n      disableMute:\n        !this._deps.evAgentSession.isIntegratedSoftphone || this.disableLinks,\n      showMuteButton: this._deps.evAgentSession.isIntegratedSoftphone,\n      showRecordCall:\n        this.currentCallControlPermission.allowRecordControl ||\n        this.isDefaultRecord,\n      disableActive: this.disableLinks,\n      isRecording: this._deps.activeCallControl.isRecording,\n      disableRecordControl:\n        this.disableLinks ||\n        !this.currentCallControlPermission.allowRecordControl,\n      ivrAlertData: this.ivrAlertData,\n      disablePauseRecord:\n        this.disableLinks ||\n        !this.currentCallControlPermission.allowPauseRecord,\n      agentScriptData: this.agentScriptData,\n      recordPauseCount: this.agentRecording?.pause,\n      timeStamp: this._deps.activeCallControl.timeStamp,\n      isKeypadOpen: this.isKeypadOpen,\n      keypadValue: this.keypadValue,\n    };\n  }\n\n  getUIFunctions(): EvActivityCallUIFunctions {\n    return {\n      goBack: () => this.goBack(),\n      onMute: () => this._deps.activeCallControl.mute(),\n      onUnmute: () => this._deps.activeCallControl.unmute(),\n      onHangup: () => this.onHangup(),\n      onReject: () => this._deps.activeCallControl.reject(),\n      onHold: () => this._onHoldOrUnHold('hold'),\n      onUnHold: () => this._onHoldOrUnHold('unhold'),\n      onActive: () => this.goToActivityCallListPage(),\n      onRecord: () => this.onRecord(),\n      onStopRecord: () => this.onStopRecord(),\n      onPauseRecord: () => this.onPauseRecord(),\n      onRestartTimer: () => this.onRestartTimer(),\n      onResumeRecord: () => this.onResumeRecord(),\n      setKeypadIsOpen: (status) => this.setKeypadIsOpen(status),\n      setKeypadValue: (value) => this.setKeypadValue(value),\n      onUpdateCallLog: (data, id) => this.onUpdateCallLog(data, id),\n      disposeCall: async () => {\n        if (this.saveStatus === saveStatus.saved) {\n          return this.goBack();\n        }\n        await this._submitData(this.callId);\n      },\n      onCopySuccess: (name) => {\n        name = name.toUpperCase();\n        this._deps.alert.info({\n          message: messageTypes[`COPY_${name}_SUCCESS` as MessageTypes],\n          action: '',\n        });\n      },\n      goToRequeueCallPage: () => this.goToRequeueCallPage(),\n      goToTransferCallPage: (transferType: EvTransferType) =>\n        this.goToTransferCallPage(transferType),\n    };\n  }\n}\nexport { EvActivityCallUI };\n"],"mappings":"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","ignoreList":[]}