{"version":3,"file":"EvPresence.js","names":["_di","require","_core","_events","_enums","_callbackTypes","_trackEvents","_dec","_dec2","_dec3","_dec4","_dec5","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_initializerDefineProperty","e","i","r","l","Object","defineProperty","enumerable","configurable","writable","value","initializer","call","_classCallCheck","a","n","TypeError","_defineProperties","t","length","o","_toPropertyKey","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","keys","forEach","slice","reverse","reduce","_initializerWarningHelper","Error","EvPresence","Module","name","deps","dep","optional","computed","that","callIds","callsMapping","otherCallIds","callLogsIds","track","analytics","recordingSetting","getRecordingSettings","agentRecording","callType","trackEvents","callInboundCallConnected","outboundCallConnected","voiceConnection","loginType","isOffhook","isOffhooking","_RcModuleV","_super","get","_deps","evCallDataSource","rawCallsMapping","_this","enableCache","storageKey","beforeunloadHandler","eventEmitter","evPresenceEvents","EventEmitter","showOffHookInitError","setCurrentCallUii","uii","currentCallUii","setDialoutStatus","status","dialoutStatus","setOffhookInit","_checkBeforeunload","setOffhookTerm","isManualOffhook","setIsManualOffhook","setOffhook","setOffhooking","offhooking","addNewCall","addNewSession","session","dropSession","removeEndedCall","endedCall","setCallHoldStatus","res","clearCalls","onInitOnce","_bindSubscription","record","pause","_this2","evSubscription","subscribe","EvCallbackTypes","OFFHOOK_INIT","data","emit","alert","danger","message","messageTypes","OFFHOOK_INIT_ERROR","EARLY_UII","OFFHOOK_TERM","OFFHOOK_TERM_ERROR","console","error","ADD_SESSION","ADD_SESSION_ERROR","DROP_SESSION","DROP_SESSION_ERROR","HOLD","HOLD_ERROR","NEW_CALL","END_CALL","id","evClient","encodeUii","offhookTerm","beforeunload","add","remove","_this3","map","filter","_this4","_this5","dialoutStatuses","callConnected","RcModuleV2","storage","state","idle","action","getOwnPropertyDescriptor","exports"],"sources":["modules/EvPresence/EvPresence.ts"],"sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n  track,\n} from '@ringcentral-integration/core';\nimport { EventEmitter } from 'events';\n\nimport type { DialoutStatusesType } from '../../enums';\nimport { dialoutStatuses, messageTypes } from '../../enums';\nimport { EvCallbackTypes } from '../../lib/EvClient/enums/callbackTypes';\nimport type {\n  EvAddSessionNotification,\n  EvAgentRecording,\n  EvBaseCall,\n  EvDropSessionNotification,\n  EvEarlyUiiResponse,\n  EvEndedCall,\n  EvHoldResponse,\n  EvOffhookInitResponse,\n  EvOffhookTermResponse,\n} from '../../lib/EvClient/interfaces';\nimport { trackEvents } from '../../lib/trackEvents';\n\nimport type { Deps, Presence } from './EvPresence.interface';\n\n@Module({\n  name: 'EvPresence',\n  deps: [\n    'EvSubscription',\n    'EvCallDataSource',\n    'EvClient',\n    'Storage',\n    'Beforeunload',\n    'Alert',\n    { dep: 'PresenceOptions', optional: true },\n  ],\n})\nclass EvPresence extends RcModuleV2<Deps> implements Presence {\n  beforeunloadHandler = () => false;\n  eventEmitter = this._deps.evCallDataSource.eventEmitter;\n\n  evPresenceEvents = new EventEmitter();\n\n  showOffHookInitError = true;\n\n  get callIds() {\n    return this._deps.evCallDataSource.callIds;\n  }\n\n  get otherCallIds() {\n    return this._deps.evCallDataSource.otherCallIds;\n  }\n\n  get callLogsIds() {\n    return this._deps.evCallDataSource.callLogsIds;\n  }\n\n  get callsMapping() {\n    return this._deps.evCallDataSource.callsMapping;\n  }\n\n  get rawCallsMapping() {\n    return this._deps.evCallDataSource.rawCallsMapping;\n  }\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n      enableCache: true,\n      storageKey: 'EvPresence',\n    });\n  }\n\n  @storage\n  @state\n  currentCallUii = '';\n\n  @storage\n  @state\n  isOffhook = false;\n\n  @storage\n  @state\n  isManualOffhook = false;\n\n  @storage\n  @state\n  isOffhooking = false;\n\n  @storage\n  @state\n  dialoutStatus: DialoutStatusesType = dialoutStatuses.idle;\n\n  @action\n  setCurrentCallUii(uii: string) {\n    this.currentCallUii = uii;\n  }\n\n  @computed((that: EvPresence) => [that.callIds, that.callsMapping])\n  get calls() {\n    return this.callIds\n      .map((id) => this.callsMapping[id])\n      .filter((call) => !!call);\n  }\n\n  @computed((that: EvPresence) => [that.otherCallIds, that.callsMapping])\n  get otherCalls() {\n    return this.otherCallIds.map((id) => this.callsMapping[id]);\n  }\n\n  @computed((that: EvPresence) => [that.callLogsIds, that.callsMapping])\n  get callLogs() {\n    return this.callLogsIds.map((id) => this.callsMapping[id]);\n  }\n\n  @action\n  setDialoutStatus(status: DialoutStatusesType) {\n    if (this.dialoutStatus !== status) {\n      this.dialoutStatus = status;\n    }\n  }\n\n  @action\n  setOffhookInit() {\n    this.isOffhooking = false;\n    this.isOffhook = true;\n    this._checkBeforeunload();\n  }\n\n  @action\n  setOffhookTerm() {\n    this.isOffhooking = false;\n    this.isOffhook = false;\n    this.isManualOffhook = false;\n    this._checkBeforeunload();\n  }\n\n  @action\n  setIsManualOffhook(isManualOffhook: boolean) {\n    this.isManualOffhook = isManualOffhook;\n  }\n\n  @action\n  setOffhook(status: boolean) {\n    this.isOffhook = status;\n    this._checkBeforeunload();\n  }\n\n  @action\n  setOffhooking(offhooking: boolean) {\n    this.isOffhooking = offhooking;\n  }\n\n  @track((that: EvPresence, call: EvBaseCall) => (analytics) => {\n    const recordingSetting = that.getRecordingSettings(call.agentRecording);\n    return [\n      call.callType === 'INBOUND'\n        ? trackEvents.callInboundCallConnected\n        : trackEvents.outboundCallConnected,\n      {\n        recordingSetting,\n        voiceConnection: analytics.loginType,\n        isOffhook: that.isOffhook,\n        isOffhooking: that.isOffhooking,\n      },\n    ];\n  })\n  addNewCall(call: EvBaseCall) {\n    this._deps.evCallDataSource.addNewCall(call);\n  }\n\n  addNewSession(session: EvAddSessionNotification) {\n    this._deps.evCallDataSource.addNewSession(session);\n  }\n\n  dropSession(dropSession: EvDropSessionNotification) {\n    this._deps.evCallDataSource.dropSession(dropSession);\n  }\n\n  removeEndedCall(endedCall: EvEndedCall) {\n    this._deps.evCallDataSource.removeEndedCall(endedCall);\n  }\n\n  setCallHoldStatus(res: EvHoldResponse) {\n    this._deps.evCallDataSource.setCallHoldStatus(res);\n  }\n\n  clearCalls() {\n    this._deps.evCallDataSource.clearCalls();\n  }\n\n  override onInitOnce() {\n    this._bindSubscription();\n  }\n\n  getRecordingSettings(record: EvAgentRecording) {\n    let recordingSetting = '';\n    if (record.agentRecording) {\n      if (record.default === 'ON') {\n        if (record.pause) {\n          recordingSetting = 'Yes - Record Call (Agent Pause)';\n        } else {\n          recordingSetting = 'Agent Triggered (Default: Record)';\n        }\n      } else {\n        recordingSetting = \"Agent Triggered (Default: Don't Record)\";\n      }\n    } else if (!record.agentRecording) {\n      if (record.default === 'ON') {\n        recordingSetting = 'Yes - Record Full Call';\n      } else {\n        recordingSetting = \"No - Don't Record Call\";\n      }\n    }\n    return recordingSetting;\n  }\n\n  private _bindSubscription() {\n    this._deps.evSubscription\n      .subscribe(\n        EvCallbackTypes.OFFHOOK_INIT,\n        (data: EvOffhookInitResponse) => {\n          this.evPresenceEvents.emit(EvCallbackTypes.OFFHOOK_INIT, data);\n          if (data.status === 'OK') {\n            this.setOffhookInit();\n          } else {\n            // when that is reject integrated softphone, we not alert error\n            if (this.showOffHookInitError) {\n              this._deps.alert.danger({\n                message: messageTypes.OFFHOOK_INIT_ERROR,\n              });\n            }\n            this.setOffhookTerm();\n            this.showOffHookInitError = true;\n          }\n        },\n      )\n      .subscribe(EvCallbackTypes.EARLY_UII, (data: EvEarlyUiiResponse) => {\n        if (data.status === 'OK') {\n          this.setCurrentCallUii(data.uii);\n        }\n      })\n      .subscribe(\n        EvCallbackTypes.OFFHOOK_TERM,\n        (data: EvOffhookTermResponse) => {\n          if (data.status === 'OK') {\n            this.setOffhookTerm();\n          } else {\n            this._deps.alert.danger({\n              message: messageTypes.OFFHOOK_TERM_ERROR,\n            });\n            console.error(data);\n          }\n        },\n      )\n      .subscribe(EvCallbackTypes.ADD_SESSION, (data) => {\n        if (data.status === 'OK') {\n          this.addNewSession(data);\n        } else {\n          this._deps.alert.danger({\n            message: messageTypes.ADD_SESSION_ERROR,\n          });\n        }\n      })\n      .subscribe(EvCallbackTypes.DROP_SESSION, (data) => {\n        if (data.status === 'OK') {\n          this.dropSession(data);\n        } else {\n          this._deps.alert.danger({\n            message: messageTypes.DROP_SESSION_ERROR,\n          });\n        }\n      })\n      .subscribe(EvCallbackTypes.HOLD, (data) => {\n        if (data.status === 'OK') {\n          this.setCallHoldStatus(data);\n        } else {\n          this._deps.alert.danger({\n            message: messageTypes.HOLD_ERROR,\n          });\n        }\n      })\n      .subscribe(EvCallbackTypes.NEW_CALL, (data) => {\n        this.addNewCall(data);\n      })\n      .subscribe(EvCallbackTypes.END_CALL, (data) => {\n        const id = this._deps.evClient.encodeUii(data);\n        if (!this.callsMapping[id]) return;\n        if (!this.isManualOffhook) {\n          this._deps.evClient.offhookTerm();\n        }\n        this.removeEndedCall(data);\n      });\n  }\n\n  private _checkBeforeunload() {\n    if (this.isOffhook) {\n      this._deps.beforeunload.add(this.beforeunloadHandler);\n    } else {\n      this._deps.beforeunload.remove(this.beforeunloadHandler);\n    }\n  }\n\n  get isCallConnected() {\n    return this.dialoutStatus === dialoutStatuses.callConnected;\n  }\n}\n\nexport { EvPresence };\n"],"mappings":"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","ignoreList":[]}