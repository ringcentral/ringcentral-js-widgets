{"version":3,"sources":["modules/ContactDetailsUI/ContactDetailsUI.ts"],"names":["DEFAULT_DIALER_ROUTE","DEFAULT_COMPOSE_TEXT_ROUTE","ContactDetailsUI","name","deps","dep","optional","trackEvents","clickToCall","clickToSMS","readyState","contact","currentContactReadyState","currentContact","_setCurrentContact","contactReadyStates","pending","contactType","contactId","loading","_deps","contacts","findContact","sourceName","appFeatures","isCDCEnabled","phoneNumbers","length","filter","phone","hidden","loaded","getProfileImage","getPresence","id","type","direct","routerInteraction","push","phoneNumber","recipient","call","isIdle","contactDetailsUIOptions","dialerRoute","dialerUI","_trackClickToCall","composeTextRoute","composeText","addToNumber","typingToNumber","cleanTypingToNumber","_trackClickToSMS","currentLocale","locale","isMultipleSiteEnabled","extensionInfo","isCallButtonDisabled","connectivityManager","isOfflineMode","isWebphoneUnavailableMode","isWebphoneInitializing","rateLimiter","throttling","disableLinks","isVoipOnlyMode","showSpinner","ready","contactSearch","params","formatNumber","regionSettings","countryCode","site","code","onVisitPage","initCurrentContact","onLeavingPage","resetCurrentContact","canTextButtonShow","phoneType","outboundSmsPermission","hasOutboundSMSPermission","internalSmsPermission","hasInternalSMSPermission","isClickToTextEnabled","phoneTypes","fax","extension","canCallButtonShow","isClickToDialEnabled","isCallingEnabled","onBackClick","goBack","onClickToDial","handleClickToDial","onClickToSMS","handleClickToSMS","RcUIModuleV2","state","action","background","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAiBA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,oBAAoB,GAAG,SAA7B;AACA,IAAMC,0BAA0B,GAAG,cAAnC;IAuBaC,gB,WArBZ,gBAAO;AACNC,EAAAA,IAAI,EAAE,kBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,mBAFI,EAGJ,eAHI,EAIJ,UAJI,EAKJ,eALI,EAMJ,aANI,EAOJ,aAPI,EAQJ,gBARI,EASJ,qBATI,EAUJ,MAVI,EAWJ,UAXI,EAYJ,aAZI,EAaJ;AACEC,IAAAA,GAAG,EAAE,yBADP;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAbI;AAFA,CAAP,C,UAiHE,iBAAMC,yBAAYC,WAAlB,C,UAGA,iBAAMD,yBAAYE,UAAlB,C;;;;;AA9FD,4BAAYL,IAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAM;AAAEA,MAAAA,IAAI,EAAJA;AAAF,KAAN;;AADsB;;AAAA;;AAAA;AAEvB;;;;uCAUCM,U,EACAC,O,EACA;AACA,WAAKC,wBAAL,GAAgCF,UAAhC;AACA,WAAKG,cAAL,GAAsBF,OAAtB;AACD;;;;;;;;;AAIC,qBAAKG,kBAAL,CAAwBC,uCAAmBC,OAA3C,EAAoD,IAApD;;;;;;;;;;;;;;;;;;;;;;;;;AAIyBC,gBAAAA,W,QAAAA,W,EAAaC,S,QAAAA,S;;sBAClC,KAAKN,wBAAL,KAAkCG,uCAAmBC,O;;;;;;;;AAGzD,qBAAKF,kBAAL,CAAwBC,uCAAmBI,OAA3C,EAAoD,IAApD;;;uBACsB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,WAApB,CAAgC;AACpDC,kBAAAA,UAAU,EAAEN,WADwC;AAEpDC,kBAAAA,SAAS,EAATA;AAFoD,iBAAhC,C;;;AAAhBP,gBAAAA,O;;AAKN;AACA,oBAAI,KAAKS,KAAL,CAAWI,WAAX,CAAuBC,YAAvB,IAAuCd,OAAO,CAACe,YAAR,CAAqBC,MAAhE,EAAwE;AACtEhB,kBAAAA,OAAO,CAACe,YAAR,GAAuBf,OAAO,CAACe,YAAR,CAAqBE,MAArB,CACrB,UAACC,KAAD;AAAA,2BAAW,CAACA,KAAK,CAACC,MAAlB;AAAA,mBADqB,CAAvB;AAGD,iB,CACD;;;sBACI,KAAKlB,wBAAL,KAAkCG,uCAAmBI,O;;;;;;;;AAGzD,qBAAKL,kBAAL,CAAwBC,uCAAmBgB,MAA3C,EAAmDpB,OAAnD;;AACA,oBAAIA,OAAJ,EAAa;AACX,uBAAKS,KAAL,CAAWC,QAAX,CAAoBW,eAApB,CAAoCrB,OAApC,EAA6C,KAA7C;;AACA,uBAAKS,KAAL,CAAWC,QAAX,CAAoBY,WAApB,CAAgCtB,OAAhC,EAAyC,KAAzC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;AAIwBuB,gBAAAA,E,SAAAA,E,EAAIC,I,SAAAA,I,uBAAMC,M,EAAAA,M,6BAAS,K;;AAC5C,qBAAKhB,KAAL,CAAWiB,iBAAX,CAA6BC,IAA7B,qBACeH,IADf,cACuBD,EADvB,SAC4BE,MAAM,GAAG,cAAH,GAAoB,EADtD;;;;;;;;;;;;;;;;;;;yGAMsBzB,O,EAAuB4B,W;;;;;;;AACvCC,gBAAAA,S,mCACD7B,O;AACH4B,kBAAAA,WAAW,EAAXA;;;AAEF,oBAAI,KAAKnB,KAAL,CAAWqB,IAAX,CAAgBC,MAApB,EAA4B;AAC1B,uBAAKtB,KAAL,CAAWiB,iBAAX,CAA6BC,IAA7B,oDACE,KAAKlB,KAAL,CAAWuB,uBADb,2DACE,uBAAoCC,WADtC,yEACqD5C,oBADrD;;AAGA,uBAAKoB,KAAL,CAAWyB,QAAX,CAAoBJ,IAApB,CAAyB;AAAED,oBAAAA,SAAS,EAATA;AAAF,mBAAzB;AACD;;AACD,qBAAKM,iBAAL;;;;;;;;;;;;;;;;;;;wGAIqBnC,O,EAAuB4B,W;;;;;;;;AACtCC,gBAAAA,S,mCACD7B,O;AACH4B,kBAAAA,WAAW,EAAXA;;;AAEF,qBAAKnB,KAAL,CAAWiB,iBAAX,CAA6BC,IAA7B,qDACE,KAAKlB,KAAL,CAAWuB,uBADb,2DACE,uBAAoCI,gBADtC,2EAEI9C,0BAFJ;;AAIA,qBAAKmB,KAAL,CAAW4B,WAAX,CAAuBC,WAAvB,CAAmCT,SAAnC;;AACA,oBAAI,KAAKpB,KAAL,CAAW4B,WAAX,CAAuBE,cAAvB,KAA0CV,SAAS,CAACD,WAAxD,EAAqE;AACnE,uBAAKnB,KAAL,CAAW4B,WAAX,CAAuBG,mBAAvB;AACD;;AACD,qBAAKC,gBAAL;;;;;;;;;;;;;;;;;;wCAI0B,CAAE;;;uCAGH,CAAE;;;iCAES;AAAA;;AACpC,aAAO;AACLC,QAAAA,aAAa,EAAE,KAAKjC,KAAL,CAAWkC,MAAX,CAAkBD,aAD5B;AAEL1C,QAAAA,OAAO,EAAE,KAAKE,cAFT;AAGL0C,QAAAA,qBAAqB,2BACnB,KAAKnC,KAAL,CAAWoC,aAAX,CAAyBD,qBADN,yEAC+B,KAJ/C;AAKLE,QAAAA,oBAAoB,EAAE,CAAC,EACrB,+BAAKrC,KAAL,CAAWsC,mBAAX,gFAAgCC,aAAhC,gCACA,KAAKvC,KAAL,CAAWsC,mBADX,2DACA,uBAAgCE,yBADhC,gCAEA,KAAKxC,KAAL,CAAWsC,mBAFX,2DAEA,uBAAgCG,sBAFhC,+BAGA,KAAKzC,KAAL,CAAW0C,WAHX,0DAGA,sBAAwBC,UAHxB,CADqB,CALlB;AAWLC,QAAAA,YAAY,EAAE,CAAC,EACb,gCAAK5C,KAAL,CAAWsC,mBAAX,kFAAgCC,aAAhC,gCACA,KAAKvC,KAAL,CAAWsC,mBADX,2DACA,uBAAgCO,cADhC,gCAEA,KAAK7C,KAAL,CAAW0C,WAFX,2DAEA,uBAAwBC,UAFxB,CADa,CAXV;AAgBLG,QAAAA,WAAW,EAAE,EACX,KAAKtD,wBAAL,KAAkCG,uCAAmBgB,MAArD,IACA,KAAKX,KAAL,CAAWkC,MAAX,CAAkBa,KADlB,IAEA,KAAK/C,KAAL,CAAWgD,aAAX,CAAyBD,KAFzB,IAGA,KAAK/C,KAAL,CAAWI,WAAX,CAAuB2C,KAJZ;AAhBR,OAAP;AAuBD;;;0CAE2E;AAAA;;AAAA,UAA3DE,MAA2D,SAA3DA,MAA2D;AAC1E,aAAO;AACLC,QAAAA,YAAY,EAAE,sBAAC/B,WAAD;AAAA;;AAAA,iBACZ,sCACEA,WADF,EAEE,MAAI,CAACnB,KAAL,CAAWmD,cAAX,CAA0BC,WAF5B,EAGE,MAAI,CAACpD,KAAL,CAAWoC,aAAX,CAAyBD,qBAH3B,2BAIE,MAAI,CAACnC,KAAL,CAAWoC,aAAX,CAAyBiB,IAJ3B,0DAIE,sBAA+BC,IAJjC,CADY;AAAA,SADT;AAQLC,QAAAA,WAAW,EAAE,uBAAM;AACjB,UAAA,MAAI,CAACC,kBAAL,CAAwBP,MAAxB;AACD,SAVI;AAWLQ,QAAAA,aAAa,EAAE,yBAAM;AACnB,UAAA,MAAI,CAACC,mBAAL;AACD,SAbI;AAcLC,QAAAA,iBAAiB,EAAE,2BAACC,SAAD,EAAuB;AACxC,cAAMC,qBAAqB,GACzB,MAAI,CAAC7D,KAAL,CAAWI,WAAX,CAAuB0D,wBADzB;AAEA,cAAMC,qBAAqB,GACzB,MAAI,CAAC/D,KAAL,CAAWI,WAAX,CAAuB4D,wBADzB,CAHwC,CAKxC;;AACA,cAAMC,oBAAoB,GAAG,CAAC,CAAC,MAAI,CAACjE,KAAL,CAAW4B,WAA1C;AACA,iBACEqC,oBAAoB,IACpBL,SAAS,KAAKM,uBAAWC,GADzB,KAECP,SAAS,KAAKM,uBAAWE,SAAzB,GACGL,qBADH,GAEGF,qBAJJ,CADF;AAOD,SA5BI;AA6BLQ,QAAAA,iBAAiB,EAAE,2BAACT,SAAD,EAAuB;AACxC,cAAMU,oBAAoB,GAAG,CAAC,EAC5B,MAAI,CAACtE,KAAL,CAAWyB,QAAX,IAAuB,MAAI,CAACzB,KAAL,CAAWI,WAAX,CAAuBmE,gBADlB,CAA9B;AAGA,iBAAOD,oBAAoB,IAAIV,SAAS,KAAKM,uBAAWC,GAAxD;AACD,SAlCI;AAmCLK,QAAAA,WAAW,EAAE,uBAAM;AACjB,UAAA,MAAI,CAACxE,KAAL,CAAWiB,iBAAX,CAA6BwD,MAA7B;AACD,SArCI;AAsCLC,QAAAA,aAAa,EAAE,uBAACnF,OAAD,EAAwB4B,WAAxB;AAAA,iBACb,MAAI,CAACwD,iBAAL,CAAuBpF,OAAvB,EAAgC4B,WAAhC,CADa;AAAA,SAtCV;AAwCLyD,QAAAA,YAAY,EAAE,sBAACrF,OAAD,EAAwB4B,WAAxB;AAAA,iBACZ,MAAI,CAAC0D,gBAAL,CAAsBtF,OAAtB,EAA+B4B,WAA/B,CADY;AAAA;AAxCT,OAAP;AA2CD;;;;EAxKmC2D,kB,kFAKnCC,W;;;;;WAC8B,I;;6FAE9BA,W;;;;;WAC6CpF,uCAAmBC,O;;wEAEhEoF,Y,sKASAC,sB,sKAKAA,sB,qKA4BAC,mB,oKAOAA,mB,kKAeAA,mB","sourcesContent":["import { phoneTypes } from '@ringcentral-integration/commons/enums/phoneTypes';\nimport { ContactModel } from '@ringcentral-integration/commons/interfaces/Contact.model';\nimport background from '@ringcentral-integration/commons/lib/background';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport proxify from '@ringcentral-integration/commons/lib/proxy/proxify';\nimport {\n  action,\n  RcUIModuleV2,\n  state,\n  track,\n} from '@ringcentral-integration/core';\n\nimport {\n  ContactDetailsViewFunctionProps,\n  ContactDetailsViewProps,\n} from '../../components/ContactDetailsView/ContactDetailsView.interface';\nimport {\n  Deps,\n  GetUIFunctions,\n  InitParams,\n  RouteParams,\n} from './ContactDetailsUI.interface';\nimport { ContactReadyState, contactReadyStates } from './contactReadyStates';\nimport { formatContactPhoneNumber } from './helper';\nimport { trackEvents } from './trackEvents';\n\nconst DEFAULT_DIALER_ROUTE = '/dialer';\nconst DEFAULT_COMPOSE_TEXT_ROUTE = '/composeText';\n\n@Module({\n  name: 'ContactDetailsUI',\n  deps: [\n    'Locale',\n    'RouterInteraction',\n    'ContactSearch',\n    'Contacts',\n    'ExtensionInfo',\n    'AppFeatures',\n    'RateLimiter',\n    'RegionSettings',\n    'ConnectivityManager',\n    'Call',\n    'DialerUI',\n    'ComposeText',\n    {\n      dep: 'ContactDetailsUIOptions',\n      optional: true,\n    },\n  ],\n})\nexport class ContactDetailsUI extends RcUIModuleV2<Deps> {\n  constructor(deps: Deps) {\n    super({ deps });\n  }\n\n  @state\n  currentContact: ContactModel = null;\n\n  @state\n  currentContactReadyState: ContactReadyState = contactReadyStates.pending;\n\n  @action\n  private _setCurrentContact(\n    readyState: ContactReadyState,\n    contact: ContactModel,\n  ) {\n    this.currentContactReadyState = readyState;\n    this.currentContact = contact;\n  }\n\n  @background\n  async resetCurrentContact() {\n    this._setCurrentContact(contactReadyStates.pending, null);\n  }\n\n  @background\n  async initCurrentContact({ contactType, contactId }: InitParams) {\n    if (this.currentContactReadyState !== contactReadyStates.pending) {\n      return;\n    }\n    this._setCurrentContact(contactReadyStates.loading, null);\n    const contact = await this._deps.contacts.findContact({\n      sourceName: contactType,\n      contactId,\n    });\n\n    // hide hidden phone numbers when cdc is enabled\n    if (this._deps.appFeatures.isCDCEnabled && contact.phoneNumbers.length) {\n      contact.phoneNumbers = contact.phoneNumbers.filter(\n        (phone) => !phone.hidden,\n      );\n    }\n    // ignore result when it is reset during loading\n    if (this.currentContactReadyState !== contactReadyStates.loading) {\n      return;\n    }\n    this._setCurrentContact(contactReadyStates.loaded, contact as ContactModel);\n    if (contact) {\n      this._deps.contacts.getProfileImage(contact, false);\n      this._deps.contacts.getPresence(contact, false);\n    }\n  }\n\n  @proxify\n  async showContactDetails({ id, type, direct = false }: RouteParams) {\n    this._deps.routerInteraction.push(\n      `/contacts/${type}/${id}${direct ? '?direct=true' : ''}`,\n    );\n  }\n\n  @proxify\n  async handleClickToDial(contact: ContactModel, phoneNumber: string) {\n    const recipient = {\n      ...contact,\n      phoneNumber,\n    };\n    if (this._deps.call.isIdle) {\n      this._deps.routerInteraction.push(\n        this._deps.contactDetailsUIOptions?.dialerRoute ?? DEFAULT_DIALER_ROUTE,\n      );\n      this._deps.dialerUI.call({ recipient });\n    }\n    this._trackClickToCall();\n  }\n\n  @proxify\n  async handleClickToSMS(contact: ContactModel, phoneNumber: string) {\n    const recipient = {\n      ...contact,\n      phoneNumber,\n    };\n    this._deps.routerInteraction.push(\n      this._deps.contactDetailsUIOptions?.composeTextRoute ??\n        DEFAULT_COMPOSE_TEXT_ROUTE,\n    );\n    this._deps.composeText.addToNumber(recipient);\n    if (this._deps.composeText.typingToNumber === recipient.phoneNumber) {\n      this._deps.composeText.cleanTypingToNumber();\n    }\n    this._trackClickToSMS();\n  }\n\n  @track(trackEvents.clickToCall)\n  private _trackClickToCall() {}\n\n  @track(trackEvents.clickToSMS)\n  private _trackClickToSMS() {}\n\n  getUIProps(): ContactDetailsViewProps {\n    return {\n      currentLocale: this._deps.locale.currentLocale,\n      contact: this.currentContact,\n      isMultipleSiteEnabled:\n        this._deps.extensionInfo.isMultipleSiteEnabled ?? false,\n      isCallButtonDisabled: !!(\n        this._deps.connectivityManager?.isOfflineMode ||\n        this._deps.connectivityManager?.isWebphoneUnavailableMode ||\n        this._deps.connectivityManager?.isWebphoneInitializing ||\n        this._deps.rateLimiter?.throttling\n      ),\n      disableLinks: !!(\n        this._deps.connectivityManager?.isOfflineMode ||\n        this._deps.connectivityManager?.isVoipOnlyMode ||\n        this._deps.rateLimiter?.throttling\n      ),\n      showSpinner: !(\n        this.currentContactReadyState === contactReadyStates.loaded &&\n        this._deps.locale.ready &&\n        this._deps.contactSearch.ready &&\n        this._deps.appFeatures.ready\n      ),\n    };\n  }\n\n  getUIFunctions({ params }: GetUIFunctions): ContactDetailsViewFunctionProps {\n    return {\n      formatNumber: (phoneNumber: string) =>\n        formatContactPhoneNumber(\n          phoneNumber,\n          this._deps.regionSettings.countryCode,\n          this._deps.extensionInfo.isMultipleSiteEnabled,\n          this._deps.extensionInfo.site?.code,\n        ),\n      onVisitPage: () => {\n        this.initCurrentContact(params);\n      },\n      onLeavingPage: () => {\n        this.resetCurrentContact();\n      },\n      canTextButtonShow: (phoneType: string) => {\n        const outboundSmsPermission =\n          this._deps.appFeatures.hasOutboundSMSPermission;\n        const internalSmsPermission =\n          this._deps.appFeatures.hasInternalSMSPermission;\n        // guess this statement is to avoid exception\n        const isClickToTextEnabled = !!this._deps.composeText;\n        return (\n          isClickToTextEnabled &&\n          phoneType !== phoneTypes.fax &&\n          (phoneType === phoneTypes.extension\n            ? internalSmsPermission\n            : outboundSmsPermission)\n        );\n      },\n      canCallButtonShow: (phoneType: string) => {\n        const isClickToDialEnabled = !!(\n          this._deps.dialerUI && this._deps.appFeatures.isCallingEnabled\n        );\n        return isClickToDialEnabled && phoneType !== phoneTypes.fax;\n      },\n      onBackClick: () => {\n        this._deps.routerInteraction.goBack();\n      },\n      onClickToDial: (contact: ContactModel, phoneNumber: string) =>\n        this.handleClickToDial(contact, phoneNumber),\n      onClickToSMS: (contact: ContactModel, phoneNumber: string) =>\n        this.handleClickToSMS(contact, phoneNumber),\n    };\n  }\n}\n"],"file":"ContactDetailsUI.js"}