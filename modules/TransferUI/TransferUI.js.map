{"version":3,"sources":["modules/TransferUI/TransferUI.ts"],"names":["TransferUI","name","deps","dep","optional","that","_params","sessionId","type","_deps","activeCallControl","activeSession","webphone","sessions","params","enableWarmTransfer","currentLocale","locale","searchContactList","contactSearch","sortedResult","session","controlBusy","busy","setActiveSessionId","onTransfer","transferNumber","transfer","onWarmTransfer","startWarmTransfer","onBack","routerInteraction","goBack","onCallEnd","replace","formatPhone","phoneNumber","areaCode","regionSettings","countryCode","searchContact","searchString","debouncedSearch","find","id","RcUIModuleV2"],"mappings":"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","sourcesContent":["import { Module } from '@ringcentral-integration/commons/lib/di';\nimport formatNumber from '@ringcentral-integration/commons/lib/formatNumber';\nimport {\n  computed,\n  RcUIModuleV2,\n  UIFunctions,\n  UIProps,\n} from '@ringcentral-integration/core';\n\nimport {\n  Deps,\n  TransferUIContainerProps,\n  TransferUIPanelProps,\n} from './TransferUI.interface';\n\n@Module({\n  name: 'TransferUI',\n  deps: [\n    'Locale',\n    'RegionSettings',\n    'RouterInteraction',\n    { dep: 'ContactSearch', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'ActiveCallControl', optional: true },\n  ],\n})\nexport class TransferUI extends RcUIModuleV2<Deps> {\n  private _params: TransferUIContainerProps['params'] = {};\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n  }\n\n  @computed((that: TransferUI) => [\n    that._params.sessionId,\n    that._params.type,\n    that._deps.activeCallControl?.activeSession,\n    that._deps.webphone?.sessions,\n  ])\n  get session() {\n    const { sessionId, type = 'active' } = this._params;\n\n    if (type === 'active' && this._deps.activeCallControl) {\n      return this._deps.activeCallControl.activeSession;\n    }\n\n    if (type === 'webphone' && this._deps.webphone) {\n      return this._deps.webphone.sessions.find(\n        (session) => session.id === sessionId,\n      );\n    }\n\n    return null;\n  }\n\n  getUIProps({\n    params = {},\n    enableWarmTransfer = false,\n  }: TransferUIContainerProps): UIProps<TransferUIPanelProps> {\n    this._params = params;\n    const { sessionId, type = 'active' } = params;\n\n    return {\n      sessionId,\n      currentLocale: this._deps.locale.currentLocale,\n      searchContactList: this._deps.contactSearch?.sortedResult,\n      session: this.session,\n      controlBusy: this._deps.activeCallControl?.busy || false,\n      enableWarmTransfer:\n        enableWarmTransfer && type === 'webphone' && !!this._deps.webphone,\n    };\n  }\n\n  getUIFunctions({\n    params: { type = 'active' },\n  }): UIFunctions<TransferUIPanelProps> {\n    return {\n      setActiveSessionId: (sessionId) => {\n        if (type === 'active') {\n          this._deps.activeCallControl?.setActiveSessionId(sessionId);\n        }\n      },\n      onTransfer: (transferNumber, sessionId) => {\n        if (type === 'active') {\n          this._deps.activeCallControl?.transfer(transferNumber, sessionId);\n          return;\n        }\n\n        if (type === 'webphone') {\n          this._deps.webphone?.transfer(transferNumber, sessionId);\n        }\n      },\n      onWarmTransfer: (transferNumber, sessionId) => {\n        this._deps.webphone?.startWarmTransfer(transferNumber, sessionId);\n      },\n      onBack: () => {\n        this._deps.routerInteraction.goBack();\n      },\n      onCallEnd: () => {\n        this._deps.routerInteraction.replace(\n          type === 'active' ? '/calls' : '/dialer',\n        );\n      },\n      formatPhone: (phoneNumber) =>\n        formatNumber({\n          phoneNumber,\n          areaCode: this._deps.regionSettings.areaCode,\n          countryCode: this._deps.regionSettings.countryCode,\n        }),\n      searchContact: (searchString) => {\n        this._deps.contactSearch?.debouncedSearch({ searchString });\n      },\n    };\n  }\n}\n"],"file":"TransferUI.js"}