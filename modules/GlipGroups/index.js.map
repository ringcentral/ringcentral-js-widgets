{"version":3,"file":"index.js","names":["_utils","require","_moduleStatuses","_interopRequireDefault","_di","_ensureExist","_isBlank","_Pollable2","_proxify","_selector","_actionTypes","_getReducer","_interopRequireWildcard","_dec","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_initializerDefineProperty","target","property","descriptor","context","enumerable","configurable","writable","initializer","_objectWithoutProperties","source","excluded","_objectWithoutPropertiesLoose","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","sourceKeys","keys","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","_toPropertyKey","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_initializerWarningHelper","Error","_applyDecoratedDescriptor","decorators","forEach","slice","reverse","reduce","decorator","Symbol","iterator","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","_e","f","normalCompletion","didErr","step","next","_e2","minLen","_arrayLikeToArray","toString","name","from","test","arr","len","arr2","ownKeys","object","enumerableOnly","symbols","filter","sym","push","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","glipGroupRegExp","subscriptionFilter","DEFAULT_PER_PAGE","DEFAULT_TTL","DEFAULT_RETRY","DEFAULT_RECORD_COUNT_PER_REQ","DEFAULT_PRELOAD_POSTS_DELAY_TTL","formatGroup","group","personsMap","postsMap","ownerId","id","detailMembers","members","memberId","isMe","newGroup","updatedTime","Date","lastModifiedTime","getTime","latestPost","creator","creatorId","postCreationTime","creationTime","getUniqueMemberIds","groups","memberIds","memberIdsMap","searchPosts","searchFilter","posts","_iterator","_step","post","text","toLowerCase","mentions","mentionNames","map","m","join","GlipGroups","Module","deps","dep","optional","_Pollable","_super","_ref","_this","auth","subscription","client","tabManager","glipPersons","glipPosts","storage","appFeatures","connectivityMonitor","_ref$timeToRetry","timeToRetry","_ref$ttl","ttl","_ref$polling","polling","_ref$disableCache","disableCache","_ref$perPage","perPage","_ref$recordCountPerRe","recordCountPerReq","_ref$preloadPosts","preloadPosts","_ref$preloadPostsDela","preloadPostsDelayTtl","options","actionTypes","_auth","ensureExist","_client","_subscription","_appFeatures","_connectivityMonitor","_glipPersons","_glipPosts","_tabManager","_ttl","_timeToRetry","_polling","_perPage","_recordCountPerReq","_preloadPosts","_preloadedPosts","_preloadPostsDelayTtl","_promise","_lastMessage","_subscriptionFilters","_storage","_dataStorageKey","_timestampStorageKey","_reducer","getReducer","registerReducer","reducer","getDataReducer","getTimestampReducer","timestamp","data","addNewPostListener","onNewPost","initialize","_this2","store","subscribe","_onStateChange","_onStateChange2","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","_shouldInit","dispatch","type","init","_init","_isDataReady","initSuccess","_onDataReady","_shouldReset","_clearTimeout","resetSuccess","_shouldHandleSubscriptionMessage","_processSubscription","ready","_connectivity","connectivity","abrupt","fetchData","_preloadGroupPosts","stop","loggedIn","_readyCheckFn","pending","message","loadPersons","groupMemberIds","_subscriptionHandleFn2","_callee2","_message$body","eventType","_callee2$","_context2","event","body","removeGroup","updateGroup","loadPosts","_subscriptionHandleFn","_x","_shouldFetch","active","status","moduleStatuses","initializing","_init2","_callee3","_callee3$","_context3","_hasPermission","t0","console","_retry","_startPolling","_preloadGroupPosts2","_callee4","force","_iterator2","_step2","_callee4$","_context4","sleep","fetchPosts","readTimeMap","updateReadTime","now","finish","_x2","updateFilter","_ref2","pageNumber","updateCurrentGroupId","groupId","lastGroupId","currentGroupId","lastGroupPosts","currentGroupPosts","currentGroup","_fetchFunction2","_callee5","_callee5$","_context5","glip","list","recordCount","sent","_fetchFunction","_fetchData2","_callee6","_callee6$","_context6","fetch","fetchSuccess","fetchError","_fetchData","_fetchData3","_callee7","_callee7$","_context7","_startChat","_callee8","personId","_callee8$","_context8","startChat","_x3","_createTeam","_callee9","_args9","_callee9$","_context9","isPublic","description","createTeam","_x4","_x5","state","getItem","hasGlipPermission","Pollable","proxify","selector","_this3","_this4","allGroups","isBlank","filterString","groupUsernames","concat","firstName","lastName","_this5","filteredGroups","sortedGroups","sort","a","b","_this6","_this7","noTeamGroups","g","_this8","find","_this9","reversePosts","sentByMe","_this10","readTime","unread","_this11","groupsWithUnread","exports"],"sources":["modules/GlipGroups/index.ts"],"sourcesContent":["import { sleep } from '@ringcentral-integration/utils';\n\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport { isBlank } from '../../lib/isBlank';\nimport Pollable from '../../lib/Pollable';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport { actionTypes } from './actionTypes';\nimport getReducer, { getDataReducer, getTimestampReducer } from './getReducer';\n\nconst glipGroupRegExp = /glip\\/groups$/;\nconst subscriptionFilter = '/restapi/v1.0/glip/groups';\n\nconst DEFAULT_PER_PAGE = 20;\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_RETRY = 62 * 1000;\nconst DEFAULT_RECORD_COUNT_PER_REQ = 250;\nconst DEFAULT_PRELOAD_POSTS_DELAY_TTL = 800;\n\nfunction formatGroup(group, personsMap, postsMap = {}, ownerId) {\n  if (!group || !group.id) {\n    return {};\n  }\n  const detailMembers = [];\n  if (group.members) {\n    group.members.forEach((memberId) => {\n      if (personsMap[memberId]) {\n        detailMembers.push({\n          ...personsMap[memberId],\n          isMe: ownerId === memberId,\n        });\n      }\n    });\n  }\n  const newGroup = {\n    ...group,\n    detailMembers,\n    updatedTime: new Date(group.lastModifiedTime).getTime(),\n  };\n  const latestPost = postsMap[group.id] && postsMap[group.id][0];\n  if (latestPost) {\n    newGroup.latestPost = {\n      ...latestPost,\n      creator: personsMap[latestPost.creatorId],\n    };\n    const postCreationTime = new Date(latestPost.creationTime).getTime();\n    if (postCreationTime > newGroup.updatedTime) {\n      newGroup.updatedTime = postCreationTime;\n    }\n  }\n  return newGroup;\n}\n\nfunction getUniqueMemberIds(groups) {\n  const memberIds = [];\n  const memberIdsMap = {};\n  groups.forEach((group) => {\n    group.members.forEach((memberId) => {\n      if (memberIdsMap[memberId]) {\n        return;\n      }\n      memberIdsMap[memberId] = true;\n      memberIds.push(memberId);\n    });\n  });\n  return memberIds;\n}\n\nfunction searchPosts(searchFilter, posts) {\n  let result = false;\n  for (const post of posts) {\n    if (post.text && post.text.toLowerCase().indexOf(searchFilter) > -1) {\n      result = true;\n      break;\n    }\n    if (post.mentions && post.mentions.length > 0) {\n      const mentionNames = post.mentions\n        .map((m) => m.name)\n        .join(' ')\n        .toLowerCase();\n      if (mentionNames.indexOf(searchFilter) > -1) {\n        result = true;\n        break;\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * @class\n * @description Accound info managing module.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Client',\n    'Subscription',\n    'AppFeatures',\n    { dep: 'ConnectivityMonitor', optional: true },\n    { dep: 'Storage', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'GlipPersons', optional: true },\n    { dep: 'GlipPosts', optional: true },\n    { dep: 'GLipGroupsOptions', optional: true },\n  ],\n})\nexport default class GlipGroups extends Pollable {\n  constructor({\n    auth,\n    subscription,\n    client,\n    tabManager,\n    glipPersons,\n    glipPosts,\n    storage,\n    appFeatures,\n    connectivityMonitor,\n    timeToRetry = DEFAULT_RETRY,\n    ttl = DEFAULT_TTL,\n    polling = false,\n    disableCache = false,\n    perPage = DEFAULT_PER_PAGE,\n    recordCountPerReq = DEFAULT_RECORD_COUNT_PER_REQ,\n    preloadPosts = true,\n    preloadPostsDelayTtl = DEFAULT_PRELOAD_POSTS_DELAY_TTL,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = ensureExist.call(this, auth, 'auth');\n    this._client = ensureExist.call(this, client, 'client');\n    this._subscription = ensureExist.call(this, subscription, 'subscription');\n    this._appFeatures = appFeatures;\n    this._connectivityMonitor = connectivityMonitor;\n    this._glipPersons = glipPersons;\n    this._glipPosts = glipPosts;\n    this._tabManager = tabManager;\n\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._polling = polling;\n    this._perPage = perPage;\n    this._recordCountPerReq = recordCountPerReq;\n    this._preloadPosts = preloadPosts;\n    this._preloadedPosts = {};\n    this._preloadPostsDelayTtl = preloadPostsDelayTtl;\n\n    this._promise = null;\n    this._lastMessage = null;\n\n    this._subscriptionFilters = [subscriptionFilter];\n    if (!disableCache) {\n      this._storage = storage;\n    }\n\n    this._dataStorageKey = 'glipGroupsData';\n    this._timestampStorageKey = 'glipGroupsTimestamp';\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n\n      this._storage.registerReducer({\n        key: this._dataStorageKey,\n        reducer: getDataReducer(this.actionTypes),\n      });\n      this._storage.registerReducer({\n        key: this._timestampStorageKey,\n        reducer: getTimestampReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        timestamp: getTimestampReducer(this.actionTypes),\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    if (this._glipPosts) {\n      this._glipPosts.addNewPostListener((post) => this.onNewPost(post));\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      await this._init();\n    } else if (this._isDataReady()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n      this._onDataReady();\n    } else if (this._shouldReset()) {\n      this._clearTimeout();\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    } else if (this._shouldHandleSubscriptionMessage()) {\n      this._processSubscription();\n    } else if (\n      this.ready &&\n      this._connectivityMonitor &&\n      this._connectivityMonitor.ready &&\n      this._connectivity !== this._connectivityMonitor.connectivity\n    ) {\n      this._connectivity = this._connectivityMonitor.connectivity;\n      if (!this._connectivity) {\n        return;\n      }\n      await this.fetchData();\n      if (this._preloadPosts) {\n        this._preloadedPosts = {};\n        this._preloadGroupPosts(true);\n      }\n    }\n  }\n\n  override _shouldInit() {\n    return !!(\n      this._auth.loggedIn &&\n      this._appFeatures.ready &&\n      (!this._connectivityMonitor || this._connectivityMonitor.ready) &&\n      (!this._storage || this._storage.ready) &&\n      (!this._readyCheckFn || this._readyCheckFn()) &&\n      (!this._subscription || this._subscription.ready) &&\n      (!this._glipPosts || this._glipPosts.ready) &&\n      (!this._glipPersons || this._glipPersons.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  override _shouldReset() {\n    return !!(\n      (!this._auth.loggedIn ||\n        !this._appFeatures.ready ||\n        (this._storage && !this._storage.ready) ||\n        (this._readyCheckFn && !this._readyCheckFn()) ||\n        (this._subscription && !this._subscription.ready) ||\n        (this._glipPosts && !this._glipPosts.ready) ||\n        (this._glipPersons && !this._glipPersons.ready) ||\n        (this._connectivityMonitor && !this._connectivityMonitor.ready) ||\n        (this._tabManager && !this._tabManager.ready)) &&\n      this.ready\n    );\n  }\n\n  _shouldHandleSubscriptionMessage() {\n    return !!(\n      this.ready &&\n      this._subscription &&\n      this._subscription.ready &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    );\n  }\n\n  _onDataReady() {\n    if (this._glipPersons) {\n      this._glipPersons.loadPersons(this.groupMemberIds);\n    }\n    if (this._preloadPosts) {\n      this._preloadedPosts = {};\n      this._preloadGroupPosts();\n    }\n  }\n\n  async _subscriptionHandleFn(message) {\n    if (\n      message &&\n      glipGroupRegExp.test(message.event) &&\n      message.body &&\n      message.body.eventType\n    ) {\n      const { eventType, ...group } = message.body;\n      if (eventType.indexOf('Group') !== 0) {\n        return;\n      }\n      if (eventType === 'GroupLeft') {\n        this.store.dispatch({\n          type: this.actionTypes.removeGroup,\n          group,\n        });\n        return;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.updateGroup,\n        group,\n      });\n      if (this._glipPersons) {\n        this._glipPersons.loadPersons(group.members);\n      }\n      this._glipPosts.loadPosts(group.id);\n    }\n  }\n\n  _shouldFetch() {\n    return !this._tabManager || this._tabManager.active;\n  }\n\n  _isDataReady() {\n    return (\n      this.status === moduleStatuses.initializing && this.timestamp !== null\n    );\n  }\n\n  async _init() {\n    if (!this._hasPermission) {\n      return;\n    }\n    if (this._shouldFetch()) {\n      try {\n        await this.fetchData();\n      } catch (e: any /** TODO: confirm with instanceof */) {\n        console.error('fetchData error:', e);\n        this._retry();\n      }\n    } else if (this._polling) {\n      this._startPolling();\n    } else {\n      this._retry();\n    }\n    if (this._subscription && this._subscriptionFilters) {\n      this._subscription.subscribe(this._subscriptionFilters);\n    }\n    if (this._connectivityMonitor) {\n      this._connectivity = this._connectivityMonitor.connectivity;\n    }\n  }\n\n  _processSubscription() {\n    this._lastMessage = this._subscription.message;\n    this._subscriptionHandleFn(this._lastMessage);\n  }\n\n  async _preloadGroupPosts(force) {\n    const groups = this.groups.slice(0, 20);\n    for (const group of groups) {\n      if (!this._glipPosts) {\n        return;\n      }\n      if (!this._preloadedPosts[group.id]) {\n        this._preloadedPosts[group.id] = true;\n        if (!this._glipPosts.postsMap[group.id] || force) {\n          await sleep(this._preloadPostsDelayTtl);\n          if (!this._glipPosts.postsMap[group.id] || force) {\n            await this._glipPosts.fetchPosts(group.id);\n          }\n        }\n        if (!this._glipPosts.readTimeMap[group.id]) {\n          this._glipPosts.updateReadTime(\n            group.id,\n            Date.now() - 1000 * 3600 * 2,\n          );\n        }\n      }\n    }\n  }\n\n  @proxify\n  updateFilter({ searchFilter, pageNumber }) {\n    this.store.dispatch({\n      type: this.actionTypes.updateFilter,\n      searchFilter,\n      pageNumber,\n    });\n    if (this._preloadPosts && this.groups.length <= this._perPage * 2) {\n      this._preloadGroupPosts();\n    }\n  }\n\n  @proxify\n  updateCurrentGroupId(groupId) {\n    if (!groupId) {\n      return;\n    }\n    const lastGroupId = this.currentGroupId;\n    const lastGroupPosts = this.currentGroupPosts;\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentGroupId,\n      groupId,\n    });\n    if (this._glipPersons) {\n      this._glipPersons.loadPersons(\n        this.currentGroup && this.currentGroup.members,\n      );\n    }\n    if (!this._glipPosts) {\n      return;\n    }\n    if (lastGroupPosts.length > 20) {\n      this._glipPosts.fetchPosts(lastGroupId);\n    }\n    this._glipPosts.loadPosts(groupId);\n    this._glipPosts.updateReadTime(groupId);\n  }\n\n  async _fetchFunction() {\n    const result = await this._client.glip().groups().list({\n      recordCount: this._recordCountPerReq,\n    });\n    return result;\n  }\n\n  async _fetchData() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    const { ownerId } = this._auth;\n    try {\n      const data = await this._fetchFunction();\n      if (this._auth.ownerId === ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          data,\n          timestamp: Date.now(),\n        });\n        if (this._polling) {\n          this._startPolling();\n        }\n        this._promise = null;\n      }\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      if (this._auth.ownerId === ownerId) {\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.fetchError,\n          error,\n        });\n        if (this._polling) {\n          this._startPolling(this.timeToRetry);\n        } else {\n          this._retry();\n        }\n        throw error;\n      }\n    }\n  }\n\n  @proxify\n  async fetchData() {\n    if (!this._promise) {\n      this._promise = this._fetchData();\n    }\n    return this._promise;\n  }\n\n  @proxify\n  async startChat(personId) {\n    try {\n      const group = await this._client\n        .glip()\n        .groups()\n        .post({\n          type: 'PrivateChat',\n          members: [this._auth.ownerId, personId],\n        });\n      group.lastModifiedTime = Date.now();\n      this.store.dispatch({\n        type: this.actionTypes.updateGroup,\n        group,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.updateCurrentGroupId,\n        groupId: group.id,\n      });\n      return group;\n    } catch (e: any /** TODO: confirm with instanceof */) {\n      console.error(e);\n    }\n    return null;\n  }\n\n  onNewPost(post) {\n    if (post.groupId === this.currentGroupId && this._glipPosts) {\n      this._glipPosts.updateReadTime(post.groupId);\n    }\n  }\n\n  async createTeam(name, members, type = 'Team') {\n    const group = await this._client.glip().groups().post({\n      type,\n      name,\n      members,\n      isPublic: true,\n      description: '',\n    });\n    return group.id;\n  }\n\n  @selector\n  allGroups = [\n    () => this.data,\n    () => this._glipPersons && this._glipPersons.personsMap,\n    () => this._glipPosts && this._glipPosts.postsMap,\n    () => this._auth.ownerId,\n    (data, personsMap = {}, postsMap = {}, ownerId) =>\n      (data || []).map((group) =>\n        formatGroup(group, personsMap, postsMap, ownerId),\n      ),\n  ];\n\n  @selector\n  filteredGroups = [\n    () => this.allGroups,\n    () => this.searchFilter,\n    () => this._glipPosts && this._glipPosts.postsMap,\n    (allGroups, searchFilter, postsMap = {}) => {\n      if (isBlank(searchFilter)) {\n        return allGroups;\n      }\n      const filterString = searchFilter.toLowerCase();\n      return allGroups.filter((group) => {\n        const name = group.name && group.name.toLowerCase();\n        if (name && name.indexOf(filterString) > -1) {\n          return true;\n        }\n        if (!name) {\n          const groupUsernames = group.detailMembers\n            .map((m) => `${m.firstName} ${m.lastName}`)\n            .join(' ')\n            .toLowerCase();\n          if (groupUsernames && groupUsernames.indexOf(filterString) > -1) {\n            return true;\n          }\n        }\n        const result = searchPosts(filterString, postsMap[group.id] || []);\n        return result;\n      });\n    },\n  ];\n\n  @selector\n  groups = [\n    () => this.filteredGroups,\n    (filteredGroups) => {\n      const sortedGroups = filteredGroups.sort((a, b) => {\n        if (a.updatedTime === b.updatedTime) return 0;\n        return a.updatedTime > b.updatedTime ? -1 : 1;\n      });\n      return sortedGroups;\n    },\n  ];\n\n  @selector\n  uniqueMemberIds = [() => this.allGroups, getUniqueMemberIds];\n\n  @selector\n  groupMemberIds = [\n    () => this.allGroups,\n    (groups) => {\n      const noTeamGroups = groups.filter((g) => g.type !== 'Team');\n      return getUniqueMemberIds(noTeamGroups);\n    },\n  ];\n\n  @selector\n  currentGroup = [\n    () => this.allGroups,\n    () => this.currentGroupId,\n    () => (this._glipPersons && this._glipPersons.personsMap) || {},\n    (allGroups, currentGroupId, personsMap) => {\n      const group = allGroups.find((g) => g.id === currentGroupId) || {};\n      return formatGroup(group, personsMap, undefined, this._auth.ownerId);\n    },\n  ];\n\n  @selector\n  currentGroupPosts = [\n    () => {\n      const postsMap = (this._glipPosts && this._glipPosts.postsMap) || {};\n      return postsMap[this.currentGroupId];\n    },\n    () => (this._glipPersons && this._glipPersons.personsMap) || {},\n    (posts, personsMap) => {\n      // const posts = postsMap[currentGroupId] || [];\n      const reversePosts = (posts || []).slice(0).reverse();\n      return reversePosts.map((post) => {\n        const creator = personsMap[post.creatorId];\n        return {\n          ...post,\n          sentByMe: post.creatorId === this._auth.ownerId,\n          creator,\n        };\n      });\n    },\n  ];\n\n  @selector\n  groupsWithUnread = [\n    () => this.groups,\n    () => (this._glipPosts && this._glipPosts.postsMap) || {},\n    () => (this._glipPosts && this._glipPosts.readTimeMap) || {},\n    (groups, postsMap, readTimeMap) =>\n      groups.map((group) => {\n        const posts = postsMap[group.id] || [];\n        const readTime = readTimeMap[group.id] || Date.now();\n        return {\n          ...group,\n          unread: posts.filter(\n            (post) =>\n              new Date(post.creationTime).getTime() > readTime &&\n              post.creatorId !== this._auth.ownerId,\n          ).length,\n        };\n      }),\n  ];\n\n  @selector\n  unreadCounts = [\n    () => this.groupsWithUnread,\n    (groups) => groups.reduce((a, b) => a + b.unread, 0),\n  ];\n\n  get searchFilter() {\n    return this.state.searchFilter;\n  }\n\n  get data() {\n    return this._storage\n      ? this._storage.getItem(this._dataStorageKey)\n      : this.state.data;\n  }\n\n  get timestamp() {\n    return this._storage\n      ? this._storage.getItem(this._timestampStorageKey)\n      : this.state.timestamp;\n  }\n\n  get currentGroupId() {\n    return this.state.currentGroupId;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.status === moduleStatuses.pending;\n  }\n\n  get ttl() {\n    return this._ttl;\n  }\n\n  get timeToRetry() {\n    return this._timeToRetry;\n  }\n\n  get _hasPermission() {\n    return !!this._appFeatures.hasGlipPermission;\n  }\n}\n"],"mappings":"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"}