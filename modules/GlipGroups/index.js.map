{"version":3,"file":"index.js","names":["_utils","require","_moduleStatuses","_interopRequireDefault","_Pollable2","_di","_ensureExist","_isBlank","_proxify","_selector","_actionTypes","_getReducer","_interopRequireWildcard","_dec","_class","_class2","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","asyncGeneratorStep","o","c","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_initializerDefineProperty","l","enumerable","configurable","writable","initializer","_objectWithoutProperties","_objectWithoutPropertiesLoose","getOwnPropertySymbols","length","indexOf","propertyIsEnumerable","_classCallCheck","TypeError","_defineProperties","_toPropertyKey","key","_createClass","prototype","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_initializerWarningHelper","Error","_applyDecoratedDescriptor","keys","forEach","slice","reverse","reduce","Symbol","iterator","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","f","next","_arrayLikeToArray","toString","name","from","test","ownKeys","filter","push","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPrimitive","toPrimitive","String","Number","glipGroupRegExp","subscriptionFilter","DEFAULT_PER_PAGE","DEFAULT_TTL","DEFAULT_RETRY","DEFAULT_RECORD_COUNT_PER_REQ","DEFAULT_PRELOAD_POSTS_DELAY_TTL","formatGroup","group","personsMap","postsMap","undefined","ownerId","id","detailMembers","members","memberId","isMe","newGroup","updatedTime","Date","lastModifiedTime","getTime","latestPost","creator","creatorId","postCreationTime","creationTime","getUniqueMemberIds","groups","memberIds","memberIdsMap","searchPosts","searchFilter","posts","result","_iterator","_step","post","text","toLowerCase","mentions","mentionNames","map","m","join","err","GlipGroups","Module","deps","dep","optional","_Pollable","_super","_ref","_this","auth","subscription","client","tabManager","glipPersons","glipPosts","storage","appFeatures","connectivityMonitor","_ref$timeToRetry","timeToRetry","_ref$ttl","ttl","_ref$polling","polling","_ref$disableCache","disableCache","_ref$perPage","perPage","_ref$recordCountPerRe","recordCountPerReq","_ref$preloadPosts","preloadPosts","_ref$preloadPostsDela","preloadPostsDelayTtl","options","actionTypes","_appFeatures","_auth","_client","_connectivity","_connectivityMonitor","_dataStorageKey","_glipPersons","_glipPosts","_lastMessage","_perPage","_polling","_preloadPosts","_preloadPostsDelayTtl","_preloadedPosts","_promise","_readyCheckFn","_recordCountPerReq","_storage","_subscription","_subscriptionFilters","_timeToRetry","_timestampStorageKey","_ttl","ensureExist","_tabManager","_reducer","getReducer","registerReducer","reducer","getDataReducer","getTimestampReducer","timestamp","data","addNewPostListener","onNewPost","initialize","_this2","store","subscribe","_onStateChange","_onStateChange2","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","_shouldInit","dispatch","type","init","_init","_isDataReady","initSuccess","_onDataReady","_shouldReset","_clearTimeout","resetSuccess","_shouldHandleSubscriptionMessage","_processSubscription","ready","connectivity","abrupt","fetchData","_preloadGroupPosts","stop","loggedIn","pending","message","loadPersons","groupMemberIds","_subscriptionHandleFn2","_callee2","_message$body","eventType","_callee2$","_context2","event","body","removeGroup","updateGroup","loadPosts","_subscriptionHandleFn","_x","_shouldFetch","active","status","moduleStatuses","initializing","_init2","_callee3","_callee3$","_context3","_hasPermission","t0","console","error","_retry","_startPolling","_preloadGroupPosts2","_callee4","force","_iterator2","_step2","_callee4$","_context4","sleep","fetchPosts","readTimeMap","updateReadTime","now","finish","_x2","updateFilter","_ref2","pageNumber","updateCurrentGroupId","groupId","lastGroupId","currentGroupId","lastGroupPosts","currentGroupPosts","currentGroup","_fetchFunction2","_callee5","_callee5$","_context5","glip","list","recordCount","sent","_fetchFunction","_fetchData2","_callee6","_callee6$","_context6","fetch","fetchSuccess","fetchError","_fetchData","_fetchData3","_callee7","_callee7$","_context7","_startChat","_callee8","personId","_callee8$","_context8","startChat","_x3","_createTeam","_callee9","_args9","_callee9$","_context9","isPublic","description","createTeam","_x4","_x5","state","getItem","hasGlipPermission","Pollable","proxify","selector","_this3","_this4","allGroups","isBlank","filterString","groupUsernames","concat","firstName","lastName","_this5","filteredGroups","sortedGroups","sort","b","_this6","_this7","noTeamGroups","g","_this8","find","_this9","reversePosts","sentByMe","_this10","readTime","unread","_this11","groupsWithUnread","exports"],"sources":["modules/GlipGroups/index.ts"],"sourcesContent":["import { sleep } from '@ringcentral-integration/utils';\n\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport Pollable from '../../lib/Pollable';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport { isBlank } from '../../lib/isBlank';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\n\nimport { actionTypes } from './actionTypes';\nimport getReducer, { getDataReducer, getTimestampReducer } from './getReducer';\n\nconst glipGroupRegExp = /glip\\/groups$/;\nconst subscriptionFilter = '/restapi/v1.0/glip/groups';\n\nconst DEFAULT_PER_PAGE = 20;\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_RETRY = 62 * 1000;\nconst DEFAULT_RECORD_COUNT_PER_REQ = 250;\nconst DEFAULT_PRELOAD_POSTS_DELAY_TTL = 800;\n\nfunction formatGroup(group: any, personsMap: any, postsMap = {}, ownerId: any) {\n  if (!group || !group.id) {\n    return {};\n  }\n  const detailMembers: any = [];\n  if (group.members) {\n    group.members.forEach((memberId: any) => {\n      if (personsMap[memberId]) {\n        detailMembers.push({\n          ...personsMap[memberId],\n          isMe: ownerId === memberId,\n        });\n      }\n    });\n  }\n  const newGroup = {\n    ...group,\n    detailMembers,\n    updatedTime: new Date(group.lastModifiedTime).getTime(),\n  };\n  // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n  const latestPost = postsMap[group.id] && postsMap[group.id][0];\n  if (latestPost) {\n    newGroup.latestPost = {\n      ...latestPost,\n      creator: personsMap[latestPost.creatorId],\n    };\n    const postCreationTime = new Date(latestPost.creationTime).getTime();\n    if (postCreationTime > newGroup.updatedTime) {\n      newGroup.updatedTime = postCreationTime;\n    }\n  }\n  return newGroup;\n}\n\nfunction getUniqueMemberIds(groups: any) {\n  const memberIds: any = [];\n  const memberIdsMap = {};\n  groups.forEach((group: any) => {\n    group.members.forEach((memberId: any) => {\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      if (memberIdsMap[memberId]) {\n        return;\n      }\n      // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n      memberIdsMap[memberId] = true;\n      memberIds.push(memberId);\n    });\n  });\n  return memberIds;\n}\n\nfunction searchPosts(searchFilter: any, posts: any) {\n  let result = false;\n  for (const post of posts) {\n    if (post.text && post.text.toLowerCase().indexOf(searchFilter) > -1) {\n      result = true;\n      break;\n    }\n    if (post.mentions && post.mentions.length > 0) {\n      const mentionNames = post.mentions\n        .map((m: any) => m.name)\n        .join(' ')\n        .toLowerCase();\n      if (mentionNames.indexOf(searchFilter) > -1) {\n        result = true;\n        break;\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * @class\n * @description Accound info managing module.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Client',\n    'Subscription',\n    'AppFeatures',\n    { dep: 'ConnectivityMonitor', optional: true },\n    { dep: 'Storage', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'GlipPersons', optional: true },\n    { dep: 'GlipPosts', optional: true },\n    { dep: 'GLipGroupsOptions', optional: true },\n  ],\n})\n// @ts-expect-error TS(2415): Class 'GlipGroups' incorrectly extends base class ... Remove this comment to see the full error message\nexport default class GlipGroups extends Pollable {\n  _appFeatures: any;\n  _auth: any;\n  _client: any;\n  _connectivity: any;\n  _connectivityMonitor: any;\n  _dataStorageKey: any;\n  _glipPersons: any;\n  _glipPosts: any;\n  _lastMessage: any;\n  _perPage: any;\n  _polling: any;\n  _preloadPosts: any;\n  _preloadPostsDelayTtl: any;\n  _preloadedPosts: any;\n  _promise: any;\n  _readyCheckFn: any;\n  _recordCountPerReq: any;\n  _storage: any;\n  _subscription: any;\n  _subscriptionFilters: any;\n  _timeToRetry: any;\n  _timestampStorageKey: any;\n  _ttl: any;\n  constructor({\n    auth,\n    subscription,\n    client,\n    tabManager,\n    glipPersons,\n    glipPosts,\n    storage,\n    appFeatures,\n    connectivityMonitor,\n    timeToRetry = DEFAULT_RETRY,\n    ttl = DEFAULT_TTL,\n    polling = false,\n    disableCache = false,\n    perPage = DEFAULT_PER_PAGE,\n    recordCountPerReq = DEFAULT_RECORD_COUNT_PER_REQ,\n    preloadPosts = true,\n    preloadPostsDelayTtl = DEFAULT_PRELOAD_POSTS_DELAY_TTL,\n    ...options\n  }: any) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n    this._auth = ensureExist.call(this, auth, 'auth');\n    // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n    this._client = ensureExist.call(this, client, 'client');\n    // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n    this._subscription = ensureExist.call(this, subscription, 'subscription');\n    this._appFeatures = appFeatures;\n    this._connectivityMonitor = connectivityMonitor;\n    this._glipPersons = glipPersons;\n    this._glipPosts = glipPosts;\n    this._tabManager = tabManager;\n\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._polling = polling;\n    this._perPage = perPage;\n    this._recordCountPerReq = recordCountPerReq;\n    this._preloadPosts = preloadPosts;\n    this._preloadedPosts = {};\n    this._preloadPostsDelayTtl = preloadPostsDelayTtl;\n\n    this._promise = null;\n    this._lastMessage = null;\n\n    this._subscriptionFilters = [subscriptionFilter];\n    if (!disableCache) {\n      this._storage = storage;\n    }\n\n    this._dataStorageKey = 'glipGroupsData';\n    this._timestampStorageKey = 'glipGroupsTimestamp';\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n\n      this._storage.registerReducer({\n        key: this._dataStorageKey,\n        reducer: getDataReducer(this.actionTypes),\n      });\n      this._storage.registerReducer({\n        key: this._timestampStorageKey,\n        reducer: getTimestampReducer(this.actionTypes),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        timestamp: getTimestampReducer(this.actionTypes),\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    if (this._glipPosts) {\n      this._glipPosts.addNewPostListener((post: any) => this.onNewPost(post));\n    }\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      await this._init();\n    } else if (this._isDataReady()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n      this._onDataReady();\n    } else if (this._shouldReset()) {\n      this._clearTimeout();\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    } else if (this._shouldHandleSubscriptionMessage()) {\n      this._processSubscription();\n    } else if (\n      this.ready &&\n      this._connectivityMonitor &&\n      this._connectivityMonitor.ready &&\n      this._connectivity !== this._connectivityMonitor.connectivity\n    ) {\n      this._connectivity = this._connectivityMonitor.connectivity;\n      if (!this._connectivity) {\n        return;\n      }\n      await this.fetchData();\n      if (this._preloadPosts) {\n        this._preloadedPosts = {};\n        this._preloadGroupPosts(true);\n      }\n    }\n  }\n\n  // @ts-expect-error TS(4113): This member cannot have an 'override' modifier bec... Remove this comment to see the full error message\n  override _shouldInit() {\n    return !!(\n      this._auth.loggedIn &&\n      this._appFeatures.ready &&\n      (!this._connectivityMonitor || this._connectivityMonitor.ready) &&\n      (!this._storage || this._storage.ready) &&\n      (!this._readyCheckFn || this._readyCheckFn()) &&\n      (!this._subscription || this._subscription.ready) &&\n      (!this._glipPosts || this._glipPosts.ready) &&\n      (!this._glipPersons || this._glipPersons.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  // @ts-expect-error TS(4113): This member cannot have an 'override' modifier bec... Remove this comment to see the full error message\n  override _shouldReset() {\n    return !!(\n      (!this._auth.loggedIn ||\n        !this._appFeatures.ready ||\n        (this._storage && !this._storage.ready) ||\n        (this._readyCheckFn && !this._readyCheckFn()) ||\n        (this._subscription && !this._subscription.ready) ||\n        (this._glipPosts && !this._glipPosts.ready) ||\n        (this._glipPersons && !this._glipPersons.ready) ||\n        (this._connectivityMonitor && !this._connectivityMonitor.ready) ||\n        (this._tabManager && !this._tabManager.ready)) &&\n      this.ready\n    );\n  }\n\n  _shouldHandleSubscriptionMessage() {\n    return !!(\n      this.ready &&\n      this._subscription &&\n      this._subscription.ready &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    );\n  }\n\n  _onDataReady() {\n    if (this._glipPersons) {\n      this._glipPersons.loadPersons(this.groupMemberIds);\n    }\n    if (this._preloadPosts) {\n      this._preloadedPosts = {};\n      // @ts-expect-error TS(2554): Expected 1 arguments, but got 0.\n      this._preloadGroupPosts();\n    }\n  }\n\n  async _subscriptionHandleFn(message: any) {\n    if (\n      message &&\n      glipGroupRegExp.test(message.event) &&\n      message.body &&\n      message.body.eventType\n    ) {\n      const { eventType, ...group } = message.body;\n      if (eventType.indexOf('Group') !== 0) {\n        return;\n      }\n      if (eventType === 'GroupLeft') {\n        this.store.dispatch({\n          type: this.actionTypes.removeGroup,\n          group,\n        });\n        return;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.updateGroup,\n        group,\n      });\n      if (this._glipPersons) {\n        this._glipPersons.loadPersons(group.members);\n      }\n      this._glipPosts.loadPosts(group.id);\n    }\n  }\n\n  _shouldFetch() {\n    return !this._tabManager || this._tabManager.active;\n  }\n\n  _isDataReady() {\n    return (\n      this.status === moduleStatuses.initializing && this.timestamp !== null\n    );\n  }\n\n  async _init() {\n    if (!this._hasPermission) {\n      return;\n    }\n    if (this._shouldFetch()) {\n      try {\n        await this.fetchData();\n      } catch (e: any /** TODO: confirm with instanceof */) {\n        console.error('fetchData error:', e);\n        this._retry();\n      }\n    } else if (this._polling) {\n      this._startPolling();\n    } else {\n      this._retry();\n    }\n    if (this._subscription && this._subscriptionFilters) {\n      this._subscription.subscribe(this._subscriptionFilters);\n    }\n    if (this._connectivityMonitor) {\n      this._connectivity = this._connectivityMonitor.connectivity;\n    }\n  }\n\n  _processSubscription() {\n    this._lastMessage = this._subscription.message;\n    this._subscriptionHandleFn(this._lastMessage);\n  }\n\n  async _preloadGroupPosts(force: any) {\n    const groups = this.groups.slice(0, 20);\n    for (const group of groups) {\n      if (!this._glipPosts) {\n        return;\n      }\n      // @ts-expect-error TS(2339): Property 'id' does not exist on type '(filteredGro... Remove this comment to see the full error message\n      if (!this._preloadedPosts[group.id]) {\n        // @ts-expect-error TS(2339): Property 'id' does not exist on type '(filteredGro... Remove this comment to see the full error message\n        this._preloadedPosts[group.id] = true;\n        // @ts-expect-error TS(2339): Property 'id' does not exist on type '(filteredGro... Remove this comment to see the full error message\n        if (!this._glipPosts.postsMap[group.id] || force) {\n          await sleep(this._preloadPostsDelayTtl);\n          // @ts-expect-error TS(2339): Property 'id' does not exist on type '(filteredGro... Remove this comment to see the full error message\n          if (!this._glipPosts.postsMap[group.id] || force) {\n            // @ts-expect-error TS(2339): Property 'id' does not exist on type '(filteredGro... Remove this comment to see the full error message\n            await this._glipPosts.fetchPosts(group.id);\n          }\n        }\n        // @ts-expect-error TS(2339): Property 'id' does not exist on type '(filteredGro... Remove this comment to see the full error message\n        if (!this._glipPosts.readTimeMap[group.id]) {\n          this._glipPosts.updateReadTime(\n            // @ts-expect-error TS(2339): Property 'id' does not exist on type '(filteredGro... Remove this comment to see the full error message\n            group.id,\n            Date.now() - 1000 * 3600 * 2,\n          );\n        }\n      }\n    }\n  }\n\n  // @ts-expect-error TS(2345): Argument of type 'TypedPropertyDescriptor<({ searc... Remove this comment to see the full error message\n  @proxify\n  updateFilter({ searchFilter, pageNumber }: any) {\n    this.store.dispatch({\n      type: this.actionTypes.updateFilter,\n      searchFilter,\n      pageNumber,\n    });\n    if (this._preloadPosts && this.groups.length <= this._perPage * 2) {\n      // @ts-expect-error TS(2554): Expected 1 arguments, but got 0.\n      this._preloadGroupPosts();\n    }\n  }\n\n  // @ts-expect-error TS(2345): Argument of type 'TypedPropertyDescriptor<(groupId... Remove this comment to see the full error message\n  @proxify\n  updateCurrentGroupId(groupId: any) {\n    if (!groupId) {\n      return;\n    }\n    const lastGroupId = this.currentGroupId;\n    const lastGroupPosts = this.currentGroupPosts;\n    this.store.dispatch({\n      type: this.actionTypes.updateCurrentGroupId,\n      groupId,\n    });\n    if (this._glipPersons) {\n      this._glipPersons.loadPersons(\n        // @ts-expect-error TS(2339): Property 'members' does not exist on type '((allGr... Remove this comment to see the full error message\n        this.currentGroup && this.currentGroup.members,\n      );\n    }\n    if (!this._glipPosts) {\n      return;\n    }\n    if (lastGroupPosts.length > 20) {\n      this._glipPosts.fetchPosts(lastGroupId);\n    }\n    this._glipPosts.loadPosts(groupId);\n    this._glipPosts.updateReadTime(groupId);\n  }\n\n  async _fetchFunction() {\n    const result = await this._client.glip().groups().list({\n      recordCount: this._recordCountPerReq,\n    });\n    return result;\n  }\n\n  async _fetchData() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    const { ownerId } = this._auth;\n    try {\n      const data = await this._fetchFunction();\n      if (this._auth.ownerId === ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          data,\n          timestamp: Date.now(),\n        });\n        if (this._polling) {\n          this._startPolling();\n        }\n        this._promise = null;\n      }\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      if (this._auth.ownerId === ownerId) {\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.fetchError,\n          error,\n        });\n        if (this._polling) {\n          this._startPolling(this.timeToRetry);\n        } else {\n          this._retry();\n        }\n        throw error;\n      }\n    }\n  }\n\n  @proxify\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  async fetchData() {\n    if (!this._promise) {\n      this._promise = this._fetchData();\n    }\n    return this._promise;\n  }\n\n  @proxify\n  async startChat(personId: any) {\n    try {\n      const group = await this._client\n        .glip()\n        .groups()\n        .post({\n          type: 'PrivateChat',\n          members: [this._auth.ownerId, personId],\n        });\n      group.lastModifiedTime = Date.now();\n      this.store.dispatch({\n        type: this.actionTypes.updateGroup,\n        group,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.updateCurrentGroupId,\n        groupId: group.id,\n      });\n      return group;\n    } catch (e: any /** TODO: confirm with instanceof */) {\n      console.error(e);\n    }\n    return null;\n  }\n\n  onNewPost(post: any) {\n    if (post.groupId === this.currentGroupId && this._glipPosts) {\n      this._glipPosts.updateReadTime(post.groupId);\n    }\n  }\n\n  async createTeam(name: any, members: any, type = 'Team') {\n    const group = await this._client.glip().groups().post({\n      type,\n      name,\n      members,\n      isPublic: true,\n      description: '',\n    });\n    return group.id;\n  }\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  allGroups = [\n    () => this.data,\n    () => this._glipPersons && this._glipPersons.personsMap,\n    () => this._glipPosts && this._glipPosts.postsMap,\n    () => this._auth.ownerId,\n    (data: any, personsMap = {}, postsMap = {}, ownerId: any) =>\n      (data || []).map((group: any) =>\n        formatGroup(group, personsMap, postsMap, ownerId),\n      ),\n  ];\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  filteredGroups = [\n    () => this.allGroups,\n    () => this.searchFilter,\n    () => this._glipPosts && this._glipPosts.postsMap,\n    (allGroups: any, searchFilter: any, postsMap = {}) => {\n      if (isBlank(searchFilter)) {\n        return allGroups;\n      }\n      const filterString = searchFilter.toLowerCase();\n      return allGroups.filter((group: any) => {\n        const name = group.name && group.name.toLowerCase();\n        if (name && name.indexOf(filterString) > -1) {\n          return true;\n        }\n        if (!name) {\n          const groupUsernames = group.detailMembers\n            .map((m: any) => `${m.firstName} ${m.lastName}`)\n            .join(' ')\n            .toLowerCase();\n          if (groupUsernames && groupUsernames.indexOf(filterString) > -1) {\n            return true;\n          }\n        }\n        // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n        const result = searchPosts(filterString, postsMap[group.id] || []);\n        return result;\n      });\n    },\n  ];\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  groups = [\n    () => this.filteredGroups,\n    (filteredGroups: any) => {\n      const sortedGroups = filteredGroups.sort((a: any, b: any) => {\n        if (a.updatedTime === b.updatedTime) return 0;\n        return a.updatedTime > b.updatedTime ? -1 : 1;\n      });\n      return sortedGroups;\n    },\n  ];\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  uniqueMemberIds = [() => this.allGroups, getUniqueMemberIds];\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  groupMemberIds = [\n    () => this.allGroups,\n    (groups: any) => {\n      const noTeamGroups = groups.filter((g: any) => g.type !== 'Team');\n      return getUniqueMemberIds(noTeamGroups);\n    },\n  ];\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  currentGroup = [\n    () => this.allGroups,\n    () => this.currentGroupId,\n    () => (this._glipPersons && this._glipPersons.personsMap) || {},\n    (allGroups: any, currentGroupId: any, personsMap: any) => {\n      const group = allGroups.find((g: any) => g.id === currentGroupId) || {};\n      return formatGroup(group, personsMap, undefined, this._auth.ownerId);\n    },\n  ];\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  currentGroupPosts = [\n    () => {\n      const postsMap = (this._glipPosts && this._glipPosts.postsMap) || {};\n      return postsMap[this.currentGroupId];\n    },\n    () => (this._glipPersons && this._glipPersons.personsMap) || {},\n    (posts: any, personsMap: any) => {\n      // const posts = postsMap[currentGroupId] || [];\n      const reversePosts = (posts || []).slice(0).reverse();\n      return reversePosts.map((post: any) => {\n        const creator = personsMap[post.creatorId];\n        return {\n          ...post,\n          sentByMe: post.creatorId === this._auth.ownerId,\n          creator,\n        };\n      });\n    },\n  ];\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  groupsWithUnread = [\n    () => this.groups,\n    () => (this._glipPosts && this._glipPosts.postsMap) || {},\n    () => (this._glipPosts && this._glipPosts.readTimeMap) || {},\n    (groups: any, postsMap: any, readTimeMap: any) =>\n      groups.map((group: any) => {\n        const posts = postsMap[group.id] || [];\n        const readTime = readTimeMap[group.id] || Date.now();\n        return {\n          ...group,\n          unread: posts.filter(\n            (post: any) =>\n              new Date(post.creationTime).getTime() > readTime &&\n              post.creatorId !== this._auth.ownerId,\n          ).length,\n        };\n      }),\n  ];\n\n  // @ts-expect-error TS(1240): Unable to resolve signature of property decorator ... Remove this comment to see the full error message\n  @selector\n  unreadCounts = [\n    () => this.groupsWithUnread,\n    (groups: any) => groups.reduce((a: any, b: any) => a + b.unread, 0),\n  ];\n\n  get searchFilter() {\n    return this.state.searchFilter;\n  }\n\n  get data() {\n    return this._storage\n      ? this._storage.getItem(this._dataStorageKey)\n      : this.state.data;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get timestamp() {\n    return this._storage\n      ? this._storage.getItem(this._timestampStorageKey)\n      : this.state.timestamp;\n  }\n\n  get currentGroupId() {\n    return this.state.currentGroupId;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get status() {\n    return this.state.status;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get pending() {\n    return this.status === moduleStatuses.pending;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get ttl() {\n    return this._ttl;\n  }\n\n  // @ts-expect-error TS(4114): This member must have an 'override' modifier becau... Remove this comment to see the full error message\n  get timeToRetry() {\n    return this._timeToRetry;\n  }\n\n  get _hasPermission() {\n    return !!this._appFeatures.hasGlipPermission;\n  }\n}\n"],"mappings":"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","ignoreList":[]}