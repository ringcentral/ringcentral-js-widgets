{"version":3,"sources":["modules/ExtensionInfo/index.ts"],"names":["DEFAULT_MASK","join","DEFAULT_COUNTRY","id","isoCode","callingCode","extensionRegExp","extractData","info","DEFAULT_TTL","DEFAULT_TIME_TO_RETRY","ExtensionInfo","deps","dep","optional","client","extensionFeatures","ttl","timeToRetry","polling","alert","extensionInfoOptions","options","subscriptionFilters","extensionInfo","subscriptionHandler","message","_subscriptionHandleFn","cleanOnReset","fetchFunction","_client","account","extension","get","forbiddenHandler","_auth","logout","_alert","danger","permissionsMessages","insufficientPrivilege","_extensionFeatures","_extensionInfoOptions","body","test","event","hints","includes","subscriptionHints","companyNumbers","limits","features","permissions","videoConfiguration","fetchData","isMultipleSiteEnabled","extensionNumber","regionalSettings","homeCountry","departments","Array","isArray","length","DataFetcher","selector","data","isEnabled","SiteCodes","available","site","console","warn"],"mappings":"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","sourcesContent":["import mask from 'json-mask';\n\nimport { permissionsMessages } from '../../enums/permissionsMessages';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport subscriptionHints from '../../enums/subscriptionHints';\nimport DataFetcher from '../../lib/DataFetcher';\nimport { Module } from '../../lib/di';\nimport { selector } from '../../lib/selector';\n\nconst DEFAULT_MASK = [\n  'id',\n  'extensionNumber',\n  'contact(*)',\n  'name',\n  'type',\n  'status',\n  'permissions',\n  'profileImage',\n  'departments',\n  'site',\n  `regionalSettings(${[\n    'timezone(id,name,bias)',\n    'homeCountry(id,isoCode,callingCode)',\n    'language(localeCode)',\n    'formattingLocale(localeCode)',\n    'timeFormat',\n  ].join(',')})`,\n].join(',');\n\nconst DEFAULT_COUNTRY = {\n  id: '1',\n  isoCode: 'US',\n  callingCode: '1',\n};\n\nconst extensionRegExp = /.*\\/extension\\/\\d+$/;\n\nfunction extractData(info) {\n  return mask(info, DEFAULT_MASK);\n}\n\nconst DEFAULT_TTL = 30 * 60 * 1000; // half hour update\nconst DEFAULT_TIME_TO_RETRY = 62 * 1000;\n\n// serviceFeatures is deprecated from platform api\n\n/**\n * @class\n * @description Extension info module\n * @deprecated Please use V2\n */\n@Module({\n  deps: [\n    'Client',\n    'ExtensionFeatures',\n    { dep: 'Alert', optional: true },\n    { dep: 'ExtensionInfoOptions', optional: true },\n  ],\n})\nexport default class ExtensionInfo extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {ExtensionInfoOptions} params.isMultipleSiteEnable - extension info options: Is multiple site enabled\n   */\n  constructor({\n    client,\n    extensionFeatures,\n    ttl = DEFAULT_TTL,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    polling = true,\n    alert,\n    extensionInfoOptions,\n    ...options\n  }) {\n    super({\n      client,\n      ttl,\n      polling,\n      timeToRetry,\n      subscriptionFilters: [subscriptionFilters.extensionInfo],\n      subscriptionHandler: async (message) => {\n        await this._subscriptionHandleFn(message);\n      },\n      cleanOnReset: true,\n      fetchFunction: async () =>\n        extractData(await this._client.account().extension().get()),\n      forbiddenHandler: async () => {\n        await this._auth.logout();\n        if (this._alert) {\n          this._alert.danger({\n            message: permissionsMessages.insufficientPrivilege,\n            ttl: 0,\n          });\n        }\n        return {};\n      },\n      ...options,\n    });\n    this._alert = alert;\n    this._extensionFeatures = extensionFeatures;\n    this._extensionInfoOptions = extensionInfoOptions;\n  }\n\n  get _name() {\n    return 'extensionInfo';\n  }\n\n  get isMultipleSiteEnabled() {\n    return this._extensionInfoOptions?.isMultipleSiteEnabled ?? false;\n  }\n\n  async _subscriptionHandleFn(message) {\n    if (\n      message &&\n      message.body &&\n      extensionRegExp.test(message.event) &&\n      !(\n        message.body.hints &&\n        (message.body.hints.includes(subscriptionHints.companyNumbers) ||\n          message.body.hints.includes(subscriptionHints.limits) ||\n          message.body.hints.includes(subscriptionHints.features) ||\n          message.body.hints.includes(subscriptionHints.permissions) ||\n          message.body.hints.includes(subscriptionHints.videoConfiguration))\n      )\n    ) {\n      await this.fetchData();\n    }\n  }\n\n  @selector\n  info = [() => this.data, (data) => data || {}];\n\n  get id() {\n    return this.info.id;\n  }\n\n  get extensionNumber() {\n    return this.info.extensionNumber;\n  }\n\n  get country() {\n    return (\n      (this.info.regionalSettings && this.info.regionalSettings.homeCountry) ||\n      DEFAULT_COUNTRY\n    );\n  }\n\n  get departments() {\n    return this.info.departments;\n  }\n\n  @selector\n  site = [\n    () => this.info,\n    (info) => {\n      if (!this.isMultipleSiteEnabled) {\n        return null;\n      }\n      const isEnabled =\n        !!this._extensionFeatures.features?.SiteCodes?.available;\n      if (!isEnabled) {\n        return null;\n      }\n      if (!info.site) {\n        console.warn('site code enabled, but cannot retrieve site info');\n      }\n      return info.site || null;\n    },\n  ];\n\n  get isCallQueueMember() {\n    return (\n      !!this.departments &&\n      Array.isArray(this.departments) &&\n      this.departments.length > 0\n    );\n  }\n}\n"],"file":"index.js"}