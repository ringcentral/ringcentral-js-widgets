{"version":3,"file":"DialerUI.interface.js","names":[],"sources":["modules/DialerUI/DialerUI.interface.ts"],"sourcesContent":["import type UserPhoneNumberInfo from '@rc-ex/core/lib/definitions/UserPhoneNumberInfo';\nimport type { AccountInfo } from '@ringcentral-integration/commons/modules/AccountInfo';\nimport type { Alert } from '@ringcentral-integration/commons/modules/Alert';\nimport type { AudioSettings } from '@ringcentral-integration/commons/modules/AudioSettings';\nimport type {\n  Call,\n  Recipient,\n} from '@ringcentral-integration/commons/modules/Call';\nimport type { CallingSettings } from '@ringcentral-integration/commons/modules/CallingSettings';\nimport type { ConferenceCall } from '@ringcentral-integration/commons/modules/ConferenceCall';\nimport type { ContactSearch } from '@ringcentral-integration/commons/modules/ContactSearch';\nimport type { ExtensionFeatures } from '@ringcentral-integration/commons/modules/ExtensionFeatures';\nimport type { Locale } from '@ringcentral-integration/commons/modules/Locale';\nimport type { RateLimiter } from '@ringcentral-integration/commons/modules/RateLimiter';\nimport type { RegionSettings } from '@ringcentral-integration/commons/modules/RegionSettings';\n\nimport type { ConnectivityManager } from '../ConnectivityManager';\n\nexport interface DialerUIOptions {\n  useV2: boolean;\n}\n\nexport interface Deps {\n  callingSettings: CallingSettings;\n  connectivityManager: ConnectivityManager;\n  locale: Locale;\n  rateLimiter: RateLimiter;\n  regionSettings: RegionSettings;\n  alert: Alert;\n  call: Call;\n  extensionFeatures: ExtensionFeatures;\n  audioSettings?: AudioSettings;\n  contactSearch?: ContactSearch;\n  conferenceCall?: ConferenceCall;\n  dialerUIOptions?: DialerUIOptions;\n  accountInfo: AccountInfo;\n}\n\nexport interface DialerUIContainerProps {\n  autoFocusToField?: boolean;\n}\n\nexport interface DialerUIPanelProps {\n  currentLocale: string;\n  callingMode: string;\n  isWebphoneMode: boolean;\n  callButtonDisabled: boolean;\n  fromNumber: string;\n  fromNumbers: UserPhoneNumberInfo[];\n  toNumber: string;\n  recipient: Recipient;\n  recipients: Recipient[];\n  searchContactList: {\n    id: string;\n    name: string;\n    phoneNumber: string;\n  }[];\n  showSpinner: boolean;\n  callVolume: number;\n  outputDeviceId: string;\n  isLastInputFromDialpad: boolean;\n  disableFromField: boolean;\n  useV2: boolean;\n  showAnonymous: boolean;\n  autoFocus?: boolean;\n  onToNumberChange: (\n    phoneNumber: string,\n    fromDialPad?: boolean,\n  ) => Promise<void>;\n  clearToNumber: () => Promise<void>;\n  onCallButtonClick: (options: OnCallButtonClickOptions) => Promise<void>;\n  changeFromNumber: (number: { phoneNumber?: string }) => Promise<void>;\n  formatPhone: (phoneNumber: string) => string;\n  setRecipient: (recipient: Recipient) => Promise<void>;\n  clearRecipient: () => Promise<void>;\n  searchContact: (searchString: string) => Promise<void>;\n}\n\nexport interface OnCallButtonClickOptions {\n  fromNumber?: string;\n  fromSessionId?: string;\n  clickDialerToCall?: boolean;\n}\n"],"mappings":"","ignoreList":[]}