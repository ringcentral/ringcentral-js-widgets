{"version":3,"file":"Ringout.js","names":["_core","require","_utils","_di","_proxify","_ringoutErrors","_ringoutStatus","_dec","_class","_class2","_descriptor","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_initializerDefineProperty","target","property","descriptor","context","Object","defineProperty","enumerable","configurable","writable","initializer","call","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","length","_toPropertyKey","_createClass","protoProps","staticProps","prototype","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","_applyDecoratedDescriptor","decorators","desc","keys","forEach","slice","reverse","reduce","decorator","_initializerWarningHelper","Error","DEFAULT_MONITOR_INTERVAL","DEFAULT_TIME_BETWEEN_CALLS","Ringout","Module","name","deps","dep","optional","_RcModuleV","_super","_this$_deps$ringoutOp","_this$_deps$ringoutOp2","_this$_deps$ringoutOp3","_this$_deps$ringoutOp4","_this","_monitorInterval","_timeBetweenCalls","_deps","ringoutOptions","monitorInterval","timeBetweenCalls","setRingoutStatus","ringoutStatus","_shouldInit","auth","loggedIn","pending","_shouldReset","ready","_makeCall","regeneratorRuntime","mark","_callee","_ref","fromNumber","toNumber","prompt","resp","startTime","wrap","_callee$","_context","prev","next","connecting","client","account","extension","ringOut","post","from","phoneNumber","to","playPrompt","sent","contactMatcher","forceMatchBatchNumbers","phoneNumbers","Date","now","_monitorRingout","id","idle","t0","message","ringoutErrors","pollingCancelled","stop","makeCall","_x","_monitorRingout2","_callee2","ringoutId","callerStatus","_callee2$","_context2","_fetchRingoutStatus","sleep","firstLegConnectFailed","_x2","_x3","_fetchRingoutStatus2","_callee3","callStatus","_callee3$","_context3","get","response","status","abrupt","pollingFailed","_x4","RcModuleV2","state","action","getOwnPropertyDescriptor","proxify","exports"],"sources":["modules/Ringout/Ringout.ts"],"sourcesContent":["import type GetRingOutStatusResponse from '@rc-ex/core/lib/definitions/GetRingOutStatusResponse';\nimport type RestException from '@rc-ex/core/lib/RestException';\nimport { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport { sleep } from '@ringcentral-integration/utils';\n\nimport { Module } from '../../lib/di';\nimport { proxify } from '../../lib/proxy/proxify';\nimport type { Deps, MakeCallOptions } from './Ringout.interface';\nimport { ringoutErrors } from './ringoutErrors';\nimport { ringoutStatus } from './ringoutStatus';\n\nconst DEFAULT_MONITOR_INTERVAL = 2500;\nconst DEFAULT_TIME_BETWEEN_CALLS = 10000;\n\n@Module({\n  name: 'Ringout',\n  deps: [\n    'Auth',\n    'Client',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'RingoutOptions', optional: true },\n  ],\n})\nexport class Ringout extends RcModuleV2<Deps> {\n  protected _monitorInterval: number;\n  protected _timeBetweenCalls: number;\n\n  constructor(deps: Deps) {\n    super({\n      deps,\n    });\n    this._monitorInterval =\n      this._deps.ringoutOptions?.monitorInterval ?? DEFAULT_MONITOR_INTERVAL;\n    this._timeBetweenCalls =\n      this._deps.ringoutOptions?.timeBetweenCalls ?? DEFAULT_TIME_BETWEEN_CALLS;\n  }\n\n  @state\n  ringoutStatus: string = ringoutStatus.idle;\n\n  @action\n  setRingoutStatus(ringoutStatus: string) {\n    this.ringoutStatus = ringoutStatus;\n  }\n\n  override _shouldInit() {\n    return this._deps.auth.loggedIn && this.pending;\n  }\n\n  override _shouldReset() {\n    return !this._deps.auth.loggedIn && this.ready;\n  }\n\n  @proxify\n  async makeCall({ fromNumber, toNumber, prompt }: MakeCallOptions) {\n    if (this.ready) {\n      this.setRingoutStatus(ringoutStatus.connecting);\n      try {\n        const resp: GetRingOutStatusResponse = await this._deps.client\n          .account()\n          .extension()\n          .ringOut()\n          .post({\n            from: { phoneNumber: fromNumber },\n            to: { phoneNumber: toNumber },\n            playPrompt: prompt,\n          });\n\n        if (this._deps.contactMatcher) {\n          await this._deps.contactMatcher.forceMatchBatchNumbers({\n            phoneNumbers: [fromNumber, toNumber],\n          });\n        }\n\n        const startTime = Date.now();\n        await this._monitorRingout(resp.id, startTime);\n\n        this.setRingoutStatus(ringoutStatus.idle);\n      } catch (e: any /** TODO: confirm with instanceof */) {\n        this.setRingoutStatus(ringoutStatus.idle);\n        if (e.message !== ringoutErrors.pollingCancelled) {\n          throw e;\n        }\n      }\n    } else {\n      // TODO: Need to dispatch a generic error action\n    }\n  }\n\n  @proxify\n  async _monitorRingout(\n    ringoutId: GetRingOutStatusResponse['id'],\n    startTime: number,\n  ) {\n    let callerStatus = await this._fetchRingoutStatus(ringoutId);\n    while (callerStatus === 'InProgress') {\n      if (Date.now() - startTime > this._timeBetweenCalls) {\n        throw new Error(ringoutErrors.pollingCancelled);\n      }\n      await sleep(this._monitorInterval);\n      callerStatus = await this._fetchRingoutStatus(ringoutId);\n    }\n    if (callerStatus !== 'Success' && callerStatus !== 'NoAnswer') {\n      throw new Error(ringoutErrors.firstLegConnectFailed);\n    }\n  }\n\n  @proxify\n  async _fetchRingoutStatus(ringoutId: GetRingOutStatusResponse['id']) {\n    try {\n      let callStatus;\n      const resp = await this._deps.client\n        .account()\n        .extension()\n        .ringOut(ringoutId)\n        .get()\n        .catch((error: RestException | Error) => {\n          if (\n            error &&\n            (error as RestException).response &&\n            (error as RestException).response.status === 404\n          ) {\n            callStatus = 'Success';\n          }\n        });\n      return callStatus || resp.status.callerStatus;\n    } catch (e: any /** TODO: confirm with instanceof */) {\n      throw new Error(ringoutErrors.pollingFailed);\n    }\n  }\n}\n"],"mappings":"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"}