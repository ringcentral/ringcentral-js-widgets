{"version":3,"sources":["lib/MeetingCalendarHelper/index.ts"],"names":["formatSmartphones","dialInNumber","pinNumber","showMeetingPasswordPSTN","meetingPasswordPSTN","length","map","obj","passwordField","locationField","country","name","location","phoneNumber","join","formatDialInNumber","getPasswordTpl","meetingPassword","currentLocale","passwordLiteral","i18n","getString","replaceTextLinksToAnchors","input","pattern","replace","$0","htmlNewLine","htmlIndentation","htmlTabIndentation","repeat","formatTextToHtml","plantText","options","links","uselessSentences","searchLinks","newLine","indentation","tabIndentation","htmlContent","split","line","forEach","sentence","link","isPlantLink","uri","text","getRcvPstnPasswordTpl","passwordPstnLiteral","getBaseRcmTpl","brand","meeting","serviceInfo","extensionInfo","invitationInfo","addNoModifyAlert","accountName","meetingId","id","joinUri","password","mobileDialingNumberTpl","phoneDialingNumberTpl","passwordTpl","teleconference","brandConfig","prefix","formattedMsg","invitation","brandName","getRcmEventTpl","mainInfo","tplResult","getRcmHtmlEventTpl","formatDialInSection","isMeetingSecret","shortId","dialingString","dialingInfo","smartphones","dialNumber","pstnPasswordTpl","getRcvDialInInfo","rcvTeleconference","args","hasDialInNumber","dialInSection","teleconferenceInfo","getBaseRcvTpl","enableRcvConnector","enableE2EE","e2ee","meetingContent","push","rcvProductName","e2EESupportLinkText","rcvE2EESupportUrl","rcvInviteMeetingContent","rcvSipContent","rcvBrandName","getRcvEventTpl","getRcvHtmlEventTpl","getMeetingId","meetingUri","rcvUriRegExp","rcmUriRegExp","regs","i","matches","exec","match0","indexOf","substring","stripMeetingLinks","result","reg","test","meetingLinkContains","hasRCM","hasRCV"],"mappings":"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","sourcesContent":["import formatMessage from 'format-message';\n\nimport { RcVDialInNumberObj } from '@ringcentral-integration/commons/interfaces/Rcv.model';\n\nimport { formatMeetingId } from './formatMeetingId';\nimport i18n from './i18n';\nimport {\n  CommonBrand,\n  DialInSectionParams,\n  FormatToHtmlOptions,\n  ParcelledLink,\n  RcmMainParams,\n  RcvMainParams,\n  TplResult,\n} from './index.interface';\n\nfunction formatSmartphones(\n  dialInNumber: string | RcVDialInNumberObj[],\n  pinNumber: string,\n  showMeetingPasswordPSTN: boolean,\n  meetingPasswordPSTN: string,\n) {\n  if (!dialInNumber || dialInNumber.length === 0) {\n    return '';\n  }\n\n  if (typeof dialInNumber === 'string') {\n    return `${dialInNumber},,${pinNumber}#${\n      showMeetingPasswordPSTN ? `,,${meetingPasswordPSTN}#` : ''\n    }`;\n  }\n  return dialInNumber\n    .map((obj) => {\n      const passwordField = showMeetingPasswordPSTN\n        ? `,,${meetingPasswordPSTN}#`\n        : '';\n\n      const locationField =\n        obj?.country?.name && obj.location\n          ? `${obj.country.name} (${obj.location})`\n          : obj?.country?.name || '';\n\n      return `${obj.phoneNumber},,${pinNumber}#${passwordField} ${locationField}`;\n    })\n    .join('\\n\\t');\n}\n\nfunction formatDialInNumber(dialInNumber: string | RcVDialInNumberObj[]) {\n  if (!dialInNumber || dialInNumber.length === 0) {\n    return '';\n  }\n\n  if (typeof dialInNumber === 'string') {\n    return dialInNumber;\n  }\n\n  return dialInNumber\n    .map((obj) => {\n      const locationField =\n        obj?.country?.name && obj.location\n          ? `${obj.country.name} (${obj.location})`\n          : obj?.country?.name || '';\n\n      return `${obj.phoneNumber} ${locationField}`;\n    })\n    .join('\\n\\t');\n}\n\nfunction getPasswordTpl(\n  meetingPassword: string,\n  currentLocale: string,\n): string {\n  const passwordLiteral = i18n.getString('password', currentLocale);\n  return meetingPassword ? `${passwordLiteral}: ${meetingPassword}` : '';\n}\n\n/**\n * replace all text link into anchor link\n * Should match: http://www.example.com\n * Should not match: <a href=\"http://www.example.com\">http://www.example.com </a>\n * Then replace it into <a href=\"http://www.example.com\">http://www.example.com </a>\n * @param input\n */\nfunction replaceTextLinksToAnchors(input: string): string {\n  /**\n   * [^<>\\]]+ means should match any characters except < or > or ]\n   * (?!\\s*<\\/a>) means url should not be followed by either \"</a>\" or \"     </a>\"\n   * (?!\"[^>]*>) means url should not followed by \">\n   * further explanation: origin string: <a href=\"http://www.example.com\">http://www.example.com </a> should not match\n   * (?=[\\s!,?\\]]|$) means url can be followed by punctuations or whitespace or nothing\n   */\n  // https://stackoverflow.com/questions/19060460/url-replace-with-anchor-not-replacing-existing-anchors\n\n  const pattern: RegExp =\n    /(?:(?:ht|f)tps?:\\/\\/|www)[^<>\\]]+(?!\\s*<\\/a>)(?!\"[^>]*>)(?=[\\s!,?\\]<]|$)/gim;\n\n  return input.replace(pattern, ($0: string): string => {\n    return `<a target=\"_blank\" href=\"${$0}\">${$0}</a>`;\n  });\n}\n\nconst htmlNewLine: string = '<br>';\nconst htmlIndentation: string = '&nbsp;';\nconst htmlTabIndentation: string = htmlIndentation.repeat(4);\n\nfunction formatTextToHtml(\n  plantText: string,\n  options: FormatToHtmlOptions = {},\n): string {\n  const {\n    links = [],\n    uselessSentences = [],\n    searchLinks = false,\n    newLine = htmlNewLine,\n    indentation = htmlIndentation,\n    tabIndentation = htmlTabIndentation,\n  } = options;\n\n  let htmlContent = plantText\n    .replace(/\\r\\n|\\n|\\r/g, '\\n') // formalize newline\n    .split('\\n') // split with formalized newline\n    .map((line) => {\n      return line\n        .replace(/\\t/g, tabIndentation) // replace all Tab with 4 indentations\n        .replace(/^\\s*/, ($0) => indentation.repeat($0.length)); // replace leading white spaces with indentations\n    })\n    .join(newLine);\n\n  uselessSentences.forEach((sentence) => {\n    if (sentence) {\n      htmlContent = htmlContent.replace(sentence, '');\n    }\n  });\n\n  links.forEach((link) => {\n    if (link) {\n      const isPlantLink = typeof link === 'string';\n      const uri = isPlantLink ? (link as string) : (link as ParcelledLink).uri;\n      const text = isPlantLink\n        ? (link as string)\n        : (link as ParcelledLink).text;\n\n      if (uri && text) {\n        htmlContent = htmlContent.replace(\n          uri,\n          `<a target=\"_blank\" href=\"${uri}\">${text}</a>`,\n        );\n      }\n    }\n  });\n\n  if (searchLinks) {\n    htmlContent = replaceTextLinksToAnchors(htmlContent);\n  }\n\n  return htmlContent;\n}\n\n/**\n * Dial-in password: ${passwordPstn}\n */\nfunction getRcvPstnPasswordTpl(\n  meetingPasswordPSTN: string,\n  currentLocale: string,\n): string {\n  const passwordPstnLiteral = i18n.getString('passwordPstn', currentLocale);\n  return `${passwordPstnLiteral} ${meetingPasswordPSTN}`;\n}\n\nfunction getBaseRcmTpl(\n  { meeting, serviceInfo, extensionInfo, invitationInfo }: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  addNoModifyAlert = false,\n): TplResult {\n  const accountName = extensionInfo.name;\n  const meetingId = meeting.id;\n  const joinUri = meeting.links.joinUri;\n  const password = meeting.password;\n\n  const mobileDialingNumberTpl = serviceInfo.mobileDialingNumberTpl;\n  const phoneDialingNumberTpl = serviceInfo.phoneDialingNumberTpl;\n  const passwordTpl = getPasswordTpl(password, currentLocale);\n  const teleconference = brand.brandConfig.teleconference;\n\n  const prefix = addNoModifyAlert\n    ? `${i18n.getString('doNotModify', currentLocale)}\\n`\n    : '';\n\n  let formattedMsg = invitationInfo?.invitation;\n  if (!formattedMsg) {\n    formattedMsg = formatMessage(\n      i18n.getString('inviteMeetingContent', currentLocale),\n      {\n        accountName,\n        brandName: brand.name,\n        joinUri,\n        passwordTpl,\n        mobileDialingNumberTpl,\n        phoneDialingNumberTpl,\n        meetingId: formatMeetingId(meetingId),\n        teleconference,\n      },\n    );\n  }\n\n  return {\n    formattedMsg: `${prefix}${formattedMsg}`,\n    links: {\n      joinUri,\n      teleconference,\n    },\n  };\n}\n\nfunction getRcmEventTpl(\n  mainInfo: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  addNoModifyAlert = false,\n): string {\n  const tplResult = getBaseRcmTpl(\n    mainInfo,\n    brand,\n    currentLocale,\n    addNoModifyAlert,\n  );\n  return tplResult.formattedMsg;\n}\n\nfunction getRcmHtmlEventTpl(\n  mainInfo: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  addNoModifyAlert = false,\n): string {\n  const tplResult = getBaseRcmTpl(\n    mainInfo,\n    brand,\n    currentLocale,\n    addNoModifyAlert,\n  );\n  return formatTextToHtml(tplResult.formattedMsg, {\n    links: [tplResult.links.joinUri, tplResult.links.teleconference],\n  });\n}\n\n/* Outcome example:\nOne tap to join audio only from a smartphone:\n  +16504191505,,977988816#,,3893596796# United States (San Mateo, CA)\n\nOr dial:\n    +1 (650) 4191505 United States (San Mateo, CA)\n    Access Code / Meeting ID: 977988816\n\nDial-in password: 3893596796\n */\nfunction formatDialInSection({\n  dialInNumber,\n  isMeetingSecret,\n  meetingPasswordPSTN,\n  shortId,\n  currentLocale,\n}: DialInSectionParams) {\n  /* TODO: after get the translation, remove rcvInviteMeetingContentDial\n   * rcvInviteMeetingContentCountryDial is the correct one\n   */\n  const dialingString = i18n.getString(\n    typeof dialInNumber === 'string'\n      ? 'rcvInviteMeetingContentDial'\n      : 'rcvInviteMeetingContentCountryDial',\n    currentLocale,\n  );\n  const showMeetingPasswordPSTN = !!(isMeetingSecret && meetingPasswordPSTN);\n  const dialingInfo = formatMessage(dialingString, {\n    smartphones: formatSmartphones(\n      dialInNumber,\n      shortId,\n      showMeetingPasswordPSTN,\n      meetingPasswordPSTN,\n    ),\n    dialNumber: formatDialInNumber(dialInNumber),\n    pinNumber: formatMeetingId(shortId),\n  });\n  const pstnPasswordTpl = !showMeetingPasswordPSTN\n    ? ''\n    : getRcvPstnPasswordTpl(meetingPasswordPSTN, currentLocale);\n  return `${dialingInfo}${pstnPasswordTpl}`;\n}\n\n// RCINT-22191 hotfix\n// The feature need us to extract just the dial-in and teleconference section\n// Although the logic is OK for common usage, the requirement is specific\n// There is no any evidence that the other projects will need this\n// Therefore, this is reserved for the calendar-update-tool project\nfunction getRcvDialInInfo({\n  rcvTeleconference,\n  ...args\n}: DialInSectionParams & { rcvTeleconference: string }) {\n  const hasDialInNumber = args?.dialInNumber?.length > 0;\n  const dialInSection = hasDialInNumber ? formatDialInSection(args) : '';\n  const teleconferenceInfo = formatMessage(\n    i18n.getString('rcvTeleconference', args.currentLocale),\n    {\n      teleconference: rcvTeleconference,\n    },\n  );\n  return `${dialInSection}${teleconferenceInfo}`;\n}\n\nfunction getBaseRcvTpl(\n  { meeting, extensionInfo, dialInNumber, invitationInfo }: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  enableRcvConnector = false,\n  enableE2EE = false,\n  addNoModifyAlert = false,\n): TplResult {\n  const prefix = addNoModifyAlert\n    ? `${i18n.getString('doNotModify', currentLocale)}\\n`\n    : '';\n  const joinUri = meeting.joinUri;\n  const teleconference = brand.rcvTeleconference;\n  if (invitationInfo) {\n    return {\n      formattedMsg: `${prefix}${invitationInfo}`,\n      links: {\n        joinUri,\n        teleconference,\n      },\n    };\n  }\n\n  const accountName = extensionInfo.name;\n  const { meetingPassword, meetingPasswordPSTN, isMeetingSecret, e2ee } =\n    meeting;\n  const meetingContent: Array<string> = [];\n  const showMeetingPasswordPSTN = !!(isMeetingSecret && meetingPasswordPSTN);\n\n  if (enableE2EE && e2ee) {\n    meetingContent.push(\n      i18n.getString('rcvE2EEInviteMeetingContent', currentLocale),\n    );\n    const formattedMsg = formatMessage(meetingContent.join(''), {\n      accountName,\n      brandName: brand.name,\n      rcvProductName: brand.brandConfig.rcvProductName,\n      joinUri,\n      e2EESupportLinkText: formatMessage(\n        i18n.getString('e2EESupportLinkText', currentLocale),\n        {\n          brandName: brand.name,\n        },\n      ),\n      rcvE2EESupportUrl: brand.rcvE2EESupportUrl,\n    });\n    return {\n      formattedMsg: `${prefix}${formattedMsg}`,\n      links: {\n        joinUri,\n        teleconference,\n      },\n    };\n  }\n\n  meetingContent.push(brand.brandConfig.rcvInviteMeetingContent as string);\n\n  if (dialInNumber && dialInNumber.length > 0) {\n    /* TODO: after get the translation, remove rcvInviteMeetingContentDial\n     * rcvInviteMeetingContentCountryDial is the correct one\n     */\n    meetingContent.push(\n      i18n.getString(\n        typeof dialInNumber === 'string'\n          ? 'rcvInviteMeetingContentDial'\n          : 'rcvInviteMeetingContentCountryDial',\n        currentLocale,\n      ),\n    );\n    if (showMeetingPasswordPSTN) {\n      meetingContent.push(\n        getRcvPstnPasswordTpl(meetingPasswordPSTN, currentLocale),\n      );\n    }\n  }\n  meetingContent.push(`${i18n.getString('rcvTeleconference', currentLocale)}`);\n  const passwordTpl = isMeetingSecret\n    ? getPasswordTpl(meetingPassword, currentLocale)\n    : '';\n\n  if (enableRcvConnector) {\n    meetingContent.push(`${i18n.getString('rcvSipHeader', currentLocale)}`);\n    const rcvSipContent = isMeetingSecret\n      ? 'rcvSipContentWithPwd'\n      : 'rcvSipContentNoPwd';\n    meetingContent.push(`${i18n.getString(rcvSipContent, currentLocale)}`);\n  }\n\n  const shortId = meeting.shortId;\n\n  const formattedMsg = formatMessage(meetingContent.join(''), {\n    accountName,\n    brandName: brand.brandConfig.rcvBrandName ?? brand.name,\n    joinUri,\n    passwordTpl,\n    meetingPasswordPSTN,\n    meetingId: shortId,\n    pinNumber: formatMeetingId(shortId),\n    teleconference,\n    dialNumber: formatDialInNumber(dialInNumber),\n    smartphones: formatSmartphones(\n      dialInNumber,\n      shortId,\n      showMeetingPasswordPSTN,\n      meetingPasswordPSTN,\n    ),\n    rcvProductName: brand.brandConfig.rcvProductName,\n  });\n\n  return {\n    formattedMsg: `${prefix}${formattedMsg}`,\n    links: {\n      joinUri,\n      teleconference,\n    },\n  };\n}\n\nfunction getRcvEventTpl(\n  mainInfo: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  enableRcvConnector = false,\n  enableE2EE = false,\n): string {\n  const tplResult = getBaseRcvTpl(\n    mainInfo,\n    brand,\n    currentLocale,\n    enableRcvConnector,\n    enableE2EE,\n  );\n  return tplResult.formattedMsg;\n}\n\nfunction getRcvHtmlEventTpl(\n  mainInfo: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  enableRcvConnector = false,\n  enableE2EE = false,\n): string {\n  const tplResult = getBaseRcvTpl(\n    mainInfo,\n    brand,\n    currentLocale,\n    enableRcvConnector,\n    enableE2EE,\n  );\n\n  const links: [string, string, ParcelledLink] = [\n    tplResult.links.joinUri,\n    tplResult.links.teleconference,\n    {\n      uri: brand.rcvE2EESupportUrl,\n      text: formatMessage(\n        i18n.getString('e2EESupportLinkText', currentLocale),\n        {\n          brandName: brand.name,\n        },\n      ),\n    },\n  ];\n\n  return formatTextToHtml(tplResult.formattedMsg, {\n    uselessSentences: [\n      `${formatMessage(i18n.getString('e2EESupportLinkText', currentLocale), {\n        brandName: brand.name,\n      })}<br>`,\n    ],\n    links,\n  });\n}\n\nfunction getMeetingId(\n  meetingUri: string,\n  rcvUriRegExp: RegExp,\n  rcmUriRegExp: RegExp,\n): string {\n  if (meetingUri) {\n    const regs = [rcmUriRegExp, rcvUriRegExp];\n    for (let i = 0; i < regs.length; i += 1) {\n      const matches = regs[i].exec(meetingUri);\n      if (matches && matches.length > 0) {\n        const match0 = matches[0];\n        const link = (\n          match0.indexOf('?') > -1\n            ? matches[0].substring(0, matches[0].indexOf('?'))\n            : match0\n        ).split('/');\n\n        const id = link[link.length - 1];\n        return id;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction stripMeetingLinks(\n  text: string,\n  rcvUriRegExp: RegExp,\n  rcmUriRegExp: RegExp,\n): string {\n  let result = text;\n  [rcmUriRegExp, rcvUriRegExp].forEach((reg) => {\n    while (reg.test(result)) {\n      result = result.replace(reg, '');\n    }\n  });\n  return result;\n}\n\nfunction meetingLinkContains(\n  rcvUriRegExp: RegExp,\n  rcmUriRegExp: RegExp,\n  text?: string,\n): { hasRCM: boolean; hasRCV: boolean } {\n  return {\n    hasRCM: rcmUriRegExp.test(text ?? ''),\n    hasRCV: rcvUriRegExp.test(text ?? ''),\n  };\n}\n\nexport {\n  getBaseRcvTpl,\n  formatMeetingId,\n  formatTextToHtml,\n  getMeetingId,\n  getRcmEventTpl,\n  getRcmHtmlEventTpl,\n  getRcvDialInInfo,\n  getRcvEventTpl,\n  getRcvHtmlEventTpl,\n  htmlIndentation,\n  htmlNewLine,\n  htmlTabIndentation,\n  meetingLinkContains,\n  replaceTextLinksToAnchors,\n  stripMeetingLinks,\n};\n"],"file":"index.js"}