{"version":3,"file":"index.js","names":["_utils","require","_formatMeetingId","_i18n","_interopRequireDefault","e","__esModule","_objectWithoutProperties","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","hasOwnProperty","formatSmartphones","dialInNumber","pinNumber","showMeetingPasswordPSTN","meetingPasswordPSTN","concat","map","obj","_obj$country","_obj$country2","passwordField","locationField","country","name","location","phoneNumber","join","formatDialInNumber","_obj$country3","_obj$country4","getPasswordTpl","meetingPassword","currentLocale","passwordLiteral","i18n","getString","replaceTextLinksToAnchors","input","pattern","replace","$0","htmlNewLine","exports","htmlIndentation","htmlTabIndentation","repeat","formatTextToHtml","plantText","options","arguments","undefined","_options$links","links","_options$uselessSente","uselessSentences","_options$searchLinks","searchLinks","_options$newLine","newLine","_options$indentation","indentation","_options$tabIndentati","tabIndentation","htmlContent","split","line","forEach","sentence","link","isPlantLink","uri","text","getRcvPstnPasswordTpl","passwordPstnLiteral","getBaseRcmTpl","_ref","brand","_brand$brandConfig$te","_brand$brandConfig$te2","meeting","serviceInfo","extensionInfo","invitationInfo","addNoModifyAlert","accountName","meetingId","id","joinUri","password","mobileDialingNumberTpl","phoneDialingNumberTpl","passwordTpl","teleconference","brandConfig","toString","prefix","formattedMsg","invitation","format","brandName","formatMeetingId","getRcmEventTpl","mainInfo","tplResult","getRcmHtmlEventTpl","formatDialInSection","_ref2","isMeetingSecret","shortId","dialingString","dialingInfo","smartphones","dialNumber","pstnPasswordTpl","getRcvDialInInfo","_ref3","_args$dialInNumber","rcvTeleconference","args","hasDialInNumber","dialInSection","teleconferenceInfo","getBaseRcvTpl","_ref4","_brand$brandConfig$rc","enableRcvConnector","enableE2EE","e2ee","meetingContent","push","rcvProductName","e2EESupportLinkText","rcvE2EESupportUrl","rcvInviteMeetingContent","rcvSipContent","rcvBrandName","getRcvEventTpl","getRcvHtmlEventTpl","getMeetingId","meetingUri","rcvUriRegExp","rcmUriRegExp","regs","matches","exec","match0","substring","stripMeetingLinks","result","reg","test","meetingLinkContains","hasRCM","hasRCV"],"sources":["lib/MeetingCalendarHelper/index.ts"],"sourcesContent":["import type { RcVDialInNumberObj } from '@ringcentral-integration/commons/interfaces/Rcv.model';\nimport { format } from '@ringcentral-integration/utils';\n\nimport { formatMeetingId } from './formatMeetingId';\nimport i18n from './i18n';\nimport type {\n  CommonBrand,\n  DialInSectionParams,\n  FormatToHtmlOptions,\n  ParcelledLink,\n  RcmMainParams,\n  RcvMainParams,\n  TplResult,\n} from './index.interface';\n\nfunction formatSmartphones(\n  dialInNumber: string | RcVDialInNumberObj[],\n  pinNumber: string,\n  showMeetingPasswordPSTN: boolean,\n  meetingPasswordPSTN: string,\n) {\n  if (!dialInNumber || dialInNumber.length === 0) {\n    return '';\n  }\n\n  if (typeof dialInNumber === 'string') {\n    return `${dialInNumber},,${pinNumber}#${\n      showMeetingPasswordPSTN ? `,,${meetingPasswordPSTN}#` : ''\n    }`;\n  }\n  return dialInNumber\n    .map((obj) => {\n      const passwordField = showMeetingPasswordPSTN\n        ? `,,${meetingPasswordPSTN}#`\n        : '';\n\n      const locationField =\n        obj?.country?.name && obj.location\n          ? `${obj.country.name} (${obj.location})`\n          : obj?.country?.name || '';\n\n      return `${obj.phoneNumber},,${pinNumber}#${passwordField} ${locationField}`;\n    })\n    .join('\\n\\t');\n}\n\nfunction formatDialInNumber(dialInNumber: string | RcVDialInNumberObj[]) {\n  if (!dialInNumber || dialInNumber.length === 0) {\n    return '';\n  }\n\n  if (typeof dialInNumber === 'string') {\n    return dialInNumber;\n  }\n\n  return dialInNumber\n    .map((obj) => {\n      const locationField =\n        obj?.country?.name && obj.location\n          ? `${obj.country.name} (${obj.location})`\n          : obj?.country?.name || '';\n\n      return `${obj.phoneNumber} ${locationField}`;\n    })\n    .join('\\n\\t');\n}\n\nfunction getPasswordTpl(\n  meetingPassword: string,\n  currentLocale: string,\n): string {\n  const passwordLiteral = i18n.getString('password', currentLocale);\n  return meetingPassword ? `${passwordLiteral}: ${meetingPassword}` : '';\n}\n\n/**\n * replace all text link into anchor link\n * Should match: http://www.example.com\n * Should not match: <a href=\"http://www.example.com\">http://www.example.com </a>\n * Then replace it into <a href=\"http://www.example.com\">http://www.example.com </a>\n * @param input\n */\nfunction replaceTextLinksToAnchors(input: string): string {\n  /**\n   * [^<>\\]]+ means should match any characters except < or > or ]\n   * (?!\\s*<\\/a>) means url should not be followed by either \"</a>\" or \"     </a>\"\n   * (?!\"[^>]*>) means url should not followed by \">\n   * further explanation: origin string: <a href=\"http://www.example.com\">http://www.example.com </a> should not match\n   * (?=[\\s!,?\\]]|$) means url can be followed by punctuations or whitespace or nothing\n   */\n  // https://stackoverflow.com/questions/19060460/url-replace-with-anchor-not-replacing-existing-anchors\n\n  const pattern =\n    /(?:(?:ht|f)tps?:\\/\\/|www)[^<>\\]]+(?!\\s*<\\/a>)(?!\"[^>]*>)(?=[\\s!,?\\]<]|$)/gim;\n\n  return input.replace(pattern, ($0: string): string => {\n    return `<a target=\"_blank\" href=\"${$0}\">${$0}</a>`;\n  });\n}\n\nconst htmlNewLine = '<br>';\nconst htmlIndentation = '&nbsp;';\nconst htmlTabIndentation: string = htmlIndentation.repeat(4);\n\nfunction formatTextToHtml(\n  plantText: string,\n  options: FormatToHtmlOptions = {},\n): string {\n  const {\n    links = [],\n    uselessSentences = [],\n    searchLinks = false,\n    newLine = htmlNewLine,\n    indentation = htmlIndentation,\n    tabIndentation = htmlTabIndentation,\n  } = options;\n\n  let htmlContent = plantText\n    .replace(/\\r\\n|\\n|\\r/g, '\\n') // formalize newline\n    .split('\\n') // split with formalized newline\n    .map((line) => {\n      return line\n        .replace(/\\t/g, tabIndentation) // replace all Tab with 4 indentations\n        .replace(/^\\s*/, ($0) => indentation.repeat($0.length)); // replace leading white spaces with indentations\n    })\n    .join(newLine);\n\n  uselessSentences.forEach((sentence) => {\n    if (sentence) {\n      htmlContent = htmlContent.replace(sentence, '');\n    }\n  });\n\n  links.forEach((link) => {\n    if (link) {\n      const isPlantLink = typeof link === 'string';\n      const uri = isPlantLink ? link : link.uri;\n      const text = isPlantLink ? link : link.text;\n      if (uri) {\n        htmlContent = htmlContent.replace(\n          uri,\n          `<a target=\"_blank\" href=\"${uri}\">${text || uri}</a>`,\n        );\n      }\n    }\n  });\n\n  if (searchLinks) {\n    htmlContent = replaceTextLinksToAnchors(htmlContent);\n  }\n\n  return htmlContent;\n}\n\n/**\n * Dial-in password: ${passwordPstn}\n */\nfunction getRcvPstnPasswordTpl(\n  meetingPasswordPSTN: string,\n  currentLocale: string,\n): string {\n  const passwordPstnLiteral = i18n.getString('passwordPstn', currentLocale);\n  return `${passwordPstnLiteral} ${meetingPasswordPSTN}`;\n}\n\nfunction getBaseRcmTpl(\n  { meeting, serviceInfo, extensionInfo, invitationInfo }: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  addNoModifyAlert = false,\n): TplResult {\n  const accountName = extensionInfo.name;\n  const meetingId = meeting.id;\n  const joinUri = meeting.links.joinUri;\n  const password = meeting.password;\n\n  const mobileDialingNumberTpl = serviceInfo.mobileDialingNumberTpl;\n  const phoneDialingNumberTpl = serviceInfo.phoneDialingNumberTpl;\n  const passwordTpl = getPasswordTpl(password, currentLocale);\n  const teleconference = brand.brandConfig.teleconference?.toString() ?? '';\n\n  const prefix = addNoModifyAlert\n    ? `${i18n.getString('doNotModify', currentLocale)}\\n`\n    : '';\n\n  let formattedMsg = invitationInfo?.invitation;\n  if (!formattedMsg) {\n    formattedMsg = format(\n      i18n.getString('inviteMeetingContent', currentLocale),\n      {\n        accountName,\n        brandName: brand.name,\n        joinUri,\n        passwordTpl,\n        mobileDialingNumberTpl,\n        phoneDialingNumberTpl,\n        meetingId: formatMeetingId(meetingId),\n        teleconference,\n      },\n    );\n  }\n\n  return {\n    formattedMsg: `${prefix}${formattedMsg}`,\n    links: {\n      joinUri,\n      teleconference,\n    },\n  };\n}\n\nfunction getRcmEventTpl(\n  mainInfo: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  addNoModifyAlert = false,\n): string {\n  const tplResult = getBaseRcmTpl(\n    mainInfo,\n    brand,\n    currentLocale,\n    addNoModifyAlert,\n  );\n  return tplResult.formattedMsg;\n}\n\nfunction getRcmHtmlEventTpl(\n  mainInfo: RcmMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  addNoModifyAlert = false,\n): string {\n  const tplResult = getBaseRcmTpl(\n    mainInfo,\n    brand,\n    currentLocale,\n    addNoModifyAlert,\n  );\n  return formatTextToHtml(tplResult.formattedMsg, {\n    links: [tplResult.links.joinUri, tplResult.links.teleconference],\n  });\n}\n\n/* Outcome example:\nOne tap to join audio only from a smartphone:\n  +16504191505,,977988816#,,3893596796# United States (San Mateo, CA)\n\nOr dial:\n    +1 (650) 4191505 United States (San Mateo, CA)\n    Access Code / Meeting ID: 977988816\n\nDial-in password: 3893596796\n */\nfunction formatDialInSection({\n  dialInNumber,\n  isMeetingSecret,\n  meetingPasswordPSTN,\n  shortId,\n  currentLocale,\n}: DialInSectionParams) {\n  /* TODO: after get the translation, remove rcvInviteMeetingContentDial\n   * rcvInviteMeetingContentCountryDial is the correct one\n   */\n  const dialingString = i18n.getString(\n    typeof dialInNumber === 'string'\n      ? 'rcvInviteMeetingContentDial'\n      : 'rcvInviteMeetingContentCountryDial',\n    currentLocale,\n  );\n  const showMeetingPasswordPSTN = !!(isMeetingSecret && meetingPasswordPSTN);\n  const dialingInfo = format(dialingString, {\n    smartphones: formatSmartphones(\n      dialInNumber,\n      shortId,\n      showMeetingPasswordPSTN,\n      meetingPasswordPSTN,\n    ),\n    dialNumber: formatDialInNumber(dialInNumber),\n    pinNumber: formatMeetingId(shortId),\n  });\n  const pstnPasswordTpl = !showMeetingPasswordPSTN\n    ? ''\n    : getRcvPstnPasswordTpl(meetingPasswordPSTN, currentLocale);\n  return `${dialingInfo}${pstnPasswordTpl}`;\n}\n\n// RCINT-22191 hotfix\n// The feature need us to extract just the dial-in and teleconference section\n// Although the logic is OK for common usage, the requirement is specific\n// There is no any evidence that the other projects will need this\n// Therefore, this is reserved for the calendar-update-tool project\nfunction getRcvDialInInfo({\n  rcvTeleconference,\n  ...args\n}: DialInSectionParams & { rcvTeleconference: string }) {\n  const hasDialInNumber = args?.dialInNumber?.length > 0;\n  const dialInSection = hasDialInNumber ? formatDialInSection(args) : '';\n  const teleconferenceInfo = format(\n    i18n.getString('rcvTeleconference', args.currentLocale),\n    {\n      teleconference: rcvTeleconference,\n    },\n  );\n  return `${dialInSection}${teleconferenceInfo}`;\n}\n\nfunction getBaseRcvTpl(\n  { meeting, extensionInfo, dialInNumber, invitationInfo }: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  enableRcvConnector = false,\n  enableE2EE = false,\n  addNoModifyAlert = false,\n): TplResult {\n  const prefix = addNoModifyAlert\n    ? `${i18n.getString('doNotModify', currentLocale)}\\n`\n    : '';\n  const joinUri = meeting.joinUri;\n  const teleconference = brand.rcvTeleconference;\n  if (invitationInfo) {\n    return {\n      formattedMsg: `${prefix}${invitationInfo}`,\n      links: {\n        joinUri,\n        // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n        teleconference,\n      },\n    };\n  }\n\n  const accountName = extensionInfo.name;\n  const { meetingPassword, meetingPasswordPSTN, isMeetingSecret, e2ee } =\n    meeting;\n  const meetingContent: Array<string> = [];\n  const showMeetingPasswordPSTN = !!(isMeetingSecret && meetingPasswordPSTN);\n\n  if (enableE2EE && e2ee) {\n    meetingContent.push(\n      i18n.getString('rcvE2EEInviteMeetingContent', currentLocale),\n    );\n    const formattedMsg = format(meetingContent.join(''), {\n      accountName,\n      brandName: brand.name,\n      rcvProductName: brand.brandConfig.rcvProductName,\n      joinUri,\n      e2EESupportLinkText: format(\n        i18n.getString('e2EESupportLinkText', currentLocale),\n        {\n          brandName: brand.name,\n        },\n      ),\n      rcvE2EESupportUrl: brand.rcvE2EESupportUrl,\n    });\n    return {\n      formattedMsg: `${prefix}${formattedMsg}`,\n      links: {\n        joinUri,\n        // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n        teleconference,\n      },\n    };\n  }\n\n  meetingContent.push(brand.brandConfig.rcvInviteMeetingContent as string);\n\n  if (dialInNumber && dialInNumber.length > 0) {\n    /* TODO: after get the translation, remove rcvInviteMeetingContentDial\n     * rcvInviteMeetingContentCountryDial is the correct one\n     */\n    meetingContent.push(\n      i18n.getString(\n        typeof dialInNumber === 'string'\n          ? 'rcvInviteMeetingContentDial'\n          : 'rcvInviteMeetingContentCountryDial',\n        currentLocale,\n      ),\n    );\n    if (showMeetingPasswordPSTN) {\n      meetingContent.push(\n        getRcvPstnPasswordTpl(meetingPasswordPSTN, currentLocale),\n      );\n    }\n  }\n  meetingContent.push(`${i18n.getString('rcvTeleconference', currentLocale)}`);\n  const passwordTpl = isMeetingSecret\n    ? getPasswordTpl(meetingPassword, currentLocale)\n    : '';\n\n  if (enableRcvConnector) {\n    meetingContent.push(`${i18n.getString('rcvSipHeader', currentLocale)}`);\n    const rcvSipContent = isMeetingSecret\n      ? 'rcvSipContentWithPwd'\n      : 'rcvSipContentNoPwd';\n    meetingContent.push(`${i18n.getString(rcvSipContent, currentLocale)}`);\n  }\n\n  const shortId = meeting.shortId;\n\n  const formattedMsg = format(meetingContent.join(''), {\n    accountName,\n    brandName: brand.brandConfig.rcvBrandName ?? brand.name,\n    joinUri,\n    passwordTpl,\n    meetingPasswordPSTN,\n    meetingId: shortId,\n    pinNumber: formatMeetingId(shortId),\n    teleconference,\n    dialNumber: formatDialInNumber(dialInNumber),\n    smartphones: formatSmartphones(\n      dialInNumber,\n      shortId,\n      showMeetingPasswordPSTN,\n      meetingPasswordPSTN,\n    ),\n    rcvProductName: brand.brandConfig.rcvProductName,\n  });\n\n  return {\n    formattedMsg: `${prefix}${formattedMsg}`,\n    links: {\n      joinUri,\n      // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n      teleconference,\n    },\n  };\n}\n\nfunction getRcvEventTpl(\n  mainInfo: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  enableRcvConnector = false,\n  enableE2EE = false,\n  addNoModifyAlert = false,\n): string {\n  const tplResult = getBaseRcvTpl(\n    mainInfo,\n    brand,\n    currentLocale,\n    enableRcvConnector,\n    enableE2EE,\n    addNoModifyAlert,\n  );\n  return tplResult.formattedMsg;\n}\n\nfunction getRcvHtmlEventTpl(\n  mainInfo: RcvMainParams,\n  brand: CommonBrand,\n  currentLocale: string,\n  enableRcvConnector = false,\n  enableE2EE = false,\n): string {\n  const tplResult = getBaseRcvTpl(\n    mainInfo,\n    brand,\n    currentLocale,\n    enableRcvConnector,\n    enableE2EE,\n  );\n\n  const links: [string, string, ParcelledLink] = [\n    tplResult.links.joinUri,\n    tplResult.links.teleconference,\n    {\n      // @ts-expect-error TS(2322): Type 'string | undefined' is not assignable to typ... Remove this comment to see the full error message\n      uri: brand.rcvE2EESupportUrl,\n      text: format(i18n.getString('e2EESupportLinkText', currentLocale), {\n        brandName: brand.name,\n      }),\n    },\n  ];\n\n  return formatTextToHtml(tplResult.formattedMsg, {\n    uselessSentences: [\n      `${format(i18n.getString('e2EESupportLinkText', currentLocale), {\n        brandName: brand.name,\n      })}<br>`,\n    ],\n    links,\n  });\n}\n\nfunction getMeetingId(\n  meetingUri: string,\n  rcvUriRegExp: RegExp,\n  rcmUriRegExp: RegExp,\n): string {\n  if (meetingUri) {\n    const regs = [rcmUriRegExp, rcvUriRegExp];\n    for (let i = 0; i < regs.length; i += 1) {\n      const matches = regs[i].exec(meetingUri);\n      if (matches && matches.length > 0) {\n        const match0 = matches[0];\n        const link = (\n          match0.indexOf('?') > -1\n            ? matches[0].substring(0, matches[0].indexOf('?'))\n            : match0\n        ).split('/');\n\n        const id = link[link.length - 1];\n        return id;\n      }\n    }\n  }\n\n  // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'string'.\n  return null;\n}\n\nfunction stripMeetingLinks(\n  text: string,\n  rcvUriRegExp: RegExp,\n  rcmUriRegExp: RegExp,\n): string {\n  let result = text;\n  [rcmUriRegExp, rcvUriRegExp].forEach((reg) => {\n    while (reg.test(result)) {\n      result = result.replace(reg, '');\n    }\n  });\n  return result;\n}\n\nfunction meetingLinkContains(\n  rcvUriRegExp: RegExp,\n  rcmUriRegExp: RegExp,\n  text?: string,\n): { hasRCM: boolean; hasRCV: boolean } {\n  return {\n    hasRCM: rcmUriRegExp.test(text ?? ''),\n    hasRCV: rcvUriRegExp.test(text ?? ''),\n  };\n}\n\nexport {\n  formatMeetingId,\n  formatTextToHtml,\n  getBaseRcvTpl,\n  getMeetingId,\n  getRcmEventTpl,\n  getRcmHtmlEventTpl,\n  getRcvDialInInfo,\n  getRcvEventTpl,\n  getRcvHtmlEventTpl,\n  htmlIndentation,\n  htmlNewLine,\n  htmlTabIndentation,\n  meetingLinkContains,\n  replaceTextLinksToAnchors,\n  stripMeetingLinks,\n};\n"],"mappings":"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","ignoreList":[]}