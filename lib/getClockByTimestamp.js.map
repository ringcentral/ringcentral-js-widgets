{"version":3,"file":"getClockByTimestamp.js","names":["getClockByTimestamp","time","_ref","arguments","length","undefined","_ref$useCeil","useCeil","number","int","Math","ceil","floor","hour","parseInt","concat","minute","second","map","String","join","exports"],"sources":["lib/getClockByTimestamp.ts"],"sourcesContent":["// TODO: refactor with juno methods\n/**\n * get clock time from timestamp\n * @returns 10:00:00\n */\nexport const getClockByTimestamp = (time: number, { useCeil = false } = {}) => {\n  const number = time / 1000;\n  const int = useCeil ? Math.ceil(number) : Math.floor(number);\n  const hour = parseInt(`${(int / 60 / 60) % 24}`, 10);\n  const minute = parseInt(`${(int / 60) % 60}`, 10);\n  const second = parseInt(`${int % 60}`, 10);\n  return [hour, minute, second]\n    .map((time) => `${String(time).length < 2 ? '0' : ''}${time}`)\n    .join(':');\n};\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,IAAY,EAA+B;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAP,CAAC,CAAC;IAAAG,YAAA,GAAAJ,IAAA,CAAtBK,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;EACjE,IAAME,MAAM,GAAGP,IAAI,GAAG,IAAI;EAC1B,IAAMQ,IAAG,GAAGF,OAAO,GAAGG,IAAI,CAACC,IAAI,CAACH,MAAM,CAAC,GAAGE,IAAI,CAACE,KAAK,CAACJ,MAAM,CAAC;EAC5D,IAAMK,IAAI,GAAGC,QAAQ,IAAAC,MAAA,CAAKN,IAAG,GAAG,EAAE,GAAG,EAAE,GAAI,EAAE,GAAI,EAAE,CAAC;EACpD,IAAMO,MAAM,GAAGF,QAAQ,IAAAC,MAAA,CAAKN,IAAG,GAAG,EAAE,GAAI,EAAE,GAAI,EAAE,CAAC;EACjD,IAAMQ,MAAM,GAAGH,QAAQ,IAAAC,MAAA,CAAIN,IAAG,GAAG,EAAE,GAAI,EAAE,CAAC;EAC1C,OAAO,CAACI,IAAI,EAAEG,MAAM,EAAEC,MAAM,CAAC,CAC1BC,GAAG,CAAC,UAACjB,IAAI;IAAA,UAAAc,MAAA,CAAQI,MAAM,CAAClB,IAAI,CAAC,CAACG,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAAW,MAAA,CAAGd,IAAI;EAAA,CAAE,CAAC,CAC7DmB,IAAI,CAAC,GAAG,CAAC;AACd,CAAC;AAACC,OAAA,CAAArB,mBAAA,GAAAA,mBAAA","ignoreList":[]}