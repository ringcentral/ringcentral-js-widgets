{"version":3,"file":"index.js","names":["generateBaseData","allLocales","reduce","data","locale","_declaration","_attributes","version","xliff","xmlns","generateJsonData","localeData","sourceFolder","sourceLocale","translationLocales","result","folderPath","folderData","sourceFile","files","forEach","targetFile","relativePath","path","relative","join","file","acc","key","value","get","source","Object","keys","generateXlfData","exportType","fillEmptyWithSource","isFull","toLowerCase","onlyTranslated","filter","jsonData","fileName","extname","original","transUnits","unit","id","_text","target","push","diff","length","datatype","body","xlfData","xml","json2xml","compact","spaces"],"sources":["lib/generateData/index.js"],"sourcesContent":["import path from 'path';\nimport xml from 'xml-js';\nimport { reduce, forEach } from 'ramda';\n\nfunction generateBaseData(allLocales) {\n  return reduce(\n    (data, locale) => {\n      data[locale] = {\n        _declaration: {\n          _attributes: {\n            version: '1.0',\n          },\n        },\n        xliff: {\n          _attributes: {\n            version: '1.2',\n            xmlns: 'urn:oasis:names:tc:xliff:document:1.2',\n          },\n        },\n      };\n      return data;\n    },\n    {},\n    allLocales,\n  );\n}\n\n// the new json export-import flow will only require exporting en-US files\nexport function generateJsonData({\n  localeData,\n  sourceFolder,\n  sourceLocale,\n  translationLocales,\n}) {\n  return reduce(\n    (result, folderPath) => {\n      const folderData = localeData[folderPath];\n      // console.log(folderData, folderPath);\n      const sourceFile = folderData.files[sourceLocale];\n      if (sourceFile) {\n        forEach((locale) => {\n          const targetFile = folderData.files[locale];\n          if (targetFile) {\n            const relativePath = path.relative(\n              sourceFolder,\n              path.join(folderData.path, sourceFile.file),\n            );\n\n            result[locale][relativePath] = reduce(\n              (acc, [, { key, value }]) => {\n                if (locale === sourceLocale) {\n                  acc[key] = value;\n                } else if (targetFile?.data?.get(key)?.source === value) {\n                  acc[key] = targetFile.data.get(key).value;\n                }\n                return acc;\n              },\n              {},\n              sourceFile.data,\n            );\n          }\n        }, translationLocales);\n      }\n      return result;\n    },\n    reduce(\n      (acc, locale) => {\n        acc[locale] = {};\n        return acc;\n      },\n      {},\n      translationLocales,\n    ),\n    Object.keys(localeData),\n  );\n}\n\nexport function generateXlfData({\n  localeData,\n  sourceLocale,\n  translationLocales,\n  sourceFolder,\n  exportType,\n  fillEmptyWithSource,\n}) {\n  const isFull = exportType.toLowerCase() === 'full';\n  const onlyTranslated = exportType.toLowerCase() === 'translated';\n  const allLocales = translationLocales.filter(\n    (locale) => locale !== sourceLocale,\n  );\n\n  const jsonData = reduce(\n    (result, folderPath) => {\n      const folderData = localeData[folderPath];\n      const sourceFile = folderData.files[sourceLocale];\n      if (sourceFile) {\n        forEach((locale) => {\n          if (locale !== sourceLocale) {\n            const targetFile = folderData.files[locale];\n            const fileName =\n              (targetFile && targetFile.file) ||\n              `${locale}${path.extname(sourceFile.file)}`;\n            const original = path.relative(\n              sourceFolder,\n              path.join(folderData.path, fileName),\n            );\n            const transUnits = reduce(\n              (transUnits, [key]) => {\n                if (onlyTranslated) {\n                  if (\n                    targetFile &&\n                    targetFile.data.get(key) &&\n                    (!targetFile.data.get(key).source ||\n                      targetFile.data.get(key).source ===\n                        sourceFile.data.get(key).value)\n                  ) {\n                    const unit = {\n                      _attributes: {\n                        id: `[${key}]`,\n                      },\n                      source: {\n                        _text: sourceFile.data.get(key).value,\n                      },\n                      target: {\n                        _text: targetFile.data.get(key).value,\n                      },\n                    };\n                    transUnits.push(unit);\n                  }\n                } else {\n                  const diff =\n                    !targetFile ||\n                    !targetFile.data.get(key) ||\n                    (targetFile.data.get(key).source &&\n                      targetFile.data.get(key).source !==\n                        sourceFile.data.get(key).value);\n                  if ((!onlyTranslated && diff) || isFull) {\n                    const unit = {\n                      _attributes: {\n                        id: `[${key}]`,\n                      },\n                      source: {\n                        _text: sourceFile.data.get(key).value,\n                      },\n                    };\n                    if (diff) {\n                      if (fillEmptyWithSource) {\n                        unit.target = {\n                          _text: sourceFile.data.get(key).value,\n                        };\n                      } else {\n                        unit.target = {\n                          _text: '',\n                        };\n                      }\n                    } else {\n                      unit.target = {\n                        _text: targetFile.data.get(key).value,\n                      };\n                    }\n                    transUnits.push(unit);\n                  }\n                }\n                return transUnits;\n              },\n              [],\n              sourceFile.data,\n            );\n            if (transUnits.length) {\n              const unit = {\n                _attributes: {\n                  original,\n                  'source-language': sourceLocale,\n                  'target-language': locale,\n                  datatype: 'plaintext',\n                },\n                body: {\n                  'trans-unit': transUnits,\n                },\n              };\n              if (!result[locale].xliff.file) {\n                result[locale].xliff.file = [];\n              }\n              result[locale].xliff.file.push(unit);\n            }\n          }\n        }, translationLocales);\n      }\n      return result;\n    },\n    generateBaseData(allLocales),\n    Object.keys(localeData),\n  );\n  return reduce(\n    (xlfData, locale) => {\n      xlfData[locale] = xml.json2xml(jsonData[locale], {\n        compact: true,\n        spaces: 4,\n      });\n      return xlfData;\n    },\n    {},\n    allLocales,\n  );\n}\n"],"mappings":"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"}