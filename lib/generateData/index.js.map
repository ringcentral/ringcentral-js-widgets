{"version":3,"sources":["lib/generateData/index.js"],"names":["generateBaseData","allLocales","data","locale","_declaration","_attributes","version","xliff","xmlns","generateJsonData","localeData","sourceFolder","sourceLocale","translationLocales","result","folderPath","folderData","sourceFile","files","targetFile","relativePath","path","relative","join","file","acc","key","value","get","source","Object","keys","generateXlfData","exportType","fillEmptyWithSource","isFull","toLowerCase","onlyTranslated","filter","jsonData","fileName","extname","original","transUnits","unit","id","_text","target","push","diff","length","datatype","body","xlfData","xml","json2xml","compact","spaces"],"mappings":"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","sourcesContent":["import path from 'path';\nimport xml from 'xml-js';\nimport { reduce, forEach } from 'ramda';\n\nfunction generateBaseData(allLocales) {\n  return reduce(\n    (data, locale) => {\n      data[locale] = {\n        _declaration: {\n          _attributes: {\n            version: '1.0',\n          },\n        },\n        xliff: {\n          _attributes: {\n            version: '1.2',\n            xmlns: 'urn:oasis:names:tc:xliff:document:1.2',\n          },\n        },\n      };\n      return data;\n    },\n    {},\n    allLocales,\n  );\n}\n\n// the new json export-import flow will only require exporting en-US files\nexport function generateJsonData({\n  localeData,\n  sourceFolder,\n  sourceLocale,\n  translationLocales,\n}) {\n  return reduce(\n    (result, folderPath) => {\n      const folderData = localeData[folderPath];\n      // console.log(folderData, folderPath);\n      const sourceFile = folderData.files[sourceLocale];\n      if (sourceFile) {\n        forEach((locale) => {\n          const targetFile = folderData.files[locale];\n          if (targetFile) {\n            const relativePath = path.relative(\n              sourceFolder,\n              path.join(folderData.path, sourceFile.file),\n            );\n\n            result[locale][relativePath] = reduce(\n              (acc, [, { key, value }]) => {\n                if (locale === sourceLocale) {\n                  acc[key] = value;\n                } else if (targetFile?.data?.get(key)?.source === value) {\n                  acc[key] = targetFile.data.get(key).value;\n                }\n                return acc;\n              },\n              {},\n              sourceFile.data,\n            );\n          }\n        }, translationLocales);\n      }\n      return result;\n    },\n    reduce(\n      (acc, locale) => {\n        acc[locale] = {};\n        return acc;\n      },\n      {},\n      translationLocales,\n    ),\n    Object.keys(localeData),\n  );\n}\n\nexport function generateXlfData({\n  localeData,\n  sourceLocale,\n  translationLocales,\n  sourceFolder,\n  exportType,\n  fillEmptyWithSource,\n}) {\n  const isFull = exportType.toLowerCase() === 'full';\n  const onlyTranslated = exportType.toLowerCase() === 'translated';\n  const allLocales = translationLocales.filter(\n    (locale) => locale !== sourceLocale,\n  );\n\n  const jsonData = reduce(\n    (result, folderPath) => {\n      const folderData = localeData[folderPath];\n      const sourceFile = folderData.files[sourceLocale];\n      if (sourceFile) {\n        forEach((locale) => {\n          if (locale !== sourceLocale) {\n            const targetFile = folderData.files[locale];\n            const fileName =\n              (targetFile && targetFile.file) ||\n              `${locale}${path.extname(sourceFile.file)}`;\n            const original = path.relative(\n              sourceFolder,\n              path.join(folderData.path, fileName),\n            );\n            const transUnits = reduce(\n              (transUnits, [key]) => {\n                if (onlyTranslated) {\n                  if (\n                    targetFile &&\n                    targetFile.data.get(key) &&\n                    (!targetFile.data.get(key).source ||\n                      targetFile.data.get(key).source ===\n                        sourceFile.data.get(key).value)\n                  ) {\n                    const unit = {\n                      _attributes: {\n                        id: `[${key}]`,\n                      },\n                      source: {\n                        _text: sourceFile.data.get(key).value,\n                      },\n                      target: {\n                        _text: targetFile.data.get(key).value,\n                      },\n                    };\n                    transUnits.push(unit);\n                  }\n                } else {\n                  const diff =\n                    !targetFile ||\n                    !targetFile.data.get(key) ||\n                    (targetFile.data.get(key).source &&\n                      targetFile.data.get(key).source !==\n                        sourceFile.data.get(key).value);\n                  if ((!onlyTranslated && diff) || isFull) {\n                    const unit = {\n                      _attributes: {\n                        id: `[${key}]`,\n                      },\n                      source: {\n                        _text: sourceFile.data.get(key).value,\n                      },\n                    };\n                    if (diff) {\n                      if (fillEmptyWithSource) {\n                        unit.target = {\n                          _text: sourceFile.data.get(key).value,\n                        };\n                      } else {\n                        unit.target = {\n                          _text: '',\n                        };\n                      }\n                    } else {\n                      unit.target = {\n                        _text: targetFile.data.get(key).value,\n                      };\n                    }\n                    transUnits.push(unit);\n                  }\n                }\n                return transUnits;\n              },\n              [],\n              sourceFile.data,\n            );\n            if (transUnits.length) {\n              const unit = {\n                _attributes: {\n                  original,\n                  'source-language': sourceLocale,\n                  'target-language': locale,\n                  datatype: 'plaintext',\n                },\n                body: {\n                  'trans-unit': transUnits,\n                },\n              };\n              if (!result[locale].xliff.file) {\n                result[locale].xliff.file = [];\n              }\n              result[locale].xliff.file.push(unit);\n            }\n          }\n        }, translationLocales);\n      }\n      return result;\n    },\n    generateBaseData(allLocales),\n    Object.keys(localeData),\n  );\n  return reduce(\n    (xlfData, locale) => {\n      xlfData[locale] = xml.json2xml(jsonData[locale], {\n        compact: true,\n        spaces: 4,\n      });\n      return xlfData;\n    },\n    {},\n    allLocales,\n  );\n}\n"],"file":"index.js"}