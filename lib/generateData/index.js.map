{"version":3,"file":"index.js","names":["_path","_interopRequireDefault","require","_xmlJs","_ramda","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","isArray","generateBaseData","allLocales","reduce","data","locale","_declaration","_attributes","version","xliff","xmlns","generateJsonData","_ref","localeData","sourceFolder","sourceLocale","translationLocales","result","folderPath","folderData","sourceFile","files","forEach","targetFile","relativePath","path","relative","join","file","acc","_ref2","_targetFile$data","_targetFile$data$get","_ref3","_ref3$","key","get","source","keys","generateXlfData","_ref4","exportType","fillEmptyWithSource","isFull","toLowerCase","onlyTranslated","filter","jsonData","fileName","concat","extname","original","transUnits","_ref5","_ref6","unit","id","_text","target","diff","datatype","body","xlfData","xml","json2xml","compact","spaces"],"sources":["lib/generateData/index.js"],"sourcesContent":["import path from 'path';\nimport xml from 'xml-js';\nimport { reduce, forEach } from 'ramda';\n\nfunction generateBaseData(allLocales) {\n  return reduce(\n    (data, locale) => {\n      data[locale] = {\n        _declaration: {\n          _attributes: {\n            version: '1.0',\n          },\n        },\n        xliff: {\n          _attributes: {\n            version: '1.2',\n            xmlns: 'urn:oasis:names:tc:xliff:document:1.2',\n          },\n        },\n      };\n      return data;\n    },\n    {},\n    allLocales,\n  );\n}\n\n// the new json export-import flow will only require exporting en-US files\nexport function generateJsonData({\n  localeData,\n  sourceFolder,\n  sourceLocale,\n  translationLocales,\n}) {\n  return reduce(\n    (result, folderPath) => {\n      const folderData = localeData[folderPath];\n      // console.log(folderData, folderPath);\n      const sourceFile = folderData.files[sourceLocale];\n      if (sourceFile) {\n        forEach((locale) => {\n          const targetFile = folderData.files[locale];\n          if (targetFile) {\n            const relativePath = path.relative(\n              sourceFolder,\n              path.join(folderData.path, sourceFile.file),\n            );\n\n            result[locale][relativePath] = reduce(\n              (acc, [, { key, value }]) => {\n                if (locale === sourceLocale) {\n                  acc[key] = value;\n                } else if (targetFile?.data?.get(key)?.source === value) {\n                  acc[key] = targetFile.data.get(key).value;\n                }\n                return acc;\n              },\n              {},\n              sourceFile.data,\n            );\n          }\n        }, translationLocales);\n      }\n      return result;\n    },\n    reduce(\n      (acc, locale) => {\n        acc[locale] = {};\n        return acc;\n      },\n      {},\n      translationLocales,\n    ),\n    Object.keys(localeData),\n  );\n}\n\nexport function generateXlfData({\n  localeData,\n  sourceLocale,\n  translationLocales,\n  sourceFolder,\n  exportType,\n  fillEmptyWithSource,\n}) {\n  const isFull = exportType.toLowerCase() === 'full';\n  const onlyTranslated = exportType.toLowerCase() === 'translated';\n  const allLocales = translationLocales.filter(\n    (locale) => locale !== sourceLocale,\n  );\n\n  const jsonData = reduce(\n    (result, folderPath) => {\n      const folderData = localeData[folderPath];\n      const sourceFile = folderData.files[sourceLocale];\n      if (sourceFile) {\n        forEach((locale) => {\n          if (locale !== sourceLocale) {\n            const targetFile = folderData.files[locale];\n            const fileName =\n              (targetFile && targetFile.file) ||\n              `${locale}${path.extname(sourceFile.file)}`;\n            const original = path.relative(\n              sourceFolder,\n              path.join(folderData.path, fileName),\n            );\n            const transUnits = reduce(\n              (transUnits, [key]) => {\n                if (onlyTranslated) {\n                  if (\n                    targetFile &&\n                    targetFile.data.get(key) &&\n                    (!targetFile.data.get(key).source ||\n                      targetFile.data.get(key).source ===\n                        sourceFile.data.get(key).value)\n                  ) {\n                    const unit = {\n                      _attributes: {\n                        id: `[${key}]`,\n                      },\n                      source: {\n                        _text: sourceFile.data.get(key).value,\n                      },\n                      target: {\n                        _text: targetFile.data.get(key).value,\n                      },\n                    };\n                    transUnits.push(unit);\n                  }\n                } else {\n                  const diff =\n                    !targetFile ||\n                    !targetFile.data.get(key) ||\n                    (targetFile.data.get(key).source &&\n                      targetFile.data.get(key).source !==\n                        sourceFile.data.get(key).value);\n                  if ((!onlyTranslated && diff) || isFull) {\n                    const unit = {\n                      _attributes: {\n                        id: `[${key}]`,\n                      },\n                      source: {\n                        _text: sourceFile.data.get(key).value,\n                      },\n                    };\n                    if (diff) {\n                      if (fillEmptyWithSource) {\n                        unit.target = {\n                          _text: sourceFile.data.get(key).value,\n                        };\n                      } else {\n                        unit.target = {\n                          _text: '',\n                        };\n                      }\n                    } else {\n                      unit.target = {\n                        _text: targetFile.data.get(key).value,\n                      };\n                    }\n                    transUnits.push(unit);\n                  }\n                }\n                return transUnits;\n              },\n              [],\n              sourceFile.data,\n            );\n            if (transUnits.length) {\n              const unit = {\n                _attributes: {\n                  original,\n                  'source-language': sourceLocale,\n                  'target-language': locale,\n                  datatype: 'plaintext',\n                },\n                body: {\n                  'trans-unit': transUnits,\n                },\n              };\n              if (!result[locale].xliff.file) {\n                result[locale].xliff.file = [];\n              }\n              result[locale].xliff.file.push(unit);\n            }\n          }\n        }, translationLocales);\n      }\n      return result;\n    },\n    generateBaseData(allLocales),\n    Object.keys(localeData),\n  );\n  return reduce(\n    (xlfData, locale) => {\n      xlfData[locale] = xml.json2xml(jsonData[locale], {\n        compact: true,\n        spaces: 4,\n      });\n      return xlfData;\n    },\n    {},\n    allLocales,\n  );\n}\n"],"mappings":"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"}