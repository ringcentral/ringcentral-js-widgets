{"version":3,"sources":["lib/oAuthRedirect/index.ts"],"names":["callbackUri","window","location","href","opener","oAuthCallback","close","error","parsedUri","state","query","hash","split","slice","join","key","addEventListener","e","newValue","localStorage","setItem","setTimeout","removeItem"],"mappings":";;;;;;AAAA;;;;AAEA,CAAC,YAAM;AACL,MAAMA,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAApC;;AACA,MAAI;AACF,QAAIF,MAAM,CAACG,MAAP,IAAiBH,MAAM,CAACG,MAAP,CAAcC,aAAnC,EAAkD;AAChDJ,MAAAA,MAAM,CAACG,MAAP,CAAcC,aAAd,CAA4BL,WAA5B;AACAC,MAAAA,MAAM,CAACK,KAAP;AACA;AACD;AACF,GAND,CAME,OAAOC,KAAP,EAAc;AACd;AACD,GAVI,CAYL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAG,0BAAMR,WAAN,EAAmB,IAAnB,CAAlB;AACA,MAAMS,KAAK,GAAGD,SAAS,CAACE,KAAV,CAAgBD,KAAhB,IAAyB,EAAvC;AACA,MAAME,IAAI,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiBC,KAAjB,CAAuB,CAAvB,EAA0BC,IAA1B,CAA+B,GAA/B,CAAb;;AACA,MAAIH,IAAI,IAAIA,IAAI,KAAK,EAArB,EAAyB;AACvB,QAAMI,GAAG,aAAMJ,IAAN,iBAAT;AACAV,IAAAA,MAAM,CAACe,gBAAP,CAAwB,SAAxB,EAAmC,UAACC,CAAD,EAAO;AACxC,UAAIA,CAAC,CAACF,GAAF,KAAUA,GAAV,KAAkB,CAACE,CAAC,CAACC,QAAH,IAAeD,CAAC,CAACC,QAAF,KAAe,EAAhD,CAAJ,EAAyD;AACvDjB,QAAAA,MAAM,CAACK,KAAP;AACD;AACF,KAJD;AAKAa,IAAAA,YAAY,CAACC,OAAb,CAAqBL,GAArB,EAA0Bf,WAA1B;AACAqB,IAAAA,UAAU,CAAC,YAAM;AACfF,MAAAA,YAAY,CAACG,UAAb,CAAwBP,GAAxB;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;AACF,CAvCD","sourcesContent":["import parse from 'url-parse';\n\n(() => {\n  const callbackUri = window.location.href;\n  try {\n    if (window.opener && window.opener.oAuthCallback) {\n      window.opener.oAuthCallback(callbackUri);\n      window.close();\n      return;\n    }\n  } catch (error) {\n    /* ignore error */\n  }\n\n  // Use this when redirect page is different domain with app\n  // Update window.origin to app's origin\n  // try {\n  //   if (window.opener && window.opener.postMessage) {\n  //     window.opener.postMessage({ callbackUri }, window.origin);\n  //     window.close();\n  //     return;\n  //   }\n  // } catch (error) {\n  //   /* ignore error */\n  // }\n\n  const parsedUri = parse(callbackUri, true);\n  const state = parsedUri.query.state || '';\n  const hash = state.split('-').slice(1).join('-');\n  if (hash && hash !== '') {\n    const key = `${hash}-callbackUri`;\n    window.addEventListener('storage', (e) => {\n      if (e.key === key && (!e.newValue || e.newValue === '')) {\n        window.close();\n      }\n    });\n    localStorage.setItem(key, callbackUri);\n    setTimeout(() => {\n      localStorage.removeItem(key);\n    }, 3000);\n  }\n})();\n"],"file":"index.js"}