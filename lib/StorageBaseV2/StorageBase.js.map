{"version":3,"sources":["lib/StorageBaseV2/StorageBase.ts"],"names":["StorageBase","name","deps","dep","optional","storageBaseOptions","_storage","_storageReducers","_storageReducer","_StorageProvider","_storageActionTypes","Error","StorageProvider","SynchronizedStorage","ObjectMap","prefixKeys","keys","actionTypesBase","types","reducers","key","value","data","Object","entries","forEach","reducer","undefined","_reducers","spawnStorageReducersKey","spawnReducersKey","stateKey","ready","driver","_deps","prefix","RcModuleV2","action"],"mappings":"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","sourcesContent":["import { Action, combineReducers, Reducer, ReducersMapObject } from 'redux';\n\nimport {\n  action,\n  RcModuleV2,\n  spawnReducersKey,\n  spawnStorageReducersKey,\n  stateKey,\n} from '@ringcentral-integration/core';\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\n\nimport { Module } from '../di';\nimport { SynchronizedStorage } from '../SynchronizedStorage';\nimport { actionTypesBase, ActionTypesBase } from './actionTypesBase';\nimport { getDataReducer } from './getStorageReducer';\nimport {\n  Deps,\n  IStorage,\n  IStorageBaseOptions,\n  StorageBaseOptions,\n} from './StorageBase.interface';\n\n@Module({\n  name: 'StorageBase',\n  deps: [{ dep: 'Prefix', optional: true }],\n})\nexport abstract class StorageBase<T> extends RcModuleV2<Deps & T> {\n  protected abstract _storage: IStorage;\n  protected _storageReducers: ReducersMapObject = {};\n  protected _storageReducer: Reducer;\n  protected _StorageProvider: IStorageBaseOptions['StorageProvider'];\n  protected _storageActionTypes: ActionTypesBase;\n\n  constructor(deps: Deps & T, storageBaseOptions: StorageBaseOptions) {\n    super({\n      deps,\n    });\n    if (!storageBaseOptions.name) {\n      throw new Error('name must be defined');\n    }\n    this._StorageProvider =\n      storageBaseOptions.StorageProvider ?? SynchronizedStorage;\n    this._storageActionTypes = ObjectMap.prefixKeys(\n      [...ObjectMap.keys(actionTypesBase)],\n      storageBaseOptions.name,\n    );\n    this._storageReducer = getDataReducer({\n      types: this._storageActionTypes,\n      reducers: this._storageReducers,\n    });\n  }\n\n  @action\n  syncData(key: string, value: any) {\n    this.data[key] = value;\n  }\n\n  @action\n  setData(data: Record<string, any>) {\n    this.data = data;\n  }\n\n  @action\n  resetData() {\n    Object.entries(this._storageReducers).forEach(([key, reducer]) => {\n      this.data[key] = reducer(undefined, {} as Action<any>);\n    });\n  }\n\n  get reducer() {\n    if (this._reducers)\n      return combineReducers({\n        ...this._reducers,\n        data: this._storageReducer,\n      });\n    this[spawnStorageReducersKey]();\n    this[spawnReducersKey]();\n    return combineReducers({\n      ...this._reducers,\n      data: this._storageReducer,\n    });\n  }\n\n  get data() {\n    return this[stateKey].data;\n  }\n\n  set data(value: Record<string, any>) {\n    this[stateKey].data = value;\n  }\n\n  /**\n   * register storage reducer\n   */\n  registerReducer({ key, reducer }: { key: string; reducer: Reducer }) {\n    if (this._storageReducers[key]) {\n      throw new Error(`Reducer of key: '${key}' already exists`);\n    }\n    this._storageReducers[key] = reducer;\n  }\n\n  getItem(key: string) {\n    return this.data[key];\n  }\n\n  get driver() {\n    if (this.ready) {\n      return this._storage.driver;\n    }\n    return null;\n  }\n\n  get prefix() {\n    return this._deps.prefix;\n  }\n}\n"],"file":"StorageBase.js"}