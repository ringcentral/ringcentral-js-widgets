{"version":3,"file":"index.js","names":["removeCountryCode","phoneNumber","isValidNumber","countryCallingCode","getCountryCallingCode","parse","country","substr","length","toWildcard","wildcard","numberWithWildcard","replace","split","join"],"sources":["lib/toWildcard/index.js"],"sourcesContent":["import { isValidNumber, getCountryCallingCode, parse } from 'libphonenumber-js';\n\nfunction removeCountryCode(phoneNumber) {\n  if (isValidNumber(phoneNumber)) {\n    const countryCallingCode = getCountryCallingCode(\n      parse(phoneNumber).country,\n    );\n    return phoneNumber.substr(countryCallingCode.length + 1);\n  }\n  return phoneNumber;\n}\n\nexport default function toWildcard({ phoneNumber, wildcard = '%' }) {\n  if (!phoneNumber || phoneNumber.length <= 6) {\n    return phoneNumber;\n  }\n  const numberWithWildcard = removeCountryCode(phoneNumber)\n    .replace(/[^\\d]/g, '')\n    .split('')\n    .join(wildcard);\n  return `${wildcard}${numberWithWildcard}${wildcard}`;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA,SAASA,iBAAT,CAA2BC,WAA3B,EAAwC;EACtC,IAAI,IAAAC,+BAAA,EAAcD,WAAd,CAAJ,EAAgC;IAC9B,IAAME,kBAAkB,GAAG,IAAAC,uCAAA,EACzB,IAAAC,uBAAA,EAAMJ,WAAN,EAAmBK,OADM,CAA3B;IAGA,OAAOL,WAAW,CAACM,MAAZ,CAAmBJ,kBAAkB,CAACK,MAAnB,GAA4B,CAA/C,CAAP;EACD;;EACD,OAAOP,WAAP;AACD;;AAEc,SAASQ,UAAT,OAAqD;EAAA,IAA/BR,WAA+B,QAA/BA,WAA+B;EAAA,yBAAlBS,QAAkB;EAAA,IAAlBA,QAAkB,8BAAP,GAAO;;EAClE,IAAI,CAACT,WAAD,IAAgBA,WAAW,CAACO,MAAZ,IAAsB,CAA1C,EAA6C;IAC3C,OAAOP,WAAP;EACD;;EACD,IAAMU,kBAAkB,GAAGX,iBAAiB,CAACC,WAAD,CAAjB,CACxBW,OADwB,CAChB,QADgB,EACN,EADM,EAExBC,KAFwB,CAElB,EAFkB,EAGxBC,IAHwB,CAGnBJ,QAHmB,CAA3B;EAIA,iBAAUA,QAAV,SAAqBC,kBAArB,SAA0CD,QAA1C;AACD"}