{"version":3,"file":"index.js","names":["_libphonenumberJs","require","removeCountryCode","phoneNumber","isValidNumber","countryCallingCode","getCountryCallingCode","parse","country","substr","length","toWildcard","_ref","_ref$wildcard","wildcard","numberWithWildcard","replace","split","join","concat"],"sources":["lib/toWildcard/index.js"],"sourcesContent":["import { isValidNumber, getCountryCallingCode, parse } from 'libphonenumber-js';\n\nfunction removeCountryCode(phoneNumber) {\n  if (isValidNumber(phoneNumber)) {\n    const countryCallingCode = getCountryCallingCode(\n      parse(phoneNumber).country,\n    );\n    return phoneNumber.substr(countryCallingCode.length + 1);\n  }\n  return phoneNumber;\n}\n\nexport default function toWildcard({ phoneNumber, wildcard = '%' }) {\n  if (!phoneNumber || phoneNumber.length <= 6) {\n    return phoneNumber;\n  }\n  const numberWithWildcard = removeCountryCode(phoneNumber)\n    .replace(/[^\\d]/g, '')\n    .split('')\n    .join(wildcard);\n  return `${wildcard}${numberWithWildcard}${wildcard}`;\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AAEA,SAASC,iBAAiBA,CAACC,WAAW,EAAE;EACtC,IAAI,IAAAC,+BAAa,EAACD,WAAW,CAAC,EAAE;IAC9B,IAAME,kBAAkB,GAAG,IAAAC,uCAAqB,EAC9C,IAAAC,uBAAK,EAACJ,WAAW,CAAC,CAACK,OACrB,CAAC;IACD,OAAOL,WAAW,CAACM,MAAM,CAACJ,kBAAkB,CAACK,MAAM,GAAG,CAAC,CAAC;EAC1D;EACA,OAAOP,WAAW;AACpB;AAEe,SAASQ,UAAUA,CAAAC,IAAA,EAAkC;EAAA,IAA/BT,WAAW,GAAAS,IAAA,CAAXT,WAAW;IAAAU,aAAA,GAAAD,IAAA,CAAEE,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,GAAG,GAAAA,aAAA;EAC9D,IAAI,CAACV,WAAW,IAAIA,WAAW,CAACO,MAAM,IAAI,CAAC,EAAE;IAC3C,OAAOP,WAAW;EACpB;EACA,IAAMY,kBAAkB,GAAGb,iBAAiB,CAACC,WAAW,CAAC,CACtDa,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CACrBC,KAAK,CAAC,EAAE,CAAC,CACTC,IAAI,CAACJ,QAAQ,CAAC;EACjB,UAAAK,MAAA,CAAUL,QAAQ,EAAAK,MAAA,CAAGJ,kBAAkB,EAAAI,MAAA,CAAGL,QAAQ;AACpD"}