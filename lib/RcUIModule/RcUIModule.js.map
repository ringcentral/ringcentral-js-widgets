{"version":3,"file":"RcUIModule.js","names":["RcUIModuleV2","RcModuleV2"],"sources":["lib/RcUIModule/RcUIModule.ts"],"sourcesContent":["import { RcModuleV2 } from '../RcModule';\n\nexport abstract class RcUIModuleV2<T = {}> extends RcModuleV2<T> {\n  /**\n   * TODO:\n   * * better getUIProps and getUIFunctions typing: This is changed back from Record<string, any>\n   *   and Record<string, Function> to just any. This is done because a fix shaped object does not\n   *   equate to type Record<string, any>. Record<string, any> means that this object can change in\n   *   shape, with keys added or removed from it. But UIProps and UIFunctions object does not qualify\n   *   that.\n   *   I propose to use the following implementation later:\n   *   abstract class RcUIModuleV2<T = {}, ComponentProps> extends RcModuleV2<T> {\n   *     abstract getUIProps(...args: any[]): UIProps<ComponentProps>;\n   *     abstract getUIFunctions(...args: any[]): UIFunctions<ComponentProps>;\n   *   }\n   */\n  abstract getUIProps(...args: any[]): any;\n  abstract getUIFunctions(...args: any[]): any;\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;IAEsBA,Y;;;;;;;;;;;;EAA6BC,oB"}