{"version":3,"file":"index.js","names":["_fsExtra","_interopRequireDefault","require","_path","_through","_generateLoaderContent","_isLoaderFile","_interopRequireWildcard","_isLocaleFile","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","asyncGeneratorStep","o","c","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","transformLoader","options","length","undefined","through","obj","_transform","regeneratorRuntime","mark","_callee","file","enc","_options$chunk","content","supportedLocales","chunk","folderPath","files","loader","wrap","_callee$","_context","prev","next","isNull","abrupt","contents","toString","noChunks","isLoaderFile","path","dirname","fs","readdir","sent","filter","isLocaleFile","generateLoaderContent","Buffer","from","push","stop","transform","_x","_x2","_x3"],"sources":["lib/transformLoader/index.js"],"sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport through from 'through2';\n\nimport generateLoaderContent from '../generateLoaderContent';\nimport isLoaderFile, { noChunks } from '../isLoaderFile';\nimport isLocaleFile from '../isLocaleFile';\n\n/**\n * - `supportedLocales` to support locales\n * * `chunk`\n *   * be `boolean` will toggle that chunk mode.\n *   * be `function` can be method with `(locale: string) => boolean`, provide you a way to specify which language be chunked.\n *\n * @example\n * ```ts\n * chunk: (local: string) => {\n *   return local !== 'en-US'; // en-US will not be chunked, that will be package into main script directly\n * }\n * ```\n */\nexport default function transformLoader(options = {}) {\n  return through.obj(async function transform(file, enc, done) {\n    if (file.isNull()) {\n      done();\n      return;\n    }\n\n    const content = file.contents.toString(enc);\n    const supportedLocales = options.supportedLocales || [];\n    const chunk = !noChunks(content) && (options.chunk ?? true);\n\n    if (isLoaderFile(content)) {\n      const folderPath = path.dirname(file.path);\n      const files = (await fs.readdir(folderPath)).filter(isLocaleFile);\n      const loader = generateLoaderContent({\n        files,\n        chunk,\n        supportedLocales,\n      });\n      file.contents = Buffer.from(loader, 'utf8');\n    }\n    this.push(file);\n    done();\n  });\n}\n"],"mappings":"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","ignoreList":[]}