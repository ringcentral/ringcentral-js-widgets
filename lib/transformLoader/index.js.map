{"version":3,"file":"index.js","names":["_path","_interopRequireDefault","require","_through","_fsExtra","_generateLoaderContent","_isLocaleFile","_isLoaderFile","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","transformLoader","options","length","through","_transform","regeneratorRuntime","mark","_callee","file","enc","_options$chunk","content","supportedLocales","chunk","folderPath","files","loader","wrap","_callee$","_context","prev","next","isNull","abrupt","contents","toString","noChunks","isLoaderFile","path","dirname","fs","readdir","sent","filter","isLocaleFile","generateLoaderContent","Buffer","from","push","stop","transform","_x","_x2","_x3"],"sources":["lib/transformLoader/index.js"],"sourcesContent":["import path from 'path';\nimport through from 'through2';\nimport fs from 'fs-extra';\nimport generateLoaderContent from '../generateLoaderContent';\nimport isLocaleFile from '../isLocaleFile';\nimport isLoaderFile, { noChunks } from '../isLoaderFile';\n\n/**\n * - `supportedLocales` to support locales\n * * `chunk`\n *   * be `boolean` will toggle that chunk mode.\n *   * be `function` can be method with `(locale: string) => boolean`, provide you a way to specify which language be chunked.\n *\n * @example\n * ```ts\n * chunk: (local: string) => {\n *   return local !== 'en-US'; // en-US will not be chunked, that will be package into main script directly\n * }\n * ```\n */\nexport default function transformLoader(options = {}) {\n  return through.obj(async function transform(file, enc, done) {\n    if (file.isNull()) {\n      done();\n      return;\n    }\n\n    const content = file.contents.toString(enc);\n    const supportedLocales = options.supportedLocales || [];\n    const chunk = !noChunks(content) && (options.chunk ?? true);\n\n    if (isLoaderFile(content)) {\n      const folderPath = path.dirname(file.path);\n      const files = (await fs.readdir(folderPath)).filter(isLocaleFile);\n      const loader = generateLoaderContent({\n        files,\n        chunk,\n        supportedLocales,\n      });\n      file.contents = Buffer.from(loader, 'utf8');\n    }\n    this.push(file);\n    done();\n  });\n}\n"],"mappings":"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"}