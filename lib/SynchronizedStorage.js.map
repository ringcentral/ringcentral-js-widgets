{"version":3,"file":"SynchronizedStorage.js","names":["_events","require","uuid","_interopRequireWildcard","_MemoryStorage","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_classCallCheck","TypeError","_defineProperties","length","o","enumerable","configurable","writable","_toPropertyKey","key","_createClass","prototype","_toPrimitive","Symbol","toPrimitive","String","Number","_inherits","create","constructor","value","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","arguments","apply","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","SynchronizedStorage","_EventEmitter","_super","_ref","_this","storageKey","_storageKey","_id","_localStorage","_storageHandler","Error","v4","localStorage","window","event","substring","_JSON$parse","JSON","parse","newValue","setter","id","emit","error","addEventListener","MemoryStorage","getLocalStorageKeys","len","keys","push","getData","_this2","output","forEach","dataKey","getItem","_JSON$parse2","concat","undefined","setItem","stringify","removeItem","destroy","removeEventListener","EventEmitter","exports"],"sources":["lib/SynchronizedStorage.ts"],"sourcesContent":["// @ts-nocheck\nimport { EventEmitter } from 'events';\nimport * as uuid from 'uuid';\n\nimport type {\n  GenericStorage,\n  StorageItem,\n} from '../interfaces/GenericStorage.interface';\n\nimport { MemoryStorage } from './MemoryStorage';\n\n// TODO: experiment with a managed list of keys to watch rather than matching every event with\n// storageKey might provide better performance\n\nexport class SynchronizedStorage\n  extends EventEmitter\n  implements GenericStorage\n{\n  private _storageKey: string;\n  private _id: string;\n  private _localStorage: Storage | MemoryStorage<string | null>;\n  private _storageHandler: (this: Window, ev: StorageEvent) => any;\n\n  constructor({ storageKey }: { storageKey: string }) {\n    super();\n    if (!storageKey) {\n      throw Error('SynchronizedStorage must be created with a storage key');\n    }\n    this._storageKey = storageKey;\n    this._id = uuid.v4();\n    if (typeof localStorage !== 'undefined' && typeof window !== 'undefined') {\n      this._storageHandler = (event) => {\n        if (\n          event.key !== null &&\n          typeof event.key !== 'undefined' &&\n          event.key.substring(0, this._storageKey.length) === this._storageKey\n        ) {\n          try {\n            const { setter, value } = JSON.parse(event.newValue);\n            if (setter && setter !== this.id) {\n              const key = event.key.substring(this._storageKey.length + 1);\n              // fire storage event directly from the native event\n              // may reduce the chance of failing to get updated data\n              // if there is heavy localStorage load\n              this.emit('storage', {\n                key,\n                value,\n              });\n              // It seems that IE11 does not update the actual localStorage object\n              // in the same event cycle...\n              // setTimeout(() => {\n              //   this.emit('storage', {\n              //     key,\n              //     value: this.getItem(key),\n              //   });\n              // }, 0);\n            }\n          } catch (error: any /** TODO: confirm with instanceof */) {\n            /* ignore error */\n          }\n        }\n      };\n      this._localStorage = localStorage;\n      window.addEventListener('storage', this._storageHandler);\n    } else {\n      this._localStorage = new MemoryStorage();\n    }\n  }\n\n  getLocalStorageKeys() {\n    const len = this._localStorage.length;\n    const keys = [];\n    for (let i = 0; i < len; i += 1) {\n      const key = this._localStorage.key(i);\n      if (key && key !== '') {\n        keys.push(key);\n      }\n    }\n    return keys;\n  }\n\n  getData() {\n    const output: Record<string, StorageItem['value']> = {};\n    this.getLocalStorageKeys().forEach((key) => {\n      if (key.substring(0, this._storageKey.length) === this._storageKey) {\n        const dataKey = key.substring(this._storageKey.length + 1);\n        output[dataKey] = this.getItem(dataKey);\n      }\n    });\n    return output;\n  }\n\n  getItem(key: string) {\n    try {\n      const { value }: StorageItem = JSON.parse(\n        this._localStorage.getItem(`${this._storageKey}-${key}`),\n      );\n      return value;\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      return undefined;\n    }\n  }\n\n  setItem(key: string, value: StorageItem['value']) {\n    this._localStorage.setItem(\n      `${this._storageKey}-${key}`,\n      JSON.stringify({\n        value,\n        setter: this.id,\n      }),\n    );\n  }\n\n  removeItem(key: string) {\n    this._localStorage.removeItem(`${this._storageKey}-${key}`);\n  }\n\n  destroy() {\n    if (this._storageHandler) {\n      window.removeEventListener('storage', this._storageHandler);\n    }\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get driver() {\n    if (this._localStorage === localStorage) {\n      return 'LOCALSTORAGE';\n    }\n    return 'MEMORYSTORAGE';\n  }\n}\n"],"mappings":"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","ignoreList":[]}