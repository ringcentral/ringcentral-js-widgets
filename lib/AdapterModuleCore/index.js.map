{"version":3,"sources":["lib/AdapterModuleCore/index.js"],"names":["ALL_CALL_PATH","ACTIVE_CALL_PATH","AdapterModuleCore","deps","dep","optional","prefix","storageKey","actionTypes","baseActionTypes","callingSettings","globalStorage","locale","presence","routerInteraction","webphone","callMonitor","userGuide","quickAccess","messageTransport","IframeMessageTransport","targetWindow","window","parent","activeCallControl","options","_callingSettings","_webphone","_callMonitor","_userGuide","_quickAccess","_activeCallControl","_pushRingState","forcePush","ready","_postMessage","type","_messageTypes","pushLocale","strings","localeStrings","callingMode","callingModes","_pushActiveCallRingingState","_pushWebphoneRingingState","_pushCallStartTime","_pushIncomingCallPage","_pushRingoutRingingState","ringSessions","length","ringSessionId","_ringSessionId","pushRingState","ringing","Error","ringSession","ringingSessions","sessions","filter","session","callStatus","direction","status","_presence","telephonyStatus","_telephonyStatus","_showIncomingCallPage","minimized","_lastPath","_router","currentPath","_lastShowIncomingCallPage","onCurrentCallPath","activeSessionId","pushOnCurrentCallPath","onAllCallsPath","pushOnAllCallsPath","ringingCallsLength","activeRingCalls","onHoldCallsLength","activeOnHoldCalls","currentStartTime","activeCurrentCalls","startTime","_lastRingCallsLength","_lastOnHoldCallsLength","_lastCurrentStartTime","pushCalls","currentSession","activeSession","currentCallPath","id","push","started","dismiss","entered","exit","toggleMinimized","AdapterModuleCoreBase","selector","_locale","currentLocale","localeReady","ringCallsInfo","headerI18n","getString","numberOf","onHoldCallsInfo","availableBtn","presenceItemI18n","presenceStatus","available","busyBtn","busy","offlineBtn","offline","doNotAcceptAnyCallsBtn","dndStatus","doNotAcceptAnyCalls","currentCallBtn","viewCallsBtn","proxify"],"mappings":"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","sourcesContent":["import formatMessage from 'format-message';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport proxify from '@ringcentral-integration/commons/lib/proxy/proxify';\nimport { presenceStatus } from '@ringcentral-integration/commons/enums/presenceStatus.enum';\nimport dndStatus from '@ringcentral-integration/commons/modules/Presence/dndStatus';\nimport callingModes from '@ringcentral-integration/commons/modules/CallingSettings/callingModes';\nimport { selector } from '@ringcentral-integration/commons/lib/selector';\n\nimport IframeMessageTransport from '../IframeMessageTransport';\nimport headerI18n from '../../components/CallMonitorBar/i18n';\nimport presenceItemI18n from '../../components/PresenceItem/i18n';\nimport AdapterModuleCoreBase from '../AdapterModuleCoreBase';\nimport baseActionTypes from '../AdapterModuleCoreBase/baseActionTypes';\n\nconst ALL_CALL_PATH = '/calls';\nconst ACTIVE_CALL_PATH = '/calls/active';\n\n@Module({\n  deps: [\n    'CallingSettings',\n    'GlobalStorage',\n    'Locale',\n    'Presence',\n    'RouterInteraction',\n    'Storage',\n    'Webphone',\n    'CallMonitor',\n    { dep: 'ActiveCallControl', optional: true },\n    { dep: 'UserGuide', optional: true },\n    { dep: 'QuickAccess', optional: true },\n  ],\n})\nexport default class AdapterModuleCore extends AdapterModuleCoreBase {\n  constructor({\n    prefix,\n    storageKey = 'adapterCore',\n    actionTypes = baseActionTypes,\n    callingSettings,\n    globalStorage,\n    locale,\n    presence,\n    routerInteraction,\n    webphone,\n    callMonitor,\n    userGuide,\n    quickAccess,\n    messageTransport = new IframeMessageTransport({\n      targetWindow: window.parent,\n    }),\n    activeCallControl,\n    ...options\n  }: {\n    prefix?: string,\n    storageKey?: string,\n    actionTypes?: any,\n    callingSettings?: any,\n    globalStorage?: any,\n    locale?: any,\n    presence?: any,\n    routerInteraction?: any,\n    webphone?: any,\n    callMonitor?: any,\n    userGuide?: any,\n    quickAccess?: any,\n    messageTransport?: any,\n    storage?: any,\n    activeCallControl?: any,\n  }) {\n    super({\n      prefix,\n      actionTypes,\n      locale,\n      messageTransport,\n      presence,\n      routerInteraction,\n      globalStorage,\n      storageKey,\n      ...options,\n    });\n\n    this._callingSettings = callingSettings;\n    this._webphone = webphone;\n    this._callMonitor = callMonitor;\n    this._userGuide = userGuide;\n    this._quickAccess = quickAccess;\n    this._activeCallControl = activeCallControl;\n  }\n\n  _pushOtherStateChanges() {\n    this._pushRingState();\n  }\n\n  _pushRingState({ forcePush = false } = {}) {\n    if (!this.ready) return;\n\n    // TODO: we should refactor the entire sync logic to be more\n    // declarative and straightforward\n    if (forcePush) {\n      this._postMessage({\n        type: this._messageTypes.pushLocale,\n        strings: this.localeStrings,\n      });\n    }\n    if (!this._callingSettings) return;\n    const { callingMode } = this._callingSettings;\n    if (callingMode === callingModes.webphone) {\n      // TODO: should change to use ActiveCallControl module when introduce ActiveCallControl module into other project\n      if (this._activeCallControl) {\n        this._pushActiveCallRingingState(forcePush);\n      } else {\n        this._pushWebphoneRingingState(forcePush);\n      }\n      this._pushCallStartTime(forcePush);\n      this._pushIncomingCallPage(forcePush);\n    } else {\n      this._pushRingoutRingingState();\n    }\n  }\n\n  _pushActiveCallRingingState(forcePush) {\n    if (\n      this._activeCallControl.ringSessions.length > 0 &&\n      this._activeCallControl.ringSessionId &&\n      (this._activeCallControl.ringSessionId !== this._ringSessionId ||\n        forcePush)\n    ) {\n      this._ringSessionId = this._activeCallControl.ringSessionId;\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: true,\n      });\n    }\n    // Check if ringing is over\n    if (this._ringSessionId) {\n      if (this._activeCallControl.ringSessions.length === 0) {\n        this._postMessage({\n          type: this._messageTypes.pushRingState,\n          ringing: false,\n        });\n        this._ringSessionId = null;\n      }\n    } else {\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: false,\n      });\n    }\n  }\n\n  _pushWebphoneRingingState(forcePush) {\n    const webphone = this._webphone;\n    if (!webphone) {\n      throw new Error(\n        'webphone is a required dependency for monitoring WebRTC call',\n      );\n    }\n    if (\n      webphone.ringSession &&\n      (webphone.ringSessionId !== this._ringSessionId || forcePush)\n    ) {\n      this._ringSessionId = webphone.ringSessionId;\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: true,\n      });\n    }\n    // Check if ringing is over\n    if (this._ringSessionId) {\n      const ringingSessions = webphone.sessions.filter(\n        (session) =>\n          session.callStatus === 'webphone-session-connecting' &&\n          session.direction === 'Inbound',\n      );\n      if (ringingSessions.length === 0) {\n        this._postMessage({\n          type: this._messageTypes.pushRingState,\n          ringing: false,\n        });\n        this._ringSessionId = null;\n      }\n    } else {\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: false,\n      });\n    }\n  }\n\n  _pushRingoutRingingState() {\n    const status = this._presence.telephonyStatus;\n    if (this._presence.telephonyStatus !== this._telephonyStatus) {\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: status === 'Ringing',\n      });\n      this._telephonyStatus = status;\n    }\n  }\n\n  _pushIncomingCallPage(forcePush) {\n    this._showIncomingCallPage = !!(\n      this._webphone &&\n      this._webphone.ringSession &&\n      !this._webphone.ringSession.minimized\n    );\n    if (\n      forcePush ||\n      this._lastPath !== this._router.currentPath ||\n      this._lastShowIncomingCallPage !== this._showIncomingCallPage\n    ) {\n      this._lastPath = this._router.currentPath;\n      this._lastShowIncomingCallPage = this._showIncomingCallPage;\n      const onCurrentCallPath =\n        (this._router.currentPath === ACTIVE_CALL_PATH ||\n          this._router.currentPath ===\n            `${ACTIVE_CALL_PATH}/${this._webphone.activeSessionId}`) &&\n        !this._showIncomingCallPage;\n      if (\n        forcePush ||\n        this.onCurrentCallPath !== onCurrentCallPath ||\n        this._lastShowIncomingCallPage !== this._showIncomingCallPage\n      ) {\n        this.onCurrentCallPath = onCurrentCallPath;\n        this._lastShowIncomingCallPage = this._showIncomingCallPage;\n        this._postMessage({\n          type: this._messageTypes.pushOnCurrentCallPath,\n          onCurrentCallPath,\n        });\n      }\n      const onAllCallsPath =\n        this._router.currentPath === ALL_CALL_PATH &&\n        !this._showIncomingCallPage;\n      if (forcePush || this.onAllCallsPath !== onAllCallsPath) {\n        this.onAllCallsPath = onAllCallsPath;\n        this._postMessage({\n          type: this._messageTypes.pushOnAllCallsPath,\n          onAllCallsPath,\n        });\n      }\n    }\n  }\n\n  _pushCallStartTime(forcePush) {\n    const ringingCallsLength = this._callMonitor.activeRingCalls.length;\n    const onHoldCallsLength = this._callMonitor.activeOnHoldCalls.length;\n    const currentStartTime =\n      (this._callMonitor.activeCurrentCalls &&\n        this._callMonitor.activeCurrentCalls.length > 0 &&\n        this._callMonitor.activeCurrentCalls[0].startTime) ||\n      0;\n    if (\n      forcePush ||\n      this._lastRingCallsLength !== ringingCallsLength ||\n      this._lastOnHoldCallsLength !== onHoldCallsLength ||\n      this._lastCurrentStartTime !== currentStartTime\n    ) {\n      this._lastRingCallsLength = ringingCallsLength;\n      this._lastOnHoldCallsLength = onHoldCallsLength;\n      this._lastCurrentStartTime = currentStartTime;\n      this._postMessage({\n        type: this._messageTypes.pushCalls,\n        ringingCallsLength,\n        onHoldCallsLength,\n        currentStartTime,\n      });\n      this._postMessage({\n        type: this._messageTypes.pushLocale,\n        strings: this.localeStrings,\n      });\n    }\n  }\n\n  @selector\n  localeStrings = [\n    () => this._locale.ready,\n    () => this._locale.currentLocale,\n    () => this._callMonitor.activeRingCalls.length,\n    () => this._callMonitor.activeOnHoldCalls.length,\n    (localeReady, currentLocale, ringingCallsLength, onHoldCallsLength) => {\n      const ringCallsInfo =\n        ringingCallsLength === 1\n          ? formatMessage(headerI18n.getString('incomingCall', currentLocale), {\n              numberOf: ringingCallsLength,\n            })\n          : formatMessage(\n              headerI18n.getString('incomingCalls', currentLocale),\n              { numberOf: ringingCallsLength },\n            );\n      const onHoldCallsInfo =\n        onHoldCallsLength === 1\n          ? formatMessage(headerI18n.getString('callOnHold', currentLocale), {\n              numberOf: onHoldCallsLength,\n            })\n          : formatMessage(headerI18n.getString('callsOnHold', currentLocale), {\n              numberOf: onHoldCallsLength,\n            });\n      const availableBtn = presenceItemI18n.getString(\n        presenceStatus.available,\n        currentLocale,\n      );\n      const busyBtn = presenceItemI18n.getString(\n        presenceStatus.busy,\n        currentLocale,\n      );\n      const offlineBtn = presenceItemI18n.getString(\n        presenceStatus.offline,\n        currentLocale,\n      );\n      const doNotAcceptAnyCallsBtn = presenceItemI18n.getString(\n        dndStatus.doNotAcceptAnyCalls,\n        currentLocale,\n      );\n      return {\n        currentCallBtn: headerI18n.getString('currentCall', currentLocale),\n        viewCallsBtn: headerI18n.getString('viewCalls', currentLocale),\n        ringCallsInfo,\n        onHoldCallsInfo,\n        availableBtn,\n        busyBtn,\n        offlineBtn,\n        doNotAcceptAnyCallsBtn,\n      };\n    },\n  ];\n\n  @proxify\n  async _onNavigateToCurrentCall() {\n    const currentSession = this._webphone.activeSession;\n    if (currentSession) {\n      const currentCallPath = `${ACTIVE_CALL_PATH}/${currentSession.id}`;\n      this._router.push(currentCallPath);\n    }\n    if (this._userGuide && this._userGuide.started) {\n      this._userGuide.dismiss();\n    }\n    if (this._quickAccess && this._quickAccess.entered) {\n      this._quickAccess.exit();\n    }\n    if (\n      this._webphone &&\n      this._webphone.ringSession &&\n      !this._webphone.ringSession.minimized\n    ) {\n      this._webphone.toggleMinimized(this._webphone.ringSession.id);\n    }\n  }\n\n  @proxify\n  async _onNavigateToViewCalls() {\n    this._router.push(ALL_CALL_PATH);\n    if (this._userGuide && this._userGuide.started) {\n      this._userGuide.dismiss();\n    }\n    if (this._quickAccess && this._quickAccess.entered) {\n      this._quickAccess.exit();\n    }\n    if (\n      this._webphone &&\n      this._webphone.ringSession &&\n      !this._webphone.ringSession.minimized\n    ) {\n      this._webphone.toggleMinimized(this._webphone.ringSession.id);\n    }\n  }\n}\n"],"file":"index.js"}