{"version":3,"sources":["lib/AdapterModuleCore/index.ts"],"names":["ALL_CALL_PATH","ACTIVE_CALL_PATH","AdapterModuleCore","deps","dep","optional","prefix","storageKey","actionTypes","baseActionTypes","callingSettings","globalStorage","locale","presence","routerInteraction","webphone","callMonitor","userGuide","quickAccess","messageTransport","IframeMessageTransport","targetWindow","window","parent","activeCallControl","callLogSection","options","_callingSettings","_callLogSection","_activeCallControl","_userGuide","_webphone","_callMonitor","_quickAccess","_showIncomingCallPage","onAllCallsPath","onCurrentCallPath","_lastShowIncomingCallPage","_showCallLogPage","_lastShowCallLogPage","_pushRingState","forcePush","ready","_postMessage","type","_messageTypes","pushLocale","strings","localeStrings","callingMode","callingModes","_pushActiveCallRingingState","_pushWebphoneRingingState","_pushCallStartTime","_pushIncomingCallPage","_pushRingoutRingingState","ringSessions","length","ringSessionId","_ringSessionId","pushRingState","ringing","Error","ringSession","ringingSessions","sessions","filter","session","callStatus","direction","status","_presence","telephonyStatus","_telephonyStatus","minimized","show","_lastPath","_router","currentPath","currentIdentify","activeSession","sessionId","activeSessionId","pushOnCurrentCallPath","pushOnAllCallsPath","ringingCallsLength","activeRingCalls","onHoldCallsLength","activeOnHoldCalls","otherDeviceCallsLength","otherDeviceCalls","currentStartTime","activeCurrentCalls","startTime","_lastRingCallsLength","_lastOnHoldCallsLength","_lastCurrentStartTime","_otherDeviceCallsLength","pushCalls","currentSession","currentCallPath","id","push","started","dismiss","entered","exit","showLogSection","toggleMinimized","closeLogSection","AdapterModuleCoreBase","selector","_locale","currentLocale","localeReady","ringCallsInfo","headerI18n","getString","numberOf","onHoldCallsInfo","otherDeviceCallsInfo","availableBtn","presenceItemI18n","presenceStatus","available","busyBtn","busy","offlineBtn","offline","doNotAcceptAnyCallsBtn","dndStatus","doNotAcceptAnyCalls","currentCallBtn","viewCallsBtn","proxify"],"mappings":"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","sourcesContent":["import formatMessage from 'format-message';\nimport Presence from 'ringcentral-client/build/paths/Presence';\n\nimport { presenceStatus } from '@ringcentral-integration/commons/enums/presenceStatus.enum';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport proxify from '@ringcentral-integration/commons/lib/proxy/proxify';\nimport { selector } from '@ringcentral-integration/commons/lib/selector';\nimport { ActiveCallControl } from '@ringcentral-integration/commons/modules/ActiveCallControlV2';\nimport callingModes from '@ringcentral-integration/commons/modules/CallingSettings/callingModes';\nimport { CallingSettings } from '@ringcentral-integration/commons/modules/CallingSettingsV2';\nimport { CallMonitor } from '@ringcentral-integration/commons/modules/CallMonitorV2';\nimport { GlobalStorage } from '@ringcentral-integration/commons/modules/GlobalStorageV2';\nimport { Locale } from '@ringcentral-integration/commons/modules/Locale';\nimport dndStatus from '@ringcentral-integration/commons/modules/Presence/dndStatus';\nimport { QuickAccess } from '@ringcentral-integration/commons/modules/QuickAccessV2';\nimport { UserGuide } from '@ringcentral-integration/commons/modules/UserGuideV2';\nimport Webphone from '@ringcentral-integration/commons/modules/Webphone';\n\nimport presenceItemI18n from '../getPresenceStatusName/i18n';\nimport headerI18n from '../../components/CallMonitorBar/i18n';\nimport { CallLogSection } from '../../modules/CallLogSectionV2';\nimport { RouterInteraction } from '../../modules/RouterInteraction';\nimport AdapterModuleCoreBase from '../AdapterModuleCoreBase';\nimport { baseActionTypes } from '../AdapterModuleCoreBase/baseActionTypes';\nimport IframeMessageTransport from '../IframeMessageTransport';\n\nconst ALL_CALL_PATH = '/calls';\nconst ACTIVE_CALL_PATH = '/calls/active';\n\n@Module({\n  deps: [\n    'CallingSettings',\n    'GlobalStorage',\n    'Locale',\n    'Presence',\n    'RouterInteraction',\n    'Storage',\n    'Webphone',\n    'CallMonitor',\n    { dep: 'ActiveCallControl', optional: true },\n    { dep: 'UserGuide', optional: true },\n    { dep: 'QuickAccess', optional: true },\n    { dep: 'CallLogSection', optional: true },\n  ],\n})\nexport default class AdapterModuleCore extends AdapterModuleCoreBase {\n  _callingSettings: CallingSettings;\n  _callLogSection: CallLogSection;\n  _activeCallControl: ActiveCallControl;\n  _userGuide: UserGuide;\n  _webphone: Webphone;\n  _callMonitor: CallMonitor;\n  _quickAccess: QuickAccess;\n  private _showIncomingCallPage: any;\n  onAllCallsPath: boolean;\n  onCurrentCallPath: boolean;\n  private _lastShowIncomingCallPage: any;\n  private _showCallLogPage: boolean;\n  private _lastShowCallLogPage: boolean;\n  constructor({\n    prefix,\n    storageKey = 'adapterCore',\n    actionTypes = baseActionTypes,\n    callingSettings,\n    globalStorage,\n    locale,\n    presence,\n    routerInteraction,\n    webphone,\n    callMonitor,\n    userGuide,\n    quickAccess,\n    messageTransport = new IframeMessageTransport({\n      targetWindow: window.parent,\n    }),\n    activeCallControl,\n    callLogSection,\n    ...options\n  }: {\n    prefix?: string;\n    storageKey?: string;\n    actionTypes?: any;\n    callingSettings?: CallingSettings;\n    globalStorage?: GlobalStorage;\n    locale?: Locale;\n    presence?: Presence;\n    routerInteraction?: RouterInteraction;\n    webphone?: Webphone;\n    callMonitor?: CallMonitor;\n    userGuide?: UserGuide;\n    quickAccess?: QuickAccess;\n    messageTransport?: any;\n    storage?: Storage;\n    activeCallControl?: ActiveCallControl;\n    callLogSection?: CallLogSection;\n  }) {\n    super({\n      prefix,\n      actionTypes,\n      locale,\n      messageTransport,\n      presence,\n      routerInteraction,\n      globalStorage,\n      storageKey,\n      ...options,\n    });\n\n    this._callingSettings = callingSettings;\n    this._webphone = webphone;\n    this._callMonitor = callMonitor;\n    this._userGuide = userGuide;\n    this._quickAccess = quickAccess;\n    this._activeCallControl = activeCallControl;\n    this._callLogSection = callLogSection;\n  }\n\n  _pushOtherStateChanges() {\n    this._pushRingState();\n  }\n\n  _pushRingState({ forcePush = false } = {}) {\n    if (!this.ready) return;\n\n    // TODO: we should refactor the entire sync logic to be more\n    // declarative and straightforward\n    if (forcePush) {\n      this._postMessage({\n        type: this._messageTypes.pushLocale,\n        strings: this.localeStrings,\n      });\n    }\n    if (!this._callingSettings) return;\n    const { callingMode } = this._callingSettings;\n    if (callingMode === callingModes.webphone) {\n      // TODO: should change to use ActiveCallControl module when introduce ActiveCallControl module into other project\n      if (this._activeCallControl) {\n        this._pushActiveCallRingingState(forcePush);\n      } else {\n        this._pushWebphoneRingingState(forcePush);\n      }\n      this._pushCallStartTime(forcePush);\n      this._pushIncomingCallPage(forcePush);\n    } else {\n      this._pushRingoutRingingState();\n    }\n  }\n\n  _pushActiveCallRingingState(forcePush) {\n    if (\n      this._activeCallControl.ringSessions.length > 0 &&\n      this._activeCallControl.ringSessionId &&\n      (this._activeCallControl.ringSessionId !== this._ringSessionId ||\n        forcePush)\n    ) {\n      this._ringSessionId = this._activeCallControl.ringSessionId;\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: true,\n      });\n    }\n    // Check if ringing is over\n    if (this._ringSessionId) {\n      if (this._activeCallControl.ringSessions.length === 0) {\n        this._postMessage({\n          type: this._messageTypes.pushRingState,\n          ringing: false,\n        });\n        this._ringSessionId = null;\n      }\n    } else {\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: false,\n      });\n    }\n  }\n\n  _pushWebphoneRingingState(forcePush) {\n    const webphone = this._webphone;\n    if (!webphone) {\n      throw new Error(\n        'webphone is a required dependency for monitoring WebRTC call',\n      );\n    }\n    if (\n      webphone.ringSession &&\n      (webphone.ringSessionId !== this._ringSessionId || forcePush)\n    ) {\n      this._ringSessionId = webphone.ringSessionId;\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: true,\n      });\n    }\n    // Check if ringing is over\n    if (this._ringSessionId) {\n      const ringingSessions = webphone.sessions.filter(\n        (session) =>\n          session.callStatus === 'webphone-session-connecting' &&\n          session.direction === 'Inbound',\n      );\n      if (ringingSessions.length === 0) {\n        this._postMessage({\n          type: this._messageTypes.pushRingState,\n          ringing: false,\n        });\n        this._ringSessionId = null;\n      }\n    } else {\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: false,\n      });\n    }\n  }\n\n  _pushRingoutRingingState() {\n    const status = this._presence.telephonyStatus;\n    if (this._presence.telephonyStatus !== this._telephonyStatus) {\n      this._postMessage({\n        type: this._messageTypes.pushRingState,\n        ringing: status === 'Ringing',\n      });\n      this._telephonyStatus = status;\n    }\n  }\n\n  _pushIncomingCallPage(forcePush: boolean) {\n    this._showIncomingCallPage = !!(\n      this._webphone &&\n      this._webphone.ringSession &&\n      !this._webphone.ringSession.minimized\n    );\n    this._showCallLogPage = !!this._callLogSection?.show;\n    if (\n      forcePush ||\n      this._lastPath !== this._router.currentPath ||\n      this._lastShowIncomingCallPage !== this._showIncomingCallPage ||\n      this._lastShowCallLogPage !== this._showCallLogPage\n    ) {\n      this._lastPath = this._router.currentPath;\n      this._lastShowIncomingCallPage = this._showIncomingCallPage;\n      this._lastShowCallLogPage = this._showCallLogPage;\n      const onCurrentCallPath = this._callLogSection\n        ? this._callLogSection.show &&\n          this._callLogSection.currentIdentify ===\n            this._activeCallControl.activeSession?.sessionId\n        : (this._router.currentPath === ACTIVE_CALL_PATH ||\n            this._router.currentPath ===\n              `${ACTIVE_CALL_PATH}/${this._webphone.activeSessionId}`) &&\n          !this._showIncomingCallPage;\n      if (\n        forcePush ||\n        this.onCurrentCallPath !== onCurrentCallPath ||\n        this._lastShowIncomingCallPage !== this._showIncomingCallPage ||\n        this._lastShowCallLogPage !== this._showCallLogPage\n      ) {\n        this.onCurrentCallPath = onCurrentCallPath;\n        this._lastShowIncomingCallPage = this._showIncomingCallPage;\n        this._lastShowCallLogPage = this._showCallLogPage;\n        this._postMessage({\n          type: this._messageTypes.pushOnCurrentCallPath,\n          onCurrentCallPath,\n        });\n      }\n      const onAllCallsPath =\n        this._router.currentPath === ALL_CALL_PATH &&\n        (this._callLogSection\n          ? !this._callLogSection.show\n          : !this._showIncomingCallPage);\n      if (forcePush || this.onAllCallsPath !== onAllCallsPath) {\n        this.onAllCallsPath = onAllCallsPath;\n        this._postMessage({\n          type: this._messageTypes.pushOnAllCallsPath,\n          onAllCallsPath,\n        });\n      }\n    }\n  }\n\n  _pushCallStartTime(forcePush: boolean) {\n    const ringingCallsLength = this._callMonitor.activeRingCalls.length;\n    const onHoldCallsLength = this._callMonitor.activeOnHoldCalls.length;\n    const otherDeviceCallsLength = this._callMonitor.otherDeviceCalls.length;\n    const currentStartTime =\n      (this._callMonitor.activeCurrentCalls &&\n        this._callMonitor.activeCurrentCalls.length > 0 &&\n        this._callMonitor.activeCurrentCalls[0].startTime) ||\n      0;\n    if (\n      forcePush ||\n      this._lastRingCallsLength !== ringingCallsLength ||\n      this._lastOnHoldCallsLength !== onHoldCallsLength ||\n      this._lastCurrentStartTime !== currentStartTime ||\n      this._otherDeviceCallsLength !== otherDeviceCallsLength\n    ) {\n      this._lastRingCallsLength = ringingCallsLength;\n      this._lastOnHoldCallsLength = onHoldCallsLength;\n      this._lastCurrentStartTime = currentStartTime;\n      this._otherDeviceCallsLength = otherDeviceCallsLength;\n      this._postMessage({\n        type: this._messageTypes.pushCalls,\n        ringingCallsLength,\n        onHoldCallsLength,\n        otherDeviceCallsLength,\n        currentStartTime,\n      });\n      this._postMessage({\n        type: this._messageTypes.pushLocale,\n        strings: this.localeStrings,\n      });\n    }\n  }\n\n  @selector\n  localeStrings = [\n    () => this._locale.ready,\n    () => this._locale.currentLocale,\n    () => this._callMonitor.activeRingCalls.length,\n    () => this._callMonitor.activeOnHoldCalls.length,\n    () => this._callMonitor.otherDeviceCalls.length,\n    (\n      localeReady,\n      currentLocale,\n      ringingCallsLength,\n      onHoldCallsLength,\n      otherDeviceCallsLength,\n    ) => {\n      const ringCallsInfo =\n        ringingCallsLength === 1\n          ? formatMessage(headerI18n.getString('incomingCall', currentLocale), {\n              numberOf: ringingCallsLength,\n            })\n          : formatMessage(\n              headerI18n.getString('incomingCalls', currentLocale),\n              { numberOf: ringingCallsLength },\n            );\n      const onHoldCallsInfo =\n        onHoldCallsLength === 1\n          ? formatMessage(headerI18n.getString('callOnHold', currentLocale), {\n              numberOf: onHoldCallsLength,\n            })\n          : formatMessage(headerI18n.getString('callsOnHold', currentLocale), {\n              numberOf: onHoldCallsLength,\n            });\n      const otherDeviceCallsInfo =\n        otherDeviceCallsLength === 1\n          ? formatMessage(\n              headerI18n.getString('otherDeviceCall', currentLocale),\n              {\n                numberOf: otherDeviceCallsLength,\n              },\n            )\n          : formatMessage(\n              headerI18n.getString('otherDeviceCalls', currentLocale),\n              {\n                numberOf: otherDeviceCallsLength,\n              },\n            );\n      const availableBtn = presenceItemI18n.getString(\n        presenceStatus.available,\n        currentLocale,\n      );\n      const busyBtn = presenceItemI18n.getString(\n        presenceStatus.busy,\n        currentLocale,\n      );\n      const offlineBtn = presenceItemI18n.getString(\n        presenceStatus.offline,\n        currentLocale,\n      );\n      const doNotAcceptAnyCallsBtn = presenceItemI18n.getString(\n        dndStatus.doNotAcceptAnyCalls,\n        currentLocale,\n      );\n      return {\n        currentCallBtn: headerI18n.getString('currentCall', currentLocale),\n        viewCallsBtn: headerI18n.getString('viewCalls', currentLocale),\n        ringCallsInfo,\n        onHoldCallsInfo,\n        otherDeviceCallsInfo,\n        availableBtn,\n        busyBtn,\n        offlineBtn,\n        doNotAcceptAnyCallsBtn,\n      };\n    },\n  ];\n\n  @proxify\n  async _onNavigateToCurrentCall() {\n    const currentSession = this._webphone.activeSession;\n    if (currentSession) {\n      const currentCallPath = `${ACTIVE_CALL_PATH}/${currentSession.id}`;\n      this._router.push(currentCallPath);\n    }\n    if (this._userGuide && this._userGuide.started) {\n      this._userGuide.dismiss();\n    }\n    if (this._quickAccess && this._quickAccess.entered) {\n      this._quickAccess.exit();\n    }\n    if (\n      this._callLogSection &&\n      this._activeCallControl?.activeSession?.sessionId\n    ) {\n      this._callLogSection.showLogSection(\n        this._activeCallControl.activeSession.sessionId,\n      );\n    } else if (\n      this._webphone &&\n      this._webphone.ringSession &&\n      !this._webphone.ringSession.minimized\n    ) {\n      this._webphone.toggleMinimized(this._webphone.ringSession.id);\n    }\n  }\n\n  @proxify\n  async _onNavigateToViewCalls() {\n    this._router.push(ALL_CALL_PATH);\n    if (this._userGuide && this._userGuide.started) {\n      this._userGuide.dismiss();\n    }\n    if (this._quickAccess && this._quickAccess.entered) {\n      this._quickAccess.exit();\n    }\n    if (\n      this._webphone &&\n      this._webphone.ringSession &&\n      !this._webphone.ringSession.minimized\n    ) {\n      this._webphone.toggleMinimized(this._webphone.ringSession.id);\n    }\n    this._callLogSection?.closeLogSection();\n  }\n}\n"],"file":"index.js"}