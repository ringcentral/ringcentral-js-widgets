{"version":3,"file":"LocalForageStorage.js","names":["_events","require","_localforage","_interopRequireDefault","uuid","_interopRequireWildcard","_MemoryStorage","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","asyncGeneratorStep","o","c","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","TypeError","_defineProperties","length","enumerable","configurable","writable","_toPropertyKey","key","_createClass","prototype","_toPrimitive","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","LocalForageStorage","_EventEmitter","_super","_ref","_this","storageKey","_storageKey","_storageSyncKey","_ready","_id","_tabSyncHandler","Error","concat","v4","localStorage","window","localforage","config","name","createInstance","_ref2","regeneratorRuntime","mark","_callee","event","_JSON$parse","setter","wrap","_callee$","_context","prev","next","substring","JSON","parse","newValue","id","abrupt","getItem","sent","emit","t0","stop","_x","addEventListener","MemoryStorage","_updateStorageSyncData","syncKey","setItem","stringify","timestamp","Date","now","_getLocalStorageKeys","_callee2","keys","_callee2$","_context2","getLocalStorageKeys","_getData","_callee3","_this2","output","promises","_callee3$","_context3","ready","map","data","all","getData","_getItem","_callee4","originalData","_callee4$","_context4","undefined","_x2","_setItem","_callee5","_callee5$","_context5","error","console","_x3","_x4","_removeItem","_callee6","_callee6$","_context6","removeItem","_x5","destroy","removeEventListener","_callee7","_callee7$","_context7","driver","WEBSQL","INDEXEDDB","LOCALSTORAGE","EventEmitter","exports"],"sources":["lib/LocalForageStorage.ts"],"sourcesContent":["// @ts-nocheck\nimport { EventEmitter } from 'events';\nimport localforage from 'localforage';\nimport * as uuid from 'uuid';\n\nimport type {\n  AsyncStorage,\n  StorageItem,\n} from '../interfaces/GenericStorage.interface';\n\nimport { MemoryStorage } from './MemoryStorage';\n\nexport class LocalForageStorage extends EventEmitter implements AsyncStorage {\n  private _storageKey: string;\n  private _storageSyncKey: string;\n  private _ready: boolean;\n  private _id: string;\n  private _localforage: LocalForage | MemoryStorage<any>;\n  private _tabSyncHandler: (this: Window, ev: StorageEvent) => any;\n\n  constructor({ storageKey }: { storageKey: string }) {\n    super();\n    if (!storageKey) {\n      throw Error('LocalforageStorage must be created with a storage key');\n    }\n    this._storageKey = storageKey;\n    this._storageSyncKey = `${storageKey}-sync`;\n    this._ready = false;\n    this._id = uuid.v4();\n    if (typeof localStorage !== 'undefined' && typeof window !== 'undefined') {\n      localforage.config({ name: this._storageKey });\n      this._localforage = localforage.createInstance({\n        name: this._storageKey,\n      });\n      this._tabSyncHandler = async (event) => {\n        if (\n          event.key !== null &&\n          typeof event.key !== 'undefined' &&\n          event.key.substring(0, this._storageSyncKey.length) ===\n            this._storageSyncKey\n        ) {\n          try {\n            const { setter } = JSON.parse(event.newValue);\n            if (!setter || setter === this.id) {\n              return;\n            }\n            const key = event.key.substring(this._storageSyncKey.length + 1);\n            const value = await this.getItem(key);\n            this.emit('storage', {\n              key,\n              value,\n            });\n          } catch (e: any /** TODO: confirm with instanceof */) {\n            /* ignore error */\n          }\n        }\n      };\n      window.addEventListener('storage', this._tabSyncHandler);\n    } else {\n      this._localforage = new MemoryStorage();\n    }\n  }\n\n  _updateStorageSyncData(key: string) {\n    if (typeof localStorage !== 'undefined') {\n      const syncKey = `${this._storageSyncKey}-${key}`;\n      localStorage.setItem(\n        syncKey,\n        JSON.stringify({\n          timestamp: Date.now(),\n          setter: this.id,\n        }),\n      );\n    }\n  }\n\n  async getLocalStorageKeys() {\n    const keys = await this._localforage.keys();\n    return keys;\n  }\n\n  async getData() {\n    await this.ready();\n    const output: Record<string, StorageItem['value']> = {};\n    const keys = await this.getLocalStorageKeys();\n    const promises = keys.map((key) =>\n      this.getItem(key).then((data) => {\n        output[key] = data;\n      }),\n    );\n    await Promise.all(promises);\n    return output;\n  }\n\n  async getItem(key: string) {\n    // TODO: fix MemoryStorage set value with `string`;\n    const originalData: StorageItem = await this._localforage.getItem(key);\n    try {\n      const { value } = originalData;\n      return value;\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      return undefined;\n    }\n  }\n\n  async setItem(key: string, value: StorageItem['value']) {\n    // TODO: fix MemoryStorage get value with `string`;\n    await this._localforage.setItem<StorageItem>(key, {\n      value,\n      setter: this.id,\n    });\n    try {\n      this._updateStorageSyncData(key);\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      console.error(error);\n    }\n  }\n\n  async removeItem(key: string) {\n    await this._localforage.removeItem(key);\n  }\n\n  destroy() {\n    if (this._tabSyncHandler) {\n      window.removeEventListener('storage', this._tabSyncHandler);\n    }\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  async ready(): Promise<void | boolean> {\n    if (this._ready) {\n      return;\n    }\n    if (typeof this._localforage.ready === 'function') {\n      await this._localforage.ready();\n    }\n    this._ready = true;\n  }\n\n  get driver() {\n    if (this._localforage instanceof MemoryStorage) {\n      return 'MEMORYSTORAGE';\n    }\n    switch (this._localforage.driver()) {\n      case localforage.WEBSQL:\n        return 'WEBSQL';\n      case localforage.INDEXEDDB:\n        return 'INDEXEDDB';\n      case localforage.LOCALSTORAGE:\n        return 'LOCALSTORAGE';\n      default:\n        return null;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}