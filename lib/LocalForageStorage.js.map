{"version":3,"file":"LocalForageStorage.js","names":["_events","require","_localforage","_interopRequireDefault","uuid","_interopRequireWildcard","_MemoryStorage","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","res","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","LocalForageStorage","_EventEmitter","_super","_ref","_this","storageKey","_storageKey","_storageSyncKey","_ready","_id","_tabSyncHandler","Error","concat","v4","localStorage","window","localforage","config","name","createInstance","_ref2","regeneratorRuntime","mark","_callee","event","_JSON$parse","setter","wrap","_callee$","_context","prev","next","substring","JSON","parse","newValue","id","abrupt","getItem","sent","emit","t0","stop","_x","addEventListener","MemoryStorage","_updateStorageSyncData","syncKey","setItem","stringify","timestamp","Date","now","_getLocalStorageKeys","_callee2","keys","_callee2$","_context2","getLocalStorageKeys","_getData","_callee3","_this2","output","promises","_callee3$","_context3","ready","map","data","all","getData","_getItem","_callee4","originalData","_callee4$","_context4","_x2","_setItem","_callee5","_callee5$","_context5","console","_x3","_x4","_removeItem","_callee6","_callee6$","_context6","removeItem","_x5","destroy","removeEventListener","_callee7","_callee7$","_context7","driver","WEBSQL","INDEXEDDB","LOCALSTORAGE","EventEmitter","exports"],"sources":["lib/LocalForageStorage.ts"],"sourcesContent":["// @ts-nocheck\nimport { EventEmitter } from 'events';\nimport localforage from 'localforage';\nimport * as uuid from 'uuid';\n\nimport type {\n  AsyncStorage,\n  StorageItem,\n} from '../interfaces/GenericStorage.interface';\nimport { MemoryStorage } from './MemoryStorage';\n\nexport class LocalForageStorage extends EventEmitter implements AsyncStorage {\n  private _storageKey: string;\n  private _storageSyncKey: string;\n  private _ready: boolean;\n  private _id: string;\n  private _localforage: LocalForage | MemoryStorage<any>;\n  private _tabSyncHandler: (this: Window, ev: StorageEvent) => any;\n\n  constructor({ storageKey }: { storageKey: string }) {\n    super();\n    if (!storageKey) {\n      throw Error('LocalforageStorage must be created with a storage key');\n    }\n    this._storageKey = storageKey;\n    this._storageSyncKey = `${storageKey}-sync`;\n    this._ready = false;\n    this._id = uuid.v4();\n    if (typeof localStorage !== 'undefined' && typeof window !== 'undefined') {\n      localforage.config({ name: this._storageKey });\n      this._localforage = localforage.createInstance({\n        name: this._storageKey,\n      });\n      this._tabSyncHandler = async (event) => {\n        if (\n          event.key !== null &&\n          typeof event.key !== 'undefined' &&\n          event.key.substring(0, this._storageSyncKey.length) ===\n            this._storageSyncKey\n        ) {\n          try {\n            const { setter } = JSON.parse(event.newValue);\n            if (!setter || setter === this.id) {\n              return;\n            }\n            const key = event.key.substring(this._storageSyncKey.length + 1);\n            const value = await this.getItem(key);\n            this.emit('storage', {\n              key,\n              value,\n            });\n          } catch (e: any /** TODO: confirm with instanceof */) {\n            /* ignore error */\n          }\n        }\n      };\n      window.addEventListener('storage', this._tabSyncHandler);\n    } else {\n      this._localforage = new MemoryStorage();\n    }\n  }\n\n  _updateStorageSyncData(key: string) {\n    if (typeof localStorage !== 'undefined') {\n      const syncKey = `${this._storageSyncKey}-${key}`;\n      localStorage.setItem(\n        syncKey,\n        JSON.stringify({\n          timestamp: Date.now(),\n          setter: this.id,\n        }),\n      );\n    }\n  }\n\n  async getLocalStorageKeys() {\n    const keys = await this._localforage.keys();\n    return keys;\n  }\n\n  async getData() {\n    await this.ready();\n    const output: Record<string, StorageItem['value']> = {};\n    const keys = await this.getLocalStorageKeys();\n    const promises = keys.map((key) =>\n      this.getItem(key).then((data) => {\n        output[key] = data;\n      }),\n    );\n    await Promise.all(promises);\n    return output;\n  }\n\n  async getItem(key: string) {\n    // TODO: fix MemoryStorage set value with `string`;\n    const originalData: StorageItem = await this._localforage.getItem(key);\n    try {\n      const { value } = originalData;\n      return value;\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      return undefined;\n    }\n  }\n\n  async setItem(key: string, value: StorageItem['value']) {\n    // TODO: fix MemoryStorage get value with `string`;\n    await this._localforage.setItem<StorageItem>(key, {\n      value,\n      setter: this.id,\n    });\n    try {\n      this._updateStorageSyncData(key);\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      console.error(error);\n    }\n  }\n\n  async removeItem(key: string) {\n    await this._localforage.removeItem(key);\n  }\n\n  destroy() {\n    if (this._tabSyncHandler) {\n      window.removeEventListener('storage', this._tabSyncHandler);\n    }\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  async ready(): Promise<void | boolean> {\n    if (this._ready) {\n      return;\n    }\n    if (typeof this._localforage.ready === 'function') {\n      await this._localforage.ready();\n    }\n    this._ready = true;\n  }\n\n  get driver() {\n    if (this._localforage instanceof MemoryStorage) {\n      return 'MEMORYSTORAGE';\n    }\n    switch (this._localforage.driver()) {\n      case localforage.WEBSQL:\n        return 'WEBSQL';\n      case localforage.INDEXEDDB:\n        return 'INDEXEDDB';\n      case localforage.LOCALSTORAGE:\n        return 'LOCALSTORAGE';\n      default:\n        return null;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,IAAA,GAAAC,uBAAA,CAAAJ,OAAA;AAMA,IAAAK,cAAA,GAAAL,OAAA;AAAgD,SAAAM,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAH,wBAAAO,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,aAAAE,OAAA,CAAAF,GAAA,yBAAAA,GAAA,uCAAAA,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,cAAAN,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAAA,SAAAf,uBAAAS,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAAA,SAAAiB,mBAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAX,GAAA,EAAAY,GAAA,cAAAC,IAAA,GAAAN,GAAA,CAAAP,GAAA,EAAAY,GAAA,OAAAE,KAAA,GAAAD,IAAA,CAAAC,KAAA,WAAAC,KAAA,IAAAN,MAAA,CAAAM,KAAA,iBAAAF,IAAA,CAAAG,IAAA,IAAAR,OAAA,CAAAM,KAAA,YAAAG,OAAA,CAAAT,OAAA,CAAAM,KAAA,EAAAI,IAAA,CAAAR,KAAA,EAAAC,MAAA;AAAA,SAAAQ,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAAN,OAAA,WAAAT,OAAA,EAAAC,MAAA,QAAAF,GAAA,GAAAa,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAZ,MAAAI,KAAA,IAAAR,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAG,KAAA,cAAAH,OAAAc,GAAA,IAAAnB,kBAAA,CAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAc,GAAA,KAAAf,KAAA,CAAAgB,SAAA;AAAA,SAAAC,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAAC,MAAA,EAAAC,KAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAE,UAAA,GAAAH,KAAA,CAAAC,CAAA,GAAAE,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAA1C,MAAA,CAAAC,cAAA,CAAAkC,MAAA,EAAAQ,cAAA,CAAAJ,UAAA,CAAApC,GAAA,GAAAoC,UAAA;AAAA,SAAAK,aAAAZ,WAAA,EAAAa,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAX,iBAAA,CAAAF,WAAA,CAAA5B,SAAA,EAAAyC,UAAA,OAAAC,WAAA,EAAAZ,iBAAA,CAAAF,WAAA,EAAAc,WAAA,GAAA9C,MAAA,CAAAC,cAAA,CAAA+B,WAAA,iBAAAU,QAAA,mBAAAV,WAAA;AAAA,SAAAW,eAAA5B,GAAA,QAAAZ,GAAA,GAAA4C,YAAA,CAAAhC,GAAA,oBAAArB,OAAA,CAAAS,GAAA,iBAAAA,GAAA,GAAA6C,MAAA,CAAA7C,GAAA;AAAA,SAAA4C,aAAAE,KAAA,EAAAC,IAAA,QAAAxD,OAAA,CAAAuD,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAtB,SAAA,QAAAyB,GAAA,GAAAH,IAAA,CAAA7C,IAAA,CAAA2C,KAAA,EAAAC,IAAA,oBAAAxD,OAAA,CAAA4D,GAAA,uBAAAA,GAAA,YAAArB,SAAA,4DAAAiB,IAAA,gBAAAF,MAAA,GAAAO,MAAA,EAAAN,KAAA;AAAA,SAAAO,UAAAC,QAAA,EAAAC,UAAA,eAAAA,UAAA,mBAAAA,UAAA,uBAAAzB,SAAA,0DAAAwB,QAAA,CAAArD,SAAA,GAAAJ,MAAA,CAAA2D,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAAtD,SAAA,IAAAwD,WAAA,IAAA3C,KAAA,EAAAwC,QAAA,EAAAf,QAAA,QAAAD,YAAA,aAAAzC,MAAA,CAAAC,cAAA,CAAAwD,QAAA,iBAAAf,QAAA,gBAAAgB,UAAA,EAAAG,eAAA,CAAAJ,QAAA,EAAAC,UAAA;AAAA,SAAAG,gBAAAC,CAAA,EAAAC,CAAA,IAAAF,eAAA,GAAA7D,MAAA,CAAAgE,cAAA,GAAAhE,MAAA,CAAAgE,cAAA,CAAAC,IAAA,cAAAJ,gBAAAC,CAAA,EAAAC,CAAA,IAAAD,CAAA,CAAAI,SAAA,GAAAH,CAAA,SAAAD,CAAA,YAAAD,eAAA,CAAAC,CAAA,EAAAC,CAAA;AAAA,SAAAI,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,GAAAF,eAAA,OAAAb,WAAA,EAAAc,MAAA,GAAAE,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAA9C,SAAA,EAAAiD,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAA7C,KAAA,OAAAD,SAAA,YAAAoD,0BAAA,OAAAJ,MAAA;AAAA,SAAAI,2BAAAtD,IAAA,EAAAlB,IAAA,QAAAA,IAAA,KAAAZ,OAAA,CAAAY,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAA2B,SAAA,uEAAA8C,sBAAA,CAAAvD,IAAA;AAAA,SAAAuD,uBAAAvD,IAAA,QAAAA,IAAA,yBAAAwD,cAAA,wEAAAxD,IAAA;AAAA,SAAA8C,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAA/E,SAAA,CAAAgF,OAAA,CAAA9E,IAAA,CAAAsE,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAE,CAAA;AAAA,SAAAZ,gBAAAX,CAAA,IAAAW,eAAA,GAAAzE,MAAA,CAAAgE,cAAA,GAAAhE,MAAA,CAAAsF,cAAA,CAAArB,IAAA,cAAAQ,gBAAAX,CAAA,WAAAA,CAAA,CAAAI,SAAA,IAAAlE,MAAA,CAAAsF,cAAA,CAAAxB,CAAA,aAAAW,eAAA,CAAAX,CAAA,KAThD;AAAA,IAWayB,kBAAkB,0BAAAC,aAAA;EAAAhC,SAAA,CAAA+B,kBAAA,EAAAC,aAAA;EAAA,IAAAC,MAAA,GAAAtB,YAAA,CAAAoB,kBAAA;EAQ7B,SAAAA,mBAAAG,IAAA,EAAoD;IAAA,IAAAC,KAAA;IAAA,IAAtCC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAA9D,eAAA,OAAAyD,kBAAA;IACtBI,KAAA,GAAAF,MAAA,CAAAnF,IAAA;IAAQqF,KAAA,CARFE,WAAW;IAAAF,KAAA,CACXG,eAAe;IAAAH,KAAA,CACfI,MAAM;IAAAJ,KAAA,CACNK,GAAG;IAAAL,KAAA,CACH7G,YAAY;IAAA6G,KAAA,CACZM,eAAe;IAIrB,IAAI,CAACL,UAAU,EAAE;MACf,MAAMM,KAAK,CAAC,uDAAuD,CAAC;IACtE;IACAP,KAAA,CAAKE,WAAW,GAAGD,UAAU;IAC7BD,KAAA,CAAKG,eAAe,MAAAK,MAAA,CAAMP,UAAU,UAAO;IAC3CD,KAAA,CAAKI,MAAM,GAAG,KAAK;IACnBJ,KAAA,CAAKK,GAAG,GAAGhH,IAAI,CAACoH,EAAE,CAAC,CAAC;IACpB,IAAI,OAAOC,YAAY,KAAK,WAAW,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MACxEC,uBAAW,CAACC,MAAM,CAAC;QAAEC,IAAI,EAAEd,KAAA,CAAKE;MAAY,CAAC,CAAC;MAC9CF,KAAA,CAAK7G,YAAY,GAAGyH,uBAAW,CAACG,cAAc,CAAC;QAC7CD,IAAI,EAAEd,KAAA,CAAKE;MACb,CAAC,CAAC;MACFF,KAAA,CAAKM,eAAe;QAAA,IAAAU,KAAA,GAAArF,iBAAA,eAAAsF,kBAAA,CAAAC,IAAA,CAAG,SAAAC,QAAOC,KAAK;UAAA,IAAAC,WAAA,EAAAC,MAAA,EAAA9G,GAAA,EAAAc,KAAA;UAAA,OAAA2F,kBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;YAAA;cAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;gBAAA;kBAAA,MAE/BP,KAAK,CAAC5G,GAAG,KAAK,IAAI,IAClB,OAAO4G,KAAK,CAAC5G,GAAG,KAAK,WAAW,IAChC4G,KAAK,CAAC5G,GAAG,CAACoH,SAAS,CAAC,CAAC,EAAE5B,KAAA,CAAKG,eAAe,CAACxD,MAAM,CAAC,KACjDqD,KAAA,CAAKG,eAAe;oBAAAsB,QAAA,CAAAE,IAAA;oBAAA;kBAAA;kBAAAF,QAAA,CAAAC,IAAA;kBAAAL,WAAA,GAGDQ,IAAI,CAACC,KAAK,CAACV,KAAK,CAACW,QAAQ,CAAC,EAArCT,MAAM,GAAAD,WAAA,CAANC,MAAM;kBAAA,MACV,CAACA,MAAM,IAAIA,MAAM,KAAKtB,KAAA,CAAKgC,EAAE;oBAAAP,QAAA,CAAAE,IAAA;oBAAA;kBAAA;kBAAA,OAAAF,QAAA,CAAAQ,MAAA;gBAAA;kBAG3BzH,GAAG,GAAG4G,KAAK,CAAC5G,GAAG,CAACoH,SAAS,CAAC5B,KAAA,CAAKG,eAAe,CAACxD,MAAM,GAAG,CAAC,CAAC;kBAAA8E,QAAA,CAAAE,IAAA;kBAAA,OAC5C3B,KAAA,CAAKkC,OAAO,CAAC1H,GAAG,CAAC;gBAAA;kBAA/Bc,KAAK,GAAAmG,QAAA,CAAAU,IAAA;kBACXnC,KAAA,CAAKoC,IAAI,CAAC,SAAS,EAAE;oBACnB5H,GAAG,EAAHA,GAAG;oBACHc,KAAK,EAALA;kBACF,CAAC,CAAC;kBAACmG,QAAA,CAAAE,IAAA;kBAAA;gBAAA;kBAAAF,QAAA,CAAAC,IAAA;kBAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;gBAAA;gBAAA;kBAAA,OAAAA,QAAA,CAAAa,IAAA;cAAA;YAAA;UAAA,GAAAnB,OAAA;QAAA,CAKR;QAAA,iBAAAoB,EAAA;UAAA,OAAAvB,KAAA,CAAAhF,KAAA,OAAAD,SAAA;QAAA;MAAA;MACD4E,MAAM,CAAC6B,gBAAgB,CAAC,SAAS,EAAExC,KAAA,CAAKM,eAAe,CAAC;IAC1D,CAAC,MAAM;MACLN,KAAA,CAAK7G,YAAY,GAAG,IAAIsJ,4BAAa,CAAC,CAAC;IACzC;IAAC,OAAAzC,KAAA;EACH;EAAC/C,YAAA,CAAA2C,kBAAA;IAAApF,GAAA;IAAAc,KAAA,WAAAoH,uBAEsBlI,GAAW,EAAE;MAClC,IAAI,OAAOkG,YAAY,KAAK,WAAW,EAAE;QACvC,IAAMiC,OAAO,MAAAnC,MAAA,CAAM,IAAI,CAACL,eAAe,OAAAK,MAAA,CAAIhG,GAAG,CAAE;QAChDkG,YAAY,CAACkC,OAAO,CAClBD,OAAO,EACPd,IAAI,CAACgB,SAAS,CAAC;UACbC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UACrB1B,MAAM,EAAE,IAAI,CAACU;QACf,CAAC,CACH,CAAC;MACH;IACF;EAAC;IAAAxH,GAAA;IAAAc,KAAA;MAAA,IAAA2H,oBAAA,GAAAtH,iBAAA,eAAAsF,kBAAA,CAAAC,IAAA,UAAAgC,SAAA;QAAA,IAAAC,IAAA;QAAA,OAAAlC,kBAAA,CAAAM,IAAA,UAAA6B,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAA3B,IAAA,GAAA2B,SAAA,CAAA1B,IAAA;cAAA;gBAAA0B,SAAA,CAAA1B,IAAA;gBAAA,OAGoB,IAAI,CAACxI,YAAY,CAACgK,IAAI,CAAC,CAAC;cAAA;gBAArCA,IAAI,GAAAE,SAAA,CAAAlB,IAAA;gBAAA,OAAAkB,SAAA,CAAApB,MAAA,WACHkB,IAAI;cAAA;cAAA;gBAAA,OAAAE,SAAA,CAAAf,IAAA;YAAA;UAAA;QAAA,GAAAY,QAAA;MAAA;MAAA,SAAAI,oBAAA;QAAA,OAAAL,oBAAA,CAAAjH,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAuH,mBAAA;IAAA;EAAA;IAAA9I,GAAA;IAAAc,KAAA;MAAA,IAAAiI,QAAA,GAAA5H,iBAAA,eAAAsF,kBAAA,CAAAC,IAAA,UAAAsC,SAAA;QAAA,IAAAC,MAAA;QAAA,IAAAC,MAAA,EAAAP,IAAA,EAAAQ,QAAA;QAAA,OAAA1C,kBAAA,CAAAM,IAAA,UAAAqC,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAnC,IAAA,GAAAmC,SAAA,CAAAlC,IAAA;cAAA;gBAAAkC,SAAA,CAAAlC,IAAA;gBAAA,OAIL,IAAI,CAACmC,KAAK,CAAC,CAAC;cAAA;gBACZJ,MAA4C,GAAG,CAAC,CAAC;gBAAAG,SAAA,CAAAlC,IAAA;gBAAA,OACpC,IAAI,CAAC2B,mBAAmB,CAAC,CAAC;cAAA;gBAAvCH,IAAI,GAAAU,SAAA,CAAA1B,IAAA;gBACJwB,QAAQ,GAAGR,IAAI,CAACY,GAAG,CAAC,UAACvJ,GAAG;kBAAA,OAC5BiJ,MAAI,CAACvB,OAAO,CAAC1H,GAAG,CAAC,CAACkB,IAAI,CAAC,UAACsI,IAAI,EAAK;oBAC/BN,MAAM,CAAClJ,GAAG,CAAC,GAAGwJ,IAAI;kBACpB,CAAC,CAAC;gBAAA,CACJ,CAAC;gBAAAH,SAAA,CAAAlC,IAAA;gBAAA,OACKlG,OAAO,CAACwI,GAAG,CAACN,QAAQ,CAAC;cAAA;gBAAA,OAAAE,SAAA,CAAA5B,MAAA,WACpByB,MAAM;cAAA;cAAA;gBAAA,OAAAG,SAAA,CAAAvB,IAAA;YAAA;UAAA;QAAA,GAAAkB,QAAA;MAAA;MAAA,SAAAU,QAAA;QAAA,OAAAX,QAAA,CAAAvH,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAmI,OAAA;IAAA;EAAA;IAAA1J,GAAA;IAAAc,KAAA;MAAA,IAAA6I,QAAA,GAAAxI,iBAAA,eAAAsF,kBAAA,CAAAC,IAAA,UAAAkD,SAGD5J,GAAW;QAAA,IAAA6J,YAAA,EAAA/I,KAAA;QAAA,OAAA2F,kBAAA,CAAAM,IAAA,UAAA+C,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAA7C,IAAA,GAAA6C,SAAA,CAAA5C,IAAA;cAAA;gBAAA4C,SAAA,CAAA5C,IAAA;gBAAA,OAEiB,IAAI,CAACxI,YAAY,CAAC+I,OAAO,CAAC1H,GAAG,CAAC;cAAA;gBAAhE6J,YAAyB,GAAAE,SAAA,CAAApC,IAAA;gBAAAoC,SAAA,CAAA7C,IAAA;gBAErBpG,KAAK,GAAK+I,YAAY,CAAtB/I,KAAK;gBAAA,OAAAiJ,SAAA,CAAAtC,MAAA,WACN3G,KAAK;cAAA;gBAAAiJ,SAAA,CAAA7C,IAAA;gBAAA6C,SAAA,CAAAlC,EAAA,GAAAkC,SAAA;gBAAA,OAAAA,SAAA,CAAAtC,MAAA,WAEL/F,SAAS;cAAA;cAAA;gBAAA,OAAAqI,SAAA,CAAAjC,IAAA;YAAA;UAAA;QAAA,GAAA8B,QAAA;MAAA;MAAA,SAAAlC,QAAAsC,GAAA;QAAA,OAAAL,QAAA,CAAAnI,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAmG,OAAA;IAAA;EAAA;IAAA1H,GAAA;IAAAc,KAAA;MAAA,IAAAmJ,QAAA,GAAA9I,iBAAA,eAAAsF,kBAAA,CAAAC,IAAA,UAAAwD,SAINlK,GAAW,EAAEc,KAA2B;QAAA,OAAA2F,kBAAA,CAAAM,IAAA,UAAAoD,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAlD,IAAA,GAAAkD,SAAA,CAAAjD,IAAA;cAAA;gBAAAiD,SAAA,CAAAjD,IAAA;gBAAA,OAE9C,IAAI,CAACxI,YAAY,CAACyJ,OAAO,CAAcpI,GAAG,EAAE;kBAChDc,KAAK,EAALA,KAAK;kBACLgG,MAAM,EAAE,IAAI,CAACU;gBACf,CAAC,CAAC;cAAA;gBACF,IAAI;kBACF,IAAI,CAACU,sBAAsB,CAAClI,GAAG,CAAC;gBAClC,CAAC,CAAC,OAAOe,KAAU,EAAuC;kBACxDsJ,OAAO,CAACtJ,KAAK,CAACA,KAAK,CAAC;gBACtB;cAAC;cAAA;gBAAA,OAAAqJ,SAAA,CAAAtC,IAAA;YAAA;UAAA;QAAA,GAAAoC,QAAA;MAAA;MAAA,SAAA9B,QAAAkC,GAAA,EAAAC,GAAA;QAAA,OAAAN,QAAA,CAAAzI,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA6G,OAAA;IAAA;EAAA;IAAApI,GAAA;IAAAc,KAAA;MAAA,IAAA0J,WAAA,GAAArJ,iBAAA,eAAAsF,kBAAA,CAAAC,IAAA,UAAA+D,SAGczK,GAAW;QAAA,OAAAyG,kBAAA,CAAAM,IAAA,UAAA2D,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAzD,IAAA,GAAAyD,SAAA,CAAAxD,IAAA;cAAA;gBAAAwD,SAAA,CAAAxD,IAAA;gBAAA,OACpB,IAAI,CAACxI,YAAY,CAACiM,UAAU,CAAC5K,GAAG,CAAC;cAAA;cAAA;gBAAA,OAAA2K,SAAA,CAAA7C,IAAA;YAAA;UAAA;QAAA,GAAA2C,QAAA;MAAA;MAAA,SAAAG,WAAAC,GAAA;QAAA,OAAAL,WAAA,CAAAhJ,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAqJ,UAAA;IAAA;EAAA;IAAA5K,GAAA;IAAAc,KAAA,WAAAgK,QAAA,EAG/B;MACR,IAAI,IAAI,CAAChF,eAAe,EAAE;QACxBK,MAAM,CAAC4E,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACjF,eAAe,CAAC;MAC7D;IACF;EAAC;IAAA9F,GAAA;IAAAc,KAAA;MAAA,IAAA8E,MAAA,GAAAzE,iBAAA,eAAAsF,kBAAA,CAAAC,IAAA,UAAAsE,SAAA;QAAA,OAAAvE,kBAAA,CAAAM,IAAA,UAAAkE,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAhE,IAAA,GAAAgE,SAAA,CAAA/D,IAAA;cAAA;gBAAA,KAOK,IAAI,CAACvB,MAAM;kBAAAsF,SAAA,CAAA/D,IAAA;kBAAA;gBAAA;gBAAA,OAAA+D,SAAA,CAAAzD,MAAA;cAAA;gBAAA,MAGX,OAAO,IAAI,CAAC9I,YAAY,CAAC2K,KAAK,KAAK,UAAU;kBAAA4B,SAAA,CAAA/D,IAAA;kBAAA;gBAAA;gBAAA+D,SAAA,CAAA/D,IAAA;gBAAA,OACzC,IAAI,CAACxI,YAAY,CAAC2K,KAAK,CAAC,CAAC;cAAA;gBAEjC,IAAI,CAAC1D,MAAM,GAAG,IAAI;cAAC;cAAA;gBAAA,OAAAsF,SAAA,CAAApD,IAAA;YAAA;UAAA;QAAA,GAAAkD,QAAA;MAAA;MAAA,SAAA1B,MAAA;QAAA,OAAA1D,MAAA,CAAApE,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAA+H,KAAA;IAAA;EAAA;IAAAtJ,GAAA;IAAAN,GAAA,WAAAA,IAAA,EAXZ;MACP,OAAO,IAAI,CAACmG,GAAG;IACjB;EAAC;IAAA7F,GAAA;IAAAN,GAAA,WAAAA,IAAA,EAYY;MACX,IAAI,IAAI,CAACf,YAAY,YAAYsJ,4BAAa,EAAE;QAC9C,OAAO,eAAe;MACxB;MACA,QAAQ,IAAI,CAACtJ,YAAY,CAACwM,MAAM,CAAC,CAAC;QAChC,KAAK/E,uBAAW,CAACgF,MAAM;UACrB,OAAO,QAAQ;QACjB,KAAKhF,uBAAW,CAACiF,SAAS;UACxB,OAAO,WAAW;QACpB,KAAKjF,uBAAW,CAACkF,YAAY;UAC3B,OAAO,cAAc;QACvB;UACE,OAAO,IAAI;MACf;IACF;EAAC;EAAA,OAAAlG,kBAAA;AAAA,EAhJqCmG,oBAAY;AAAAC,OAAA,CAAApG,kBAAA,GAAAA,kBAAA"}