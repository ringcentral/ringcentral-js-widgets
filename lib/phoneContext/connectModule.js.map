{"version":3,"sources":["lib/phoneContext/connectModule.tsx"],"names":["connectModule","fn","Comp","WithModule","_","props","phone","getUIProps","getUIFunctions"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;;;;;;AAIA,SAASA,aAAT,CAAyCC,EAAzC,EAAoE;AAClE,SAAO,UAACC,IAAD,EAA8B;AACnC,QAAMC,UAAU,GAAG,yBACjB,UAACC,CAAD,EAAIC,KAAJ;AAAA,aAAmBJ,EAAE,CAACI,KAAK,CAACC,KAAP,CAAF,CAAgBC,UAAhB,CAA2BF,KAA3B,CAAnB;AAAA,KADiB,EAEjB,UAACD,CAAD,EAAIC,KAAJ;AAAA,aAAmBJ,EAAE,CAACI,KAAK,CAACC,KAAP,CAAF,CAAgBE,cAAhB,CAA+BH,KAA/B,CAAnB;AAAA,KAFiB,EAGjBH,IAHiB,CAAnB;AAIA,WAAQ,UAACG,KAAD;AAAA,0BACN,gCAAC,0BAAD,CAAc,QAAd,QACG,UAACC,KAAD;AAAA,4BAAW,gCAAC,UAAD;AAAY,UAAA,KAAK,EAAEA;AAAnB,WAA8BD,KAA9B,EAAX;AAAA,OADH,CADM;AAAA,KAAR;AAKD,GAVD;AAWD;;eAEcL,a","sourcesContent":["import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { PhoneContext } from './phoneContext';\n\nexport type connectModuleProps<T> = (props: T) => any;\n\nfunction connectModule<T = any, K = any>(fn: connectModuleProps<T>) {\n  return (Comp: ComponentType<any>) => {\n    const WithModule = connect(\n      (_, props: any) => fn(props.phone).getUIProps(props),\n      (_, props: any) => fn(props.phone).getUIFunctions(props),\n    )(Comp);\n    return ((props: K) => (\n      <PhoneContext.Consumer>\n        {(phone) => <WithModule phone={phone} {...props} />}\n      </PhoneContext.Consumer>\n    )) as any as FunctionComponent<K>;\n  };\n}\n\nexport default connectModule;\n"],"file":"connectModule.js"}