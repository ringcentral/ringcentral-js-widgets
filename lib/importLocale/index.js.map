{"version":3,"file":"index.js","names":["prompt","inquirer","createPromptModule","writeFiles","localeData","sourceFolder","sourceLocale","forEach","folderPath","locale","targetData","files","generate","ast","code","annotations","reduce","result","key","value","push","JSON","stringify","join","output","fs","writeFileSync","path","resolve","file","Object","keys","formatReason","reason","fileName","type","chalk","red","mergeTranslationData","translations","interactive","silent","asyncForEach","sourceData","relativePath","relative","asyncReduce","newData","shouldDelete","data","has","get","source","message","name","console","log","set","Map","filePath","dirname","formatLocale","originalData","translatedData","shouldSkip","parse","content","sourceType","defaultExport","find","item","program","body","properties","filter","prop","wrapInBracket","entry","extra","raw","rawValue","declaration","importLocale","defaultConfig","localizationFolder","supportedLocales","translationLocales","json","rawData","Error","compileLocaleData","readJsonData","readXlfData","mergedData"],"sources":["lib/importLocale/index.js"],"sourcesContent":["import generate from '@babel/generator';\nimport { parse } from '@babel/parser';\nimport formatLocale from '@ringcentral-integration/i18n/lib/formatLocale';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport inquirer from 'inquirer';\nimport path from 'path';\nimport { filter, find, forEach, reduce } from 'ramda';\n\nimport asyncForEach from '../asyncForEach';\nimport asyncReduce from '../asyncReduce';\nimport compileLocaleData from '../compileLocaleData';\nimport defaultConfig from '../defaultConfig';\nimport { readJsonData } from '../readJsonData';\nimport readXlfData from '../readXlfData';\n\nconst prompt = inquirer.createPromptModule();\n\nfunction writeFiles({ localeData, sourceFolder, sourceLocale }) {\n  forEach((folderPath) => {\n    forEach((locale) => {\n      if (locale !== sourceLocale) {\n        // write file\n        const targetData = localeData[folderPath].files[locale];\n        const { code } = generate(targetData.ast);\n        const annotations = reduce(\n          (result, [key, value]) => {\n            result.push(\n              `// @key: @#@${JSON.stringify(\n                key,\n              )}@#@ @source: @#@${JSON.stringify(value)}@#@`,\n            );\n            return result;\n          },\n          [],\n          targetData.annotations,\n        ).join('\\n');\n        const output = `${code}\\n\\n${annotations}\\n`;\n        fs.writeFileSync(\n          path.resolve(sourceFolder, folderPath, targetData.file),\n          output,\n        );\n      }\n    }, Object.keys(localeData[folderPath].files));\n  }, Object.keys(localeData));\n}\n\nfunction formatReason({ reason, key, fileName, type }) {\n  return `[locale] ${chalk.red(\n    `{${type}}`,\n  )} Key: '${key}', File: '${fileName}', Reason: ${reason}.`;\n}\n\nasync function mergeTranslationData({\n  localeData,\n  translations = {},\n  sourceFolder,\n  sourceLocale,\n  interactive = true,\n  silent = false,\n}) {\n  // clean up original Data\n  await asyncForEach(async (folderPath) => {\n    await asyncForEach(async (locale) => {\n      if (locale !== sourceLocale) {\n        const targetData = localeData[folderPath].files[locale];\n        const sourceData = localeData[folderPath].files[sourceLocale];\n        const relativePath = path.relative(\n          sourceFolder,\n          path.resolve(folderPath, targetData.file),\n        );\n        targetData.data = await asyncReduce(\n          async (newData, [key, value]) => {\n            const type = 'Delete';\n            let shouldDelete = false;\n            let message;\n            if (sourceData.data.has(key)) {\n              if (sourceData.data.get(key).value !== value.source) {\n                message = formatReason({\n                  type,\n                  reason: 'Source value changed',\n                  key,\n                  fileName: relativePath,\n                });\n                if (interactive) {\n                  shouldDelete = (\n                    await prompt({\n                      name: 'result',\n                      type: 'confirm',\n                      message,\n                    })\n                  ).result;\n                } else {\n                  shouldDelete = true;\n                }\n              }\n            } else {\n              message = formatReason({\n                type,\n                reason: 'Source no longer exists',\n                key,\n                fileName: relativePath,\n              });\n              if (interactive) {\n                shouldDelete = (\n                  await prompt({\n                    name: 'result',\n                    type: 'confirm',\n                    message,\n                  })\n                ).result;\n              } else {\n                shouldDelete = true;\n              }\n            }\n            if (shouldDelete) {\n              if (!interactive && !silent) {\n                console.log(message);\n              }\n            } else {\n              newData.set(key, value);\n            }\n\n            return newData;\n          },\n          new Map(),\n          targetData.data,\n        );\n      }\n    }, Object.keys(localeData[folderPath].files));\n  }, Object.keys(localeData));\n\n  // merge in translations\n  await asyncForEach(async (locale) => {\n    await asyncForEach(async (fileName) => {\n      const filePath = path.resolve(sourceFolder, fileName);\n      const folderPath = path.dirname(filePath);\n\n      if (\n        localeData[folderPath] &&\n        localeData[folderPath].files[sourceLocale]\n      ) {\n        const sourceData = localeData[folderPath].files[sourceLocale].data;\n        if (!localeData[folderPath].files[locale]) {\n          localeData[folderPath].files[locale] = {\n            file: `${formatLocale(locale)}.js`,\n          };\n        }\n        if (!localeData[folderPath].files[locale].data) {\n          localeData[folderPath].files[locale].data = new Map();\n        }\n        const originalData = localeData[folderPath].files[locale].data;\n        const translatedData = translations[locale][fileName];\n        await asyncForEach(async (key) => {\n          const type = 'Skip';\n          let shouldSkip = false;\n          let message;\n          if (!sourceData.has(key)) {\n            message = formatReason({\n              type,\n              reason: 'Source no longer exists',\n              key,\n              fileName,\n            });\n            if (interactive) {\n              shouldSkip = (\n                await prompt({\n                  name: 'result',\n                  type: 'confirm',\n                  message,\n                })\n              ).result;\n            } else {\n              shouldSkip = true;\n            }\n          } else if (sourceData.get(key).value !== translatedData[key].source) {\n            message = formatReason({\n              type,\n              reason: 'Source value changed',\n              key,\n              fileName,\n            });\n            if (interactive) {\n              shouldSkip = (\n                await prompt({\n                  name: 'result',\n                  type: 'confirm',\n                  message,\n                })\n              ).result;\n            } else {\n              shouldSkip = true;\n            }\n          }\n\n          if (shouldSkip) {\n            if (!interactive && !silent) {\n              console.log(message);\n            }\n          } else {\n            originalData.set(key, {\n              ...translatedData[key],\n              key,\n            });\n          }\n        }, Object.keys(translatedData));\n      }\n    }, Object.keys(translations[locale]));\n  }, Object.keys(translations));\n\n  // Update ast and generate code\n  forEach((folderPath) => {\n    forEach((locale) => {\n      if (locale !== sourceLocale) {\n        const targetData = localeData[folderPath].files[locale];\n        const sourceData = localeData[folderPath].files[sourceLocale];\n        targetData.ast = parse(sourceData.content, { sourceType: 'module' });\n        targetData.annotations = new Map();\n\n        const defaultExport = find(\n          (item) => item.type === 'ExportDefaultDeclaration',\n          targetData.ast.program.body,\n        );\n        const properties = filter((prop) => {\n          const wrapInBracket =\n            prop.key.type === 'MemberExpression' ||\n            prop.key.type === 'TemplateLiteral';\n          const key = wrapInBracket\n            ? `[${generate(prop.key).code}]`\n            : generate(prop.key).code;\n          const entry = targetData.data.get(key);\n          if (entry && entry.value) {\n            prop.value = {\n              type: 'StringLiteral',\n              value: entry.value,\n              extra: {\n                // generate desired raw to by pass babel jsesc use\n                raw: JSON.stringify(entry.value),\n                rawValue: entry.value,\n              },\n            };\n            targetData.annotations.set(key, sourceData.data.get(key).value);\n            return true;\n          }\n          return false;\n        }, defaultExport.declaration.properties);\n        defaultExport.declaration.properties = properties;\n      }\n    }, Object.keys(localeData[folderPath].files));\n  }, Object.keys(localeData));\n  return localeData;\n}\n\nexport default async function importLocale({\n  sourceFolder = defaultConfig.sourceFolder,\n  localizationFolder = defaultConfig.localizationFolder,\n  sourceLocale = defaultConfig.sourceLocale,\n  supportedLocales,\n  translationLocales = supportedLocales,\n  interactive = defaultConfig.interactive,\n  silent = defaultConfig.silent,\n  json = false,\n  rawData,\n} = {}) {\n  if (!supportedLocales) {\n    throw new Error('options.supportedLocales is missing');\n  }\n  const localeData = compileLocaleData({\n    sourceFolder,\n    sourceLocale,\n    translationLocales,\n  });\n  const translations = json\n    ? readJsonData({\n        localizationFolder,\n        translationLocales,\n        sourceLocale,\n        rawData,\n      })\n    : readXlfData({\n        localizationFolder,\n        translationLocales,\n      });\n  const mergedData = await mergeTranslationData({\n    localeData,\n    translations,\n    sourceFolder,\n    sourceLocale,\n    interactive,\n    silent,\n  });\n  writeFiles({\n    localeData: mergedData,\n    sourceFolder,\n    sourceLocale,\n  });\n}\n"],"mappings":"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"}