{"version":3,"file":"DataMatcher.js","names":["_core","require","_ramda","_di","_proxify","_interopRequireDefault","_dec","_dec2","_class","_class2","_descriptor","e","__esModule","_slicedToArray","r","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","l","t","Symbol","iterator","n","i","u","a","f","o","call","next","Object","done","push","value","length","Array","isArray","_createForOfIteratorHelper","_n","F","s","asyncGeneratorStep","c","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","constructor","name","from","test","_initializerDefineProperty","defineProperty","enumerable","configurable","writable","initializer","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","prototype","_toPrimitive","_typeof","toPrimitive","String","Number","_get","Reflect","get","bind","p","_superPropBase","getOwnPropertyDescriptor","hasOwnProperty","_getPrototypeOf","_inherits","create","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","_isNativeReflectConstruct","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","keys","forEach","reverse","reduce","_initializerWarningHelper","Error","DEFAULT_TTL","DEFAULT_NO_MATCH_TTL","DataMatcher","Library","deps","dep","optional","computed","_ref","data","ready","_searchProviders","size","_RcModuleV","_super","storageKey","disableCache","_this","enableCache","_querySources","Map","_matchPromises","_matchQueues","_lastCleanUp","onReset","_getQueries","output","Set","readyCheckFn","getQueriesFn","query","add","insertMatchEntries","_ref2","_this2","queries","timestamp","Date","now","_this2$data$query","_data$query","_t","_cleanUp","_this3","_ttl","_shouldInit","searchProvidersReady","_shouldReset","addSearchProvider","_ref3","searchFn","concat","has","set","addQuerySource","_ref4","_triggerMatch","regeneratorRuntime","mark","_callee","_ref5","_ref5$ignoreCache","ignoreCache","_ref5$ignoreQueue","ignoreQueue","_args","wrap","_callee$","_context","prev","undefined","match","stop","triggerMatch","_match","_callee2","_ref6","_this4","_ref6$ignoreCache","_ref6$ignoreQueue","_callee2$","_context2","all","map","_matchSource","_x","_fetchMatchResult2","_callee3","_ref7","provider","promise","_callee3$","_context3","sent","t0","_fetchMatchResult","_x2","_matchSource2","_callee5","_ref8","_this5","queuedItems","promises","matching","queue","newQueries","_callee5$","_context5","item","filter","_noMatchTtl","_callee4","_callee4$","_context4","_x3","_insertMatching","_callee6","_ref10","_callee6$","_context6","insertMatching","_x4","_this$dataMatcherOpti","_this$dataMatcherOpti2","dataMatcherOptions","ttl","_this$dataMatcherOpti3","_this$dataMatcherOpti4","noMatchTtl","_ref11","values","_this6","dataMap","queryResult","matchesList","_iterator","_step","_step$value","providerName","err","RcModuleV2","storage","state","action","proxify","exports"],"sources":["lib/DataMatcherV2/DataMatcher.ts"],"sourcesContent":["import {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n  storage,\n} from '@ringcentral-integration/core';\nimport { all, filter, forEach } from 'ramda';\n\nimport { Library } from '../di';\nimport proxify from '../proxy/proxify';\n\nimport type {\n  DataMatcherOptions,\n  Deps,\n  FetchMatchResultOptions,\n  InsertMatchEntriesOptions,\n  MatchData,\n  MatchOptions,\n  MatchPromises,\n  MatchQueue,\n  MatchSourceOptions,\n  QuerySourceOptions,\n  SearchProvider,\n  SearchProviderOptions,\n  TriggerMatchOptions,\n} from './DataMatcher.interface';\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_NO_MATCH_TTL = 30 * 1000;\n\n@Library({\n  name: 'DataMatcher',\n  deps: [{ dep: 'Storage', optional: true }],\n})\nabstract class DataMatcher<T, D extends Deps = Deps> extends RcModuleV2<D> {\n  protected _querySources = new Map<\n    QuerySourceOptions['getQueriesFn'],\n    QuerySourceOptions['readyCheckFn']\n  >();\n\n  protected _searchProviders = new Map<\n    SearchProviderOptions<T>['name'],\n    SearchProvider<T>\n  >();\n\n  protected _matchPromises = new Map<string, MatchPromises<T>>();\n\n  protected _matchQueues = new Map<string, MatchQueue>();\n\n  protected _lastCleanUp = 0;\n\n  constructor(deps: Deps & D, storageKey: string, disableCache?: boolean) {\n    super({\n      deps,\n      enableCache: !(disableCache ?? false),\n      storageKey,\n    });\n  }\n\n  @storage\n  @state\n  data: MatchData<T> = {};\n\n  abstract get dataMatcherOptions(): DataMatcherOptions;\n\n  protected get _ttl() {\n    return this.dataMatcherOptions?.ttl ?? DEFAULT_TTL;\n  }\n\n  protected get _noMatchTtl() {\n    return this.dataMatcherOptions?.noMatchTtl ?? DEFAULT_NO_MATCH_TTL;\n  }\n\n  override onReset() {\n    this._lastCleanUp = 0;\n  }\n\n  _getQueries() {\n    const output = new Set<string>();\n    this._querySources.forEach((readyCheckFn, getQueriesFn) => {\n      if (readyCheckFn()) {\n        getQueriesFn().forEach((query) => {\n          output.add(query);\n        });\n      }\n    });\n    return [...output];\n  }\n\n  @action\n  insertMatchEntries({ name, queries, data }: InsertMatchEntriesOptions<T>) {\n    const timestamp = Date.now();\n    queries.forEach((query) => {\n      this.data[query] = this.data[query] ?? {};\n      this.data[query][name] = {\n        _t: timestamp, // for noMatchTtl check\n        data: data[query] ?? [],\n      };\n    });\n  }\n\n  @action\n  _cleanUp() {\n    // throttle clean up to only run once every 100ms\n    const now = Date.now();\n    if (now - this._lastCleanUp > 100) {\n      this._lastCleanUp = now;\n      Object.keys(this.data).forEach((query) => {\n        Object.keys(this.data[query]).forEach((name) => {\n          if (!this.data[query][name]._t) {\n            // mark for deletion\n            this.data[query][name]._t = now;\n          } else if (now - this.data[query][name]._t > this._ttl) {\n            // expired yet\n            // entry is removed\n            delete this.data[query][name];\n          }\n        });\n      });\n    }\n  }\n\n  override _shouldInit() {\n    return !!(super._shouldInit() && this.searchProvidersReady);\n  }\n\n  override _shouldReset() {\n    return !!(\n      super._shouldReset() ||\n      (this.ready && !this.searchProvidersReady)\n    );\n  }\n\n  get searchProvidersReady() {\n    return all(\n      ({ readyCheckFn }) => readyCheckFn(),\n      [...this._searchProviders.values()],\n    );\n  }\n\n  addSearchProvider({\n    name,\n    searchFn,\n    readyCheckFn,\n  }: SearchProviderOptions<T>) {\n    if (!name) {\n      throw new Error(`${this.constructor.name}: \"name\" is required.`);\n    }\n    if (this._searchProviders.has(name)) {\n      throw new Error(\n        `${this.constructor.name}: A provider named \"${name}\" already exists.`,\n      );\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"searchFn\" must be a function.`,\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`,\n      );\n    }\n    this._searchProviders.set(name, {\n      searchFn,\n      readyCheckFn,\n    });\n  }\n\n  addQuerySource({ getQueriesFn, readyCheckFn }: QuerySourceOptions) {\n    if (typeof getQueriesFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"getQueriesFn\" must be a function.`,\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`,\n      );\n    }\n    if (this._querySources.has(getQueriesFn)) {\n      throw new Error(\n        `${this.constructor.name}: this getQueryFn has already been added.`,\n      );\n    }\n    this._querySources.set(getQueriesFn, readyCheckFn);\n  }\n\n  @proxify\n  async triggerMatch({\n    ignoreCache = false,\n    ignoreQueue = false,\n  }: TriggerMatchOptions = {}) {\n    if (this.ready) {\n      this._cleanUp();\n      await this.match({\n        queries: this._getQueries(),\n        ignoreCache,\n        ignoreQueue,\n      });\n    }\n  }\n\n  @proxify\n  async match({\n    queries,\n    ignoreCache = false,\n    ignoreQueue = false,\n  }: MatchOptions) {\n    await Promise.all(\n      [...this._searchProviders.keys()].map((name) =>\n        this._matchSource({\n          name,\n          queries,\n          ignoreCache,\n          ignoreQueue,\n        }),\n      ),\n    );\n  }\n\n  async _fetchMatchResult({ name, queries }: FetchMatchResultOptions) {\n    try {\n      const provider = this._searchProviders.get(name);\n      if (!provider) {\n        throw new Error(\n          `${this.constructor.name}: provider named \"${name} does not exist`,\n        );\n      }\n      const promise = Promise.resolve(\n        provider.searchFn({\n          queries,\n        }),\n      );\n      this._matchPromises.set(name, {\n        promise,\n        queries,\n      });\n      const data = await promise;\n      this._matchPromises.delete(name);\n      this.insertMatchEntries({\n        name,\n        queries,\n        data,\n      });\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      this._matchPromises.delete(name);\n      throw error;\n    }\n  }\n\n  @proxify\n  async _matchSource({\n    name,\n    queries,\n    ignoreCache,\n    ignoreQueue,\n  }: MatchSourceOptions) {\n    const now = Date.now();\n    const data = this.data;\n    const queuedItems: Record<string, boolean> = {};\n    const promises: Promise<void | Record<string, T[]>>[] = [];\n\n    let matching: MatchPromises<T> | MatchQueue;\n    if (!ignoreQueue && this._matchPromises.has(name)) {\n      // @ts-expect-error TS(2322): Type 'MatchPromises<T> | undefined' is not assigna... Remove this comment to see the full error message\n      matching = this._matchPromises.get(name);\n      promises.push(matching.promise);\n      matching.queries.forEach((item) => {\n        queuedItems[item] = true;\n      });\n    }\n\n    let queue: MatchQueue;\n    if (!ignoreQueue && this._matchQueues.has(name)) {\n      // @ts-expect-error TS(2322): Type 'MatchQueue | undefined' is not assignable to... Remove this comment to see the full error message\n      queue = this._matchQueues.get(name);\n      promises.push(queue.promise);\n      queue.queries.forEach((item) => {\n        queuedItems[item] = true;\n      });\n    }\n\n    const newQueries = ignoreCache\n      ? queries\n      : filter(\n          (query) =>\n            !queuedItems[query] &&\n            (!data[query] ||\n              !data[query][name] ||\n              now - data[query][name]._t > this._noMatchTtl),\n          queries,\n        );\n\n    if (newQueries.length) {\n      if (ignoreQueue) {\n        promises.push(\n          this._fetchMatchResult({\n            name,\n            queries: newQueries,\n          }),\n        );\n        // @ts-expect-error TS(2454): Variable 'matching' is used before being assigned.\n      } else if (!matching) {\n        matching = {\n          promise: this._fetchMatchResult({\n            name,\n            queries: newQueries,\n          }),\n          queries: newQueries,\n        };\n        promises.push(matching.promise);\n        // @ts-expect-error TS(2454): Variable 'queue' is used before being assigned.\n      } else if (!queue) {\n        const promise = (async () => {\n          await matching.promise;\n          const promise = this._fetchMatchResult({\n            name,\n            // @ts-expect-error TS(2454): Variable 'queue' is used before being assigned.\n            queries: queue.queries,\n          });\n          this._matchQueues.delete(name);\n          await promise;\n        })();\n        queue = {\n          queries: newQueries,\n          promise,\n        };\n        this._matchQueues.set(name, queue);\n        promises.push(queue.promise);\n      } else {\n        queue.queries = queue.queries.concat(newQueries);\n      }\n    }\n    await Promise.all(promises);\n  }\n\n  /**\n   * insert matching result directly\n   */\n  @proxify\n  async insertMatching({ name, data, queries }: InsertMatchEntriesOptions<T>) {\n    this.insertMatchEntries({\n      data,\n      queries,\n      name,\n    });\n  }\n\n  @computed(({ data, ready, _searchProviders }: DataMatcher<T>) => [\n    data,\n    ready,\n    _searchProviders.size,\n  ])\n  get dataMapping() {\n    if (!this.ready || !this._searchProviders.size) return {};\n    const dataMap: Record<string, T[]> = {};\n    forEach((query) => {\n      const queryResult = this.data[query];\n      if (!queryResult) {\n        return;\n      }\n      let matchesList: T[] = [];\n      for (const [providerName] of this._searchProviders) {\n        if (\n          queryResult[providerName] &&\n          queryResult[providerName].data.length > 0\n        ) {\n          matchesList = matchesList.concat(queryResult[providerName].data);\n        }\n      }\n      if (matchesList.length > 0) {\n        dataMap[query] = matchesList;\n      }\n    }, Object.keys(this.data));\n    return dataMap;\n  }\n}\n\nexport { DataMatcher };\n"],"mappings":"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","ignoreList":[]}