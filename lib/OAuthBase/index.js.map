{"version":3,"sources":["lib/OAuthBase/index.ts"],"names":["DEFAULT_UI_OPTIONS","OAuthBase","deps","dep","optional","alert","auth","brand","locale","tabManager","redirectUri","extraUIOptions","options","_alert","ensureExist","call","_auth","_brand","_locale","_tabManager","_redirectUri","_reducer","actionTypes","_extraUIOptions","pending","ready","store","dispatch","type","init","initSuccess","callbackUri","refresh","query","_refreshWithCallbackQuery","_loginWithCallbackQuery","console","error","message","authMessages","accessDenied","internalError","danger","payload","code","access_token","login","accessToken","expiresIn","expires_in","endpointId","endpoint_id","tokenType","token_type","scope","tokenUri","token_uri","discoveryUri","discovery_uri","refreshImplicitToken","ObjectMap","prefixKeys","keys","baseActionTypes","name","getLoginUrl","brandId","id","state","authState","display","localeId","currentLocale","uiOptions","implicit","isImplicit","force","prompt","btoa","Date","now","status","oAuthReady","url","resolve","window","location","href","RcModule","required","proxify"],"mappings":"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","sourcesContent":["import url from 'url';\n\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport ensureExist from '@ringcentral-integration/commons/lib/ensureExist';\nimport proxify from '@ringcentral-integration/commons/lib/proxy/proxify';\nimport RcModule from '@ringcentral-integration/commons/lib/RcModule';\nimport required from '@ringcentral-integration/commons/lib/required';\nimport authMessages from '@ringcentral-integration/commons/modules/Auth/authMessages';\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\n\nimport parseCallbackUri from '../parseCallbackUri';\nimport { baseActionTypes } from './baseActionTypes';\nimport getOAuthBaseReducer from './getOAuthBaseReducer';\n\nconst DEFAULT_UI_OPTIONS = ['hide_remember_me', 'hide_tos'];\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Locale',\n    'Brand',\n    { dep: 'TabManager', optional: true },\n  ],\n})\nexport default class OAuthBase extends RcModule {\n  constructor({\n    alert,\n    auth,\n    brand,\n    locale,\n    tabManager,\n    redirectUri,\n    extraUIOptions = DEFAULT_UI_OPTIONS,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._alert = ensureExist.call(this, alert, 'alert');\n    this._auth = ensureExist.call(this, auth, 'auth');\n    this._brand = ensureExist.call(this, brand, 'brand');\n    this._locale = ensureExist.call(this, locale, 'locale');\n    this._tabManager = tabManager;\n    this._redirectUri = ensureExist.call(this, redirectUri, 'redirectUri');\n    this._reducer = getOAuthBaseReducer(this.actionTypes);\n    this._extraUIOptions = extraUIOptions;\n  }\n\n  get _actionTypes() {\n    return ObjectMap.prefixKeys(\n      [...ObjectMap.keys(baseActionTypes)],\n      this.name,\n    );\n  }\n\n  @required\n  get name() {\n    /* require implementation in descendent */\n    return null;\n  }\n\n  _onStateChange() {\n    if (\n      this.pending &&\n      this._auth.ready &&\n      this._locale.ready &&\n      this._alert.ready &&\n      (!this._tabManager || this._tabManager.ready)\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    }\n  }\n\n  @proxify\n  async _handleCallbackUri(callbackUri, refresh = false) {\n    try {\n      const query = parseCallbackUri(callbackUri);\n      if (refresh) {\n        await this._refreshWithCallbackQuery(query);\n      } else {\n        await this._loginWithCallbackQuery(query);\n      }\n    } catch (error) {\n      console.error('oauth error: ', error);\n      let message;\n      // Error handling standard in callback uri\n      // https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n      // Error handling standard in api response\n      // https://tools.ietf.org/html/rfc6749#section-4.1.2\n      switch (error.message) {\n        case 'invalid_request':\n        case 'unauthorized_client':\n        case 'access_denied':\n        case 'unsupported_response_type':\n        case 'invalid_scope':\n        case 'interaction_required':\n        case 'login_required':\n          message = authMessages.accessDenied;\n          break;\n        case 'server_error':\n        case 'temporarily_unavailable':\n        default:\n          message = authMessages.internalError;\n          break;\n      }\n      this._alert.danger({\n        message,\n        payload: error,\n      });\n    }\n  }\n\n  async _loginWithCallbackQuery(query) {\n    if (!(query.code || query.access_token)) {\n      return;\n    }\n    await this._auth.login({\n      code: query.code,\n      accessToken: query.access_token,\n      expiresIn: query.expires_in,\n      endpointId: query.endpoint_id,\n      redirectUri: this.redirectUri,\n      tokenType: query.token_type,\n      scope: query.scope,\n      tokenUri: query.token_uri,\n      discoveryUri: query.discovery_uri,\n    });\n  }\n\n  async _refreshWithCallbackQuery(query) {\n    if (!query.access_token) {\n      return;\n    }\n    await this._auth.refreshImplicitToken({\n      tokenType: query.token_type,\n      accessToken: query.access_token,\n      expiresIn: query.expires_in,\n      endpointId: query.endpoint_id,\n    });\n  }\n\n  @required\n  async prepareOAuth() {}\n\n  @required\n  async destroyOAuth() {}\n\n  @required\n  async openOAuthPage() {}\n\n  get oAuthUri() {\n    return this._auth.getLoginUrl({\n      redirectUri: this.redirectUri,\n      brandId: this._brand.id,\n      state: this.authState,\n      display: 'page',\n      localeId: this._locale.currentLocale,\n      uiOptions: this._extraUIOptions,\n      implicit: this._auth.isImplicit,\n      force: true,\n    });\n  }\n\n  get implicitRefreshOAuthUri() {\n    return this._auth.getLoginUrl({\n      redirectUri: this.redirectUri,\n      brandId: this._brand.id,\n      state: this.authState,\n      display: 'page',\n      prompt: 'none',\n      implicit: this._auth.isImplicit,\n    });\n  }\n\n  get authState() {\n    return btoa(Date.now());\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get oAuthReady() {\n    return this.state.oAuthReady;\n  }\n\n  get redirectUri() {\n    return url.resolve(window.location.href, this._redirectUri);\n  }\n}\n"],"file":"index.js"}