{"version":3,"sources":["lib/OAuthBase/getOAuthBaseReducer.ts"],"names":["getOAuthReadyReducer","types","state","type","setupOAuth","destroyOAuth","getOAuthBaseReducer","status","oAuthReady"],"mappings":";;;;;;;;;;AAAA;;AAEA;;;;AAEO,SAASA,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,SAAO,YAA6B;AAAA,QAA5BC,KAA4B,uEAApB,KAAoB;;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAClC,YAAQA,IAAR;AACE,WAAKF,KAAK,CAACG,UAAX;AACE,eAAO,IAAP;;AACF,WAAKH,KAAK,CAACI,YAAX;AACE,eAAO,KAAP;;AACF;AACE,eAAOH,KAAP;AANJ;AAQD,GATD;AAUD;;AACc,SAASI,mBAAT,CAA6BL,KAA7B,EAAoC;AACjD,SAAO,4BAAgB;AACrBM,IAAAA,MAAM,EAAE,wCAAuBN,KAAvB,CADa;AAErBO,IAAAA,UAAU,EAAER,oBAAoB,CAACC,KAAD;AAFX,GAAhB,CAAP;AAID","sourcesContent":["import { combineReducers } from 'redux';\n\nimport getModuleStatusReducer from '@ringcentral-integration/commons/lib/getModuleStatusReducer';\n\nexport function getOAuthReadyReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.setupOAuth:\n        return true;\n      case types.destroyOAuth:\n        return false;\n      default:\n        return state;\n    }\n  };\n}\nexport default function getOAuthBaseReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    oAuthReady: getOAuthReadyReducer(types),\n  });\n}\n"],"file":"getOAuthBaseReducer.js"}