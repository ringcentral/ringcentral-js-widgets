{"version":3,"file":"channel.js","names":["Channel","type","_classCallCheck","_mux","_type","_make","_createClass","key","value","select","actionType","handler","send","packet","_this","Promise","resolve","chrome","runtime","sendMessage","_objectSpread","broadcast","_this2","promises","tabs","query","length","forEach","tab","push","id","all","_this3","onMessage","addListener","request","sender","sendResponse","action","then","retval","err","console","error","exports"],"sources":["lib/channel.ts"],"sourcesContent":["type Handler = (request: any, sender: any) => void;\n\ntype Packet = {\n  [s: string]: any;\n};\nclass Channel {\n  _mux: {\n    [k: string]: Handler;\n  };\n  _type: string;\n  constructor(type: string) {\n    // action -> handler\n    this._mux = {};\n    this._type = type;\n    this._make();\n  }\n\n  select(actionType: string, handler: Handler) {\n    this._mux[actionType] = handler;\n    return this;\n  }\n\n  send(packet: Packet) {\n    return new Promise((resolve) => {\n      chrome.runtime.sendMessage({ type: this._type, ...packet }, resolve);\n    });\n  }\n\n  broadcast(packet: Packet) {\n    const promises: Promise<any>[] = [];\n    chrome.tabs.query({}, (tabs: any) => {\n      if (!tabs.length) return;\n      tabs.forEach((tab: any) => {\n        promises.push(\n          new Promise((resolve) => {\n            chrome.tabs.sendMessage(\n              tab.id,\n              { type: this._type, ...packet },\n              resolve,\n            );\n          }),\n        );\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  _make() {\n    chrome.runtime.onMessage.addListener(\n      (request: any, sender: any, sendResponse: any) => {\n        const { type, action } = request;\n        if (type === this._type) {\n          const handler = this._mux[action];\n          if (typeof handler === 'function') {\n            Promise.resolve(handler(request, sender))\n              .then((retval) => {\n                sendResponse(retval);\n              })\n              .catch((err) => console.error(err));\n            // Async\n            return true;\n          }\n        }\n        return false;\n      },\n    );\n  }\n}\n\nexport { Channel };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAKMA,OAAO;EAKX,SAAAA,QAAYC,IAAY,EAAE;IAAAC,eAAA,OAAAF,OAAA;IAAA,KAJ1BG,IAAI;IAAA,KAGJC,KAAK;IAEH;IACA,IAAI,CAACD,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACC,KAAK,GAAGH,IAAI;IACjB,IAAI,CAACI,KAAK,CAAC,CAAC;EACd;EAACC,YAAA,CAAAN,OAAA;IAAAO,GAAA;IAAAC,KAAA,WAAAC,OAEMC,UAAkB,EAAEC,OAAgB,EAAE;MAC3C,IAAI,CAACR,IAAI,CAACO,UAAU,CAAC,GAAGC,OAAO;MAC/B,OAAO,IAAI;IACb;EAAC;IAAAJ,GAAA;IAAAC,KAAA,WAAAI,KAEIC,MAAc,EAAE;MAAA,IAAAC,KAAA;MACnB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAK;QAC9BC,MAAM,CAACC,OAAO,CAACC,WAAW,CAAAC,aAAA;UAAGnB,IAAI,EAAEa,KAAI,CAACV;QAAK,GAAKS,MAAM,GAAIG,OAAO,CAAC;MACtE,CAAC,CAAC;IACJ;EAAC;IAAAT,GAAA;IAAAC,KAAA,WAAAa,UAESR,MAAc,EAAE;MAAA,IAAAS,MAAA;MACxB,IAAMC,QAAwB,GAAG,EAAE;MACnCN,MAAM,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE,UAACD,IAAS,EAAK;QACnC,IAAI,CAACA,IAAI,CAACE,MAAM,EAAE;QAClBF,IAAI,CAACG,OAAO,CAAC,UAACC,GAAQ,EAAK;UACzBL,QAAQ,CAACM,IAAI,CACX,IAAId,OAAO,CAAC,UAACC,OAAO,EAAK;YACvBC,MAAM,CAACO,IAAI,CAACL,WAAW,CACrBS,GAAG,CAACE,EAAE,EAAAV,aAAA;cACJnB,IAAI,EAAEqB,MAAI,CAAClB;YAAK,GAAKS,MAAM,GAC7BG,OACF,CAAC;UACH,CAAC,CACH,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOD,OAAO,CAACgB,GAAG,CAACR,QAAQ,CAAC;IAC9B;EAAC;IAAAhB,GAAA;IAAAC,KAAA,WAAAH,MAAA,EAEO;MAAA,IAAA2B,MAAA;MACNf,MAAM,CAACC,OAAO,CAACe,SAAS,CAACC,WAAW,CAClC,UAACC,OAAY,EAAEC,MAAW,EAAEC,YAAiB,EAAK;QAAA,IACxCpC,IAAI,GAAakC,OAAO,CAAxBlC,IAAI;UAAEqC,MAAM,GAAKH,OAAO,CAAlBG,MAAM;QACpB,IAAIrC,IAAI,KAAK+B,MAAI,CAAC5B,KAAK,EAAE;UACvB,IAAMO,OAAO,GAAGqB,MAAI,CAAC7B,IAAI,CAACmC,MAAM,CAAC;UACjC,IAAI,OAAO3B,OAAO,KAAK,UAAU,EAAE;YACjCI,OAAO,CAACC,OAAO,CAACL,OAAO,CAACwB,OAAO,EAAEC,MAAM,CAAC,CAAC,CACtCG,IAAI,CAAC,UAACC,MAAM,EAAK;cAChBH,YAAY,CAACG,MAAM,CAAC;YACtB,CAAC,CAAC,SACI,CAAC,UAACC,GAAG;cAAA,OAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;YAAA,EAAC;YACrC;YACA,OAAO,IAAI;UACb;QACF;QACA,OAAO,KAAK;MACd,CACF,CAAC;IACH;EAAC;EAAA,OAAAzC,OAAA;AAAA;AAAA4C,OAAA,CAAA5C,OAAA,GAAAA,OAAA"}