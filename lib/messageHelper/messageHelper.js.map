{"version":3,"sources":["lib/messageHelper/messageHelper.ts"],"names":["filterNumbers","numbers","filterNumber","filter","number","phoneNumber","extensionNumber","messageIsDeleted","message","availability","messageIsTextMessage","type","messageTypes","fax","voiceMail","messageIsFax","messageIsVoicemail","messageIsAcceptable","messageStatus","getMessageType","text","getMyNumberFromMessage","myExtensionNumber","direction","from","pager","myNumber","to","find","length","uniqueRecipients","recipients","recipientMap","forEach","recipient","key","Object","values","getRecipientNumbersFromMessage","fromRecipients","sms","allRecipients","concat","push","getRecipients","getNumbersFromMessage","contacts","slice","correspondents","contact","myPhoneLength","self","inbound","fromField","Array","isArray","toField","sortByDate","a","b","ta","Date","creationTime","getTime","tb","sortSearchResults","matchOrder","getVoicemailAttachment","accessToken","attachment","attachments","duration","vmDuration","uri","decodeURIComponent","getFaxAttachment","getMMSAttachments","map","getConversationId","record","conversationId","conversation","id","toString","sortByCreationTime","normalizeRecord","newRecord","lastModifiedTime","messageIsUnread","readStatus","filterMessages","messages","records","sort","groupMessages","faxRecords","voiceMailRecords","textRecords","voice"],"mappings":"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","sourcesContent":["import {\n  GetMessageInfoResponse,\n  MessageAttachmentInfo,\n} from '@rc-ex/core/definitions';\n\nimport { messageTypes } from '../../enums/messageTypes';\nimport { Message } from '../../interfaces/MessageStore.model';\nimport removeUri from '../removeUri';\nimport {\n  Correspondent,\n  FaxAttachment,\n  SortEntity,\n  VoicemailAttachment,\n} from './messageHelper.interface';\n\nexport function filterNumbers(\n  numbers: Correspondent[],\n  filterNumber: Correspondent,\n) {\n  return numbers.filter((number) => {\n    if (filterNumber.phoneNumber) {\n      return filterNumber.phoneNumber !== number.phoneNumber;\n    }\n    return filterNumber.extensionNumber !== number.extensionNumber;\n  });\n}\n\nexport function messageIsDeleted(message: Message) {\n  return (\n    message.availability === 'Deleted' || message.availability === 'Purged'\n  );\n}\n\nexport function messageIsTextMessage(message: Message) {\n  return (\n    message.type !== messageTypes.fax && message.type !== messageTypes.voiceMail\n  );\n}\n\nexport function messageIsFax(message: Message) {\n  return message.type === messageTypes.fax;\n}\n\nexport function messageIsVoicemail(message: Message) {\n  return message.type === messageTypes.voiceMail;\n}\n\nexport function messageIsAcceptable(message: Message) {\n  // do not show submitted faxes or sending failed faxes now\n  // do not show deleted messages\n  return (\n    (message.type !== messageTypes.fax ||\n      (message.messageStatus !== 'Queued' &&\n        message.messageStatus !== 'SendingFailed')) &&\n    !messageIsDeleted(message)\n  );\n}\n\nexport function getMessageType(message: Message) {\n  if (messageIsTextMessage(message)) {\n    return messageTypes.text;\n  }\n  if (messageIsVoicemail(message)) {\n    return messageTypes.voiceMail;\n  }\n  if (messageIsFax(message)) {\n    return messageTypes.fax;\n  }\n  return null;\n}\n\nexport function getMyNumberFromMessage({\n  message,\n  myExtensionNumber,\n}: {\n  message: Message;\n  myExtensionNumber: string;\n}) {\n  if (!message) {\n    return null;\n  }\n  if (message.direction === 'Outbound') {\n    return message.from;\n  }\n  if (message.type === messageTypes.pager) {\n    const myNumber = message.to.find(\n      (number) => number.extensionNumber === myExtensionNumber,\n    );\n    if (myNumber) {\n      return myNumber;\n    }\n    return { extensionNumber: myExtensionNumber };\n  }\n  return message.to && message.to.length >= 0 && message.to[0];\n}\n\nexport function uniqueRecipients(\n  recipients: Correspondent[],\n  filter: (recipient: Correspondent) => boolean = () => true,\n) {\n  const recipientMap: { [key: string]: Correspondent } = {};\n  recipients.forEach((recipient) => {\n    if (filter(recipient)) {\n      const key = recipient.extensionNumber || recipient.phoneNumber;\n      recipientMap[key] = recipient;\n    }\n  });\n  return Object.values(recipientMap);\n}\n\nexport function getRecipientNumbersFromMessage({\n  message,\n  myNumber,\n}: {\n  message: Message;\n  myNumber: Correspondent;\n}) {\n  if (!message) {\n    return [];\n  }\n  const fromRecipients = (message.from && [message.from]) || [];\n  if (message.type === messageTypes.sms) {\n    if (message.direction === 'Outbound') {\n      return message.to;\n    }\n    return fromRecipients;\n  }\n  const allRecipients = fromRecipients.concat(message.to);\n  const recipients = filterNumbers(allRecipients, myNumber);\n  if (recipients.length === 0) {\n    recipients.push(myNumber);\n  }\n  return uniqueRecipients(recipients);\n}\n\nexport function getRecipients({\n  message,\n  myExtensionNumber,\n}: {\n  message: Message;\n  myExtensionNumber: string;\n}) {\n  const myNumber = getMyNumberFromMessage({\n    message,\n    myExtensionNumber,\n  });\n  return getRecipientNumbersFromMessage({\n    message,\n    myNumber,\n  });\n}\n\nexport function getNumbersFromMessage({\n  extensionNumber,\n  message,\n}: {\n  extensionNumber: string;\n  message: Message;\n}) {\n  if (!message) {\n    return {};\n  }\n  if (message.type === messageTypes.pager) {\n    // It is safer and simpler to just put all known contacts into array and filter self out\n    const contacts = (message.to && message.to.slice()) || [];\n    if (message.from) contacts.push(message.from);\n    const correspondents: Correspondent[] = uniqueRecipients(\n      contacts,\n      (contact) => contact.extensionNumber !== extensionNumber,\n    );\n    // to support send message to myself.\n    if (correspondents && correspondents.length === 0) {\n      const myPhoneLength = contacts.filter(\n        (contact) => contact.extensionNumber === extensionNumber,\n      ).length;\n      if (myPhoneLength > 0 && contacts.length === myPhoneLength) {\n        correspondents.push({\n          extensionNumber,\n        });\n      }\n    }\n    return {\n      self: {\n        extensionNumber,\n      },\n      correspondents: correspondents || [],\n    };\n  }\n\n  const inbound = message.direction === 'Inbound';\n  const fromField =\n    (message.from &&\n      (Array.isArray(message.from) ? message.from : [message.from])) ||\n    [];\n  const toField =\n    (message.to && (Array.isArray(message.to) ? message.to : [message.to])) ||\n    [];\n  if (inbound) {\n    return {\n      self: toField[0],\n      correspondents: fromField,\n    };\n  }\n  return {\n    self: fromField[0],\n    correspondents: toField,\n  };\n}\n\nexport function sortByDate(a: SortEntity, b: SortEntity) {\n  const ta = new Date(a.creationTime).getTime();\n  const tb = new Date(b.creationTime).getTime();\n  return tb - ta;\n}\n\nexport function sortSearchResults(a: SortEntity, b: SortEntity) {\n  if (a.matchOrder === b.matchOrder) return sortByDate(a, b);\n  return a.matchOrder > b.matchOrder ? 1 : -1;\n}\n\nexport function getVoicemailAttachment(\n  message: Message,\n  accessToken: string,\n): VoicemailAttachment {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return { duration: 0 };\n  }\n  const duration = attachment.vmDuration;\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n    accessToken,\n  )}`;\n  return {\n    duration,\n    uri,\n  };\n}\n\nexport function getFaxAttachment(\n  message: Message,\n  accessToken: string,\n): FaxAttachment {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return {};\n  }\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n    accessToken,\n  )}`;\n  return {\n    uri,\n  };\n}\n\nexport function getMMSAttachments(\n  message: Message,\n  accessToken: string,\n): MessageAttachmentInfo[] {\n  if (!message.attachments || message.attachments.length === 0) {\n    return [];\n  }\n  const attachments = message.attachments.filter(\n    (a) => a.type === 'MmsAttachment',\n  );\n  return attachments.map((attachment) => {\n    const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n      accessToken,\n    )}`;\n    return {\n      ...attachment,\n      uri,\n    };\n  });\n}\n\nexport function getConversationId(record: GetMessageInfoResponse) {\n  const conversationId =\n    (record.conversation && record.conversation.id) || record.id;\n  return conversationId.toString();\n}\n\nexport function sortByCreationTime<T extends { creationTime: number }>(\n  a: T,\n  b: T,\n) {\n  if (a.creationTime === b.creationTime) return 0;\n  return a.creationTime > b.creationTime ? -1 : 1;\n}\n\nexport function normalizeRecord(record: GetMessageInfoResponse): Message {\n  const newRecord = removeUri(record) as GetMessageInfoResponse;\n  const conversationId = getConversationId(record);\n  delete newRecord.conversation;\n  return {\n    ...newRecord,\n    creationTime: new Date(record.creationTime).getTime(),\n    lastModifiedTime: new Date(record.lastModifiedTime).getTime(),\n    conversationId,\n  };\n}\n\nexport function messageIsUnread(message: Message) {\n  return (\n    message.direction === 'Inbound' &&\n    message.readStatus !== 'Read' &&\n    !messageIsDeleted(message)\n  );\n}\n\n/** salesforce and dynamics slice the message numbers to reduce the pressure of contact match\n * Fax: 100\n * Voice Mail: 100\n * total(SMS, Pager, Text): 250\n * @param {*} records\n */\nexport const filterMessages = (messages: Message[]) => {\n  function sortByCreationTime(records: Message[]) {\n    return records.sort((a, b) => sortByDate(a, b));\n  }\n  function groupMessages(records: Message[]) {\n    const faxRecords = records.filter(messageIsFax);\n    const voiceMailRecords = records.filter(messageIsVoicemail);\n    const textRecords = records.filter(messageIsTextMessage);\n    return {\n      fax: sortByCreationTime(faxRecords),\n      voice: sortByCreationTime(voiceMailRecords),\n      text: sortByCreationTime(textRecords),\n    };\n  }\n\n  const { fax, voice, text } = groupMessages(messages);\n\n  return [].concat(fax.slice(0, 100), voice.slice(0, 100), text.slice(0, 250));\n};\n"],"file":"messageHelper.js"}