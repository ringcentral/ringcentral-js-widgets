{"version":3,"file":"messageHelper.js","names":["_messageTypes","require","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","iter","iterator","isArray","len","arr2","filterNumbers","numbers","filterNumber","number","phoneNumber","extensionNumber","messageIsDeleted","message","availability","messageIsTextMessage","type","messageTypes","fax","voiceMail","messageIsFax","messageIsVoicemail","messageIsAcceptable","messageStatus","getMessageType","text","getMyNumberFromMessage","_ref","myExtensionNumber","direction","pager","myNumber","to","find","targetToField","uniqueRecipients","recipients","recipientMap","recipient","values","getRecipientNumbersFromMessage","_ref2","fromRecipients","toRecipients","sms","toFieldWithoutMyNumber","concat","allRecipients","getRecipients","_ref3","getNumbersFromMessage","_ref4","contacts","correspondents","contact","myPhoneLength","self","inbound","fromField","toField","it","sortByDate","a","b","ta","Date","creationTime","getTime","tb","sortSearchResults","matchOrder","getVoicemailAttachment","accessToken","attachment","attachments","duration","vmDuration","uri","decodeURIComponent","getFaxAttachment","getMMSAttachments","map","getConversationId","record","conversationId","conversation","id","sortByCreationTime","normalizeRecord","newRecord","lastModifiedTime","messageIsUnread","readStatus","directionlessMessageIsUnread","preUpdateReadStatus","filterMessages","messages","records","sort","groupMessages","faxRecords","voiceMailRecords","textRecords","voice","_groupMessages","exports"],"sources":["lib/messageHelper/messageHelper.ts"],"sourcesContent":["import type GetMessageInfoResponse from '@rc-ex/core/lib/definitions/GetMessageInfoResponse';\nimport type MessageAttachmentInfo from '@rc-ex/core/lib/definitions/MessageAttachmentInfo';\nimport type MessageStoreCallerInfoResponseFrom from '@rc-ex/core/lib/definitions/MessageStoreCallerInfoResponseFrom';\nimport type MessageStoreCallerInfoResponseTo from '@rc-ex/core/lib/definitions/MessageStoreCallerInfoResponseTo';\n\nimport { messageTypes } from '../../enums/messageTypes';\nimport type { Message } from '../../interfaces/MessageStore.model';\nimport type {\n  Correspondent,\n  FaxAttachment,\n  SortEntity,\n  VoicemailAttachment,\n} from './messageHelper.interface';\n\nexport function filterNumbers(\n  numbers: Correspondent[],\n  filterNumber: Correspondent,\n) {\n  return numbers.filter((number) => {\n    if (filterNumber.phoneNumber) {\n      return filterNumber.phoneNumber !== number.phoneNumber;\n    }\n    return filterNumber.extensionNumber !== number.extensionNumber;\n  });\n}\n\nexport function messageIsDeleted(message: Message) {\n  return (\n    message.availability === 'Deleted' || message.availability === 'Purged'\n  );\n}\n\nexport function messageIsTextMessage(message: Message) {\n  return (\n    message.type !== messageTypes.fax && message.type !== messageTypes.voiceMail\n  );\n}\n\nexport function messageIsFax(message: Message) {\n  return message.type === messageTypes.fax;\n}\n\nexport function messageIsVoicemail(message: Message) {\n  return message.type === messageTypes.voiceMail;\n}\n\nexport function messageIsAcceptable(message: Message) {\n  // do not show submitted faxes or sending failed faxes now\n  // do not show deleted messages\n  return (\n    (message.type !== messageTypes.fax ||\n      (message.messageStatus !== 'Queued' &&\n        message.messageStatus !== 'SendingFailed')) &&\n    !messageIsDeleted(message)\n  );\n}\n\nexport function getMessageType(message: Message) {\n  if (messageIsTextMessage(message)) {\n    return messageTypes.text;\n  }\n  if (messageIsVoicemail(message)) {\n    return messageTypes.voiceMail;\n  }\n  if (messageIsFax(message)) {\n    return messageTypes.fax;\n  }\n  return null;\n}\n\nexport function getMyNumberFromMessage({\n  message,\n  myExtensionNumber,\n}: {\n  message: Pick<Message, 'direction' | 'from' | 'to' | 'type'>;\n  myExtensionNumber: string;\n}) {\n  if (!message) {\n    return null;\n  }\n  if (message.direction === 'Outbound') {\n    return message.from;\n  }\n  if (message.type === messageTypes.pager) {\n    const myNumber = message.to!.find(\n      (number) => number.extensionNumber === myExtensionNumber,\n    );\n    if (myNumber) {\n      return myNumber;\n    }\n    return { extensionNumber: myExtensionNumber };\n  }\n\n  // Sometimes the target sender is not the 1st item of `to` filed in the message.\n  const targetToField = message.to;\n  if (targetToField && targetToField.length > 1) {\n    return targetToField.find((to) => to.target);\n  }\n  return (targetToField && targetToField[0]) || null;\n}\n\nexport function uniqueRecipients(\n  recipients: Correspondent[],\n  filter: (recipient: Correspondent) => boolean = () => true,\n) {\n  const recipientMap: { [key: string]: Correspondent } = {};\n  recipients.forEach((recipient) => {\n    if (filter(recipient)) {\n      const key = recipient.extensionNumber || recipient.phoneNumber;\n      recipientMap[key!] = recipient;\n    }\n  });\n  return Object.values(recipientMap);\n}\n\ntype RecipientNumbers = MessageStoreCallerInfoResponseTo[] &\n  MessageStoreCallerInfoResponseFrom[];\nexport function getRecipientNumbersFromMessage({\n  message,\n  myNumber,\n}: {\n  message: Pick<Message, 'direction' | 'from' | 'to' | 'type'>;\n  myNumber: Correspondent;\n}): RecipientNumbers {\n  if (!message) {\n    return [];\n  }\n\n  const fromRecipients = (message.from && [message.from]) || [];\n  const toRecipients = message.to || [];\n\n  if (message.type === messageTypes.sms) {\n    if (message.direction === 'Outbound') {\n      return toRecipients;\n    }\n\n    if (toRecipients.length > 1) {\n      const toFieldWithoutMyNumber = filterNumbers(toRecipients, myNumber);\n      return [...toFieldWithoutMyNumber, ...fromRecipients];\n    }\n\n    return fromRecipients;\n  }\n  const allRecipients = fromRecipients.concat(message.to!);\n  const recipients = filterNumbers(allRecipients, myNumber);\n  if (recipients.length === 0) {\n    recipients.push(myNumber);\n  }\n  return uniqueRecipients(recipients);\n}\n\nexport function getRecipients({\n  message,\n  myExtensionNumber,\n}: {\n  message: Message;\n  myExtensionNumber: string;\n}) {\n  const myNumber = getMyNumberFromMessage({\n    message,\n    myExtensionNumber,\n  });\n\n  if (myNumber) {\n    return getRecipientNumbersFromMessage({\n      message,\n      myNumber,\n    });\n  }\n\n  return [];\n}\n\nexport function getNumbersFromMessage({\n  extensionNumber,\n  message,\n}: {\n  extensionNumber: string;\n  message: Message;\n}) {\n  if (!message) {\n    return {};\n  }\n  if (message.type === messageTypes.pager) {\n    // It is safer and simpler to just put all known contacts into array and filter self out\n    const contacts = (message.to && message.to.slice()) || [];\n    if (message.from) contacts.push(message.from);\n    const correspondents: Correspondent[] = uniqueRecipients(\n      contacts,\n      (contact) => contact.extensionNumber !== extensionNumber,\n    );\n    // to support send message to myself.\n    if (correspondents && correspondents.length === 0) {\n      const myPhoneLength = contacts.filter(\n        (contact) => contact.extensionNumber === extensionNumber,\n      ).length;\n      if (myPhoneLength > 0 && contacts.length === myPhoneLength) {\n        correspondents.push({\n          extensionNumber,\n        });\n      }\n    }\n    return {\n      self: {\n        extensionNumber,\n      },\n      correspondents: correspondents || [],\n    };\n  }\n\n  const inbound = message.direction === 'Inbound';\n  const fromField =\n    (message.from &&\n      (Array.isArray(message.from) ? message.from : [message.from])) ||\n    [];\n  const toField =\n    (message.to && (Array.isArray(message.to) ? message.to : [message.to])) ||\n    [];\n  if (inbound) {\n    const targetToField =\n      toField.length > 1 ? toField.find((to) => to.target) : toField[0];\n    return {\n      self: targetToField,\n      correspondents: [\n        // support group sms\n        ...fromField,\n        ...toField.filter(\n          (it) =>\n            (it.phoneNumber &&\n              targetToField?.phoneNumber &&\n              it.phoneNumber !== targetToField?.phoneNumber) ||\n            (targetToField?.extensionNumber &&\n              it.extensionNumber &&\n              it.extensionNumber !== targetToField.extensionNumber),\n        ),\n      ],\n    };\n  }\n  return {\n    self: fromField[0],\n    correspondents: toField,\n  };\n}\n\nexport function sortByDate(a: SortEntity, b: SortEntity) {\n  const ta = new Date(a.creationTime).getTime();\n  const tb = new Date(b.creationTime).getTime();\n  return tb - ta;\n}\n\nexport function sortSearchResults(a: SortEntity, b: SortEntity) {\n  if (a.matchOrder === b.matchOrder) return sortByDate(a, b);\n  return a.matchOrder! > b.matchOrder! ? 1 : -1;\n}\n\nexport function getVoicemailAttachment(\n  message: Message,\n  accessToken: string,\n): VoicemailAttachment {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return { duration: 0 };\n  }\n  const duration = attachment.vmDuration;\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n    accessToken,\n  )}`;\n  return {\n    duration,\n    uri,\n  };\n}\n\nexport function getFaxAttachment(\n  message: Message,\n  accessToken: string,\n): FaxAttachment {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return {};\n  }\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n    accessToken,\n  )}`;\n  return {\n    uri,\n  };\n}\n\nexport function getMMSAttachments(\n  message: Message,\n  accessToken: string,\n): MessageAttachmentInfo[] {\n  if (!message.attachments || message.attachments.length === 0) {\n    return [];\n  }\n  const attachments = message.attachments.filter(\n    (a) => a.type === 'MmsAttachment',\n  );\n  return attachments.map((attachment) => {\n    const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n      accessToken,\n    )}&shouldCache=true`;\n    return {\n      ...attachment,\n      uri,\n    };\n  });\n}\n\nexport function getConversationId(record: GetMessageInfoResponse) {\n  const conversationId =\n    (record.conversation && record.conversation.id) || record.id;\n  return conversationId?.toString();\n}\n\nexport function sortByCreationTime<T extends { creationTime?: number }>(\n  a: T,\n  b: T,\n) {\n  if (a.creationTime === b.creationTime) return 0;\n\n  return a.creationTime &&\n    b.creationTime &&\n    // make sure creationTime exist\n    a.creationTime > b.creationTime\n    ? -1\n    : 1;\n}\n\nexport function normalizeRecord(record: GetMessageInfoResponse): Message {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { uri, ...newRecord } = record;\n  const conversationId = getConversationId(record);\n  delete newRecord.conversation;\n\n  return {\n    ...newRecord,\n    creationTime: record.creationTime\n      ? new Date(record.creationTime).getTime()\n      : undefined,\n    lastModifiedTime: record.lastModifiedTime\n      ? new Date(record.lastModifiedTime).getTime()\n      : undefined,\n    conversationId,\n  };\n}\n\nexport function messageIsUnread(message: Message) {\n  return (\n    message.direction === 'Inbound' &&\n    message.readStatus !== 'Read' &&\n    !messageIsDeleted(message)\n  );\n}\n\nexport function directionlessMessageIsUnread(\n  message: Message & { preUpdateReadStatus?: Pick<Message, 'readStatus'> },\n) {\n  return (\n    (message.preUpdateReadStatus || message.readStatus) !== 'Read' &&\n    !messageIsDeleted(message)\n  );\n}\n\n/** salesforce and dynamics slice the message numbers to reduce the pressure of contact match\n * Fax: 100\n * Voice Mail: 100\n * total(SMS, Pager, Text): 250\n * @param {*} records\n */\nexport const filterMessages = (messages: Message[]) => {\n  function sortByCreationTime(records: Message[]) {\n    return records.sort((a, b) => sortByDate(a as any, b as any));\n  }\n  function groupMessages(records: Message[]) {\n    const faxRecords = records.filter(messageIsFax);\n    const voiceMailRecords = records.filter(messageIsVoicemail);\n    const textRecords = records.filter(messageIsTextMessage);\n    return {\n      fax: sortByCreationTime(faxRecords),\n      voice: sortByCreationTime(voiceMailRecords),\n      text: sortByCreationTime(textRecords),\n    };\n  }\n\n  const { fax, voice, text } = groupMessages(messages);\n\n  return [...fax.slice(0, 100), ...voice.slice(0, 100), ...text.slice(0, 250)];\n};\n"],"mappings":"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"}