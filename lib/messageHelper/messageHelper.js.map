{"version":3,"file":"messageHelper.js","names":["_messageTypes","require","_objectWithoutProperties","e","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","hasOwnProperty","ownKeys","keys","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_toPrimitive","_typeof","Symbol","toPrimitive","TypeError","String","Number","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","a","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","iterator","isArray","filterNumbers","numbers","filterNumber","number","phoneNumber","extensionNumber","messageIsDeleted","message","availability","messageIsTextMessage","type","messageTypes","fax","voiceMail","messageIsFax","messageIsVoicemail","messageIsAcceptable","messageStatus","getMessageType","text","getMyNumberFromMessage","_ref","myExtensionNumber","direction","pager","myNumber","to","find","targetToField","target","uniqueRecipients","recipients","undefined","recipientMap","recipient","key","values","getRecipientNumbersFromMessage","_ref2","fromRecipients","toRecipients","sms","toFieldWithoutMyNumber","concat","allRecipients","getRecipients","_ref3","getNumbersFromMessage","_ref4","contacts","correspondents","contact","myPhoneLength","self","inbound","fromField","toField","it","sortByDate","b","ta","Date","creationTime","getTime","tb","sortSearchResults","matchOrder","getVoicemailAttachment","accessToken","attachment","attachments","duration","vmDuration","uri","decodeURIComponent","getFaxAttachment","getMMSAttachments","map","getConversationId","record","conversationId","conversation","id","sortByCreationTime","normalizeInstantEvent","event","_ref5","body","_ref5$id","_ref5$conversationId","normalizeRecord","newRecord","lastModifiedTime","messageIsUnread","readStatus","directionlessMessageIsUnread","preUpdateReadStatus","filterMessages","messages","records","sort","groupMessages","faxRecords","voiceMailRecords","textRecords","voice","_groupMessages","exports"],"sources":["lib/messageHelper/messageHelper.ts"],"sourcesContent":["import type GetMessageInfoResponse from '@rc-ex/core/lib/definitions/GetMessageInfoResponse';\nimport type InstantMessageEvent from '@rc-ex/core/lib/definitions/InstantMessageEvent';\nimport type MessageAttachmentInfo from '@rc-ex/core/lib/definitions/MessageAttachmentInfo';\nimport type MessageStoreCallerInfoResponseFrom from '@rc-ex/core/lib/definitions/MessageStoreCallerInfoResponseFrom';\nimport type MessageStoreCallerInfoResponseTo from '@rc-ex/core/lib/definitions/MessageStoreCallerInfoResponseTo';\n\nimport { messageTypes } from '../../enums/messageTypes';\nimport type { Message } from '../../interfaces/MessageStore.model';\n\nimport type {\n  Correspondent,\n  FaxAttachment,\n  SortEntity,\n  VoicemailAttachment,\n} from './messageHelper.interface';\n\nexport function filterNumbers(\n  numbers: Correspondent[],\n  filterNumber: Correspondent,\n) {\n  return numbers.filter((number) => {\n    if (filterNumber.phoneNumber) {\n      return filterNumber.phoneNumber !== number.phoneNumber;\n    }\n    return filterNumber.extensionNumber !== number.extensionNumber;\n  });\n}\n\nexport function messageIsDeleted(message: Message) {\n  return (\n    message.availability === 'Deleted' || message.availability === 'Purged'\n  );\n}\n\nexport function messageIsTextMessage(message: Message) {\n  return (\n    message.type !== messageTypes.fax && message.type !== messageTypes.voiceMail\n  );\n}\n\nexport function messageIsFax(message: Message) {\n  return message.type === messageTypes.fax;\n}\n\nexport function messageIsVoicemail(message: Message) {\n  return message.type === messageTypes.voiceMail;\n}\n\nexport function messageIsAcceptable(message: Message) {\n  // do not show submitted faxes or sending failed faxes now\n  // do not show deleted messages\n  return (\n    (message.type !== messageTypes.fax ||\n      (message.messageStatus !== 'Queued' &&\n        message.messageStatus !== 'SendingFailed')) &&\n    !messageIsDeleted(message)\n  );\n}\n\nexport function getMessageType(message: Message) {\n  if (messageIsTextMessage(message)) {\n    return messageTypes.text;\n  }\n  if (messageIsVoicemail(message)) {\n    return messageTypes.voiceMail;\n  }\n  if (messageIsFax(message)) {\n    return messageTypes.fax;\n  }\n  return null;\n}\n\nexport function getMyNumberFromMessage({\n  message,\n  myExtensionNumber,\n}: {\n  message: Pick<Message, 'direction' | 'from' | 'to' | 'type'>;\n  myExtensionNumber: string;\n}) {\n  if (!message) {\n    return null;\n  }\n  if (message.direction === 'Outbound') {\n    return message.from;\n  }\n  if (message.type === messageTypes.pager) {\n    const myNumber = message.to!.find(\n      (number) => number.extensionNumber === myExtensionNumber,\n    );\n    if (myNumber) {\n      return myNumber;\n    }\n    return { extensionNumber: myExtensionNumber };\n  }\n\n  // Sometimes the target sender is not the 1st item of `to` filed in the message.\n  const targetToField = message.to;\n  if (targetToField && targetToField.length > 1) {\n    return targetToField.find((to) => to.target);\n  }\n  return (targetToField && targetToField[0]) || null;\n}\n\nexport function uniqueRecipients(\n  recipients: Correspondent[],\n  filter: (recipient: Correspondent) => boolean = () => true,\n) {\n  const recipientMap: { [key: string]: Correspondent } = {};\n  recipients.forEach((recipient) => {\n    if (filter(recipient)) {\n      const key = recipient.extensionNumber || recipient.phoneNumber;\n      recipientMap[key!] = recipient;\n    }\n  });\n  return Object.values(recipientMap);\n}\n\ntype RecipientNumbers = MessageStoreCallerInfoResponseTo[] &\n  MessageStoreCallerInfoResponseFrom[];\nexport function getRecipientNumbersFromMessage({\n  message,\n  myNumber,\n}: {\n  message: Pick<Message, 'direction' | 'from' | 'to' | 'type'>;\n  myNumber: Correspondent;\n}): RecipientNumbers {\n  if (!message) {\n    return [];\n  }\n\n  const fromRecipients = (message.from && [message.from]) || [];\n  const toRecipients = message.to || [];\n\n  if (message.type === messageTypes.sms) {\n    if (message.direction === 'Outbound') {\n      return toRecipients;\n    }\n\n    if (toRecipients.length > 1) {\n      const toFieldWithoutMyNumber = filterNumbers(toRecipients, myNumber);\n      return [...toFieldWithoutMyNumber, ...fromRecipients];\n    }\n\n    return fromRecipients;\n  }\n  const allRecipients = fromRecipients.concat(message.to!);\n  const recipients = filterNumbers(allRecipients, myNumber);\n  if (recipients.length === 0) {\n    recipients.push(myNumber);\n  }\n  return uniqueRecipients(recipients);\n}\n\nexport function getRecipients({\n  message,\n  myExtensionNumber,\n}: {\n  message: Message;\n  myExtensionNumber: string;\n}) {\n  const myNumber = getMyNumberFromMessage({\n    message,\n    myExtensionNumber,\n  });\n\n  if (myNumber) {\n    return getRecipientNumbersFromMessage({\n      message,\n      myNumber,\n    });\n  }\n\n  return [];\n}\n\nexport function getNumbersFromMessage({\n  extensionNumber,\n  message,\n}: {\n  extensionNumber: string;\n  message: Message;\n}) {\n  if (!message) {\n    return {};\n  }\n  if (message.type === messageTypes.pager) {\n    // It is safer and simpler to just put all known contacts into array and filter self out\n    const contacts = (message.to && message.to.slice()) || [];\n    if (message.from) contacts.push(message.from);\n    const correspondents: Correspondent[] = uniqueRecipients(\n      contacts,\n      (contact) => contact.extensionNumber !== extensionNumber,\n    );\n    // to support send message to myself.\n    if (correspondents && correspondents.length === 0) {\n      const myPhoneLength = contacts.filter(\n        (contact) => contact.extensionNumber === extensionNumber,\n      ).length;\n      if (myPhoneLength > 0 && contacts.length === myPhoneLength) {\n        correspondents.push({\n          extensionNumber,\n        });\n      }\n    }\n    return {\n      self: {\n        extensionNumber,\n      },\n      correspondents: correspondents || [],\n    };\n  }\n\n  const inbound = message.direction === 'Inbound';\n  const fromField =\n    (message.from &&\n      (Array.isArray(message.from) ? message.from : [message.from])) ||\n    [];\n  const toField =\n    (message.to && (Array.isArray(message.to) ? message.to : [message.to])) ||\n    [];\n  if (inbound) {\n    const targetToField =\n      toField.length > 1 ? toField.find((to) => to.target) : toField[0];\n    return {\n      self: targetToField,\n      correspondents: [\n        // support group sms\n        ...fromField,\n        ...toField.filter(\n          (it) =>\n            (it.phoneNumber &&\n              targetToField?.phoneNumber &&\n              it.phoneNumber !== targetToField?.phoneNumber) ||\n            (targetToField?.extensionNumber &&\n              it.extensionNumber &&\n              it.extensionNumber !== targetToField.extensionNumber),\n        ),\n      ],\n    };\n  }\n  return {\n    self: fromField[0],\n    correspondents: toField,\n  };\n}\n\nexport function sortByDate(a: SortEntity, b: SortEntity) {\n  const ta = new Date(a.creationTime!).getTime();\n  const tb = new Date(b.creationTime!).getTime();\n  return tb - ta;\n}\n\nexport function sortSearchResults(a: SortEntity, b: SortEntity) {\n  if (a.matchOrder === b.matchOrder) return sortByDate(a, b);\n  return a.matchOrder! > b.matchOrder! ? 1 : -1;\n}\n\nexport function getVoicemailAttachment(\n  message: Message,\n  accessToken: string,\n): VoicemailAttachment {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return { duration: 0 };\n  }\n  const duration = attachment.vmDuration;\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n    accessToken,\n  )}`;\n  return {\n    duration,\n    uri,\n  };\n}\n\nexport function getFaxAttachment(\n  message: Message,\n  accessToken: string,\n): FaxAttachment {\n  const attachment = message.attachments && message.attachments[0];\n  if (!attachment) {\n    return {};\n  }\n  const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n    accessToken,\n  )}`;\n  return {\n    uri,\n  };\n}\n\nexport function getMMSAttachments(\n  message: Message,\n  accessToken: string,\n): MessageAttachmentInfo[] {\n  if (!message.attachments || message.attachments.length === 0) {\n    return [];\n  }\n  const attachments = message.attachments.filter(\n    (a) => a.type === 'MmsAttachment',\n  );\n  return attachments.map((attachment) => {\n    const uri = `${attachment.uri}?access_token=${decodeURIComponent(\n      accessToken,\n    )}&shouldCache=true`;\n    return {\n      ...attachment,\n      uri,\n    };\n  });\n}\n\nexport function getConversationId(record: GetMessageInfoResponse) {\n  const conversationId =\n    (record.conversation && record.conversation.id) || record.id;\n  return conversationId?.toString();\n}\n\nexport function sortByCreationTime<T extends { creationTime?: number }>(\n  a: T,\n  b: T,\n) {\n  if (a.creationTime === b.creationTime) return 0;\n\n  return a.creationTime &&\n    b.creationTime &&\n    // make sure creationTime exist\n    a.creationTime > b.creationTime\n    ? -1\n    : 1;\n}\n\nexport function normalizeInstantEvent(\n  event: InstantMessageEvent,\n): GetMessageInfoResponse {\n  const { id = '', conversationId = '', type, ...message } = event.body!;\n  return {\n    ...message,\n    id: Number(id),\n    conversationId: Number(conversationId),\n    type: type as any,\n  };\n}\n\nexport function normalizeRecord(record: GetMessageInfoResponse): Message {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { uri, ...newRecord } = record;\n  const conversationId = getConversationId(record);\n  delete newRecord.conversation;\n\n  return {\n    ...newRecord,\n    creationTime: record.creationTime\n      ? new Date(record.creationTime).getTime()\n      : undefined,\n    lastModifiedTime: record.lastModifiedTime\n      ? new Date(record.lastModifiedTime).getTime()\n      : undefined,\n    conversationId,\n  };\n}\n\nexport function messageIsUnread(message: Message) {\n  return (\n    message.direction === 'Inbound' &&\n    message.readStatus !== 'Read' &&\n    !messageIsDeleted(message)\n  );\n}\n\nexport function directionlessMessageIsUnread(\n  message: Message & { preUpdateReadStatus?: Pick<Message, 'readStatus'> },\n) {\n  return (\n    (message.preUpdateReadStatus || message.readStatus) !== 'Read' &&\n    !messageIsDeleted(message)\n  );\n}\n\n/** salesforce and dynamics slice the message numbers to reduce the pressure of contact match\n * Fax: 100\n * Voice Mail: 100\n * total(SMS, Pager, Text): 250\n * @param {*} records\n */\nexport const filterMessages = (messages: Message[]) => {\n  function sortByCreationTime(records: Message[]) {\n    return records.sort((a, b) => sortByDate(a as any, b as any));\n  }\n  function groupMessages(records: Message[]) {\n    const faxRecords = records.filter(messageIsFax);\n    const voiceMailRecords = records.filter(messageIsVoicemail);\n    const textRecords = records.filter(messageIsTextMessage);\n    return {\n      fax: sortByCreationTime(faxRecords),\n      voice: sortByCreationTime(voiceMailRecords),\n      text: sortByCreationTime(textRecords),\n    };\n  }\n\n  const { fax, voice, text } = groupMessages(messages);\n\n  return [...fax.slice(0, 100), ...voice.slice(0, 100), ...text.slice(0, 250)];\n};\n"],"mappings":"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","ignoreList":[]}