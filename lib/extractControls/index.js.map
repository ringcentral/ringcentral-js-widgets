{"version":3,"file":"index.js","names":["_ramda","require","_toArray","r","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","length","e","n","Symbol","iterator","isArray","pauseRegex","controlRegex","extractExtendedControls","input","_split","split","_split2","phoneNumber","tokens","extendedControls","reduce","output","token","push","cleanControl","replace"],"sources":["lib/extractControls/index.js"],"sourcesContent":["import { reduce } from 'ramda';\n\nconst pauseRegex = /,/g;\nconst controlRegex = /[^0-9*#]/g;\n\n/**\n * @typedef {Object} ExtractedResult\n * @property {String} input - Original input\n * @property {String} phoneNumber - Original input with extended controls removed\n * @property {String[]} extendedControls - Array containing the extended controls\n */\n\n/**\n * @param {String} input\n * @returns {ExtractedResult}\n * @description Extract extended controls from quick dial phone number string.\n *              Currently only support pause (',') characater.\n */\nexport default function extractExtendedControls(input) {\n  const [phoneNumber, ...tokens] = (input || '').split(pauseRegex);\n  return {\n    input,\n    phoneNumber,\n    extendedControls: reduce(\n      (output, token) => {\n        output.push(',');\n        const cleanControl = token.replace(controlRegex, '');\n        if (cleanControl.length) {\n          output.push(cleanControl);\n        }\n        return output;\n      },\n      [],\n      tokens,\n    ),\n  };\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAA+B,SAAAC,SAAAC,CAAA,WAAAC,eAAA,CAAAD,CAAA,KAAAE,gBAAA,CAAAF,CAAA,KAAAG,2BAAA,CAAAH,CAAA,KAAAI,gBAAA;AAAA,SAAAA,iBAAA,cAAAC,SAAA;AAAA,SAAAF,4BAAAH,CAAA,EAAAM,CAAA,QAAAN,CAAA,2BAAAA,CAAA,SAAAO,iBAAA,CAAAP,CAAA,EAAAM,CAAA,OAAAE,CAAA,MAAAC,QAAA,CAAAC,IAAA,CAAAV,CAAA,EAAAW,KAAA,6BAAAH,CAAA,IAAAR,CAAA,CAAAY,WAAA,KAAAJ,CAAA,GAAAR,CAAA,CAAAY,WAAA,CAAAC,IAAA,aAAAL,CAAA,cAAAA,CAAA,GAAAM,KAAA,CAAAC,IAAA,CAAAf,CAAA,oBAAAQ,CAAA,+CAAAQ,IAAA,CAAAR,CAAA,IAAAD,iBAAA,CAAAP,CAAA,EAAAM,CAAA;AAAA,SAAAC,kBAAAP,CAAA,EAAAM,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAN,CAAA,CAAAiB,MAAA,MAAAX,CAAA,GAAAN,CAAA,CAAAiB,MAAA,YAAAC,CAAA,MAAAC,CAAA,GAAAL,KAAA,CAAAR,CAAA,GAAAY,CAAA,GAAAZ,CAAA,EAAAY,CAAA,MAAAC,CAAA,CAAAD,CAAA,IAAAlB,CAAA,CAAAkB,CAAA,YAAAC,CAAA;AAAA,SAAAjB,iBAAAF,CAAA,8BAAAoB,MAAA,YAAApB,CAAA,CAAAoB,MAAA,CAAAC,QAAA,aAAArB,CAAA,uBAAAc,KAAA,CAAAC,IAAA,CAAAf,CAAA;AAAA,SAAAC,gBAAAD,CAAA,QAAAc,KAAA,CAAAQ,OAAA,CAAAtB,CAAA,UAAAA,CAAA;AAE/B,IAAMuB,UAAU,GAAG,IAAI;AACvB,IAAMC,YAAY,GAAG,WAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,uBAAuBA,CAACC,KAAK,EAAE;EAAA,IAAAC,MAAA,GACpB,CAACD,KAAK,IAAI,EAAE,EAAEE,KAAK,CAACL,UAAU,CAAC;IAAAM,OAAA,GAAA9B,QAAA,CAAA4B,MAAA;IAAzDG,WAAW,GAAAD,OAAA;IAAKE,MAAM,GAAAF,OAAA,CAAAlB,KAAA;EAC7B,OAAO;IACLe,KAAK,EAALA,KAAK;IACLI,WAAW,EAAXA,WAAW;IACXE,gBAAgB,EAAE,IAAAC,aAAM,EACtB,UAACC,MAAM,EAAEC,KAAK,EAAK;MACjBD,MAAM,CAACE,IAAI,CAAC,GAAG,CAAC;MAChB,IAAMC,YAAY,GAAGF,KAAK,CAACG,OAAO,CAACd,YAAY,EAAE,EAAE,CAAC;MACpD,IAAIa,YAAY,CAACpB,MAAM,EAAE;QACvBiB,MAAM,CAACE,IAAI,CAACC,YAAY,CAAC;MAC3B;MACA,OAAOH,MAAM;IACf,CAAC,EACD,EAAE,EACFH,MACF;EACF,CAAC;AACH","ignoreList":[]}