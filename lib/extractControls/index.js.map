{"version":3,"file":"index.js","names":["_ramda","require","_toArray","arr","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","i","arr2","iter","Symbol","iterator","isArray","pauseRegex","controlRegex","extractExtendedControls","input","_split","split","_split2","phoneNumber","tokens","extendedControls","reduce","output","token","push","cleanControl","replace"],"sources":["lib/extractControls/index.js"],"sourcesContent":["import { reduce } from 'ramda';\n\nconst pauseRegex = /,/g;\nconst controlRegex = /[^0-9*#]/g;\n\n/**\n * @typedef {Object} ExtractedResult\n * @property {String} input - Original input\n * @property {String} phoneNumber - Original input with extended controls removed\n * @property {String[]} extendedControls - Array containing the extended controls\n */\n\n/**\n * @param {String} input\n * @returns {ExtractedResult}\n * @description Extract extended controls from quick dial phone number string.\n *              Currently only support pause (',') characater.\n */\nexport default function extractExtendedControls(input) {\n  const [phoneNumber, ...tokens] = (input || '').split(pauseRegex);\n  return {\n    input,\n    phoneNumber,\n    extendedControls: reduce(\n      (output, token) => {\n        output.push(',');\n        const cleanControl = token.replace(controlRegex, '');\n        if (cleanControl.length) {\n          output.push(cleanControl);\n        }\n        return output;\n      },\n      [],\n      tokens,\n    ),\n  };\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAA+B,SAAAC,SAAAC,GAAA,WAAAC,eAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAG,2BAAA,CAAAH,GAAA,KAAAI,gBAAA;AAAA,SAAAA,iBAAA,cAAAC,SAAA;AAAA,SAAAF,4BAAAG,CAAA,EAAAC,MAAA,SAAAD,CAAA,qBAAAA,CAAA,sBAAAE,iBAAA,CAAAF,CAAA,EAAAC,MAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAP,CAAA,EAAAQ,KAAA,aAAAL,CAAA,iBAAAH,CAAA,CAAAS,WAAA,EAAAN,CAAA,GAAAH,CAAA,CAAAS,WAAA,CAAAC,IAAA,MAAAP,CAAA,cAAAA,CAAA,mBAAAQ,KAAA,CAAAC,IAAA,CAAAZ,CAAA,OAAAG,CAAA,+DAAAU,IAAA,CAAAV,CAAA,UAAAD,iBAAA,CAAAF,CAAA,EAAAC,MAAA;AAAA,SAAAC,kBAAAR,GAAA,EAAAoB,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAApB,GAAA,CAAAqB,MAAA,EAAAD,GAAA,GAAApB,GAAA,CAAAqB,MAAA,WAAAC,CAAA,MAAAC,IAAA,OAAAN,KAAA,CAAAG,GAAA,GAAAE,CAAA,GAAAF,GAAA,EAAAE,CAAA,MAAAC,IAAA,CAAAD,CAAA,IAAAtB,GAAA,CAAAsB,CAAA,YAAAC,IAAA;AAAA,SAAArB,iBAAAsB,IAAA,eAAAC,MAAA,oBAAAD,IAAA,CAAAC,MAAA,CAAAC,QAAA,aAAAF,IAAA,+BAAAP,KAAA,CAAAC,IAAA,CAAAM,IAAA;AAAA,SAAAvB,gBAAAD,GAAA,QAAAiB,KAAA,CAAAU,OAAA,CAAA3B,GAAA,UAAAA,GAAA;AAE/B,IAAM4B,UAAU,GAAG,IAAI;AACvB,IAAMC,YAAY,GAAG,WAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,uBAAuBA,CAACC,KAAK,EAAE;EAAA,IAAAC,MAAA,GACpB,CAACD,KAAK,IAAI,EAAE,EAAEE,KAAK,CAACL,UAAU,CAAC;IAAAM,OAAA,GAAAnC,QAAA,CAAAiC,MAAA;IAAzDG,WAAW,GAAAD,OAAA;IAAKE,MAAM,GAAAF,OAAA,CAAApB,KAAA;EAC7B,OAAO;IACLiB,KAAK,EAALA,KAAK;IACLI,WAAW,EAAXA,WAAW;IACXE,gBAAgB,EAAE,IAAAC,aAAM,EACtB,UAACC,MAAM,EAAEC,KAAK,EAAK;MACjBD,MAAM,CAACE,IAAI,CAAC,GAAG,CAAC;MAChB,IAAMC,YAAY,GAAGF,KAAK,CAACG,OAAO,CAACd,YAAY,EAAE,EAAE,CAAC;MACpD,IAAIa,YAAY,CAACrB,MAAM,EAAE;QACvBkB,MAAM,CAACE,IAAI,CAACC,YAAY,CAAC;MAC3B;MACA,OAAOH,MAAM;IACf,CAAC,EACD,EAAE,EACFH,MACF;EACF,CAAC;AACH"}