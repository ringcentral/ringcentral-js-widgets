{"version":3,"file":"index.js","names":["pauseRegex","controlRegex","extractExtendedControls","input","split","phoneNumber","tokens","extendedControls","reduce","output","token","push","cleanControl","replace","length"],"sources":["lib/extractControls/index.js"],"sourcesContent":["import { reduce } from 'ramda';\n\nconst pauseRegex = /,/g;\nconst controlRegex = /[^0-9*#]/g;\n\n/**\n * @typedef {Object} ExtractedResult\n * @property {String} input - Original input\n * @property {String} phoneNumber - Original input with extended controls removed\n * @property {String[]} extendedControls - Array containing the extended controls\n */\n\n/**\n * @param {String} input\n * @returns {ExtractedResult}\n * @description Extract extended controls from quick dial phone number string.\n *              Currently only support pause (',') characater.\n */\nexport default function extractExtendedControls(input) {\n  const [phoneNumber, ...tokens] = (input || '').split(pauseRegex);\n  return {\n    input,\n    phoneNumber,\n    extendedControls: reduce(\n      (output, token) => {\n        output.push(',');\n        const cleanControl = token.replace(controlRegex, '');\n        if (cleanControl.length) {\n          output.push(cleanControl);\n        }\n        return output;\n      },\n      [],\n      tokens,\n    ),\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,IAAnB;AACA,IAAMC,YAAY,GAAG,WAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;EAAA,aACpB,CAACA,KAAK,IAAI,EAAV,EAAcC,KAAd,CAAoBJ,UAApB,CADoB;EAAA;EAAA,IAC9CK,WAD8C;EAAA,IAC9BC,MAD8B;;EAErD,OAAO;IACLH,KAAK,EAALA,KADK;IAELE,WAAW,EAAXA,WAFK;IAGLE,gBAAgB,EAAE,IAAAC,aAAA,EAChB,UAACC,MAAD,EAASC,KAAT,EAAmB;MACjBD,MAAM,CAACE,IAAP,CAAY,GAAZ;MACA,IAAMC,YAAY,GAAGF,KAAK,CAACG,OAAN,CAAcZ,YAAd,EAA4B,EAA5B,CAArB;;MACA,IAAIW,YAAY,CAACE,MAAjB,EAAyB;QACvBL,MAAM,CAACE,IAAP,CAAYC,YAAZ;MACD;;MACD,OAAOH,MAAP;IACD,CARe,EAShB,EATgB,EAUhBH,MAVgB;EAHb,CAAP;AAgBD"}