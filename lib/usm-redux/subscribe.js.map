{"version":3,"file":"subscribe.js","names":["_constant","require","_index","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","iterator","constructor","prototype","subscribe","module","listener","Error","concat","service","className","getPrototypeOf","name","unsubscribe","storeKey","subscriptions","subscriptionsKey","_unsubscribe","push","assign","exports","watch","selector","watcher","_ref","arguments","length","_ref$multiple","multiple","_ref$isEqual","isEqual","defaultIsEqual","oldValue","Array","isArray","newValue","i","lastValues","lastValue"],"sources":["lib/usm-redux/subscribe.ts"],"sourcesContent":["import type {\n  Subscribe,\n  Watch,\n  Unsubscribe,\n  Subscription,\n  Service,\n} from './interface';\nimport { storeKey, subscriptionsKey } from './constant';\nimport { isEqual as defaultIsEqual } from './utils/index';\n\nconst subscribe: Subscribe = (module, listener) => {\n  if (typeof module !== 'object') {\n    throw new Error(`The subscription target '${module}' is not an object.`);\n  }\n  const service: Service = module;\n  const className = Object.getPrototypeOf(service).constructor.name;\n  if (typeof listener !== 'function') {\n    throw new Error(\n      `The 'listener' should be a function in the class '${className}'.`,\n    );\n  }\n  let unsubscribe: Unsubscribe;\n  if (service[storeKey]) {\n    unsubscribe = service[storeKey].subscribe(listener);\n  } else {\n    // When constructing\n    const subscriptions: Subscription[] = service[subscriptionsKey] || [];\n    let _unsubscribe: Unsubscribe;\n    subscriptions.push(() => {\n      if (typeof service[storeKey] !== 'object') {\n        throw new Error(\n          `The subscription target class '${className}' should be created via 'createStore()'.`,\n        );\n      }\n      _unsubscribe = service[storeKey].subscribe(listener);\n    });\n    unsubscribe = () => _unsubscribe();\n    Object.assign(service, {\n      [subscriptionsKey]: subscriptions,\n    });\n  }\n  return unsubscribe;\n};\n\n/**\n * watch value change in the store\n *\n * @param module binding module instance\n * @param selector that selector you want to watch\n * @param watcher callback function\n * @param options options for that watcher\n * @returns unsubscribe method\n *\n * @example\n * ```ts\n *\n    // watch one variable\n    watch(\n      this,\n      () => this._deps.auth.loggedIn,\n      (newValue, oldValue) => {\n        // do something\n      },\n    );\n\n    // watch many variables\n    watch(\n      this,\n      () => [\n        this._deps.auth.loggedIn,\n        this._deps.routerInteraction.currentPath,\n      ],\n      (newValue, oldValue) => {\n        // do something\n      },\n      { multiple: true },\n    );\n * ```\n * custom equality function\n * ```ts\n    export const customEqual = (newValue: unknown, oldValue: unknown) => {\n      return x !== y;\n    };\n\n    watch(\n      this,\n      () => this._deps.auth.loggedIn,\n      (newValue, oldValue) => {\n        // do something\n      },\n      { isEqual: customEqual },\n    );\n    ```\n */\nconst watch: Watch = (\n  module,\n  selector,\n  watcher,\n  { multiple = false, isEqual = defaultIsEqual } = {},\n) => {\n  if (typeof watcher !== 'function') {\n    const className = Object.getPrototypeOf(module).constructor.name;\n    throw new Error(\n      `The 'watcher' should be a function in the class '${className}'.`,\n    );\n  }\n  let oldValue = selector();\n  if (multiple) {\n    if (!Array.isArray(oldValue)) {\n      const className = Object.getPrototypeOf(module).constructor.name;\n      throw new Error(\n        `The 'selector' should be a function that returns an array in the class '${className}'.`,\n      );\n    }\n    return subscribe(module, () => {\n      const newValue = selector();\n      const length = oldValue.length;\n      for (let i = 0; i < length; i++) {\n        if (!isEqual(newValue[i], oldValue[i])) {\n          const lastValues = oldValue;\n          oldValue = newValue;\n          watcher(newValue, lastValues);\n          break;\n        }\n      }\n    });\n  }\n  return subscribe(module, () => {\n    const newValue = selector();\n    if (!isEqual(newValue, oldValue)) {\n      const lastValue = oldValue;\n      oldValue = newValue;\n      watcher(newValue, lastValue);\n    }\n  });\n};\n\nexport { subscribe, watch };\n"],"mappings":"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"}