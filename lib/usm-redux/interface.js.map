{"version":3,"file":"interface.js","names":[],"sources":["lib/usm-redux/interface.ts"],"sourcesContent":["import type { Patch } from 'immer';\nimport type { ReducersMapObject, Reducer, StoreEnhancer } from 'redux';\nimport type {\n  stateKey,\n  storeKey,\n  subscriptionsKey,\n  bootstrappedKey,\n  usm,\n  identifierKey,\n} from './constant';\n\nexport interface Config {\n  enablePatches?: boolean;\n  reduxEnhancer?: StoreEnhancer<any, any>;\n  handleReducers?: (reducers: ReducersMapObject) => Reducer;\n}\n\nexport interface StoreOptions {\n  modules: any[];\n  strict?: boolean;\n}\n\nexport interface Service<T extends Record<string, any> = Record<string, any>> {\n  name?: string;\n  readonly [bootstrappedKey]: boolean;\n  readonly [identifierKey]: string;\n  readonly [stateKey]: T;\n  readonly [storeKey]: Store<T>;\n  readonly [subscriptionsKey]: Subscription[];\n  _getLastState?: () => Record<string, any>;\n  _handleState?: (...args: any) => void;\n  [K: string]: any;\n}\n\nexport type Unsubscribe = () => void;\n\nexport type Subscription = () => void;\n\nexport interface PropertyDescriptor<T> extends TypedPropertyDescriptor<T> {\n  initializer(): T;\n}\n\nexport interface Action<T = Record<string, any>> {\n  type: string;\n  method: string | symbol;\n  params: any[];\n  _state: T;\n  _usm: typeof usm;\n  _patches?: Patch[];\n  _inversePatches?: Patch[];\n}\n\nexport interface Store<T = Record<string, any>> {\n  dispatch(action: Action): void;\n  getState(): T;\n  subscribe(listener: Subscription): Unsubscribe;\n}\n\nexport type Subscribe = (module: any, listener: () => void) => Unsubscribe;\n\nexport type Watch = <P extends boolean, T extends P extends true ? any[] : any>(\n  /**\n   *\n   */\n  module: any,\n  /**\n   *\n   */\n  selector: () => P extends true ? [...T] : T,\n  /**\n   *\n   */\n  watcher: (newValue: T, oldValue: T) => void,\n  /**\n   *\n   */\n  options?: {\n    /**\n     *\n     */\n    multiple?: P;\n    /**\n     *\n     */\n    isEqual?: (x: unknown, y: unknown) => boolean;\n  },\n) => Unsubscribe;\n"],"mappings":""}