{"version":3,"file":"action.js","names":["_immer","require","_checkPatches","_constant","_createStore","_index","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","TypeError","String","Number","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","a","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","n","l","iterator","u","f","next","done","isArray","action","target","key","descriptor","fn","Error","concat","_this","_len","args","_key","time","process","env","NODE_ENV","Date","now","getStagedState","_this$_getLastState","_this$_getLastState2","lastState","_getLastState","storeKey","getState","state","patches","inversePatches","recipe","draftState","setStagedState","setStagedModule","_modulePath","enablePatches","getPatchesToggle","_produceWithPatches","produceWithPatches","_produceWithPatches2","produce","undefined","changed","_console","console","warn","identifierKey","executionTime","_this$_handleState","_handleState","type","method","params","_state","_usm","usm","_patches","_inversePatches","requiredWarning","checkPatches","dispatch","getStagedModule","exports"],"sources":["lib/usm-redux/decorators/action.ts"],"sourcesContent":["/* eslint-disable func-names */\nimport type { Patch } from 'immer';\nimport { produceWithPatches, produce } from 'immer';\n\nimport { checkPatches } from '../checkPatches';\nimport { storeKey, identifierKey, usm } from '../constant';\nimport { getPatchesToggle } from '../createStore';\nimport type { Service, Action } from '../interface';\nimport {\n  getStagedModule,\n  getStagedState,\n  setStagedModule,\n  setStagedState,\n} from '../utils/index';\n\nexport const action = (\n  target: object,\n  key: string | symbol,\n  descriptor: TypedPropertyDescriptor<(...args: any[]) => void>,\n) => {\n  const fn = descriptor.value;\n  if (typeof fn !== 'function') {\n    throw new Error(\n      `${String(key)} can only be decorated by '@action' as a class method.`,\n    );\n  }\n  const value = function (this: Service, ...args: unknown[]) {\n    let time: number;\n    if (process.env.NODE_ENV === 'development') {\n      time = Date.now();\n    }\n    if (typeof getStagedState() === 'undefined') {\n      try {\n        const lastState: Record<string, any> =\n          this._getLastState?.() ?? this[storeKey].getState();\n        let state: Record<string, any> | undefined;\n        let patches: Patch[] = [];\n        let inversePatches: Patch[] = [];\n        const recipe = (draftState: Record<string, unknown>) => {\n          setStagedState(draftState);\n          if (process.env.NODE_ENV !== 'production') {\n            setStagedModule(this._modulePath);\n          }\n          fn.apply(this, args);\n        };\n        const enablePatches = getPatchesToggle();\n        if (enablePatches) {\n          [state, patches, inversePatches] = produceWithPatches(\n            lastState,\n            recipe,\n          );\n        } else {\n          state = produce(lastState, recipe);\n        }\n        setStagedState(undefined);\n        if (process.env.NODE_ENV !== 'production') {\n          setStagedModule(undefined);\n        }\n        const changed = lastState !== state;\n        if (process.env.NODE_ENV === 'development') {\n          if (!changed) {\n            console.warn(\n              `There are no state updates to method '${\n                this[identifierKey]\n              }.${key.toString()}' with arguments:`,\n              ...args,\n            );\n          }\n          // performance checking\n          const executionTime = Date.now() - time!;\n          if (executionTime > 100)\n            console.warn(\n              `The execution time of method '${\n                this[identifierKey]\n              }.${key.toString()}' is ${executionTime} ms, it's recommended to use 'dispatch' API.`,\n            );\n          // performance detail: https://immerjs.github.io/immer/docs/performance\n        }\n\n        if (changed) {\n          this._handleState?.(state);\n          const action: Action = {\n            type: this[identifierKey],\n            method: key,\n            params: args,\n            _state: state,\n            _usm: usm,\n            ...(enablePatches\n              ? {\n                  _patches: patches,\n                  _inversePatches: inversePatches,\n                }\n              : {}),\n          };\n          if (process.env.NODE_ENV === 'development') {\n            const requiredWarning = checkPatches(lastState, action);\n            if (requiredWarning) {\n              console.warn(\n                `The state update operation in the method '${this[\n                  identifierKey\n                ].toString()}.${key.toString()}'  is a replacement update operation. If there is a performance issue, be sure to use mutation updates to ensure the minimum set of update patches.`,\n              );\n            }\n          }\n          this[storeKey].dispatch(action);\n        }\n      } finally {\n        setStagedState(undefined);\n        if (process.env.NODE_ENV !== 'production') {\n          setStagedModule(undefined);\n        }\n      }\n    } else {\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        getStagedModule() !== this._modulePath\n      ) {\n        throw new Error(\n          `The method '${\n            this[identifierKey]\n          }.${key.toString()}' is not allowed to call other @action methods in the same module.`,\n        );\n      }\n      // enable staged state mode.\n      fn.apply(this, args);\n    }\n  };\n  return {\n    ...descriptor,\n    value,\n  };\n};\n"],"mappings":"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","ignoreList":[]}