{"version":3,"file":"action.js","names":["action","target","key","descriptor","fn","value","Error","String","args","time","process","env","NODE_ENV","Date","now","getStagedState","lastState","_getLastState","storeKey","getState","state","patches","inversePatches","recipe","draftState","setStagedState","apply","enablePatches","getPatchesToggle","produceWithPatches","produce","undefined","changed","console","warn","identifierKey","toString","executionTime","_handleState","type","method","params","_state","_usm","usm","_patches","_inversePatches","requiredWarning","checkPatches","dispatch"],"sources":["lib/usm-redux/decorators/action.ts"],"sourcesContent":["/* eslint-disable func-names */\nimport { produceWithPatches, produce, Patch } from 'immer';\nimport { Service, Action } from '../interface';\nimport { storeKey, identifierKey, usm } from '../constant';\nimport { getPatchesToggle } from '../createStore';\nimport { getStagedState, setStagedState } from '../utils/index';\nimport { checkPatches } from '../checkPatches';\n\nexport const action = (\n  target: object,\n  key: string | symbol,\n  descriptor: TypedPropertyDescriptor<(...args: any[]) => void>,\n) => {\n  const fn = descriptor.value;\n  if (typeof fn !== 'function') {\n    throw new Error(\n      `${String(key)} can only be decorated by '@action' as a class method.`,\n    );\n  }\n  const value = function (this: Service, ...args: unknown[]) {\n    let time: number;\n    if (process.env.NODE_ENV === 'development') {\n      time = Date.now();\n    }\n    if (typeof getStagedState() === 'undefined') {\n      try {\n        const lastState: Record<string, any> =\n          this._getLastState?.() ?? this[storeKey].getState();\n        let state: Record<string, any> | undefined;\n        let patches: Patch[] = [];\n        let inversePatches: Patch[] = [];\n        const recipe = (draftState: Record<string, unknown>) => {\n          setStagedState(draftState);\n          fn.apply(this, args);\n        };\n        const enablePatches = getPatchesToggle();\n        if (enablePatches) {\n          [state, patches, inversePatches] = produceWithPatches(\n            lastState,\n            recipe,\n          );\n        } else {\n          state = produce(lastState, recipe);\n        }\n        setStagedState(undefined);\n        const changed = lastState !== state;\n        if (process.env.NODE_ENV === 'development') {\n          if (!changed) {\n            console.warn(\n              `There are no state updates to method '${\n                this[identifierKey]\n              }.${key.toString()}' with arguments:`,\n              ...args,\n            );\n          }\n          // performance checking\n          const executionTime = Date.now() - time!;\n          if (executionTime > 100)\n            console.warn(\n              `The execution time of method '${\n                this[identifierKey]\n              }.${key.toString()}' is ${executionTime} ms, it's recommended to use 'dispatch' API.`,\n            );\n          // performance detail: https://immerjs.github.io/immer/docs/performance\n        }\n\n        if (changed) {\n          this._handleState?.(state);\n          const action: Action = {\n            type: this[identifierKey],\n            method: key,\n            params: args,\n            _state: state,\n            _usm: usm,\n            ...(enablePatches\n              ? {\n                  _patches: patches,\n                  _inversePatches: inversePatches,\n                }\n              : {}),\n          };\n          if (process.env.NODE_ENV === 'development') {\n            const requiredWarning = checkPatches(lastState, action);\n            if (requiredWarning) {\n              console.warn(\n                `The state update operation in the method '${this[\n                  identifierKey\n                ].toString()}.${key.toString()}'  is a replacement update operation. If there is a performance issue, be sure to use mutation updates to ensure the minimum set of update patches.`,\n              );\n            }\n          }\n          this[storeKey].dispatch(action);\n        }\n      } finally {\n        setStagedState(undefined);\n      }\n    } else {\n      // enable staged state mode.\n      fn.apply(this, args);\n    }\n  };\n  return {\n    ...descriptor,\n    value,\n  };\n};\n"],"mappings":"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"}