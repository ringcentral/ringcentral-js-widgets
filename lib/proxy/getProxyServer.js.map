{"version":3,"file":"getProxyServer.js","names":["_RcModule2","_interopRequireDefault","require","_ensureExist","_baseActionTypes","_getProxyServerReducer","e","__esModule","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","Array","isArray","_arrayLikeToArray","_toArray","_arrayWithHoles","_nonIterableRest","a","t","toString","call","slice","constructor","name","from","test","length","n","Symbol","iterator","asyncGeneratorStep","o","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","_toPrimitive","_typeof","toPrimitive","String","Number","_objectWithoutProperties","_objectWithoutPropertiesLoose","s","includes","propertyIsEnumerable","hasOwnProperty","_classCallCheck","_inherits","prototype","create","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","defaultVerifyModuleFunc","module","RcModule","getProxyServer","createTarget","verifyModuleFunc","undefined","_RcModule","_class2","_super","_ref","_this","transport","options","actionTypes","baseActionTypes","_target","_transport","_getState","state","target","_loop","subModule","get","_getStateV2","key","ensureExist","_reducer","getProxyServerReducer","moduleReducer","reducer","prefix","on","events","request","_ref3","regeneratorRuntime","mark","_callee","_ref2","requestId","_ref2$payload","type","functionPath","args","actionNumber","_functionPath$split$s","_functionPath$split$s2","pathTokens","fnName","result","wrap","_callee$","_context","prev","next","payload","t0","execute","sync","split","pop","token","sent","response","t1","error","abrupt","Error","concat","stop","_x"],"sources":["lib/proxy/getProxyServer.ts"],"sourcesContent":["import RcModule from '../RcModule';\nimport ensureExist from '../ensureExist';\n\nimport baseActionTypes from './baseActionTypes';\nimport getProxyServerReducer from './getProxyServerReducer';\n\nconst defaultVerifyModuleFunc = (module: any) => module instanceof RcModule;\n\n// @ts-expect-error TS(4094): Property '_getState' of exported class expression ... Remove this comment to see the full error message\nexport default function getProxyServer(\n  createTarget: any,\n  verifyModuleFunc = defaultVerifyModuleFunc,\n) {\n  return class extends RcModule {\n    _target: any;\n    _transport: any;\n    constructor({ transport, ...options }: any) {\n      super({\n        ...options,\n        actionTypes: baseActionTypes,\n      });\n      this._target = createTarget({\n        ...options,\n      });\n      this._target._getState = () => this.state.target;\n      for (const subModule in this._target) {\n        if (\n          Object.prototype.hasOwnProperty.call(this._target, subModule) &&\n          verifyModuleFunc(this._target[subModule])\n        ) {\n          Object.defineProperty(this, subModule, {\n            configurable: false,\n            enumerable: true,\n            get() {\n              return this._target[subModule];\n            },\n          });\n          // @ts-expect-error TS(7053): Element implicitly has an 'any' type because expre... Remove this comment to see the full error message\n          this[subModule]._getStateV2 = (state: any, key: any) =>\n            state.target[key];\n        }\n      }\n\n      // @ts-expect-error TS(2345): Argument of type 'string' is not assignable to par... Remove this comment to see the full error message\n      this._transport = ensureExist.call(this, transport, 'transport');\n      this._reducer = getProxyServerReducer({\n        moduleReducer: this._target.reducer,\n        transport,\n        prefix: this.prefix,\n      });\n\n      transport.on(\n        transport.events.request,\n        async ({\n          requestId,\n          payload: { type, functionPath, args, actionNumber },\n        }: any) => {\n          switch (type) {\n            case this.actionTypes.execute:\n              {\n                const [...pathTokens] = functionPath.split('.').slice(1);\n                const fnName = pathTokens.pop();\n                let target = this._target;\n                pathTokens.forEach((token: any) => {\n                  target = target[token];\n                });\n                try {\n                  const result = await target[fnName](...args);\n                  transport.response({\n                    requestId,\n                    result,\n                  });\n                } catch (error: any /** TODO: confirm with instanceof */) {\n                  transport.response({\n                    requestId,\n                    error,\n                  });\n                }\n              }\n              break;\n            case this.actionTypes.sync: {\n              if (actionNumber !== this.state.actionNumber) {\n                transport.response({\n                  requestId,\n                  result: this.state,\n                });\n              } else {\n                transport.response({\n                  requestId,\n                  error: new Error('State is already up to date.'),\n                });\n              }\n              break;\n            }\n            default:\n              transport.response({\n                requestId,\n                error: new Error(`Invalid request type '${type}'.`),\n              });\n              break;\n          }\n        },\n      );\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]}