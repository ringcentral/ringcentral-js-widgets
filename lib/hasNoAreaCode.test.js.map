{"version":3,"sources":["lib/hasNoAreaCode.test.ts"],"names":["describe","it","result","input","countryCode","areaCode","to","equal"],"mappings":";;AAAA;;AAEA;;AAEAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BC,EAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAM;AAC9D,QAAMC,MAAM,GAAG,kCAAc;AAC3BC,MAAAA,KAAK,EAAE,MADoB;AAE3BC,MAAAA,WAAW,EAAE,IAFc;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAAd,CAAf;AAKA,sBAAOH,MAAP,EAAeI,EAAf,CAAkBC,KAAlB,CAAwB,KAAxB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACxD,QAAMC,MAAM,GAAG,kCAAc;AAC3BC,MAAAA,KAAK,EAAE,cADoB;AAE3BC,MAAAA,WAAW,EAAE,IAFc;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAAd,CAAf;AAKA,sBAAOH,MAAP,EAAeI,EAAf,CAAkBC,KAAlB,CAAwB,KAAxB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,oDAAD,EAAuD,YAAM;AAC7D,QAAMC,MAAM,GAAG,kCAAc;AAC3BC,MAAAA,KAAK,EAAE,aADoB;AAE3BC,MAAAA,WAAW,EAAE,IAFc;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAAd,CAAf;AAKA,sBAAOH,MAAP,EAAeI,EAAf,CAAkBC,KAAlB,CAAwB,KAAxB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,gFAAD,EAAmF,YAAM;AACzF,QAAMC,MAAM,GAAG,kCAAc;AAC3BC,MAAAA,KAAK,EAAE,SADoB;AAE3BC,MAAAA,WAAW,EAAE,IAFc;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAAd,CAAf;AAKA,sBAAOH,MAAP,EAAeI,EAAf,CAAkBC,KAAlB,CAAwB,KAAxB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,oFAAD,EAAuF,YAAM;AAC7F,QAAMC,MAAM,GAAG,kCAAc;AAC3BC,MAAAA,KAAK,EAAE,SADoB;AAE3BC,MAAAA,WAAW,EAAE,IAFc;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAAd,CAAf;AAKA,sBAAOH,MAAP,EAAeI,EAAf,CAAkBC,KAAlB,CAAwB,KAAxB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,oFAAD,EAAuF,YAAM;AAC7F,QAAMC,MAAM,GAAG,kCAAc;AAC3BC,MAAAA,KAAK,EAAE,SADoB;AAE3BC,MAAAA,WAAW,EAAE,IAFc;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAAd,CAAf;AAKA,sBAAOH,MAAP,EAAeI,EAAf,CAAkBC,KAAlB,CAAwB,KAAxB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,uFAAD,EAA0F,YAAM;AAChG,QAAMC,MAAM,GAAG,kCAAc;AAC3BC,MAAAA,KAAK,EAAE,SADoB;AAE3BC,MAAAA,WAAW,EAAE,IAFc;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAAd,CAAf;AAKA,sBAAOH,MAAP,EAAeI,EAAf,CAAkBC,KAAlB,CAAwB,IAAxB;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,uFAAD,EAA0F,YAAM;AAChG,QAAMC,MAAM,GAAG,kCAAc;AAC3BC,MAAAA,KAAK,EAAE,SADoB;AAE3BC,MAAAA,WAAW,EAAE,IAFc;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAAd,CAAf;AAKA,sBAAOH,MAAP,EAAeI,EAAf,CAAkBC,KAAlB,CAAwB,IAAxB;AACD,GAPC,CAAF;AAQD,CAxEO,CAAR","sourcesContent":["import { expect } from 'chai';\n\nimport { hasNoAreaCode } from './hasNoAreaCode';\n\ndescribe('hasNoAreaCode', () => {\n  it('should return false if phoneNumber is ServiceNumber', () => {\n    const result = hasNoAreaCode({\n      input: '*101',\n      countryCode: 'US',\n      areaCode: '666',\n    });\n    expect(result).to.equal(false);\n  });\n\n  it('should return false if phoneNumber is hasPlus', () => {\n    const result = hasNoAreaCode({\n      input: '+16508370000',\n      countryCode: 'US',\n      areaCode: '666',\n    });\n    expect(result).to.equal(false);\n  });\n\n  it('should return false if phoneNumber length is not 7', () => {\n    const result = hasNoAreaCode({\n      input: '16508370000',\n      countryCode: 'US',\n      areaCode: '666',\n    });\n    expect(result).to.equal(false);\n  });\n\n  it('should return false if phoneNumber length is 7 and countryCode is not CA or US', () => {\n    const result = hasNoAreaCode({\n      input: '8370000',\n      countryCode: 'GB',\n      areaCode: '',\n    });\n    expect(result).to.equal(false);\n  });\n\n  it('should return false if phoneNumber length is 7, countryCode is CA and has areaCode', () => {\n    const result = hasNoAreaCode({\n      input: '8370000',\n      countryCode: 'CA',\n      areaCode: '666',\n    });\n    expect(result).to.equal(false);\n  });\n\n  it('should return false if phoneNumber length is 7, countryCode is US and has areaCode', () => {\n    const result = hasNoAreaCode({\n      input: '8370000',\n      countryCode: 'US',\n      areaCode: '666',\n    });\n    expect(result).to.equal(false);\n  });\n\n  it('should return true if phoneNumber length is 7, countryCode is US and has not areaCode', () => {\n    const result = hasNoAreaCode({\n      input: '8370000',\n      countryCode: 'US',\n      areaCode: '',\n    });\n    expect(result).to.equal(true);\n  });\n\n  it('should return true if phoneNumber length is 7, countryCode is CA and has not areaCode', () => {\n    const result = hasNoAreaCode({\n      input: '8370000',\n      countryCode: 'CA',\n      areaCode: '',\n    });\n    expect(result).to.equal(true);\n  });\n});\n"],"file":"hasNoAreaCode.test.js"}