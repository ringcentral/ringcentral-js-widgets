{"version":3,"sources":["lib/FormatPhoneNumber/formatPhoneNumber.ts"],"names":["formatPhoneNumber","phoneNumber","countryCode","currentLocale","i18n","getString"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;AAQO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,OAIH;AAAA,MAH5BC,WAG4B,QAH5BA,WAG4B;AAAA,8BAF5BC,WAE4B;AAAA,MAF5BA,WAE4B,iCAFd,IAEc;AAAA,gCAD5BC,aAC4B;AAAA,MAD5BA,aAC4B,mCADZ,OACY;AAC5B,SAAOF,WAAW,GACd,yBAAO;AACLA,IAAAA,WAAW,EAAXA,WADK;AAELC,IAAAA,WAAW,EAAXA;AAFK,GAAP,KAGMD,WAJQ,GAKdG,iBAAKC,SAAL,CAAe,SAAf,EAA0BF,aAA1B,CALJ;AAMD,CAXM","sourcesContent":["import { format } from '@ringcentral-integration/phone-number';\n\nimport i18n from './i18n';\n\nexport interface FormatPhoneNumberProps {\n  phoneNumber: string;\n  countryCode?: string;\n  currentLocale?: string;\n}\n\nexport const formatPhoneNumber = ({\n  phoneNumber,\n  countryCode = 'US',\n  currentLocale = 'en-US',\n}: FormatPhoneNumberProps) => {\n  return phoneNumber\n    ? format({\n        phoneNumber,\n        countryCode,\n      }) || phoneNumber\n    : i18n.getString('unknown', currentLocale);\n};\n"],"file":"formatPhoneNumber.js"}