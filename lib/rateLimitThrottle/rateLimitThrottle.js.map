{"version":3,"file":"rateLimitThrottle.js","names":["rateLimitThrottle","_ref","fn","pool","poolWindow","resetPromise","count","getResetPromise","Promise","resolve","setTimeout","throttled","_throttled","apply","arguments","_asyncToGenerator","regeneratorRuntime","mark","_callee","_len","args","_key","_args","wrap","_callee$","_context","prev","next","length","Array","abrupt","stop","exports"],"sources":["lib/rateLimitThrottle/rateLimitThrottle.ts"],"sourcesContent":["export interface RateLimitThrottleOptions {\n  pool: number;\n  poolWindow: number;\n}\n\nexport const rateLimitThrottle = <F extends (...args: any) => Promise<any>>({\n  fn,\n  pool,\n  poolWindow,\n}: RateLimitThrottleOptions & { fn: F }) => {\n  let resetPromise: Promise<void> = null;\n  let count = 0;\n\n  function getResetPromise() {\n    if (!resetPromise) {\n      resetPromise = new Promise((resolve) => {\n        setTimeout(() => {\n          resetPromise = null;\n          count = 0;\n          resolve();\n        }, poolWindow);\n      });\n    }\n    return resetPromise;\n  }\n\n  async function throttled(\n    this: any,\n    ...args: Parameters<F>\n  ): Promise<ReturnType<F>> {\n    let resetPromise = getResetPromise();\n    while (count >= pool) {\n      await resetPromise;\n      resetPromise = getResetPromise();\n    }\n    count += 1;\n    return fn.apply(this, args);\n  }\n  return throttled;\n};\n"],"mappings":";;;;;;;;;;;;AAKO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAIc;EAAA,IAH1CC,EAAE,GAAAD,IAAA,CAAFC,EAAE;IACFC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IACJC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EAEV,IAAIC,YAA2B,GAAG,IAAI;EACtC,IAAIC,KAAK,GAAG,CAAC;EAEb,SAASC,eAAeA,CAAA,EAAG;IACzB,IAAI,CAACF,YAAY,EAAE;MACjBA,YAAY,GAAG,IAAIG,OAAO,CAAC,UAACC,OAAO,EAAK;QACtCC,UAAU,CAAC,YAAM;UACfL,YAAY,GAAG,IAAI;UACnBC,KAAK,GAAG,CAAC;UACTG,OAAO,CAAC,CAAC;QACX,CAAC,EAAEL,UAAU,CAAC;MAChB,CAAC,CAAC;IACJ;IACA,OAAOC,YAAY;EACrB;EAAC,SAEcM,SAASA,CAAA;IAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,WAAA;IAAAA,UAAA,GAAAG,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,CAAxB,SAAAC,QAAA;MAAA,IAAAb,YAAA;QAAAc,IAAA;QAAAC,IAAA;QAAAC,IAAA;QAAAC,KAAA,GAAAR,SAAA;MAAA,OAAAE,kBAAA,CAAAO,IAAA,UAAAC,SAAAC,QAAA;QAAA;UAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAIMtB,YAAY,GAAGE,eAAe,CAAC,CAAC;YAAA;cAAA,MAC7BD,KAAK,IAAIH,IAAI;gBAAAsB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACZtB,YAAY;YAAA;cAClBA,YAAY,GAAGE,eAAe,CAAC,CAAC;cAACkB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAEnCrB,KAAK,IAAI,CAAC;cAAC,KAAAa,IAAA,GAAAG,KAAA,CAAAM,MAAA,EAPRR,IAAI,OAAAS,KAAA,CAAAV,IAAA,GAAAE,IAAA,MAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA;gBAAJD,IAAI,CAAAC,IAAA,IAAAC,KAAA,CAAAD,IAAA;cAAA;cAAA,OAAAI,QAAA,CAAAK,MAAA,WAQA5B,EAAE,CAACW,KAAK,CAAC,IAAI,EAAEO,IAAI,CAAC;YAAA;YAAA;cAAA,OAAAK,QAAA,CAAAM,IAAA;UAAA;QAAA;MAAA,GAAAb,OAAA;IAAA,CAC5B;IAAA,OAAAN,UAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EACD,OAAOH,SAAS;AAClB,CAAC;AAACqB,OAAA,CAAAhC,iBAAA,GAAAA,iBAAA"}