{"version":3,"sources":["lib/MeetingHelper/index.ts"],"names":["MINUTE_SCALE","HOUR_SCALE","getMinutesList","currentLocale","result","index","length","value","text","i18n","getString","howMany","slice","concat","Array","getHoursList","Error"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;AAEO,IAAMA,YAAoB,GAAG,CAA7B;;AACA,IAAMC,UAAkB,GAAG,EAA3B;;;AAEA,SAASC,cAAT,CAAwBF,YAAxB,EAA8CG,aAA9C,EAAqE;AAC1E,SAAO,mBACL,UAACC,MAAD,EAAY;AACV,QAAMC,KAAK,GAAGD,MAAM,CAACE,MAArB;AACA,QAAMC,KAAK,GAAI,KAAKP,YAAN,GAAsBK,KAApC;AACA,QAAMG,IAAI,GAAG,+BAAcC,iBAAKC,SAAL,CAAe,SAAf,EAA0BP,aAA1B,CAAd,EAAwD;AACnEQ,MAAAA,OAAO,EAAE,UAAGJ,KAAH,OAAYK,KAAZ,CAAkB,CAAlB,EAAqB,CAArB;AAD0D,KAAxD,CAAb;AAGA,WAAOR,MAAM,CAACS,MAAP,CAAc;AACnBN,MAAAA,KAAK,EAALA,KADmB;AAEnBC,MAAAA,IAAI,EAAJA;AAFmB,KAAd,CAAP;AAID,GAXI,EAYL,EAZK,EAaL,IAAIM,KAAJ,CAAUd,YAAV,CAbK,CAAP;AAeD;;AAEM,SAASe,YAAT,CAAsBd,UAAtB,EAA0CE,aAA1C,EAAiE;AACtE,MAAIF,UAAU,GAAG,EAAjB,EAAqB;AACnB,UAAM,IAAIe,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACD,SAAO,mBACL,UAACZ,MAAD,EAAY;AACV,QAAMG,KAAK,GAAGH,MAAM,CAACE,MAArB;AACA,QAAME,IAAI,GAAG,+BAAcC,iBAAKC,SAAL,CAAe,OAAf,EAAwBP,aAAxB,CAAd,EAAsD;AACjEQ,MAAAA,OAAO,EAAE,WAAIJ,KAAJ,OAAaK,KAAb,CAAmB,CAAC,CAApB,EAAuB,CAAC,CAAxB;AADwD,KAAtD,CAAb;AAGA,WAAOR,MAAM,CAACS,MAAP,CAAc;AACnBN,MAAAA,KAAK,EAALA,KADmB;AAEnBC,MAAAA,IAAI,EAAJA;AAFmB,KAAd,CAAP;AAID,GAVI,EAWL,EAXK,EAYL,IAAIM,KAAJ,CAAUb,UAAV,CAZK,CAAP;AAcD","sourcesContent":["import formatMessage from 'format-message';\nimport { reduce } from 'ramda';\n\nimport i18n from '../../components/MeetingConfigsV2/i18n';\n\nexport const MINUTE_SCALE: number = 4;\nexport const HOUR_SCALE: number = 13;\n\nexport function getMinutesList(MINUTE_SCALE: number, currentLocale: string) {\n  return reduce(\n    (result) => {\n      const index = result.length;\n      const value = (60 / MINUTE_SCALE) * index;\n      const text = formatMessage(i18n.getString('minutes', currentLocale), {\n        howMany: `${value}0`.slice(0, 2),\n      });\n      return result.concat({\n        value,\n        text,\n      });\n    },\n    [],\n    new Array(MINUTE_SCALE),\n  );\n}\n\nexport function getHoursList(HOUR_SCALE: number, currentLocale: string) {\n  if (HOUR_SCALE > 23) {\n    throw new Error('HOUR_SCALE must be less than 23.');\n  }\n  return reduce(\n    (result) => {\n      const value = result.length;\n      const text = formatMessage(i18n.getString('hours', currentLocale), {\n        howMany: `0${value}0`.slice(-3, -1),\n      });\n      return result.concat({\n        value,\n        text,\n      });\n    },\n    [],\n    new Array(HOUR_SCALE),\n  );\n}\n"],"file":"index.js"}