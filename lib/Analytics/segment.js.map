{"version":3,"file":"segment.js","names":["init","window","analytics","_window","initialize","console","log","invoked","error","methods","factory","method","args","Array","prototype","slice","call","arguments","unshift","push","i","length","key","load","options","useLocalAnalyticsJS","script","document","createElement","type","async","src","concat","first","getElementsByTagName","parentNode","insertBefore","_loadOptions","SNIPPET_VERSION"],"sources":["lib/Analytics/segment.ts"],"sourcesContent":["export default function init() {\n  if (typeof window === 'undefined') {\n    return [];\n  }\n  // Create a queue, but don't obliterate an existing one!\n  window.analytics = window.analytics || [];\n  const { analytics } = window;\n  // If the real analytics.js is already on the page return.\n  if (analytics.initialize) {\n    if (window.console && console.log) {\n      console.log('Segment initialized!');\n    }\n    return;\n  }\n\n  // If the snippet was invoked already show an error.\n  if (analytics.invoked) {\n    if (window.console && console.error) {\n      console.error('Segment snippet included twice.');\n    }\n    return;\n  }\n\n  // Invoked flag, to make sure the snippet\n  // is never invoked twice.\n  analytics.invoked = true;\n\n  // A list of the methods in Analytics.js to stub.\n  analytics.methods = [\n    'trackSubmit',\n    'trackClick',\n    'trackLink',\n    'trackForm',\n    'pageview',\n    'identify',\n    'reset',\n    'group',\n    'track',\n    'ready',\n    'alias',\n    'debug',\n    'page',\n    'once',\n    'off',\n    'on',\n    'addSourceMiddleware',\n    'addIntegrationMiddleware',\n    'setAnonymousId',\n    'addDestinationMiddleware',\n  ];\n\n  // Define a factory to create stubs. These are placeholders\n  // for methods in Analytics.js so that you never have to wait\n  // for it to load to actually record data. The `method` is\n  // stored as the first argument, so we can replay the data.\n  analytics.factory = function (method: (...args: any[]) => void) {\n    return function () {\n      // eslint-disable-next-line prefer-rest-params\n      const args = Array.prototype.slice.call(arguments);\n      args.unshift(method);\n      analytics.push(args);\n      return analytics;\n    };\n  };\n\n  // For each of our methods, generate a queueing stub.\n  for (let i = 0; i < analytics.methods.length; i++) {\n    const key = analytics.methods[i];\n    analytics[key] = analytics.factory(key);\n  }\n\n  // Define a method to load Analytics.js from our CDN,\n  // and that will be sure to only ever load it once.\n  analytics.load = function (\n    key: string,\n    options: any,\n    useLocalAnalyticsJS?: boolean,\n  ) {\n    // Create an async script element based on your key.\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.src = useLocalAnalyticsJS\n      ? './analytics.min.js'\n      : `https://cdn.segment.com/analytics.js/v1/${key}/analytics.min.js`;\n\n    // Insert our script next to the first script element.\n    const first = document.getElementsByTagName('meta')[0];\n    if (first && first.parentNode) {\n      first.parentNode.insertBefore(script, first);\n    }\n\n    analytics._loadOptions = options;\n  };\n\n  // Add a version to keep track of what's in the wild.\n  analytics.SNIPPET_VERSION = '4.1.0';\n\n  return analytics;\n}\n"],"mappings":";;;;;;;AAAe,SAASA,IAAIA,CAAA,EAAG;EAC7B,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,OAAO,EAAE;EACX;EACA;EACAA,MAAM,CAACC,SAAS,GAAGD,MAAM,CAACC,SAAS,IAAI,EAAE;EAAC,IAAAC,OAAA,GACpBF,MAAM;IAApBC,SAAS,GAAAC,OAAA,CAATD,SAAS,EACjB;EACA,IAAIA,SAAS,CAACE,UAAU,EAAE;IACxB,IAAIH,MAAM,CAACI,OAAO,IAAIA,OAAO,CAACC,GAAG,EAAE;MACjCD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC;IACA;EACF;;EAEA;EACA,IAAIJ,SAAS,CAACK,OAAO,EAAE;IACrB,IAAIN,MAAM,CAACI,OAAO,IAAIA,OAAO,CAACG,KAAK,EAAE;MACnCH,OAAO,CAACG,KAAK,CAAC,iCAAiC,CAAC;IAClD;IACA;EACF;;EAEA;EACA;EACAN,SAAS,CAACK,OAAO,GAAG,IAAI;;EAExB;EACAL,SAAS,CAACO,OAAO,GAAG,CAClB,aAAa,EACb,YAAY,EACZ,WAAW,EACX,WAAW,EACX,UAAU,EACV,UAAU,EACV,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,MAAM,EACN,MAAM,EACN,KAAK,EACL,IAAI,EACJ,qBAAqB,EACrB,0BAA0B,EAC1B,gBAAgB,EAChB,0BAA0B,CAC3B;;EAED;EACA;EACA;EACA;EACAP,SAAS,CAACQ,OAAO,GAAG,UAAUC,MAAgC,EAAE;IAC9D,OAAO,YAAY;MACjB;MACA,IAAMC,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;MAClDL,IAAI,CAACM,OAAO,CAACP,MAAM,CAAC;MACpBT,SAAS,CAACiB,IAAI,CAACP,IAAI,CAAC;MACpB,OAAOV,SAAS;IAClB,CAAC;EACH,CAAC;;EAED;EACA,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlB,SAAS,CAACO,OAAO,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;IACjD,IAAME,GAAG,GAAGpB,SAAS,CAACO,OAAO,CAACW,CAAC,CAAC;IAChClB,SAAS,CAACoB,GAAG,CAAC,GAAGpB,SAAS,CAACQ,OAAO,CAACY,GAAG,CAAC;EACzC;;EAEA;EACA;EACApB,SAAS,CAACqB,IAAI,GAAG,UACfD,GAAW,EACXE,OAAY,EACZC,mBAA6B,EAC7B;IACA;IACA,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,IAAI,GAAG,iBAAiB;IAC/BH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,GAAG,GAAGN,mBAAmB,GAC5B,oBAAoB,8CAAAO,MAAA,CACuBV,GAAG,sBAAmB;;IAErE;IACA,IAAMW,KAAK,GAAGN,QAAQ,CAACO,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD,IAAID,KAAK,IAAIA,KAAK,CAACE,UAAU,EAAE;MAC7BF,KAAK,CAACE,UAAU,CAACC,YAAY,CAACV,MAAM,EAAEO,KAAK,CAAC;IAC9C;IAEA/B,SAAS,CAACmC,YAAY,GAAGb,OAAO;EAClC,CAAC;;EAED;EACAtB,SAAS,CAACoC,eAAe,GAAG,OAAO;EAEnC,OAAOpC,SAAS;AAClB","ignoreList":[]}