{"version":3,"sources":["lib/di/container.ts"],"names":["Container","parent","_map","Map","token","has","get","metadata","set","entries","values","clear"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;IAEqBA,S;AACnB,uBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACD;;;;wBAEGC,K,EAAO;AACT,UAAI,KAAKF,IAAL,CAAUG,GAAV,CAAcD,KAAd,CAAJ,EAA0B,OAAO,IAAP;AAC1B,UAAI,KAAKH,MAAL,KAAgB,IAApB,EAA0B,OAAO,KAAKA,MAAL,CAAYI,GAAZ,CAAgBD,KAAhB,CAAP;AAC1B,aAAO,KAAP;AACD;;;wBAEGA,K,EAAO;AACT,UAAI,KAAKF,IAAL,CAAUG,GAAV,CAAcD,KAAd,CAAJ,EAA0B,OAAO,KAAKF,IAAL,CAAUI,GAAV,CAAcF,KAAd,CAAP;AAC1B,UAAI,KAAKH,MAAL,KAAgB,IAApB,EAA0B,OAAO,KAAKA,MAAL,CAAYK,GAAZ,CAAgBF,KAAhB,CAAP;AAC1B,YAAM,oDAAiCA,KAAjC,oBAAN;AACD;;;wBAEGA,K,EAAOG,Q,EAAU;AACnB,UAAI,KAAKL,IAAL,CAAUG,GAAV,CAAcD,KAAd,CAAJ,EAA0B;AACxB,cAAM,yEAC0CA,KAD1C,oBAAN;AAGD;;AACD,aAAO,KAAKF,IAAL,CAAUM,GAAV,CAAcJ,KAAd,EAAqBG,QAArB,CAAP;AACD;;;6BAEQH,K,EAAO;AACd,aAAO,KAAKF,IAAL,CAAUG,GAAV,CAAcD,KAAd,CAAP;AACD;;;6BAEQA,K,EAAO;AACd,aAAO,KAAKF,IAAL,CAAUI,GAAV,CAAcF,KAAd,CAAP;AACD;;;8BAESH,M,EAAQ;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACD;;;8BAES;AACR,aAAO,KAAKC,IAAL,CAAUO,OAAV,EAAP;AACD;;;6BAEQ;AACP,aAAO,KAAKP,IAAL,CAAUQ,MAAV,EAAP;AACD;;;4BAEO;AACN,WAAKR,IAAL,CAAUS,KAAV;AACD","sourcesContent":["import { DIError } from './utils/error';\n\nexport default class Container {\n  constructor() {\n    this.parent = null;\n    this._map = new Map();\n  }\n\n  has(token) {\n    if (this._map.has(token)) return true;\n    if (this.parent !== null) return this.parent.has(token);\n    return false;\n  }\n\n  get(token) {\n    if (this._map.has(token)) return this._map.get(token);\n    if (this.parent !== null) return this.parent.get(token);\n    throw DIError(`Cannot find provider [${token}] in Container`);\n  }\n\n  set(token, metadata) {\n    if (this._map.has(token)) {\n      throw DIError(\n        `Cannot store duplicated provider instance [${token}] to Container`,\n      );\n    }\n    return this._map.set(token, metadata);\n  }\n\n  localHas(token) {\n    return this._map.has(token);\n  }\n\n  localGet(token) {\n    return this._map.get(token);\n  }\n\n  setParent(parent) {\n    this.parent = parent;\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  values() {\n    return this._map.values();\n  }\n\n  reset() {\n    this._map.clear();\n  }\n}\n"],"file":"container.js"}