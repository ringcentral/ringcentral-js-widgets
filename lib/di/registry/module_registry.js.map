{"version":3,"file":"module_registry.js","names":["_error","require","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","ModuleRegistry","_map","Map","value","get","moduleRef","has","DIError","concat","name","metadata","resolved","set","resolve","entries","keys","reset","clear","exports"],"sources":["lib/di/registry/module_registry.ts"],"sourcesContent":["// @ts-nocheck\nimport { DIError } from '../utils/error';\n\n/**\n * Module registry is used to store module metadata.\n */\nexport default class ModuleRegistry {\n  constructor() {\n    // class reference -> metadata\n    this._map = new Map();\n  }\n\n  get(moduleRef) {\n    if (!this._map.has(moduleRef)) {\n      throw DIError(`Cannot find module [${moduleRef.name}] in ModuleRegistry`);\n    }\n    return this._map.get(moduleRef).metadata;\n  }\n\n  resolved(moduleRef) {\n    return this._map.get(moduleRef).resolved;\n  }\n\n  set(moduleRef, metadata) {\n    if (this._map.has(moduleRef)) {\n      throw DIError(`Can only register module [${moduleRef.name}] once`);\n    }\n    return this._map.set(moduleRef, { metadata, resolved: false });\n  }\n\n  resolve(moduleRef, metadata) {\n    if (!this._map.has(moduleRef)) {\n      throw DIError(\n        `Cannot resolve module metadata [${moduleRef}]: module is not found`,\n      );\n    }\n    this._map.set(moduleRef, {\n      metadata,\n      resolved: true,\n    });\n  }\n\n  has(moduleRef) {\n    return this._map.has(moduleRef);\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  keys() {\n    return this._map.keys();\n  }\n\n  reset() {\n    this._map.clear();\n  }\n}\n"],"mappings":"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"}