{"version":3,"file":"provider_registry.js","names":["_error","require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","a","n","TypeError","_defineProperties","e","r","t","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","i","_toPrimitive","toPrimitive","call","String","Number","ProviderRegistry","_map","Map","value","get","token","has","DIError","concat","providers","set","resolved","resolve","reset","clear","exports"],"sources":["lib/di/registry/provider_registry.ts"],"sourcesContent":["// @ts-nocheck\nimport { DIError } from '../utils/error';\n\n/**\n * ProviderRegistry is a centralized structure for storing provider metadata.\n * It's a map data structure mapping Token to Provider.\n */\nexport default class ProviderRegistry {\n  constructor() {\n    this._map = new Map();\n  }\n\n  get(token) {\n    if (!this._map.has(token)) {\n      throw DIError(`Can not find token [${token}] in ProviderRegistry`);\n    }\n    return this._map.get(token).providers;\n  }\n\n  set(token, providers) {\n    if (this._map.has(token)) {\n      throw DIError(`Can only register [${token}] once`);\n    }\n    return this._map.set(token, { providers, resolved: false });\n  }\n\n  resolved(token) {\n    return !!this._map.get(token).resolved;\n  }\n\n  resolve(token, providers) {\n    if (!this._map.has(token)) {\n      throw DIError(\n        `Cannot resolve provider metadata [${token}]: providers is not found`,\n      );\n    }\n    this._map.set(token, { providers, resolved: true });\n  }\n\n  has(token) {\n    return this._map.has(token);\n  }\n\n  reset() {\n    this._map.clear();\n  }\n}\n"],"mappings":"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","ignoreList":[]}