{"version":3,"file":"provider_registry.js","names":["_error","require","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","ProviderRegistry","_map","Map","value","get","token","has","DIError","concat","providers","set","resolved","resolve","reset","clear","exports"],"sources":["lib/di/registry/provider_registry.ts"],"sourcesContent":["// @ts-nocheck\nimport { DIError } from '../utils/error';\n\n/**\n * ProviderRegistry is a centralized structure for storing provider metadata.\n * It's a map data structure mapping Token to Provider.\n */\nexport default class ProviderRegistry {\n  constructor() {\n    this._map = new Map();\n  }\n\n  get(token) {\n    if (!this._map.has(token)) {\n      throw DIError(`Can not find token [${token}] in ProviderRegistry`);\n    }\n    return this._map.get(token).providers;\n  }\n\n  set(token, providers) {\n    if (this._map.has(token)) {\n      throw DIError(`Can only register [${token}] once`);\n    }\n    return this._map.set(token, { providers, resolved: false });\n  }\n\n  resolved(token) {\n    return !!this._map.get(token).resolved;\n  }\n\n  resolve(token, providers) {\n    if (!this._map.has(token)) {\n      throw DIError(\n        `Cannot resolve provider metadata [${token}]: providers is not found`,\n      );\n    }\n    this._map.set(token, { providers, resolved: true });\n  }\n\n  has(token) {\n    return this._map.has(token);\n  }\n\n  reset() {\n    this._map.clear();\n  }\n}\n"],"mappings":"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"}