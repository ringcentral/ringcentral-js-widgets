{"version":3,"file":"SipInstanceManager.js","names":["uuid","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_classCallCheck","TypeError","_defineProperties","length","enumerable","configurable","writable","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","SipInstanceManager","prefix","_prefix","value","getInstanceId","endpointId","_this","allInstances","_getAllInActiveInstancesData","currentTime","Date","now","forEach","instance","inactiveAt","_removeInstanceData","id","inactiveInstance","filter","sort","inst1","inst2","v4","setInstanceInactive","instanceId","instanceData","_saveInstanceData","keys","_getAllKeys","instances","rawData","localStorage","getItem","push","JSON","parse","setItem","concat","stringify","removeItem","indexOf","exports"],"sources":["lib/SipInstanceManager/SipInstanceManager.ts"],"sourcesContent":["import * as uuid from 'uuid';\n\ninterface SipInactiveInstanceData {\n  id: string;\n  endpointId: string;\n  inactiveAt: number;\n}\n\nexport class SipInstanceManager {\n  protected _prefix: string;\n\n  constructor(prefix: string) {\n    this._prefix = prefix;\n  }\n\n  getInstanceId(endpointId: string): string {\n    const allInstances = this._getAllInActiveInstancesData();\n    const currentTime = Date.now();\n    // clean expired data;\n    allInstances.forEach((instance) => {\n      if (\n        instance.endpointId !== endpointId ||\n        currentTime - instance.inactiveAt >= 180000\n      ) {\n        // clean instance not in current endpoint id\n        // clean instance if inactive before 3 min\n        this._removeInstanceData(instance.id);\n      }\n    });\n    // find inactive instance that inactive in 3 min\n    const inactiveInstance = allInstances\n      .filter((instance) => {\n        return (\n          instance.endpointId === endpointId &&\n          currentTime - instance.inactiveAt < 180000\n        );\n      })\n      .sort((inst1, inst2) => inst2.inactiveAt - inst1.inactiveAt)[0];\n    // reuse inactive instance\n    if (inactiveInstance) {\n      // remove it from localStorage, so it can only be used in current tab\n      this._removeInstanceData(inactiveInstance.id);\n      return inactiveInstance.id;\n    }\n    return uuid.v4();\n  }\n\n  setInstanceInactive(instanceId: string, endpointId: string): void {\n    const instanceData: SipInactiveInstanceData = {\n      id: instanceId,\n      endpointId,\n      inactiveAt: Date.now(),\n    };\n    this._saveInstanceData(instanceData);\n  }\n\n  _getAllInActiveInstancesData() {\n    const keys = this._getAllKeys();\n    const instances: SipInactiveInstanceData[] = [];\n    keys.forEach((key) => {\n      const rawData = localStorage.getItem(key);\n      if (rawData) {\n        instances.push(JSON.parse(rawData) as SipInactiveInstanceData);\n      }\n    });\n    return instances;\n  }\n\n  _saveInstanceData(instanceData: SipInactiveInstanceData) {\n    localStorage.setItem(\n      `${this._prefix}-${instanceData.id}`,\n      JSON.stringify(instanceData),\n    );\n  }\n\n  _removeInstanceData(instanceId: string) {\n    localStorage.removeItem(`${this._prefix}-${instanceId}`);\n  }\n\n  _getAllKeys(): string[] {\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i += 1) {\n      const key = localStorage.key(i);\n      if (key && key !== '' && key.indexOf(this._prefix) === 0) {\n        keys.push(key);\n      }\n    }\n    return keys;\n  }\n}\n"],"mappings":"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","ignoreList":[]}