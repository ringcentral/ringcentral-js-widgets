{"version":3,"sources":["lib/batchApiHelper.ts"],"names":["batchPutApi","platform","url","query","body","boundry","uuid","v4","options","headers","Client","_contentType","_multipartContentType","_body","reduce","data","item","_jsonContentType","JSON","stringify","put","result","_client","toMultipart","batchGetApi","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;SAOsBA,W;;;;;yEAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,QADK,QACLA,QADK,EAELC,GAFK,QAELA,GAFK,EAGLC,KAHK,QAGLA,KAHK,EAILC,IAJK,QAILA,IAJK;AAWCC,YAAAA,OAXD,sBAWuBC,IAAI,CAACC,EAAL,EAXvB;AAYCC,YAAAA,OAZD,GAYoB;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAZpB;AAaLD,YAAAA,OAAO,CAACC,OAAR,CACEC,mBAAOC,YADT,cAEOD,mBAAOE,qBAFd,wBAEiDP,OAFjD;AAGIQ,YAAAA,KAhBC,GAgBOT,IAAI,CAACU,MAAL,CAAoB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AAC9CD,cAAAA,IAAI,gBAASV,OAAT,SAAJ;AACAU,cAAAA,IAAI,cAAOL,mBAAOC,YAAd,eAA+BD,mBAAOO,gBAAtC,aAAJ;AACAF,cAAAA,IAAI,cAAOG,IAAI,CAACC,SAAL,CAAeH,IAAI,CAACZ,IAApB,CAAP,SAAJ;AACA,qBAAOW,IAAP;AACD,aALW,EAKT,EALS,CAhBP;AAsBLF,YAAAA,KAAK,gBAASR,OAAT,OAAL;AAtBK;AAAA,mBAuBgBJ,QAAQ,CAACmB,GAAT,CAAalB,GAAb,EAAkBW,KAAlB,EAAyBV,KAAzB,EAAgCK,OAAhC,CAvBhB;;AAAA;AAuBCa,YAAAA,MAvBD;AAAA,6CAyBGpB,QAAD,CAAkBqB,OAAlB,CAA0BC,WAA1B,CAAsCF,MAAtC,CAzBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA4BeG,W;;;;;yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACLvB,YAAAA,QADK,SACLA,QADK,EAELC,GAFK,SAELA,GAFK,EAGLC,KAHK,SAGLA,KAHK;AASCE,YAAAA,OATD,sBASuBC,IAAI,CAACC,EAAL,EATvB;AAUCC,YAAAA,OAVD,GAUoB;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAVpB;AAWLD,YAAAA,OAAO,CAACC,OAAR,CACEC,mBAAOC,YADT,cAEOD,mBAAOE,qBAFd,wBAEiDP,OAFjD;AAXK;AAAA,mBAcgBJ,QAAQ,CAACwB,GAAT,CAAavB,GAAb,EAAkBC,KAAlB,EAAyBK,OAAzB,CAdhB;;AAAA;AAcCa,YAAAA,MAdD;AAAA,8CAgBGpB,QAAD,CAAkBqB,OAAlB,CAA0BC,WAA1B,CAAsCF,MAAtC,CAhBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as uuid from 'uuid';\n\nimport Client from '@ringcentral/sdk/lib/http/Client';\nimport Platform from '@ringcentral/sdk/lib/platform/Platform';\n\ninterface Options {\n  headers: Record<string, string>;\n}\n\nexport async function batchPutApi({\n  platform,\n  url,\n  query,\n  body,\n}: {\n  platform: Platform;\n  url: string;\n  query?: Record<string, any>;\n  body: any[];\n}) {\n  const boundry = `Boundary_${uuid.v4()}`;\n  const options: Options = { headers: {} };\n  options.headers[\n    Client._contentType\n  ] = `${Client._multipartContentType}; boundary=${boundry}`;\n  let _body = body.reduce<string>((data, item) => {\n    data += `--${boundry}\\r\\n`;\n    data += `${Client._contentType}: ${Client._jsonContentType}\\r\\n\\r\\n`;\n    data += `${JSON.stringify(item.body)}\\r\\n`;\n    return data;\n  }, '');\n  _body += `--${boundry}--`;\n  const result = await platform.put(url, _body, query, options);\n  // TODO: fix modifier issue about SDK.\n  return (platform as any)._client.toMultipart(result);\n}\n\nexport async function batchGetApi({\n  platform,\n  url,\n  query,\n}: {\n  platform: Platform;\n  url: string;\n  query?: Record<string, any>;\n}) {\n  const boundry = `Boundary_${uuid.v4()}`;\n  const options: Options = { headers: {} };\n  options.headers[\n    Client._contentType\n  ] = `${Client._multipartContentType}; boundary=${boundry}`;\n  const result = await platform.get(url, query, options);\n  // TODO: fix modifier issue about SDK.\n  return (platform as any)._client.toMultipart(result);\n}\n"],"file":"batchApiHelper.js"}