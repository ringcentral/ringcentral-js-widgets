{"version":3,"sources":["lib/parseNumber.ts"],"names":["parseNumber","input","parsedNumber","isValid","hasInvalidChars","EvTypeError","type","callErrors","emergencyNumber","messageTypes","INVALID_NUMBER"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAmB;AAAA,eACO,wBAAM;AACvDA,IAAAA,KAAK,EAALA;AADuD,GAAN,CADP;AAAA,MACpCC,YADoC,UACpCA,YADoC;AAAA,MACtBC,OADsB,UACtBA,OADsB;AAAA,MACbC,eADa,UACbA,eADa;;AAK5C,MAAIH,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,KAA7B,IAAsCA,KAAK,KAAK,KAApD,EAA2D;AACzD,UAAM,IAAII,wBAAJ,CAAgB;AACpBC,MAAAA,IAAI,EAAEC,uBAAWC;AADG,KAAhB,CAAN;AAGD;;AAED,MAAI,CAACL,OAAD,IAAYC,eAAZ,IAA+B,CAACF,YAApC,EAAkD;AAChD,UAAM,IAAIG,wBAAJ,CAAgB;AACpBC,MAAAA,IAAI,EAAEG,oBAAaC;AADC,KAAhB,CAAN;AAGD;;AAED,SAAOR,YAAP;AACD,CAlBM","sourcesContent":["import callErrors from '@ringcentral-integration/commons/modules/Call/callErrors';\nimport { parse } from '@ringcentral-integration/phone-number';\n\nimport { messageTypes } from '../enums';\nimport { EvTypeError } from './EvTypeError';\n\nexport const parseNumber = (input: string) => {\n  const { parsedNumber, isValid, hasInvalidChars } = parse({\n    input,\n  });\n\n  if (input === '911' || input === '933' || input === '112') {\n    throw new EvTypeError({\n      type: callErrors.emergencyNumber,\n    });\n  }\n\n  if (!isValid || hasInvalidChars || !parsedNumber) {\n    throw new EvTypeError({\n      type: messageTypes.INVALID_NUMBER,\n    });\n  }\n\n  return parsedNumber;\n};\n"],"file":"parseNumber.js"}