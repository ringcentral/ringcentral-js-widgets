{"version":3,"file":"createRefreshTokenHelper.js","names":["_validateIsOffline","_interopRequireDefault","require","e","__esModule","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","createRefreshTokenHelper","getPlatform","logger","getRefreshTokenState","_ref","regeneratorRuntime","mark","_callee","error","_error$response","_error$message","_error$message$substr","isOffline","resStatus","platform","authData","tokenDataValid","refreshTokenValid","wrap","_callee$","_context","prev","next","validateIsOffline","message","Number","response","status","auth","data","sent","log","Boolean","abrupt","refreshTokenExpiresTime","refresh_token_expire_time","errorMessage","substring","call","stop","_x","clearExpiredToken","setData","access_token","expires_in","refresh_token","loggedIn","_ref2","_callee2","onCompleted","_response","state","_callee2$","_context2","get","ensureLoggedIn","t0","Error","finish","_x2","processRefreshError","_ref4","_callee3","_ref3","_yield$error$response","_yield$error$response2","_error$response2","onSessionExpired","isAARError","_callee3$","_context3","clone","json","t2","t1","t3","errors","some","_ref5","length","undefined","_ref5$errorCode","errorCode","t4","t5","clean","_x3","exports"],"sources":["lib/createRefreshTokenHelper.ts"],"sourcesContent":["import type { SDK, ApiError } from '@ringcentral/sdk';\n\nimport validateIsOffline from './validateIsOffline';\n\ntype Platform = ReturnType<SDK['platform']>;\n\nexport type CheckRefreshTokenResult = {\n  refreshTokenValid: boolean;\n  isOffline: boolean;\n  resStatus: number;\n  refreshTokenExpiresTime?: number;\n  errorMessage?: string;\n};\n\n/**\n * follow the logic in sdk, but more logic to prevent error logout\n */\nexport const createRefreshTokenHelper = (\n  getPlatform: () => Platform,\n  logger: Console,\n) => {\n  const getRefreshTokenState = async (\n    error: ApiError,\n  ): Promise<CheckRefreshTokenResult> => {\n    const isOffline = validateIsOffline(error?.message);\n    const resStatus = Number(error?.response?.status);\n\n    const platform = getPlatform();\n    const authData = await platform.auth().data();\n    const tokenDataValid = await platform.auth().refreshTokenValid();\n\n    logger.log('check platform.auth().refreshTokenValid():', tokenDataValid);\n\n    const refreshTokenValid = Boolean(\n      (isOffline || resStatus >= 500) && tokenDataValid,\n    );\n    return {\n      refreshTokenValid,\n      isOffline,\n      resStatus,\n      refreshTokenExpiresTime: authData?.refresh_token_expire_time,\n      errorMessage: error?.message?.substring?.(0, 100), // avoid too long msg to be sent to analytics\n    };\n  };\n\n  const clearExpiredToken = () => {\n    const platform = getPlatform();\n    try {\n      platform\n        .auth()\n        .setData({ access_token: '', expires_in: '-1', refresh_token: '' });\n      logger.log('Expired token data clear');\n    } catch (error: any) {\n      logger.error('clearExpiredToken|error', error?.message);\n    }\n  };\n\n  /**\n   * almost same as sdk platform.loggedIn(), but with onError callback, and when network not ready should not go into logout state\n   * @param onCompleted callback when refresh token completed\n   */\n  const loggedIn = async (\n    onCompleted?: (state: CheckRefreshTokenResult) => void,\n  ) => {\n    // let refreshDelayMs = 0;\n    const platform = getPlatform();\n    try {\n      // TODO: those will be open in next MR, we ensure all exist be pass.\n      // * when use that loggedIn method will set that delay be zero 0, using that to avoid first check loggedIn need delay 100ms\n      // in SDK node_modules/@ringcentral/sdk/src/platform/Platform.ts:565 _refresh inner delay\n      // refreshDelayMs = platform['_refreshDelayMs'];\n      // platform['_refreshDelayMs'] = 0;\n\n      if (platform['_authProxy']) {\n        await platform.get('/restapi/v1.0/client-info');\n        return true;\n      }\n\n      await platform.ensureLoggedIn();\n      return true;\n    } catch (error) {\n      // normal error after logout, skip this\n      if (\n        !(error instanceof Error) ||\n        error?.message === 'Refresh token is missing'\n      ) {\n        return false;\n      }\n\n      logger.error(\n        'Auth::ensureLoggedIn',\n        error?.message,\n        (error as ApiError)?.response?.status,\n      );\n\n      const state = await getRefreshTokenState(error);\n\n      logger.log('ensureLoggedIn.State:', state);\n\n      onCompleted?.(state);\n\n      if (error?.message === 'Refresh token has expired') {\n        clearExpiredToken();\n      }\n\n      return state.refreshTokenValid;\n    } finally {\n      // * restore the delay\n      // platform['_refreshDelayMs'] = refreshDelayMs;\n    }\n  };\n\n  /**\n   * process refresh token error\n   * @returns the state of session expired\n   */\n  const processRefreshError = async ({\n    error,\n    refreshTokenValid,\n    resStatus,\n    onSessionExpired,\n  }: Partial<CheckRefreshTokenResult> & {\n    error: ApiError;\n    onSessionExpired: () => void;\n  }) => {\n    const platform = getPlatform();\n\n    const isAARError =\n      resStatus === 403 &&\n      (await error.response?.clone().json())?.errors?.some(\n        ({ errorCode = '' } = {}) => errorCode === 'OAU-167',\n      );\n\n    if (\n      !isAARError &&\n      !refreshTokenValid &&\n      (await platform.auth().data()).access_token !== ''\n    ) {\n      onSessionExpired();\n      // clean the cache so the error doesn't show again\n      platform['_cache'].clean();\n      return true;\n    }\n  };\n\n  return {\n    getRefreshTokenState,\n    clearExpiredToken,\n    loggedIn,\n    processRefreshError,\n  };\n};\n"],"mappings":"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","ignoreList":[]}