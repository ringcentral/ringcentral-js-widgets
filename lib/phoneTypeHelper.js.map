{"version":3,"file":"phoneTypeHelper.js","names":["_ObjectMap","require","_ramda","_phoneTypes","phoneTypeOrder","Object","freeze","phoneTypes","extension","direct","contact","mobile","business","home","fax","other","phone","unknown","company","exports","phoneTypeOrderMap","addIndex","reduce","acc","item","idx","filterByPhoneTypes","filter","ObjectMap","hasValue","phoneType","sortByPhoneTypes","sort","a","b","supportedUsageTypePhoneTypeMap","ContactNumber","MobileNumber","DirectNumber","SUPPORTED_USAGE_TYPES","keys","isSupportedPhoneNumber","type","includes","usageType","convertUsageTypeToPhoneType"],"sources":["lib/phoneTypeHelper.ts"],"sourcesContent":["import type PhoneNumberResource from '@rc-ex/core/lib/definitions/PhoneNumberResource';\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { addIndex, filter, reduce, sort } from 'ramda';\n\nimport { phoneTypes } from '../enums/phoneTypes';\nimport type { PhoneNumberModel } from '../interfaces/PhoneNumber.model';\n\nexport const phoneTypeOrder = Object.freeze([\n  phoneTypes.extension,\n  phoneTypes.direct,\n  phoneTypes.contact,\n  phoneTypes.mobile,\n  phoneTypes.business,\n  phoneTypes.home,\n  phoneTypes.fax,\n  phoneTypes.other,\n\n  // not in particular order\n  phoneTypes.phone,\n  phoneTypes.unknown,\n  phoneTypes.company,\n]);\n\nexport const phoneTypeOrderMap: Record<string, any> = Object.freeze(\n  addIndex<string, any>(reduce)(\n    (acc, item, idx) => {\n      acc[item] = idx;\n      return acc;\n    },\n    {},\n    phoneTypeOrder,\n  ),\n);\n\nexport const filterByPhoneTypes = filter<PhoneNumberModel>((item) =>\n  ObjectMap.hasValue(phoneTypes, item.phoneType),\n);\n\nexport const sortByPhoneTypes = sort<PhoneNumberModel>(\n  (a, b) => phoneTypeOrderMap[a.phoneType] - phoneTypeOrderMap[b.phoneType],\n);\n\nconst supportedUsageTypePhoneTypeMap: Partial<\n  Record<NonNullable<PhoneNumberResource['usageType']>, string>\n> = {\n  ContactNumber: phoneTypes.contact,\n  MobileNumber: phoneTypes.mobile,\n  DirectNumber: phoneTypes.direct,\n};\n\nconst SUPPORTED_USAGE_TYPES = Object.keys(supportedUsageTypePhoneTypeMap);\n\n// Support all direct number + Mobile and Contact Number\nexport const isSupportedPhoneNumber = (phone: PhoneNumberResource) =>\n  phone.type ||\n  (!phone.type && SUPPORTED_USAGE_TYPES.includes(phone.usageType!));\n\nexport const convertUsageTypeToPhoneType = (\n  usageType: PhoneNumberResource['usageType'],\n) => supportedUsageTypePhoneTypeMap[usageType!] || phoneTypes.direct;\n"],"mappings":";;;;;;;;;;AACA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,WAAA,GAAAF,OAAA;AAGO,IAAMG,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAC,CAC1CC,sBAAU,CAACC,SAAS,EACpBD,sBAAU,CAACE,MAAM,EACjBF,sBAAU,CAACG,OAAO,EAClBH,sBAAU,CAACI,MAAM,EACjBJ,sBAAU,CAACK,QAAQ,EACnBL,sBAAU,CAACM,IAAI,EACfN,sBAAU,CAACO,GAAG,EACdP,sBAAU,CAACQ,KAAK;AAEhB;AACAR,sBAAU,CAACS,KAAK,EAChBT,sBAAU,CAACU,OAAO,EAClBV,sBAAU,CAACW,OAAO,CACnB,CAAC;AAACC,OAAA,CAAAf,cAAA,GAAAA,cAAA;AAEI,IAAMgB,iBAAsC,GAAGf,MAAM,CAACC,MAAM,CACjE,IAAAe,eAAQ,EAAcC,aAAM,CAAC,CAC3B,UAACC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAK;EAClBF,GAAG,CAACC,IAAI,CAAC,GAAGC,GAAG;EACf,OAAOF,GAAG;AACZ,CAAC,EACD,CAAC,CAAC,EACFnB,cACF,CACF,CAAC;AAACe,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAEK,IAAMM,kBAAkB,GAAG,IAAAC,aAAM,EAAmB,UAACH,IAAI;EAAA,OAC9DI,oBAAS,CAACC,QAAQ,CAACtB,sBAAU,EAAEiB,IAAI,CAACM,SAAS,CAAC;AAAA,CAChD,CAAC;AAACX,OAAA,CAAAO,kBAAA,GAAAA,kBAAA;AAEK,IAAMK,gBAAgB,GAAG,IAAAC,WAAI,EAClC,UAACC,CAAC,EAAEC,CAAC;EAAA,OAAKd,iBAAiB,CAACa,CAAC,CAACH,SAAS,CAAC,GAAGV,iBAAiB,CAACc,CAAC,CAACJ,SAAS,CAAC;AAAA,CAC3E,CAAC;AAACX,OAAA,CAAAY,gBAAA,GAAAA,gBAAA;AAEF,IAAMI,8BAEL,GAAG;EACFC,aAAa,EAAE7B,sBAAU,CAACG,OAAO;EACjC2B,YAAY,EAAE9B,sBAAU,CAACI,MAAM;EAC/B2B,YAAY,EAAE/B,sBAAU,CAACE;AAC3B,CAAC;AAED,IAAM8B,qBAAqB,GAAGlC,MAAM,CAACmC,IAAI,CAACL,8BAA8B,CAAC;;AAEzE;AACO,IAAMM,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIzB,KAA0B;EAAA,OAC/DA,KAAK,CAAC0B,IAAI,IACT,CAAC1B,KAAK,CAAC0B,IAAI,IAAIH,qBAAqB,CAACI,QAAQ,CAAC3B,KAAK,CAAC4B,SAAU,CAAE;AAAA;AAACzB,OAAA,CAAAsB,sBAAA,GAAAA,sBAAA;AAE7D,IAAMI,2BAA2B,GAAG,SAA9BA,2BAA2BA,CACtCD,SAA2C;EAAA,OACxCT,8BAA8B,CAACS,SAAS,CAAE,IAAIrC,sBAAU,CAACE,MAAM;AAAA;AAACU,OAAA,CAAA0B,2BAAA,GAAAA,2BAAA","ignoreList":[]}