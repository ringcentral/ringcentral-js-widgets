{"version":3,"file":"checkCountryCode.js","names":["_phoneNumber","require","_i18nIsoCountries","_interopRequireDefault","_enums","_EvTypeError","e","__esModule","checkCountryCode","input","cleanedNumber","parseIncompletePhoneNumber","toString","isE164Number","isE164","_parse","parse","parsedNumber","isValid","hasInvalidChars","parsedCountry","dialoutCountryCode","countries","alpha2ToAlpha3","EvTypeError","type","messageTypes","NO_SUPPORT_COUNTRY","exports"],"sources":["lib/checkCountryCode.ts"],"sourcesContent":["import {\n  isE164,\n  parse,\n  parseIncompletePhoneNumber,\n} from '@ringcentral-integration/phone-number';\nimport countries from 'i18n-iso-countries';\n\nimport { messageTypes } from '../enums';\n\nimport { EvTypeError } from './EvTypeError';\n\nexport const checkCountryCode = (input: string) => {\n  const cleanedNumber: string = parseIncompletePhoneNumber(input.toString());\n  const isE164Number = isE164(cleanedNumber);\n  if (isE164Number) {\n    const { parsedNumber, isValid, hasInvalidChars, parsedCountry } = parse({\n      input,\n    });\n    if (isValid && !hasInvalidChars && parsedNumber) {\n      const dialoutCountryCode = countries.alpha2ToAlpha3(parsedCountry);\n      if (dialoutCountryCode !== 'USA') {\n        throw new EvTypeError({\n          type: messageTypes.NO_SUPPORT_COUNTRY,\n        });\n      }\n    }\n  }\n};\n"],"mappings":";;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAKA,IAAAC,iBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,MAAA,GAAAH,OAAA;AAEA,IAAAI,YAAA,GAAAJ,OAAA;AAA4C,SAAAE,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAErC,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAa,EAAK;EACjD,IAAMC,aAAqB,GAAG,IAAAC,uCAA0B,EAACF,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;EAC1E,IAAMC,YAAY,GAAG,IAAAC,mBAAM,EAACJ,aAAa,CAAC;EAC1C,IAAIG,YAAY,EAAE;IAAA,IAAAE,MAAA,GACkD,IAAAC,kBAAK,EAAC;QACtEP,KAAK,EAALA;MACF,CAAC,CAAC;MAFMQ,YAAY,GAAAF,MAAA,CAAZE,YAAY;MAAEC,OAAO,GAAAH,MAAA,CAAPG,OAAO;MAAEC,eAAe,GAAAJ,MAAA,CAAfI,eAAe;MAAEC,aAAa,GAAAL,MAAA,CAAbK,aAAa;IAG7D,IAAIF,OAAO,IAAI,CAACC,eAAe,IAAIF,YAAY,EAAE;MAC/C,IAAMI,kBAAkB,GAAGC,4BAAS,CAACC,cAAc,CAACH,aAAa,CAAC;MAClE,IAAIC,kBAAkB,KAAK,KAAK,EAAE;QAChC,MAAM,IAAIG,wBAAW,CAAC;UACpBC,IAAI,EAAEC,mBAAY,CAACC;QACrB,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC;AAACC,OAAA,CAAApB,gBAAA,GAAAA,gBAAA","ignoreList":[]}