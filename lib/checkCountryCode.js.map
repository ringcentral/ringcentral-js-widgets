{"version":3,"sources":["lib/checkCountryCode.ts"],"names":["checkCountryCode","input","cleanedNumber","toString","isE164Number","parsedNumber","isValid","hasInvalidChars","parsedCountry","dialoutCountryCode","countries","alpha2ToAlpha3","EvTypeError","type","messageTypes","NO_SUPPORT_COUNTRY"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;AAMA;;AACA;;;;AAEO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAmB;AACjD,MAAMC,aAAqB,GAAG,6CAA2BD,KAAK,CAACE,QAAN,EAA3B,CAA9B;AACA,MAAMC,YAAY,GAAG,yBAAOF,aAAP,CAArB;;AACA,MAAIE,YAAJ,EAAkB;AAAA,iBACkD,wBAAM;AACtEH,MAAAA,KAAK,EAALA;AADsE,KAAN,CADlD;AAAA,QACRI,YADQ,UACRA,YADQ;AAAA,QACMC,OADN,UACMA,OADN;AAAA,QACeC,eADf,UACeA,eADf;AAAA,QACgCC,aADhC,UACgCA,aADhC;;AAIhB,QAAIF,OAAO,IAAI,CAACC,eAAZ,IAA+BF,YAAnC,EAAiD;AAC/C,UAAMI,kBAAkB,GAAGC,6BAAUC,cAAV,CAAyBH,aAAzB,CAA3B;;AACA,UAAIC,kBAAkB,KAAK,KAA3B,EAAkC;AAChC,cAAM,IAAIG,wBAAJ,CAAgB;AACpBC,UAAAA,IAAI,EAAEC,oBAAaC;AADC,SAAhB,CAAN;AAGD;AACF;AACF;AACF,CAhBM","sourcesContent":["import countries from 'i18n-iso-countries';\n\nimport {\n  isE164,\n  parse,\n  parseIncompletePhoneNumber,\n} from '@ringcentral-integration/phone-number';\n\nimport { messageTypes } from '../enums';\nimport { EvTypeError } from './EvTypeError';\n\nexport const checkCountryCode = (input: string) => {\n  const cleanedNumber: string = parseIncompletePhoneNumber(input.toString());\n  const isE164Number = isE164(cleanedNumber);\n  if (isE164Number) {\n    const { parsedNumber, isValid, hasInvalidChars, parsedCountry } = parse({\n      input,\n    });\n    if (isValid && !hasInvalidChars && parsedNumber) {\n      const dialoutCountryCode = countries.alpha2ToAlpha3(parsedCountry);\n      if (dialoutCountryCode !== 'USA') {\n        throw new EvTypeError({\n          type: messageTypes.NO_SUPPORT_COUNTRY,\n        });\n      }\n    }\n  }\n};\n"],"file":"checkCountryCode.js"}