{"version":3,"sources":["lib/dataUrl.ts"],"names":["REGEXP_BASE64_DATA_URL","isBase64DataUrl","value","test","dataUrlToInline","dataURL","indexOf","atob","split"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,sBAAsB,GAC1B,qGADF;;AAGO,SAASC,eAAT,CAAyBC,KAAzB,EAAwC;AAC7C,SAAOF,sBAAsB,CAACG,IAAvB,CAA4BD,KAA5B,CAAP;AACD;;AAEM,SAASE,eAAT,CAAyBC,OAAzB,EAA0C;AAC/C,MAAIA,OAAO,CAACC,OAAR,CAAgB,QAAhB,IAA4B,CAAC,CAAjC,EAAoC;AAClC,WAAOC,IAAI,CAACF,OAAO,CAACG,KAAR,CAAc,SAAd,EAAyB,CAAzB,CAAD,CAAX;AACD;;AACD,SAAO,EAAP;AACD","sourcesContent":["const REGEXP_BASE64_DATA_URL =\n  /^(data:\\w+\\/[a-zA-Z+\\-.]+;base64,)?(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/i;\n\nexport function isBase64DataUrl(value: string) {\n  return REGEXP_BASE64_DATA_URL.test(value);\n}\n\nexport function dataUrlToInline(dataURL: string) {\n  if (dataURL.indexOf('base64') > -1) {\n    return atob(dataURL.split('base64,')[1]);\n  }\n  return '';\n}\n"],"file":"dataUrl.js"}