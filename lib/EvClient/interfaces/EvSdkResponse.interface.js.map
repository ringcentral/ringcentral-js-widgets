{"version":3,"file":"EvSdkResponse.interface.js","names":[],"sources":["lib/EvClient/interfaces/EvSdkResponse.interface.ts"],"sourcesContent":["import type {\n  AgentTypesType,\n  DirectTransferNotificationTypes,\n  DirectTransferStatues,\n  DirectTransferTypes,\n  OriginAgentTypesType,\n} from '../../../enums';\n\nexport type EvTokenType = 'Bearer';\nexport type EvOkFail = 'OK' | 'FAILURE';\nexport type EvSessionType = 'AGENT' | 'OUTBOUND' | 'INBOUND';\n\nexport type EvBaseCall = {\n  uii: string;\n  agentId: string;\n  dialDest: string;\n  queueDts: string; // 2019-11-11 12:35:23\n  queueTime: string;\n  ani: string;\n  dnis: string;\n  callType: 'INBOUND' | 'OUTBOUND';\n  appUrl: string;\n  isMonitoring: boolean;\n  allowHold: boolean;\n  allowTransfer: boolean;\n  allowManualInternationalTransfer: boolean;\n  allowDirectAgentTransfer: string;\n  allowHangup: boolean;\n  allowRequeue: boolean;\n  allowEndCallForEveryone: boolean;\n  scriptId: string;\n  scriptVersion: string;\n  surveyId: string;\n  surveyPopType: string;\n  requeueType: string;\n  hangupOnDisposition: boolean;\n  queue: EvQueue;\n  agentRecording: EvAgentRecording;\n  outdialDispositions: EvOutdialDispositions;\n  requeueShortcuts: any[];\n  baggage: EvBaggage;\n  scriptResponse: {};\n  lead: EvLead;\n  // sessionId: string;\n  transferPhoneBook: EvTransferPhoneBookItem[];\n};\n\nexport interface EvACKResponse {\n  message: string;\n  detail: string;\n  uii: string;\n  status: EvOkFail;\n  type: string;\n}\n\nexport interface EvEndedCall {\n  message: string;\n  detail: string;\n  uii: string;\n  sessionId: string;\n  agentId: string;\n  callDts: string;\n  duration: string;\n  termParty: string;\n  termReason: string;\n  recordingUrl: string;\n  dispositionTimeout: string;\n}\nexport interface EvTransferPhoneBookItem {\n  name: string;\n  destination: string;\n  countryId: string;\n}\n\nexport interface EvLead {\n  leadPhone: string;\n  showLeadInfo: string;\n  extraData: {};\n}\n\nexport interface EvScriptResponse {\n  message: string;\n  detail: string;\n  status: boolean;\n  scriptId: string;\n  scriptName?: string;\n  version: string;\n  json: string; // format as: EvScriptResponseJSON\n}\n\nexport interface EvBaggage {\n  ani: string;\n  dnis: string;\n  uii: string;\n  sourceId: string;\n  sourceName: string;\n  sourceDesc: string;\n  sourceType: string;\n  agentFirstName: string;\n  agentLastName: string;\n  agentExternalId: string;\n  agentType: string;\n  agentEmail: string;\n  agentUserName: string;\n  ivrCrmCaseId: string;\n  ivrCrmRecordId: string;\n  ivrCrmObjectValue: string;\n  ivrCrmObjectType: string;\n  ivrAlertSubject_1: string;\n  ivrAlertBody_1: string;\n  ivrAlertSubject_2: string;\n  ivrAlertBody_2: string;\n  ivrAlertSubject_3: string;\n  ivrAlertBody_3: string;\n}\n\nexport interface EvReceivedTransferCall {\n  message: string;\n  detail: string;\n  status: DirectTransferNotificationTypes;\n  agentId: string;\n  uii: string;\n  ani: string;\n  dnis: string;\n  sourceType: string;\n  sourceId: string;\n  sourceName: string;\n  voicemailUrl: string;\n}\n\nexport interface EvAgentRecording {\n  default: 'ON' | 'OFF';\n  pause: number;\n  agentRecording: boolean;\n}\n\nexport interface EvQueue {\n  isCampaign: boolean;\n  number: string;\n  name: string;\n  description: string;\n}\n\nexport interface EvOutdialDispositions {\n  type: string;\n  dispositions: EvDisposition[];\n}\n\nexport interface EvDisposition {\n  contactForwarding: boolean;\n  dispositionId: string;\n  isComplete: boolean;\n  isDefault: boolean;\n  requireNote: boolean;\n  saveSurvey: boolean;\n  timeout: string;\n  xfer: boolean;\n  disposition: string;\n}\n\nexport interface EvClientOptions {\n  options: EvAgentOptions;\n  callbacks?: {\n    closeResponse: () => void;\n    openResponse: (response: EvOpenSocketResult) => void;\n  };\n}\n\nexport type Deps = {\n  evClientOptions: EvClientOptions;\n};\n\nexport interface EvHoldResponse {\n  message: string;\n  detail: string;\n  status: EvOkFail;\n  holdState: boolean;\n  sessionId: string;\n  uii: string;\n}\n\nexport interface EvDropSessionNotification {\n  message: string;\n  detail: string;\n  status: EvOkFail;\n  transferEnd: {\n    sessionId: string;\n    destination: string;\n    uii: string;\n  };\n  sessionId: string;\n  uii: string;\n}\n\nexport interface EvAddSessionNotification {\n  message: string;\n  detail: string;\n  status: EvOkFail;\n  sessionId: string;\n  uii: string;\n  phone: string;\n  sessionType: EvSessionType;\n  sessionLabel: string;\n  allowControl: boolean;\n  monitoring: boolean;\n  agentId: string;\n  agentName: string;\n  recordingUrl: string;\n  transferSessions: {\n    [P: string]: {\n      sessionId: string;\n      destination: string;\n      uii: string;\n    };\n  };\n}\n\nexport interface EvOpenSocketResult {\n  reconnect?: boolean;\n  error?: string;\n}\n\nexport interface EvAgentInfo {\n  type: string;\n  data: EvAgentData;\n}\n\nexport interface EvAgentData {\n  authenticateResponse: EvAuthenticateAgentWithRcAccessTokenRes;\n  agentConfig: EvAgentConfig;\n}\n\nexport interface EvAgentOptions {\n  authHost: string;\n  localTesting: boolean;\n  allowMultiSocket: boolean;\n  isSecureSocket: boolean;\n}\n\nexport type EvCallback = (messageType: any, response: any) => void;\n\nexport type EvMessageRes = {\n  type: string;\n  data: EvAgentConfig;\n};\n\nexport interface EvOffhookInitResponse {\n  detail: string;\n  message: string;\n  monitoring: boolean;\n  status: string;\n}\n\nexport interface EvOffhookTermResponse {\n  detail: string;\n  message: string;\n  monitoring: boolean;\n  status: string;\n}\n\nexport interface EvEarlyUiiResponse {\n  agentId: string;\n  detail: string;\n  message: string;\n  status: EvOkFail;\n  uii: string;\n}\n\nexport interface EvAgentConfig {\n  message: string;\n  detail: string;\n  status: string;\n  agentSettings: EvAgentSettings;\n  agentPermissions: EvAgentPermissions;\n  applicationSettings: EvApplicationSettings;\n  chatSettings: EvChatSettings;\n  connectionSettings: EvConnectionSettings;\n  inboundSettings: EvInboundSettings;\n  outboundSettings: EvOutboundSettings;\n  scriptSettings: EvScriptSettings;\n\n  holdState?: boolean;\n  sessionId?: string;\n  uii?: string;\n}\n\nexport interface EvScriptSettings {\n  availableScripts: EvAvailableScript[];\n  loadedScripts: EvAllowLeadUpdatesByCampaign;\n}\n\nexport interface EvAvailableScript {\n  scriptId: string;\n  scriptName: string;\n}\n\nexport interface EvOutboundSettings {\n  availableCampaigns: any[];\n  availableOutdialGroups: any[];\n  insertCampaigns: any[];\n  defaultDialGroup: string;\n  outdialGroup: EvAllowLeadUpdatesByCampaign;\n  previewDialLeads: any[];\n  tcpaSafeLeads: any[];\n  campaignDispositions: any[];\n}\n\nexport interface EvInboundSettings {\n  availableQueues: EvAvailableQueue[];\n  availableSkillProfiles: EvAvailableSkillProfile[];\n  queues: any[];\n  skillProfile: EvAvailableSkillProfile;\n  availableRequeueQueues: EvAvailableRequeueQueue[];\n}\n\nexport interface EvAvailableSkillProfile {\n  profileId: string;\n  profileName: string;\n  isDefault?: string;\n  profileDesc?: string;\n}\n\nexport interface EvAvailableRequeueQueue {\n  gateGroupId: string;\n  groupName: string;\n  gates: EvGate[];\n  skills: EvSkill[];\n}\n\nexport interface EvSkill {\n  skillDesc: string;\n  skillId: string;\n  skillName: string;\n}\n\nexport interface EvGate {\n  gateDesc: string;\n  gateId: string;\n  gateName: string;\n}\n\nexport interface EvAvailableQueue {\n  defaultDestOverride?: string;\n  gateDesc?: string;\n  gateId: string;\n  gateName: string;\n}\n\nexport interface EvConnectionSettings {\n  hashCode?: any;\n  reconnect: boolean;\n}\n\nexport interface EvChatSettings {\n  availableChatQueues: any[];\n  availableChatRooms: EvAvailableChatRoom[];\n  chatQueues: any[];\n  alias: string;\n  availableChatRequeueQueues: any[];\n}\n\nexport interface EvAvailableChatRoom {\n  roomDesc: string;\n  roomId: string;\n  roomName: string;\n}\n\nexport interface EvApplicationSettings {\n  availableCountries: EvAvailableCountry[];\n  isLoggedInIS: boolean;\n  socketConnected: boolean;\n  socketDest: string;\n  isTcpaSafeMode: boolean;\n  pciEnabled: boolean;\n}\n\nexport interface EvAvailableCountry {\n  countryId: string;\n  countryName: string;\n}\n\nexport interface EvAgentPermissions {\n  allowBlended: boolean;\n  allowCallControl: boolean;\n  allowChat: boolean;\n  allowCrossQueueRequeue: boolean;\n  allowInbound: boolean;\n  allowLeadInserts: boolean;\n  allowLeadSearch: boolean;\n  allowLoginControl: boolean;\n  allowLoginUpdates: boolean;\n  allowManualCalls: boolean;\n  allowManualPass: boolean;\n  allowManualIntlCalls: boolean;\n  allowManualOutboundGates: boolean;\n  allowOffHook: boolean;\n  allowOutbound: boolean;\n  allowPreviewLeadFilters: boolean;\n  allowLeadUpdatesByCampaign: EvAllowLeadUpdatesByCampaign;\n  disableSupervisorMonitoring: boolean;\n  progressiveEnabled: boolean;\n  requireFetchedLeadsCalled: boolean;\n  showLeadHistory: boolean;\n  allowAutoAnswer: boolean;\n  defaultAutoAnswerOn: boolean;\n  allowHistoricalDialing: boolean;\n  allowAgentStats: boolean;\n  allowCampaignStats: boolean;\n  allowGateStats: boolean;\n  allowChatStats: boolean;\n}\n\ninterface EvAllowLeadUpdatesByCampaign {}\n\nexport interface EvAgentSettings {\n  accountId?: any;\n  agentId: string;\n  agentType: string;\n  altDefaultLoginDest: string;\n  availableAgentStates: EvAvailableAgentState[];\n  callerIds: EvCallerId[];\n  callState?: any;\n  currentState: string;\n  currentStateLabel: string;\n  defaultLoginDest: string;\n  dialDest: string;\n  email: string;\n  externalAgentId: string;\n  firstName: string;\n  guid: string;\n  isLoggedIn: boolean;\n  isOffhook: boolean;\n  isMonitoring: boolean;\n  initLoginState: string;\n  initLoginStateLabel: string;\n  isOutboundPrepay: boolean;\n  lastName: string;\n  loginDTS: string;\n  loginType: string;\n  maxBreakTime: string;\n  maxLunchTime: string;\n  onCall: boolean;\n  onManualOutdial: boolean;\n  outboundManualDefaultRingtime: string;\n  pendingCallbacks: any[];\n  pendingDialGroupChange: number;\n  phoneLoginPin: string;\n  realAgentType: string;\n  supervisors: any[];\n  totalCalls: number;\n  transferNumber: string;\n  updateDGFromAdminUI: boolean;\n  updateLoginMode: boolean;\n  username: string;\n  wasMonitoring: boolean;\n  agentPassword: string;\n  autoAnswerCalls: boolean;\n}\n\nexport interface EvCallerId {\n  description: string;\n  number: string;\n}\n\nexport interface EvAvailableAgentState {\n  agentAuxState: string;\n  agentState: string;\n  rank: string;\n}\n\nexport interface RawEvAuthenticateAgentWithRcAccessTokenRes {\n  platformId: string;\n  rcAccessToken: string;\n  tokenType: string;\n  authType: string;\n  accessToken: string;\n  refreshToken?: any;\n  socketUrl: string;\n  socketPort: number;\n  agents: RawEvAgent[];\n  // Authenticate Error\n  message?: string;\n  type?: string;\n}\n\nexport type EvAuthenticateAgentWithRcAccessTokenRes = Omit<\n  RawEvAuthenticateAgentWithRcAccessTokenRes,\n  'agents'\n> & {\n  agents: EvAgents;\n};\n\nexport interface EvAuthenticateAgentWithEngageAccessTokenRes {\n  platformId: string;\n  tokenType: string;\n  engageAccessToken: string;\n  authType: string;\n  accessToken: string;\n  refreshToken: null;\n  socketUrl: string;\n  socketPort: number;\n  agents: RawEvAgent[];\n}\n\nexport type EvAgent = Omit<RawEvAgent, 'agentType'> & {\n  agentType: AgentTypesType;\n};\n\nexport type EvAgents = EvAgent[];\n\nexport interface RawEvAgent {\n  agentId: string;\n  firstName: string;\n  lastName: string;\n  email?: any;\n  username: string;\n  agentType: OriginAgentTypesType;\n  rcUserId: number;\n  accountId: string;\n  accountName: string;\n  agentGroupId?: any;\n  externalAgentId?: any;\n  location?: any;\n  team?: any;\n  allowLoginControl: boolean;\n  allowLoginUpdates: boolean;\n  password?: any;\n  agentRank?: any;\n  initLoginBaseState?: any;\n  ghostRnaAction?: any;\n  enableSoftphone?: any;\n  altDefaultLoginDest?: any;\n  phoneLoginPin?: any;\n  manualOutboundDefaultCallerId?: any;\n  directAgentExtension?: any;\n  maxChats?: any;\n}\n\nexport interface EvDispositionCallOptions {\n  uii: string;\n  dispId: string;\n  notes?: string;\n  callback?: boolean;\n  callbackDTS?: string;\n  contactForwardNumber?: string;\n  survey?: string;\n  externId?: string;\n  leadId?: string;\n  requestId?: string;\n}\n\nexport interface EvLogoutAgentResponse {\n  detail: string;\n  message: string;\n  status: string;\n}\n\nexport interface EvDirectAgentListItem {\n  agentAuxState: string;\n  agentId: string;\n  agentState: string;\n  available: boolean;\n  firstName: string;\n  lastName: string;\n  pendingDisp: boolean;\n  stateDuration: string;\n  username: string;\n}\n\nexport interface EvDirectAgentListResponse {\n  status: 'true' | 'false';\n  message: EvOkFail;\n  agents: EvDirectAgentListItem[];\n}\n\nexport type EvDirectAgentTransferResponse = {\n  message: string;\n  detail: string;\n  status: DirectTransferStatues;\n  type: DirectTransferTypes;\n};\n\nexport interface EvTransferCallResponse {\n  agentId: string;\n  uii: string;\n  sessionId: string;\n  status: EvOkFail;\n  dialDest: string;\n  message: string;\n  detail: string;\n}\n\nexport interface RecordResponse {\n  message: string;\n  detail: string;\n  status: 'FAILURE' | 'OK';\n  uii: string;\n  state: 'RECORDING' | 'STOPPED';\n}\n\nexport interface PauseRecordResponse {\n  detail: string;\n  message: string;\n  pause: string;\n  state: 'RECORDING' | 'PAUSED';\n  status: 'OK' | 'FAILURE';\n  uii: string;\n}\n\nexport type PauseRecord = Omit<PauseRecordResponse, 'pause'> & {\n  pause: number;\n};\n\nexport interface EvColdTransferCallResponse extends EvTransferCallResponse {}\n\nexport interface EvWarmTransferCallResponse extends EvTransferCallResponse {}\n\nexport interface EvColdTransferIntlCallResponse\n  extends EvTransferCallResponse {}\n\nexport interface EvWarmTransferIntlCallResponse\n  extends EvTransferCallResponse {}\n\nexport interface EvRequeueCallResponse {\n  message: string;\n  detail: string;\n  status: EvOkFail;\n  agentId: string;\n  uii: string;\n  queueId: string;\n}\n\nexport interface EvConfigureAgentOptions {\n  dialDest: string;\n  queueIds?: string[];\n  chatIds?: string[];\n  skillProfileId?: string;\n  dialGroupId?: string;\n  updateFromAdminUI?: boolean;\n  isForce?: boolean;\n  callback?(): void;\n}\n\nexport interface EvAgentState {\n  agentAuxState: string;\n  agentState: string;\n}\n\nexport interface EvDispositionManualPassOptions {\n  dispId: string;\n  notes: string;\n  callbackDTS?: string;\n  leadId?: string;\n  requestId?: string;\n  externId?: string;\n}\n\nexport interface EvAgentStateResponse {\n  message: string;\n  detail: string;\n  status: string;\n  agentId: string;\n  previousState: string;\n  currentState: string;\n  previousAuxState: string;\n  currentAuxState: string;\n}\n\nexport interface EvAgentScriptResult {\n  call: EvBaseCall;\n  lead: {};\n  model: EvAgentScriptResultModel;\n  renderFormValid: boolean;\n  scriptComplete: boolean;\n}\n\nexport interface EvAgentScriptResultModel {\n  [callId: string]: { value: any; leadField: string };\n}\n\nexport interface EvCallDispositionItem {\n  dispositionId: string;\n  notes: string;\n}\n"],"mappings":""}