{"version":3,"file":"EvClient.js","names":["_SDK","_interopRequireDefault","require","_di","_utils","_core","_events","_enums","_EvTypeError","_constant","_enums2","_callbackTypes","_dec","_class","_class2","_descriptor","e","__esModule","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","_initializerDefineProperty","l","initializer","call","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","slice","reverse","reduce","_initializerWarningHelper","Error","EvClient","Module","name","deps","_RcModuleV","_super","_this","_sdk","_onOpen","_onClose","_Sdk","AgentLibrary","_options","_eventEmitter","EventEmitter","_callbacks","_deps","evClientOptions","options","_this$_deps$evClientO","callbacks","closeResponse","openResponse","res","setAppStatus","evStatus","CONNECTED","emit","EvCallbackTypes","OPEN_SOCKET","terminateStats","console","log","CLOSED","CLOSE_SOCKET","window","localStorage","authHost","getItem","addListener","type","listener","addListenerOnce","once","removeListener","loadCurrentCall","_this2","status","appStatus","setEnv","setItem","location","reload","setSIPNoLog","onInitOnce","initSDK","_this3","_objectSpread2","Sdk","ACK","on","eventType","callback","_callback","setCallbacks","getEventCallback","getCallback","getRefreshedToken","authenticateAgentWithEngageAccessToken","engageAccessToken","_this4","LOGIN","response","configureAgent","_ref","_this5","dialDest","queueIds","chatIds","skillProfileId","dialGroupId","_ref$updateFromAdminU","updateFromAdminUI","_ref$isForce","isForce","loginAgent","messageTypes","CONFIGURE_AGENT","data","dispositionManualPass","_ref2","_this6","dispId","notes","callbackDTS","leadId","requestId","externId","dispositionCall","_ref3","uii","_ref3$dispId","_ref3$notes","contactForwardNumber","survey","_ref3$requestId","decodeUii","authenticateAgent","rcAccessToken","tokenType","_this7","authenticateAgentWithRcAccessToken","_ref4","regeneratorRuntime","mark","_callee","_agents","agents","wrap","_callee$","_context","prev","next","accessToken","LOGINED","map","agent","agentId","concat","agentType","AGENT_TYPES","stop","_x","openSocket","_this8","hasSupportWebSocket","EvTypeError","INVALID_BROWSER","getAgentConfig","_this9","_getAndHandleAuthenticateResponse","_callee2","_this10","authenticateResponse","_callee2$","_context2","waitUntilTo","interval","timeout","CONNECT_TIMEOUT","sent","message","CONNECT_ERROR","NO_AGENT","UNEXPECTED_AGENT","abrupt","getAndHandleAuthenticateResponse","_x2","_x3","closeSocket","hangup","_ref5","sessionId","_ref5$resetPendingDis","resetPendingDisp","logoutAgent","_this11","result","manualOutdial","_ref6","destination","callerId","ringTime","countryId","queueId","manualOutdialCancel","offhookInit","offhookTerm","hold","holdState","pauseRecord","isRecord","_this12","reject","formattedResponse","pause","record","state","_this13","holdSession","_ref7","coldTransferCall","_ref8","_this14","_ref8$callerId","_ref8$sipHeaders","sipHeaders","coldXfer","warmTransferCall","_ref9","_this15","_ref9$callerId","_ref9$sipHeaders","warmXfer","coldTransferIntlCall","_ref10","_this16","_ref10$callerId","_ref10$sipHeaders","_ref10$countryId","internationalColdXfer","warmTransferIntlCall","_ref11","_this17","_ref11$callerId","_ref11$sipHeaders","_ref11$countryId","internationalWarmXfer","cancelWarmTransferCall","warmXferCancel","requeueCall","_ref12","_this18","_ref12$skillId","skillId","_ref12$maintain","maintain","fetchDirectAgentList","_this19","directAgentXferList","encodeUii","_ref13","_encodeSymbol","encodeRingingUii","_ref14","split","getMainId","rejectDirectAgentTransferCall","rejectDirectAgentXfer","coldDirectAgentTransfer","targetAgentId","coldDirectAgentXfer","warmDirectAgentTransfer","warmDirectAgentXfer","sendVoicemailDirectAgentTransfer","voicemailDirectAgentXfer","cancelDirectAgentTransfer","cancelDirectAgentXfer","setAgentState","agentState","agentAuxState","_multiLoginRequest","_this20","multiLoginRequest","GENERIC_NOTIFICATION","messageCode","_multiLoginRequest2","_callee3","_this21","_callee3$","_context3","t0","sipInit","sipAnswer","sipRegister","sipTerminate","sipHangUp","sipReject","sipSendDTMF","dtmf","sipToggleMute","getScript","scriptId","version","_this22","_saveScriptResult","_callee4","jsonResult","_callee4$","_context4","saveScriptResult","_x4","_x5","_x6","_getKnowledgeBaseGroups","_callee5","knowledgeBaseGroupIds","uiModel","HttpService","agentSettings","_yield$HttpService$ht","_callee5$","_context5","_getUIModel","getInstance","_HttpService","getAgentSettings","authenticateRequest","httpGet","accountId","headers","Authorization","queryParams","guid","JSON","parse","getKnowledgeBaseGroups","_x7","get","getCurrentCall","socket","RcModuleV2","START","action","exports"],"sources":["lib/EvClient/EvClient.ts"],"sourcesContent":["// eslint-disable-next-line import/no-unresolved\nimport AgentLibrary from '@SDK';\nimport { Module } from '@ringcentral-integration/commons/lib/di';\nimport { waitUntilTo } from '@ringcentral-integration/commons/utils';\nimport { action, RcModuleV2, state } from '@ringcentral-integration/core';\nimport { EventEmitter } from 'events';\n\nimport { AGENT_TYPES, messageTypes } from '../../enums';\nimport { EvTypeError } from '../EvTypeError';\nimport { _encodeSymbol } from '../constant';\n\nimport { evStatus } from './enums';\nimport { EvCallbackTypes } from './enums/callbackTypes';\nimport type {\n  Deps,\n  EvACKResponse,\n  EvAddSessionNotification,\n  EvAgentConfig,\n  EvAgentOptions,\n  EvAgentScriptResult,\n  EvAgentSettings,\n  EvAuthenticateAgentWithEngageAccessTokenRes,\n  EvAuthenticateAgentWithRcAccessTokenRes,\n  EvBaseCall,\n  EvClientCallMapping,\n  EvColdTransferCallResponse,\n  EvColdTransferIntlCallResponse,\n  EvConfigureAgentOptions,\n  EvDirectAgentListResponse,\n  EvDispositionCallOptions,\n  EvDispositionManualPassOptions,\n  EvLogoutAgentResponse,\n  EvMessageRes,\n  EvOpenSocketResult,\n  EvRequeueCallResponse,\n  EvRequeueOption,\n  EvScriptResponse,\n  EvTokenType,\n  EvWarmTransferCallResponse,\n  EvWarmTransferIntlCallResponse,\n  PauseRecord,\n  PauseRecordResponse,\n  RawEvAuthenticateAgentWithRcAccessTokenRes,\n  RecordResponse,\n} from './interfaces';\n\ntype ListenerType = (typeof EvCallbackTypes)['OPEN_SOCKET' | 'CLOSE_SOCKET'];\n\ntype Listener<\n  T extends keyof EvClientCallMapping,\n  U extends EvClientCallMapping = EvClientCallMapping,\n> = (res: U[T]) => void;\n\nexport type EvClientTransferParams = {\n  dialDest: string;\n  callerId?: string;\n  sipHeaders?: string[];\n  countryId?: string;\n};\n\nexport type EvClientHandUpParams = {\n  sessionId: string;\n  resetPendingDisp?: boolean;\n};\n\nexport type EvClientHoldSessionParams = {\n  state: boolean;\n  sessionId: string;\n};\n\nexport type EvClientManualOutdialParams = {\n  destination: string;\n  callerId: string;\n  ringTime: number;\n  queueId: string;\n  countryId: string;\n};\n\n@Module({\n  name: 'EvClient',\n  deps: ['EvClientOptions'],\n})\nclass EvClient extends RcModuleV2<Deps> {\n  /** SDK instance */\n  private _sdk: any;\n\n  private _onOpen: (response: EvClientCallMapping['openResponse']) => void;\n\n  private _onClose: () => void;\n\n  private _Sdk = AgentLibrary;\n\n  private _options: EvAgentOptions;\n\n  private _eventEmitter = new EventEmitter();\n\n  private _callbacks: Record<string, Function> = {};\n\n  @state\n  appStatus: string = evStatus.START;\n\n  constructor(deps: Deps) {\n    super({ deps });\n    this._options = this._deps.evClientOptions.options;\n    const { closeResponse, openResponse } =\n      this._deps.evClientOptions.callbacks;\n    this._onOpen = (res) => {\n      this.setAppStatus(evStatus.CONNECTED);\n      openResponse(res);\n      this._eventEmitter.emit(EvCallbackTypes.OPEN_SOCKET, res);\n      // ensure for WebSocket keep-alive connection\n      this._sdk.terminateStats();\n    };\n    this._onClose = () => {\n      console.log('EvCallbackTypes.CLOSE_SOCKET~');\n      this.setAppStatus(evStatus.CLOSED);\n      closeResponse();\n      this._eventEmitter.emit(EvCallbackTypes.CLOSE_SOCKET);\n    };\n    // Used for toggle auth host about Engage Voice backend.\n    if (window.localStorage) {\n      const authHost = window.localStorage.getItem('__authHost__');\n      if (authHost) {\n        this._options.authHost = authHost;\n      }\n    }\n  }\n\n  addListener<T extends ListenerType>(type: T, listener: Listener<T>) {\n    this._eventEmitter.addListener(type, listener);\n  }\n\n  addListenerOnce<T extends ListenerType>(type: T, listener: Listener<T>) {\n    this._eventEmitter.once(type, listener);\n  }\n\n  removeListener<T extends ListenerType>(\n    type: ListenerType,\n    listener: Listener<T>,\n  ) {\n    this._eventEmitter.removeListener(type, listener);\n  }\n\n  loadCurrentCall() {\n    return new Promise<EvBaseCall | void>((resolve) => {\n      this._sdk.loadCurrentCall(resolve);\n    });\n  }\n\n  get currentCall(): EvBaseCall {\n    return this._sdk.getCurrentCall();\n  }\n\n  @action\n  setAppStatus(status: string) {\n    this.appStatus = status;\n  }\n\n  setEnv(authHost: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem('__authHost__', authHost);\n      window.location.reload();\n    }\n  }\n\n  setSIPNoLog(authHost: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem('__SIP_NO_LOG__', authHost);\n      window.location.reload();\n    }\n  }\n\n  override onInitOnce() {\n    this.initSDK();\n  }\n\n  initSDK() {\n    console.log('initSDK');\n    const { _Sdk: Sdk } = this;\n    this._sdk = new Sdk({\n      callbacks: {\n        ...this._callbacks,\n        [EvCallbackTypes.CLOSE_SOCKET]: this._onClose,\n        [EvCallbackTypes.OPEN_SOCKET]: this._onOpen,\n        [EvCallbackTypes.ACK]: (res: EvACKResponse) => {\n          this._eventEmitter.emit(EvCallbackTypes.ACK, res);\n        },\n      },\n      ...this._options,\n    });\n  }\n\n  on(eventType: string, callback: (...args: any[]) => void) {\n    const _callback = {\n      [eventType]: (...args: any[]) => callback(...args),\n    };\n\n    this._sdk.setCallbacks(_callback);\n    this._callbacks = {\n      ...this._callbacks,\n      ..._callback,\n    };\n  }\n\n  getEventCallback(eventType: string) {\n    return this._sdk.getCallback(eventType);\n  }\n\n  getRefreshedToken() {\n    this._sdk.getRefreshedToken();\n  }\n\n  authenticateAgentWithEngageAccessToken(engageAccessToken: string) {\n    return new Promise<EvAuthenticateAgentWithEngageAccessTokenRes>(\n      (resolve) => {\n        this.setAppStatus(evStatus.LOGIN);\n        this._sdk.authenticateAgentWithEngageAccessToken(\n          engageAccessToken,\n          (response: EvAuthenticateAgentWithEngageAccessTokenRes) => {\n            resolve(response);\n          },\n        );\n      },\n    );\n  }\n\n  configureAgent({\n    dialDest,\n    queueIds,\n    chatIds,\n    skillProfileId,\n    dialGroupId,\n    updateFromAdminUI = false,\n    isForce = false,\n  }: EvConfigureAgentOptions) {\n    return new Promise<EvMessageRes>((resolve) => {\n      this._sdk.loginAgent(\n        dialDest,\n        queueIds,\n        chatIds,\n        skillProfileId,\n        dialGroupId,\n        updateFromAdminUI,\n        isForce,\n        (res: any) => {\n          resolve({\n            type: messageTypes.CONFIGURE_AGENT,\n            data: res,\n          });\n        },\n      );\n    });\n  }\n\n  dispositionManualPass({\n    dispId,\n    notes,\n    callbackDTS,\n    leadId,\n    requestId,\n    externId,\n  }: EvDispositionManualPassOptions) {\n    return new Promise<EvDispositionManualPassOptions>((resolve) => {\n      this._sdk.dispositionManualPass(\n        dispId,\n        notes,\n        (response: EvDispositionManualPassOptions) => {\n          resolve(response);\n        },\n        callbackDTS,\n        leadId,\n        requestId,\n        externId,\n      );\n    });\n  }\n\n  dispositionCall({\n    uii,\n    dispId = '',\n    notes = '',\n    callback,\n    callbackDTS,\n    contactForwardNumber,\n    survey,\n    externId,\n    leadId,\n    requestId = '',\n  }: EvDispositionCallOptions) {\n    return this._sdk.dispositionCall(\n      this.decodeUii(uii),\n      dispId,\n      notes,\n      callback,\n      callbackDTS,\n      contactForwardNumber,\n      survey,\n      externId,\n      leadId,\n      requestId,\n    );\n  }\n\n  authenticateAgent(rcAccessToken: string, tokenType: EvTokenType) {\n    return new Promise<EvAuthenticateAgentWithRcAccessTokenRes>((resolve) => {\n      this.setAppStatus(evStatus.LOGIN);\n      this._sdk.authenticateAgentWithRcAccessToken(\n        rcAccessToken,\n        tokenType,\n        async (res: RawEvAuthenticateAgentWithRcAccessTokenRes) => {\n          // here just auth with engage access token, not need handle response data, that handle by Agent SDK.\n          await this.authenticateAgentWithEngageAccessToken(res.accessToken);\n\n          this.setAppStatus(evStatus.LOGINED);\n          const _agents = (res || {}).agents || [];\n          const agents = _agents.map((agent) => ({\n            ...agent,\n            agentId: agent && agent.agentId ? `${agent.agentId}` : '',\n            agentType: AGENT_TYPES[agent.agentType],\n          }));\n          resolve({\n            ...res,\n            agents,\n          });\n        },\n      );\n    });\n  }\n\n  openSocket(agentId: string) {\n    const hasSupportWebSocket = 'WebSocket' in window;\n\n    if (!hasSupportWebSocket) {\n      throw new EvTypeError({\n        type: messageTypes.INVALID_BROWSER,\n      });\n    }\n\n    return new Promise<EvOpenSocketResult>((resolve) => {\n      this.addListenerOnce(EvCallbackTypes.OPEN_SOCKET, (res) => {\n        resolve(res);\n      });\n      this._sdk.openSocket(agentId);\n    });\n  }\n\n  getAgentConfig() {\n    return new Promise<EvAgentConfig>((resolve) => {\n      this._sdk.getAgentConfig((res: EvAgentConfig) => {\n        resolve(res);\n      });\n    });\n  }\n\n  async getAndHandleAuthenticateResponse(\n    rcAccessToken: string,\n    tokenType: EvTokenType,\n  ) {\n    const authenticateResponse = await waitUntilTo(\n      () => {\n        return this.authenticateAgent(rcAccessToken, tokenType);\n      },\n      {\n        interval: 0,\n        timeout: 120 * 1000,\n      },\n    ).catch(() => {\n      throw new EvTypeError({\n        type: messageTypes.CONNECT_TIMEOUT,\n      });\n    });\n\n    if (\n      authenticateResponse.type === 'Authenticate Error' ||\n      authenticateResponse.message\n    ) {\n      throw new EvTypeError({\n        type: messageTypes.CONNECT_ERROR,\n        data: authenticateResponse.message,\n      });\n    }\n    if (\n      !authenticateResponse ||\n      !authenticateResponse.agents ||\n      !authenticateResponse.agents.length\n    ) {\n      throw new EvTypeError({\n        type: messageTypes.NO_AGENT,\n      });\n    }\n    if (\n      !authenticateResponse.agents[0] ||\n      !authenticateResponse.agents[0].agentId\n    ) {\n      throw new EvTypeError({\n        type: messageTypes.UNEXPECTED_AGENT,\n      });\n    }\n    return authenticateResponse;\n  }\n\n  /**\n   * when manual close socket, that closeSocket will auto reconnected by agent SDK\n   */\n  closeSocket() {\n    this._sdk.closeSocket();\n  }\n\n  get ifSocketExist() {\n    return !!this._sdk.socket;\n  }\n\n  hangup({ sessionId, resetPendingDisp = false }: EvClientHandUpParams) {\n    return this._sdk.hangup(sessionId, resetPendingDisp);\n  }\n\n  logoutAgent(agentId: string) {\n    return new Promise<EvLogoutAgentResponse>((resolve) => {\n      this._sdk.logoutAgent(agentId, (result: EvLogoutAgentResponse) => {\n        resolve(result);\n      });\n    });\n  }\n\n  manualOutdial({\n    destination,\n    callerId,\n    ringTime,\n    countryId,\n    queueId,\n  }: EvClientManualOutdialParams) {\n    return this._sdk.manualOutdial(\n      destination,\n      callerId,\n      ringTime,\n      countryId,\n      queueId,\n    );\n  }\n\n  manualOutdialCancel(uii: string) {\n    this._sdk.manualOutdialCancel(uii);\n  }\n\n  offhookInit() {\n    // we using EvCallbackTypes.OFFHOOK_INIT to catch data, do not pass callback,\n    // that will make the message not come back\n    this._sdk.offhookInit();\n  }\n\n  offhookTerm() {\n    this._sdk.offhookTerm();\n  }\n\n  hold(holdState: boolean) {\n    this._sdk.hold(holdState);\n  }\n\n  pauseRecord(isRecord: boolean) {\n    return new Promise<PauseRecord>((resolve, reject) => {\n      return this._sdk.pauseRecord(\n        isRecord,\n        (response: PauseRecordResponse) => {\n          const formattedResponse = {\n            ...response,\n            pause: response.pause ? Number(response.pause) : null,\n          };\n          if (response.status === 'OK') {\n            resolve(formattedResponse);\n          } else {\n            reject(formattedResponse);\n          }\n        },\n      );\n    });\n  }\n\n  // toggle call recording on/off base on true|false boolean\n  record(state: boolean) {\n    return new Promise<RecordResponse>((resolve, reject) => {\n      return this._sdk.record(state, (response: RecordResponse) => {\n        if (response.status === 'OK') {\n          resolve(response);\n        } else {\n          reject(response);\n        }\n      });\n    });\n  }\n\n  holdSession({ state, sessionId }: EvClientHoldSessionParams) {\n    this._sdk.holdSession(state, sessionId);\n  }\n\n  coldTransferCall({\n    dialDest,\n    callerId = '',\n    sipHeaders = [],\n  }: EvClientTransferParams) {\n    return new Promise<EvColdTransferCallResponse>((resolve, reject) => {\n      this._sdk.coldXfer(\n        dialDest,\n        callerId,\n        sipHeaders,\n        (data: EvColdTransferCallResponse) => {\n          if (data.status === 'OK') {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        },\n      );\n    });\n  }\n\n  warmTransferCall({\n    dialDest,\n    callerId = '',\n    sipHeaders = [],\n  }: EvClientTransferParams) {\n    return new Promise<EvWarmTransferCallResponse>((resolve, reject) => {\n      this._sdk.warmXfer(\n        dialDest,\n        callerId,\n        sipHeaders,\n        (data: EvWarmTransferCallResponse) => {\n          if (data.status === 'OK') {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        },\n      );\n    });\n  }\n\n  coldTransferIntlCall({\n    dialDest,\n    callerId = '',\n    sipHeaders = [],\n    countryId = '',\n  }: EvClientTransferParams) {\n    return new Promise<EvColdTransferIntlCallResponse>((resolve, reject) => {\n      this._sdk.internationalColdXfer(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        (data: EvColdTransferIntlCallResponse) => {\n          if (data.status === 'OK') {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        },\n      );\n    });\n  }\n\n  warmTransferIntlCall({\n    dialDest,\n    callerId = '',\n    sipHeaders = [],\n    countryId = '',\n  }: EvClientTransferParams) {\n    return new Promise<EvWarmTransferIntlCallResponse>((resolve, reject) => {\n      this._sdk.internationalWarmXfer(\n        dialDest,\n        callerId,\n        sipHeaders,\n        countryId,\n        (data: EvWarmTransferIntlCallResponse) => {\n          if (data.status === 'OK') {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        },\n      );\n    });\n  }\n\n  cancelWarmTransferCall(dialDest: string) {\n    this._sdk.warmXferCancel(dialDest);\n  }\n\n  requeueCall({ queueId, skillId = '', maintain = false }: EvRequeueOption) {\n    return new Promise<EvRequeueCallResponse>((resolve, reject) => {\n      this._sdk.requeueCall(\n        queueId,\n        skillId,\n        maintain,\n        (data: EvRequeueCallResponse) => {\n          if (data.status === 'OK') {\n            resolve(data);\n          } else {\n            reject(data);\n          }\n        },\n      );\n    });\n  }\n\n  fetchDirectAgentList() {\n    return new Promise<EvDirectAgentListResponse>((resolve) => {\n      this._sdk.directAgentXferList((data: EvDirectAgentListResponse) => {\n        resolve(data);\n      });\n    });\n  }\n\n  encodeUii({ uii, sessionId }: Partial<EvAddSessionNotification>) {\n    return `${uii}${_encodeSymbol}${sessionId}`;\n  }\n\n  /**\n   * replace sessionId with _encodeSymbol when ringing\n   * @param _encodeSymbol '$'\n   */\n  encodeRingingUii({ uii }: EvBaseCall) {\n    return this.encodeUii({\n      uii: this.decodeUii(uii),\n      sessionId: _encodeSymbol,\n    });\n  }\n\n  decodeUii(uii: string) {\n    return uii.split(_encodeSymbol)[0];\n  }\n\n  /**\n   * get a main call session in some call session with some uii\n   * @param uii call uii\n   */\n  getMainId(uii: string) {\n    return this.encodeUii({\n      sessionId: '1',\n      uii,\n    });\n  }\n\n  rejectDirectAgentTransferCall(uii: string) {\n    this._sdk.rejectDirectAgentXfer(this.decodeUii(uii));\n  }\n\n  coldDirectAgentTransfer(targetAgentId: string) {\n    this._sdk.coldDirectAgentXfer(targetAgentId);\n  }\n\n  warmDirectAgentTransfer(targetAgentId: string) {\n    this._sdk.warmDirectAgentXfer(targetAgentId);\n  }\n\n  sendVoicemailDirectAgentTransfer(targetAgentId: string) {\n    this._sdk.voicemailDirectAgentXfer(targetAgentId);\n  }\n\n  cancelDirectAgentTransfer(targetAgentId: string) {\n    this._sdk.cancelDirectAgentXfer(targetAgentId);\n  }\n\n  setAgentState(agentState: string, agentAuxState: string) {\n    return this._sdk.setAgentState(agentState, agentAuxState);\n  }\n\n  private _multiLoginRequest() {\n    return new Promise<any>((resolve, reject) => {\n      this._sdk.multiLoginRequest();\n      this.on(EvCallbackTypes.LOGIN, (data) => {\n        if (data.status === 'SUCCESS') {\n          resolve(data);\n        } else {\n          reject(data);\n        }\n      });\n      this.on(EvCallbackTypes.GENERIC_NOTIFICATION, (data) => {\n        if (data.messageCode === '-99') {\n          reject(data);\n        }\n      });\n    });\n  }\n\n  async multiLoginRequest() {\n    // temp solution, and wait for ev backend enhancement.\n    try {\n      await waitUntilTo(() => this._multiLoginRequest(), { timeout: 30000 });\n    } catch (error) {\n      throw new Error('_multiLoginRequest fail or 30s timeout');\n    }\n  }\n\n  /**\n   * WebRTC related method\n   */\n  sipInit() {\n    this._sdk.sipInit();\n  }\n\n  sipAnswer() {\n    this._sdk.sipAnswer();\n  }\n\n  sipRegister() {\n    this._sdk.sipRegister();\n  }\n\n  sipTerminate() {\n    this._sdk.sipTerminate();\n  }\n\n  sipHangUp() {\n    this._sdk.sipHangUp();\n  }\n\n  sipReject() {\n    this._sdk.sipReject();\n  }\n\n  sipSendDTMF(dtmf: string) {\n    this._sdk.sipSendDTMF(dtmf);\n  }\n\n  sipToggleMute(state: boolean) {\n    this._sdk.sipToggleMute(state);\n  }\n\n  /**\n   * AgentScript related method\n   */\n  getScript(scriptId: string, version: string) {\n    return new Promise<EvScriptResponse>((resolve, reject) => {\n      this._sdk.getScript(scriptId, version, (res: EvScriptResponse) => {\n        if (res.status) {\n          resolve(res);\n        }\n      });\n    });\n  }\n\n  async saveScriptResult(\n    uii: string,\n    scriptId: string,\n    jsonResult: EvAgentScriptResult,\n  ) {\n    this._sdk.saveScriptResult(uii, scriptId, jsonResult);\n\n    return jsonResult;\n  }\n\n  /**\n   * GET - /voice/api/v1/agent/:accountId/knowledgeBaseGroups\n      params:\n      accountId: AgentSvc.agentSettings.accountId,\n      guid: AgentSvc.agentSettings.guid,\n      knowledgeBaseGroupIds: knowledgeBaseGroupIds\n\n      knowledgeBaseGroupIds = comma list of all groups you care about\n   */\n  async getKnowledgeBaseGroups(knowledgeBaseGroupIds: number[]) {\n    this.getRefreshedToken();\n\n    const uiModel = this._sdk._getUIModel().getInstance();\n    const HttpService = this._sdk._HttpService;\n\n    const agentSettings: EvAgentSettings = this._sdk.getAgentSettings();\n    const engageAccessToken = `Bearer ${uiModel.authenticateRequest.engageAccessToken}`;\n\n    try {\n      const { status, response } = await new HttpService(\n        `${uiModel.authHost}/voice/api/v1/`,\n      ).httpGet(`agent/${agentSettings.accountId}/knowledgeBaseGroups`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: engageAccessToken,\n        },\n        queryParams: {\n          guid: agentSettings.guid,\n          knowledgeBaseGroupIds,\n        },\n      });\n\n      if (status === 200) {\n        return JSON.parse(response);\n      }\n    } catch (error) {\n      console.log('getKnowledgeBaseGroups fail');\n    }\n    return null;\n  }\n}\n\nexport { EvClient };\n"],"mappings":"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","ignoreList":[]}