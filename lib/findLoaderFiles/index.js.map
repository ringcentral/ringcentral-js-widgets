{"version":3,"file":"index.js","names":["findLoaderFiles","folder","filter","file","fs","statSync","isFile","isLoaderFile","readFileSync","glob","sync"],"sources":["lib/findLoaderFiles/index.js"],"sourcesContent":["import fs from 'fs-extra';\nimport glob from 'glob';\nimport { filter } from 'ramda';\nimport isLoaderFile from '../isLoaderFile';\n\n/**\n * @function\n * @description Return all the loader file paths in the specified folder.\n * @param {String} folder\n * @returns {Promise<String[]>}\n */\nexport default function findLoaderFiles(folder) {\n  return filter(\n    (file) =>\n      fs.statSync(file).isFile() && isLoaderFile(fs.readFileSync(file, 'utf8')),\n    glob.sync(`${folder}/**`),\n  );\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;EAC9C,OAAO,IAAAC,aAAA,EACL,UAACC,IAAD;IAAA,OACEC,mBAAA,CAAGC,QAAH,CAAYF,IAAZ,EAAkBG,MAAlB,MAA8B,IAAAC,wBAAA,EAAaH,mBAAA,CAAGI,YAAH,CAAgBL,IAAhB,EAAsB,MAAtB,CAAb,CADhC;EAAA,CADK,EAGLM,gBAAA,CAAKC,IAAL,WAAaT,MAAb,SAHK,CAAP;AAKD"}