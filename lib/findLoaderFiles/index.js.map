{"version":3,"file":"index.js","names":["_fsExtra","_interopRequireDefault","require","_glob","_ramda","_isLoaderFile","e","__esModule","findLoaderFiles","folder","filter","file","fs","statSync","isFile","isLoaderFile","readFileSync","glob","sync","concat"],"sources":["lib/findLoaderFiles/index.js"],"sourcesContent":["import fs from 'fs-extra';\nimport glob from 'glob';\nimport { filter } from 'ramda';\n\nimport isLoaderFile from '../isLoaderFile';\n\n/**\n * @function\n * @description Return all the loader file paths in the specified folder.\n * @param {String} folder\n * @returns {Promise<String[]>}\n */\nexport default function findLoaderFiles(folder) {\n  return filter(\n    (file) =>\n      fs.statSync(file).isFile() && isLoaderFile(fs.readFileSync(file, 'utf8')),\n    glob.sync(`${folder}/**`),\n  );\n}\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAEA,IAAAG,aAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA2C,SAAAD,uBAAAK,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAE3C;AACA;AACA;AACA;AACA;AACA;AACe,SAASE,eAAeA,CAACC,MAAM,EAAE;EAC9C,OAAO,IAAAC,aAAM,EACX,UAACC,IAAI;IAAA,OACHC,mBAAE,CAACC,QAAQ,CAACF,IAAI,CAAC,CAACG,MAAM,CAAC,CAAC,IAAI,IAAAC,wBAAY,EAACH,mBAAE,CAACI,YAAY,CAACL,IAAI,EAAE,MAAM,CAAC,CAAC;EAAA,GAC3EM,gBAAI,CAACC,IAAI,IAAAC,MAAA,CAAIV,MAAM,QAAK,CAC1B,CAAC;AACH","ignoreList":[]}