{"version":3,"file":"MessageTransport.js","names":["uuid","_interopRequireWildcard","require","_TransportBase2","_MessageTransporters","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","asyncGeneratorStep","o","c","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","keys","getOwnPropertySymbols","filter","enumerable","push","_objectSpread","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","_objectWithoutProperties","_objectWithoutPropertiesLoose","s","includes","propertyIsEnumerable","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","Symbol","toPrimitive","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","TRANSPORTER_TYPES","POST_MESSAGE","EVENT_EMITTER","exports","MessageTransport","_TransportBase","_super","_ref","_this","_ref$transporterType","transporterType","_ref$transporterDirec","transporterDirection","TRANSPORTER_DIRECTION","TO_EXTERNAL","_ref$targetWindow","targetWindow","window","origin","options","name","_addReceiver","_createEmitter","_targetWindow","_origin","_myRequests","_othersRequests","_postMessage","_transporter","_onMessage","event","_event$data","data","type","payload","requestId","result","error","_events","emit","response","reject","Error","request","dispose","PostMessageTransporter","EventEmitterTransporter","direction","addReceiver","createEmitter","Map","addListeners","_ref2","on","_request","regeneratorRuntime","mark","_callee","_ref3","_this2","promise","timeout","wrap","_callee$","_context","prev","next","v4","setTimeout","concat","JSON","stringify","_timeout","abrupt","clearTimeout","stop","_x","send","_ref4","_ref5","message","TransportBase"],"sources":["lib/MessageTransport/MessageTransport.ts"],"sourcesContent":["import * as uuid from 'uuid';\n\nimport { TransportBase, type TransportBaseProps } from '../TransportBase';\nimport type { TransportResponseData } from '../TransportInteractionBase';\n\nimport type { TransporterDirection } from './MessageTransporters';\nimport {\n  EventEmitterTransporter,\n  PostMessageTransporter,\n  TRANSPORTER_DIRECTION,\n} from './MessageTransporters';\n\ntype MessageTransportListener<T = any, K = {}> = (params: {\n  requestId: string;\n  payload: MessageTransportPayload<T, K>;\n}) => any;\n\ntype MessagePushTransportListener<T = any, K = {}> = (\n  payload: MessageTransportPayload<T, K>,\n) => any;\n\nexport type MessageTransportPayload<T = any, K = {}> = {\n  requestType: string;\n  data?: T;\n} & K;\n\nexport interface MessageTransportResponse {\n  requestId: string;\n  result: any;\n  error?: Error | string;\n}\n\nexport const TRANSPORTER_TYPES = {\n  POST_MESSAGE: 'postMessage',\n  EVENT_EMITTER: 'eventEmitter',\n} as const;\n\nexport type TransporterTypes =\n  (typeof TRANSPORTER_TYPES)[keyof typeof TRANSPORTER_TYPES];\n\nexport interface MessageTransportProps {\n  transporterDirection?: TransporterDirection;\n  targetWindow?: Window;\n  origin?: string;\n  transporterType?: TransporterTypes;\n}\n\ntype MessageTransportRequestData<T = any, K = {}> = {\n  payload: MessageTransportPayload<T, K>;\n};\n\ntype Transporter = EventEmitterTransporter | PostMessageTransporter;\n\nexport default class MessageTransport extends TransportBase {\n  private _addReceiver: Transporter['addReceiver'];\n  private _createEmitter: Transporter['createEmitter'];\n  private _targetWindow: Window;\n  private _origin?: string;\n  private _myRequests: Map<any, any>;\n  private _othersRequests: Map<any, any>;\n  private _postMessage: any;\n  private _transporter: Transporter;\n\n  constructor({\n    transporterType = TRANSPORTER_TYPES.POST_MESSAGE,\n    transporterDirection = TRANSPORTER_DIRECTION.TO_EXTERNAL,\n    targetWindow = window,\n    origin,\n    ...options\n  }: MessageTransportProps & Omit<TransportBaseProps, 'name'>) {\n    super({\n      ...options,\n      name: 'MessageTransport',\n    });\n    switch (transporterType) {\n      case TRANSPORTER_TYPES.EVENT_EMITTER:\n        this._transporter = new EventEmitterTransporter({\n          direction: transporterDirection,\n        });\n        break;\n      default:\n      case TRANSPORTER_TYPES.POST_MESSAGE:\n        this._transporter = new PostMessageTransporter();\n        break;\n    }\n\n    this._addReceiver = this._transporter.addReceiver;\n    this._createEmitter = this._transporter.createEmitter;\n\n    this._targetWindow = targetWindow;\n    this._origin = origin;\n    this._myRequests = new Map();\n    this._othersRequests = new Map();\n    this._postMessage = this._createEmitter(this._targetWindow);\n    this._addReceiver(this._onMessage);\n  }\n\n  _onMessage = (event: MessageEvent) => {\n    // TODO: confirm if the message is from iframe\n    if (this._origin && event.origin !== this._origin) {\n      return;\n    }\n    const { type, payload, requestId, result, error } = event.data;\n    switch (type) {\n      case this._events.push:\n        if (payload) {\n          this.emit(this._events.push, payload);\n        }\n        break;\n      case this._events.response:\n        if (requestId && this._myRequests.has(requestId)) {\n          if (error) {\n            this._myRequests.get(requestId).reject(new Error(error));\n          } else {\n            this._myRequests.get(requestId).resolve(result);\n          }\n        }\n        break;\n      case this._events.request:\n        if (requestId && payload) {\n          this._othersRequests.set(requestId, payload);\n          this.emit(this._events.request, {\n            requestId,\n            payload,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  dispose = () => {\n    if (this._transporter instanceof PostMessageTransporter) {\n      this._transporter.dispose(this._onMessage);\n    }\n  };\n\n  addListeners<T = any, K = {}>({\n    push,\n    response,\n    request,\n  }: {\n    push?: MessagePushTransportListener<T, K>;\n    response?: MessageTransportListener<T, K>;\n    request?: MessageTransportListener<T, K>;\n  }) {\n    if (typeof push === 'function') {\n      this.on(this._events.push, push);\n    }\n    if (typeof response === 'function') {\n      this.on(this._events.response, response);\n    }\n    if (typeof request === 'function') {\n      this.on(this._events.request, request);\n    }\n  }\n\n  /** T is request data, K is response data */\n  async request<T = any, K = any>({\n    payload,\n  }: MessageTransportRequestData<T>): Promise<K> {\n    const requestId = uuid.v4();\n\n    const promise = new Promise<K>((resolve, reject) => {\n      this._myRequests.set(requestId, {\n        resolve,\n        reject,\n      });\n      this._postMessage({\n        type: this._events.request,\n        requestId,\n        payload,\n      });\n    });\n\n    let timeout = setTimeout(() => {\n      // @ts-expect-error TS(2322): Type 'null' is not assignable to type 'Timeout'.\n      timeout = null;\n      this._myRequests\n        .get(requestId)\n        .reject(\n          new Error(`${this._events.timeout}: ${JSON.stringify(payload)}`),\n        );\n    }, this._timeout);\n\n    return promise\n      .then((result) => {\n        if (timeout) clearTimeout(timeout);\n        this._myRequests.delete(requestId);\n        return Promise.resolve(result);\n      })\n      .catch((error) => {\n        if (timeout) clearTimeout(timeout);\n        this._myRequests.delete(requestId);\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Send message without response\n   * @param {payload}\n   */\n  send<T = any>({ payload }: MessageTransportRequestData<T>): void {\n    this._postMessage({\n      type: this._events.push,\n      payload,\n    });\n  }\n\n  response({\n    requestId,\n    result,\n    error,\n  }: MessageTransportResponse): TransportResponseData {\n    const request = this._othersRequests.get(requestId);\n\n    if (request) {\n      this._othersRequests.delete(requestId);\n      this._postMessage({\n        type: this._events.response,\n        requestId,\n        result,\n        error: error instanceof Error ? error.message : error,\n      });\n    }\n\n    return {\n      result,\n      error,\n      requestId,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}