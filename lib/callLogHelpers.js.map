{"version":3,"file":"callLogHelpers.js","names":["_dayjs","_interopRequireDefault","require","_ramda","_ObjectMap","_phoneNumber","_callActions","_callDirections","_callResults","_telephonyStatus","_terminationTypes","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","TypeError","Number","isInbound","direction","callDirections","inbound","isOutbound","outbound","getWebphoneSessionDisplayName","currentSession","isRinging","telephonyStatus","telephonyStatuses","ringing","isRingingInboundCall","callResultsToMissedMap","ObjectMap","fromObject","reduce","result","callResults","find","item","missed","hangUp","busy","voicemail","rejected","isMissed","hasRingingCalls","calls","isEnded","noCall","terminationType","terminationTypes","hasEndedCalls","isOnHold","onHold","isIntermediateCall","intermediate","isSelfCall","to","from","phoneNumber","sortBySessionId","a","b","sessionId","sortByStartTime","startTime","normalizeStartTime","dayjs","Date","valueOf","normalizeFromTo","areTwoLegs","Math","abs","parseInt","isSameLocalNumber","action","callActions","phoneCall","ringOutWeb","ringOutPC","ringOutMobile","extensionNumber","removeInboundRingOutLegs","output","outbounds","outboundIndex","findIndex","splice","outboundLeg","inboundLeg","_inbound$from","isValidNumber","concat","removeDuplicateIntermediateCalls","resultCalls","indexMap","isIntermediate","index","removeDuplicateSelfCalls","isSelf","getPhoneNumber","isEmpty","_call$to","_call$from","getPhoneNumberMatches","_call$to2","_call$from2","toMatches","fromMatches","isOutboundCall","isInboundCall","matches"],"sources":["lib/callLogHelpers.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { find, isEmpty, reduce } from 'ramda';\n\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\nimport {\n  isSameLocalNumber,\n  isValidNumber,\n} from '@ringcentral-integration/phone-number';\nimport type ActiveCallInfoWithoutSIP from '@rc-ex/core/lib/definitions/ActiveCallInfoWithoutSIP';\n\nimport { callActions } from '../enums/callActions';\nimport callDirections from '../enums/callDirections';\nimport type { CallResultsKey } from '../enums/callResults';\nimport { callResults } from '../enums/callResults';\nimport telephonyStatuses from '../enums/telephonyStatus';\nimport { terminationTypes } from '../enums/terminationTypes';\nimport type { Call } from '../interfaces/Call.interface';\nimport type { ActiveCall } from '../interfaces/Presence.model';\n\n// import i18n from './i18n';\n\n/* call direction helpers */\nexport function isInbound(call: { direction?: string } = {}) {\n  return call.direction === callDirections.inbound;\n}\n\nexport function isOutbound(call: { direction?: string } = {}) {\n  return call.direction === callDirections.outbound;\n}\n\nexport function getWebphoneSessionDisplayName(\n  currentSession: Call['webphoneSession'],\n) {\n  // TODO: just return null temporary, wait check api can be use with platform\n  return null;\n  // if (!currentSession) {\n  //   return null;\n  // }\n\n  // return currentSession.direction === callDirections.inbound\n  //   ? currentSession.fromUserName\n  //   : currentSession.toUserName;\n}\n\n/* status helpers */\nexport function isRinging(call: Call) {\n  if (!call) return false;\n\n  return call.telephonyStatus === telephonyStatuses.ringing;\n}\nexport function isRingingInboundCall(call: Call) {\n  return isRinging(call) && isInbound(call);\n}\n\nconst callResultsToMissedMap = ObjectMap.fromObject(\n  reduce<string, Record<string, boolean>>(\n    (result, key) => {\n      const value = callResults[key as CallResultsKey];\n      result[value] = !!find(\n        (item) => item === value,\n        [\n          callResults.missed,\n          callResults.hangUp,\n          // callResults.HangUp,\n          callResults.busy,\n          callResults.voicemail,\n          callResults.rejected,\n        ],\n      );\n      return result;\n    },\n    {},\n    Object.keys(callResults),\n  ),\n);\n\nexport function isMissed(call: Partial<ActiveCall> = {}) {\n  return !!callResultsToMissedMap[call.result!];\n}\n\nexport function hasRingingCalls(calls: Call[] = []) {\n  return !!calls.find(isRinging);\n}\n\nexport function isEnded(call: Partial<ActiveCall> = {}) {\n  return (\n    call.telephonyStatus === telephonyStatuses.noCall &&\n    call.terminationType === terminationTypes.final\n  );\n}\n\nexport function hasEndedCalls(calls: ActiveCall[]) {\n  return !!calls.find(isEnded);\n}\n\nexport function isOnHold(call: { telephonyStatus?: string } = {}) {\n  return call.telephonyStatus === telephonyStatuses.onHold;\n}\n\nexport function isIntermediateCall(call: ActiveCallInfoWithoutSIP) {\n  return call.terminationType === terminationTypes.intermediate;\n}\n\nexport function isSelfCall(call: Partial<ActiveCall> = {}) {\n  if (call.to && call.from) {\n    return call.to.phoneNumber === call.from.phoneNumber;\n  }\n  return false;\n}\n\n/* sort functions */\n\nexport function sortBySessionId(\n  a: { sessionId: string },\n  b: { sessionId: string },\n) {\n  if (a.sessionId === b.sessionId) return 0;\n  return a.sessionId > b.sessionId ? 1 : -1;\n}\n\n// TODO: fix `ActiveCall` startTime optional type\nexport function sortByStartTime(\n  a: { startTime?: number | string },\n  b: { startTime?: number | string },\n) {\n  if (a.startTime === b.startTime) return 0;\n  return a.startTime! > b.startTime! ? -1 : 1;\n}\n\nexport function normalizeStartTime<T extends { startTime?: number | string }>(\n  item: T,\n) {\n  const result: T = {\n    ...item,\n  };\n  if (item.startTime) {\n    // Fix: Safari doesn't support timezone offset\n    // `startTime` might switch between `2019-10-18T08:18:47.972+0000`\n    // and `2019-10-18T08:18:47.972Z`\n    // dayjs construction using a non-iso string is deprecated\n    result.startTime = dayjs(new Date(item.startTime)).valueOf();\n  }\n  return result;\n}\n\nexport function normalizeFromTo(call: ActiveCallInfoWithoutSIP) {\n  return {\n    ...call,\n    from:\n      typeof call.from === 'object' ? call.from : { phoneNumber: call.from },\n    to: typeof call.to === 'object' ? call.to : { phoneNumber: call.to },\n  };\n}\n\n/* ringout leg helpers */\nexport function areTwoLegs(inbound: ActiveCall, outbound: ActiveCall) {\n  if (isInbound(inbound) && isOutbound(outbound)) {\n    switch (\n      Math.abs(\n        parseInt(inbound.sessionId!, 10) - parseInt(outbound.sessionId!, 10),\n      )\n    ) {\n      case 1000:\n      case 2000:\n      case 3000:\n      case 4000: {\n        // presence\n        if (\n          inbound.from &&\n          inbound.to &&\n          outbound.from &&\n          outbound.to &&\n          isSameLocalNumber(\n            inbound.from.phoneNumber,\n            outbound.to.phoneNumber,\n          ) &&\n          isSameLocalNumber(inbound.to.phoneNumber, outbound.from.phoneNumber)\n        ) {\n          return true;\n        }\n        // call-log\n        if (\n          inbound.from &&\n          inbound.to &&\n          outbound.from &&\n          outbound.to &&\n          inbound.action === callActions.phoneCall &&\n          (outbound.action === callActions.ringOutWeb ||\n            outbound.action === callActions.ringOutPC ||\n            outbound.action === callActions.ringOutMobile) &&\n          (inbound.from.phoneNumber === outbound.from.phoneNumber ||\n            inbound.from.extensionNumber === outbound.from.extensionNumber) &&\n          inbound.to.phoneNumber === outbound.to.phoneNumber\n        ) {\n          return true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n  }\n  return false;\n}\n\nexport function removeInboundRingOutLegs(calls: ActiveCall[]) {\n  const output: ActiveCall[] = [];\n  const outbounds = calls.filter(isOutbound);\n  calls.filter(isInbound).forEach((inbound) => {\n    const outboundIndex = outbounds.findIndex((call) =>\n      areTwoLegs(inbound, call),\n    );\n    if (outboundIndex > -1) {\n      const outbound = outbounds.splice(outboundIndex, 1)[0];\n\n      if (inbound.action && outbound.action) {\n        // from call-log\n        const call = {\n          ...outbound,\n          outboundLeg: outbound,\n          inboundLeg: inbound,\n          from: {\n            ...inbound.from,\n          },\n          to: {\n            ...inbound.to,\n          },\n          result: inbound.result,\n        };\n        output.push(call);\n      } else {\n        const call = {\n          ...outbound,\n          outboundLeg: outbound,\n          inboundLeg: inbound,\n        };\n        // Handle inboundLeg.from is '+19072028624', but outboundLeg.to is '9072028624'\n        // https://jira_domain/browse/RCINT-3127\n        if (\n          inbound.from &&\n          // TODO: should confirm that type, not met\n          // @ts-expect-error ts-migrate(2306) FIXME: type not match\n          isValidNumber(inbound.from?.phoneNumber) &&\n          isSameLocalNumber(\n            inbound.from.phoneNumber,\n            outbound.to && outbound.to.phoneNumber,\n          )\n        ) {\n          call.to = {\n            ...outbound.to,\n            phoneNumber: inbound.from.phoneNumber,\n          };\n          outbound.to.phoneNumber = inbound.from.phoneNumber;\n        }\n        if (isOnHold(inbound)) {\n          call.telephonyStatus = telephonyStatuses.onHold;\n        }\n        output.push(call);\n      }\n\n      // output.push(outbound);\n    } else {\n      output.push(inbound);\n    }\n  });\n  return output.concat(outbounds);\n}\n\nexport function removeDuplicateIntermediateCalls(\n  calls: ActiveCallInfoWithoutSIP[],\n) {\n  const resultCalls: ActiveCallInfoWithoutSIP[] = [];\n  const indexMap: Record<\n    string,\n    {\n      isIntermediate: boolean;\n      index: number;\n    }\n  > = {};\n  calls.forEach((call) => {\n    const isIntermediate = isIntermediateCall(call);\n    const sessionId = call.sessionId!;\n    if (!indexMap[sessionId]) {\n      indexMap[sessionId] = {\n        index: resultCalls.length,\n        isIntermediate,\n      };\n      resultCalls.push(call);\n    } else if (!isIntermediate) {\n      indexMap[sessionId].isIntermediate = false;\n      resultCalls[indexMap[sessionId].index] = call;\n    }\n  });\n  return resultCalls;\n}\n\n// there are two active calls with same sessionId when user call self.\nexport function removeDuplicateSelfCalls(calls: ActiveCall[]) {\n  const resultCalls: ActiveCall[] = [];\n  const indexMap: Record<\n    string,\n    {\n      index: number;\n      isSelf: boolean;\n    }\n  > = {};\n  calls.forEach((call) => {\n    const isSelf = isSelfCall(call);\n    const sessionId = call.sessionId!;\n\n    if (!indexMap[sessionId]) {\n      indexMap[sessionId] = {\n        index: resultCalls.length,\n        isSelf,\n      };\n      resultCalls.push(call);\n    } else if (!isSelf) {\n      indexMap[sessionId].isSelf = false;\n      resultCalls[indexMap[sessionId].index] = call;\n    }\n  });\n  return resultCalls;\n}\n\nexport function getPhoneNumber(call: Partial<Call> = {}) {\n  if (isEmpty(call)) {\n    return undefined;\n  }\n  const { to = {}, from = {} } = call;\n  if (isOutbound(call)) {\n    return to.phoneNumber || to.extensionNumber;\n  }\n  return from.phoneNumber || from.extensionNumber;\n}\n\n// Get phone number and matches.\nexport function getPhoneNumberMatches(call: Partial<Call> = {}) {\n  const {\n    to = {},\n    from = {},\n    // sessionId,\n    toMatches,\n    fromMatches,\n  } = call;\n  if (isEmpty(call)) {\n    return {};\n  }\n  const isOutboundCall = isOutbound(call);\n  const isInboundCall = isInbound(call);\n  let phoneNumber = null;\n  let matches = null;\n  if (isOutboundCall) {\n    phoneNumber = to.phoneNumber || to.extensionNumber;\n    matches = toMatches;\n  } else if (isInboundCall) {\n    phoneNumber = from.phoneNumber || from.extensionNumber;\n    matches = fromMatches;\n  }\n  // if (!phoneNumber || !matches) {\n  //   console.warn(`Call sessionId: ${sessionId} is abnormal data.`);\n  // }\n  return {\n    phoneNumber,\n    matches,\n  };\n}\n"],"mappings":"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"}