{"version":3,"file":"callLogHelpers.js","names":["_ObjectMap","require","_phoneNumber","_dayjs","_interopRequireDefault","_ramda","_callActions","_callDirections","_callResults","_telephonyStatus","_terminationTypes","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","toPrimitive","call","TypeError","String","Number","isInbound","undefined","direction","callDirections","inbound","isOutbound","outbound","getWebphoneSessionDisplayName","currentSession","fromUserName","toUserName","getTelephoneDisplayName","fromName","toName","isRinging","telephonyStatus","telephonyStatuses","ringing","isRingingInboundCall","callResultsToMissedMap","ObjectMap","fromObject","reduce","result","key","callResults","find","item","missed","hangUp","busy","voicemail","rejected","isMissed","hasRingingCalls","calls","isEnded","noCall","terminationType","terminationTypes","hasEndedCalls","isOnHold","onHold","isIntermediateCall","intermediate","isSelfCall","to","from","phoneNumber","sortBySessionId","a","b","sessionId","sortByStartTime","startTime","normalizeStartTime","dayjs","Date","valueOf","normalizeFromTo","areTwoLegs","Math","abs","parseInt","isSameLocalNumber","action","callActions","phoneCall","ringOutWeb","ringOutPC","ringOutMobile","extensionNumber","removeInboundRingOutLegs","output","outbounds","outboundIndex","findIndex","splice","outboundLeg","inboundLeg","_inbound$from","isValidNumber","concat","removeDuplicateIntermediateCalls","resultCalls","indexMap","isIntermediate","index","removeDuplicateSelfCalls","isSelf","getPhoneNumber","isEmpty","_call$to","_call$from","getPhoneNumberMatches","_call$to2","_call$from2","toMatches","fromMatches","isOutboundCall","isInboundCall","matches"],"sources":["lib/callLogHelpers.ts"],"sourcesContent":["import type ActiveCallInfoWithoutSIP from '@rc-ex/core/lib/definitions/ActiveCallInfoWithoutSIP';\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\nimport {\n  isSameLocalNumber,\n  isValidNumber,\n} from '@ringcentral-integration/phone-number';\nimport dayjs from 'dayjs';\nimport { find, isEmpty, reduce } from 'ramda';\n\nimport { callActions } from '../enums/callActions';\nimport callDirections from '../enums/callDirections';\nimport type { CallResultsKey } from '../enums/callResults';\nimport { callResults } from '../enums/callResults';\nimport telephonyStatuses from '../enums/telephonyStatus';\nimport { terminationTypes } from '../enums/terminationTypes';\nimport type { Call } from '../interfaces/Call.interface';\nimport type { ActiveCall } from '../interfaces/Presence.model';\n\n// import i18n from './i18n';\n\n/* call direction helpers */\nexport function isInbound(call: { direction?: string } = {}) {\n  return call.direction === callDirections.inbound;\n}\n\nexport function isOutbound(call: { direction?: string } = {}) {\n  return call.direction === callDirections.outbound;\n}\n\n// get caller id name for webphone session\nexport function getWebphoneSessionDisplayName(\n  currentSession: Call['webphoneSession'],\n) {\n  if (!currentSession) {\n    return null;\n  }\n\n  return currentSession.direction === callDirections.inbound\n    ? currentSession.fromUserName\n    : currentSession.toUserName;\n}\n\n// get caller id name for telephone\nexport function getTelephoneDisplayName(call: Call) {\n  if (!call) {\n    return null;\n  }\n\n  return call.direction === callDirections.inbound\n    ? call.fromName\n    : call.toName;\n}\n\n/* status helpers */\nexport function isRinging(call: Call) {\n  if (!call) return false;\n\n  return call.telephonyStatus === telephonyStatuses.ringing;\n}\nexport function isRingingInboundCall(call: Call) {\n  return isRinging(call) && isInbound(call);\n}\n\nconst callResultsToMissedMap = ObjectMap.fromObject(\n  reduce<string, Record<string, boolean>>(\n    (result, key) => {\n      const value = callResults[key as CallResultsKey];\n      result[value] = !!find(\n        (item) => item === value,\n        [\n          callResults.missed,\n          callResults.hangUp,\n          // callResults.HangUp,\n          callResults.busy,\n          callResults.voicemail,\n          callResults.rejected,\n        ],\n      );\n      return result;\n    },\n    {},\n    Object.keys(callResults),\n  ),\n);\n\nexport function isMissed(call: Pick<Call, 'result'> = {}) {\n  return !!callResultsToMissedMap[call.result!];\n}\n\nexport function hasRingingCalls(calls: Call[] = []) {\n  return !!calls.find(isRinging);\n}\n\nexport function isEnded(call: Partial<ActiveCall> = {}) {\n  return (\n    call.telephonyStatus === telephonyStatuses.noCall &&\n    call.terminationType === terminationTypes.final\n  );\n}\n\nexport function hasEndedCalls(calls: ActiveCall[]) {\n  return !!calls.find(isEnded);\n}\n\nexport function isOnHold(call: { telephonyStatus?: string } = {}) {\n  return call.telephonyStatus === telephonyStatuses.onHold;\n}\n\nexport function isIntermediateCall(call: ActiveCallInfoWithoutSIP) {\n  return call.terminationType === terminationTypes.intermediate;\n}\n\nexport function isSelfCall(call: Partial<ActiveCall> = {}) {\n  if (call.to && call.from) {\n    return call.to.phoneNumber === call.from.phoneNumber;\n  }\n  return false;\n}\n\n/* sort functions */\n\nexport function sortBySessionId(\n  a: { sessionId: string },\n  b: { sessionId: string },\n) {\n  if (a.sessionId === b.sessionId) return 0;\n  return a.sessionId > b.sessionId ? 1 : -1;\n}\n\n// TODO: fix `ActiveCall` startTime optional type\nexport function sortByStartTime(\n  a: { startTime?: number | string },\n  b: { startTime?: number | string },\n) {\n  if (a.startTime === b.startTime) return 0;\n  return a.startTime! > b.startTime! ? -1 : 1;\n}\n\nexport function normalizeStartTime<T extends { startTime?: number | string }>(\n  item: T,\n) {\n  const result: T = {\n    ...item,\n  };\n  if (item.startTime) {\n    // Fix: Safari doesn't support timezone offset\n    // `startTime` might switch between `2019-10-18T08:18:47.972+0000`\n    // and `2019-10-18T08:18:47.972Z`\n    // dayjs construction using a non-iso string is deprecated\n    result.startTime = dayjs(new Date(item.startTime)).valueOf();\n  }\n  return result;\n}\n\nexport function normalizeFromTo(call: ActiveCallInfoWithoutSIP) {\n  return {\n    ...call,\n    from:\n      typeof call.from === 'object' ? call.from : { phoneNumber: call.from },\n    to: typeof call.to === 'object' ? call.to : { phoneNumber: call.to },\n  };\n}\n\n/* ringout leg helpers */\nexport function areTwoLegs(inbound: ActiveCall, outbound: ActiveCall) {\n  if (isInbound(inbound) && isOutbound(outbound)) {\n    switch (\n      Math.abs(\n        parseInt(inbound.sessionId!, 10) - parseInt(outbound.sessionId!, 10),\n      )\n    ) {\n      case 1000:\n      case 2000:\n      case 3000:\n      case 4000: {\n        // presence\n        if (\n          inbound.from &&\n          inbound.to &&\n          outbound.from &&\n          outbound.to &&\n          isSameLocalNumber(\n            inbound.from.phoneNumber,\n            outbound.to.phoneNumber,\n          ) &&\n          isSameLocalNumber(inbound.to.phoneNumber, outbound.from.phoneNumber)\n        ) {\n          return true;\n        }\n        // call-log\n        if (\n          inbound.from &&\n          inbound.to &&\n          outbound.from &&\n          outbound.to &&\n          inbound.action === callActions.phoneCall &&\n          (outbound.action === callActions.ringOutWeb ||\n            outbound.action === callActions.ringOutPC ||\n            outbound.action === callActions.ringOutMobile) &&\n          (inbound.from.phoneNumber === outbound.from.phoneNumber ||\n            inbound.from.extensionNumber === outbound.from.extensionNumber) &&\n          inbound.to.phoneNumber === outbound.to.phoneNumber\n        ) {\n          return true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n  }\n  return false;\n}\n\nexport function removeInboundRingOutLegs(calls: ActiveCall[]) {\n  const output: ActiveCall[] = [];\n  const outbounds = calls.filter(isOutbound);\n  calls.filter(isInbound).forEach((inbound) => {\n    const outboundIndex = outbounds.findIndex((call) =>\n      areTwoLegs(inbound, call),\n    );\n    if (outboundIndex > -1) {\n      const outbound = outbounds.splice(outboundIndex, 1)[0];\n\n      if (inbound.action && outbound.action) {\n        // from call-log\n        const call = {\n          ...outbound,\n          outboundLeg: outbound,\n          inboundLeg: inbound,\n          from: {\n            ...inbound.from,\n          },\n          to: {\n            ...inbound.to,\n          },\n          result: inbound.result,\n        };\n        output.push(call);\n      } else {\n        const call = {\n          ...outbound,\n          outboundLeg: outbound,\n          inboundLeg: inbound,\n        };\n        // Handle inboundLeg.from is '+19072028624', but outboundLeg.to is '9072028624'\n        // https://jira_domain/browse/RCINT-3127\n        if (\n          inbound.from &&\n          // TODO: should confirm that type, not met\n          // @ts-expect-error TS(2769): No overload matches this call.\n          isValidNumber(inbound.from?.phoneNumber) &&\n          isSameLocalNumber(\n            inbound.from.phoneNumber,\n            outbound.to && outbound.to.phoneNumber,\n          )\n        ) {\n          call.to = {\n            ...outbound.to,\n            phoneNumber: inbound.from.phoneNumber,\n          };\n          outbound.to.phoneNumber = inbound.from.phoneNumber;\n        }\n        if (isOnHold(inbound)) {\n          call.telephonyStatus = telephonyStatuses.onHold;\n        }\n        output.push(call);\n      }\n\n      // output.push(outbound);\n    } else {\n      output.push(inbound);\n    }\n  });\n  return output.concat(outbounds);\n}\n\nexport function removeDuplicateIntermediateCalls(\n  calls: ActiveCallInfoWithoutSIP[],\n) {\n  const resultCalls: ActiveCallInfoWithoutSIP[] = [];\n  const indexMap: Record<\n    string,\n    {\n      isIntermediate: boolean;\n      index: number;\n    }\n  > = {};\n  calls.forEach((call) => {\n    const isIntermediate = isIntermediateCall(call);\n    const sessionId = call.sessionId!;\n    if (!indexMap[sessionId]) {\n      indexMap[sessionId] = {\n        index: resultCalls.length,\n        isIntermediate,\n      };\n      resultCalls.push(call);\n    } else if (!isIntermediate) {\n      indexMap[sessionId].isIntermediate = false;\n      resultCalls[indexMap[sessionId].index] = call;\n    }\n  });\n  return resultCalls;\n}\n\n// there are two active calls with same sessionId when user call self.\nexport function removeDuplicateSelfCalls(calls: ActiveCall[]) {\n  const resultCalls: ActiveCall[] = [];\n  const indexMap: Record<\n    string,\n    {\n      index: number;\n      isSelf: boolean;\n    }\n  > = {};\n  calls.forEach((call) => {\n    const isSelf = isSelfCall(call);\n    const sessionId = call.sessionId!;\n\n    if (!indexMap[sessionId]) {\n      indexMap[sessionId] = {\n        index: resultCalls.length,\n        isSelf,\n      };\n      resultCalls.push(call);\n    } else if (!isSelf) {\n      indexMap[sessionId].isSelf = false;\n      resultCalls[indexMap[sessionId].index] = call;\n    }\n  });\n  return resultCalls;\n}\n\nexport function getPhoneNumber(call: Partial<Call> = {}) {\n  if (isEmpty(call)) {\n    return undefined;\n  }\n  const { to = {}, from = {} } = call;\n  if (isOutbound(call)) {\n    return to.phoneNumber || to.extensionNumber;\n  }\n  return from.phoneNumber || from.extensionNumber;\n}\n\n// Get phone number and matches.\nexport function getPhoneNumberMatches(call: Partial<Call> = {}) {\n  const {\n    to = {},\n    from = {},\n    // sessionId,\n    toMatches,\n    fromMatches,\n  } = call;\n  if (isEmpty(call)) {\n    return {};\n  }\n  const isOutboundCall = isOutbound(call);\n  const isInboundCall = isInbound(call);\n  let phoneNumber = null;\n  let matches = null;\n  if (isOutboundCall) {\n    phoneNumber = to.phoneNumber || to.extensionNumber;\n    matches = toMatches;\n  } else if (isInboundCall) {\n    phoneNumber = from.phoneNumber || from.extensionNumber;\n    matches = fromMatches;\n  }\n  // if (!phoneNumber || !matches) {\n  //   console.warn(`Call sessionId: ${sessionId} is abnormal data.`);\n  // }\n  return {\n    phoneNumber,\n    matches,\n  };\n}\n"],"mappings":"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","ignoreList":[]}