{"version":3,"sources":["lib/ChromeTransport/ClientTransport.ts"],"names":["ClientTransport","options","name","_requests","Map","_port","chrome","runtime","connect","onMessage","addListener","type","payload","requestId","result","error","_events","push","emit","response","has","get","reject","Error","resolve","uuid","v4","promise","Promise","set","postMessage","request","timeout","setTimeout","_timeout","then","clearTimeout","functionPath","message","TransportBase"],"mappings":"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","sourcesContent":["import * as uuid from 'uuid';\n\nimport TransportBase from '../TransportBase';\n\n/* global chrome */\n\nexport class ClientTransport extends TransportBase {\n  constructor(options) {\n    super({\n      ...options,\n      name: 'ChromeTransport',\n    });\n    this._requests = new Map();\n    this._port = chrome.runtime.connect({ name: 'transport' });\n    this._port.onMessage.addListener(\n      ({ type, payload, requestId, result, error }) => {\n        switch (type) {\n          case this._events.push:\n            if (payload) {\n              this.emit(this._events.push, payload);\n            }\n            break;\n          case this._events.response:\n            if (requestId && this._requests.has(requestId)) {\n              if (error) {\n                this._requests.get(requestId).reject(new Error(error));\n              } else {\n                this._requests.get(requestId).resolve(result);\n              }\n            }\n            break;\n          default:\n            break;\n        }\n      },\n    );\n  }\n\n  async request({ payload }) {\n    const requestId = uuid.v4();\n    let promise = new Promise((resolve, reject) => {\n      this._requests.set(requestId, {\n        resolve,\n        reject,\n      });\n      this._port.postMessage({\n        type: this._events.request,\n        requestId,\n        payload,\n      });\n    });\n    let timeout = setTimeout(() => {\n      timeout = null;\n      this._requests.get(requestId).reject(new Error(this._events.timeout));\n    }, this._timeout);\n    promise = promise\n      .then((result) => {\n        if (timeout) clearTimeout(timeout);\n        this._requests.delete(requestId);\n        return Promise.resolve(result);\n      })\n      .catch((error) => {\n        if (timeout) clearTimeout(timeout);\n        this._requests.delete(requestId);\n        return Promise.reject(\n          new Error(`${payload.functionPath}: ${error.message}`),\n        );\n      });\n    return promise;\n  }\n}\n"],"file":"ClientTransport.js"}