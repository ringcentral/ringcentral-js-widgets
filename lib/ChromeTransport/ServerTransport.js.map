{"version":3,"file":"ServerTransport.js","names":["_ObjectProxy","require","_TransportBase2","_constants","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_classCallCheck","a","n","TypeError","_defineProperties","key","_createClass","prototype","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","String","Number","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","ServerTransport","_TransportBase","_super","_this","options","undefined","name","TRANSPORT_NAME","_activeTabIds","Set","_ports","_requests","Map","_getActiveTabIds","proxyChrome","tabs","onActivated","addListener","chrome","runtime","onConnect","port","CONNECT_PORT_NAME","add","onMessage","_ref","type","requestId","payload","_events","request","set","emit","onDisconnect","response","_ref2","result","error","get","Error","message","postMessage","_ref3","_this2","_port$sender","_port$sender$tab","sender","tab","id","size","has","_this3","query","active","clear","Array","isArray","console","log","TransportBase","exports"],"sources":["lib/ChromeTransport/ServerTransport.ts"],"sourcesContent":["import { proxyChrome } from '../ObjectProxy';\nimport { TransportBase, type TransportBaseProps } from '../TransportBase';\n\nimport { CONNECT_PORT_NAME, TRANSPORT_NAME } from './constants';\n\n/* global chrome */\n\nexport interface ServerTransportProps\n  extends Omit<TransportBaseProps, 'name'> {}\n\nexport class ServerTransport extends TransportBase {\n  _activeTabIds = new Set<number>();\n  _ports = new Set<chrome.runtime.Port>();\n  _requests = new Map<string, chrome.runtime.Port>();\n\n  constructor(options: ServerTransportProps = {}) {\n    super({\n      ...options,\n      name: TRANSPORT_NAME,\n    });\n\n    // Get current tabs\n    this._getActiveTabIds();\n    // Keep active tabs up to date\n    proxyChrome.tabs.onActivated.addListener(() => this._getActiveTabIds());\n\n    chrome.runtime.onConnect.addListener((port) => {\n      if (port.name === CONNECT_PORT_NAME) {\n        this._ports.add(port);\n        port.onMessage.addListener(({ type, requestId, payload }) => {\n          if (type === this._events.request && requestId && payload) {\n            this._requests.set(requestId, port);\n            this.emit(this._events.request, {\n              requestId,\n              payload,\n            });\n          }\n        });\n        port.onDisconnect.addListener(() => {\n          this._ports.delete(port);\n        });\n      }\n    });\n  }\n\n  response({\n    requestId,\n    result,\n    error,\n  }: {\n    requestId: string;\n    result?: unknown;\n    error?: Error | string;\n  }) {\n    const port = this._requests.get(requestId);\n    if (port) {\n      this._requests.delete(requestId);\n      if (error instanceof Error) {\n        error = error.message;\n      }\n      port.postMessage({\n        type: this._events.response,\n        requestId,\n        result,\n        error,\n      });\n    }\n  }\n\n  push({ payload }: { payload: unknown }) {\n    const message = { type: this._events.push, payload };\n    // Since postMessage is really expensive,\n    // we only send messages to those ports on active tabs.\n    this._ports.forEach((port) => {\n      if (\n        port.sender?.tab?.id &&\n        // send to all instances if app failed to query active tabs\n        (!this._activeTabIds.size || this._activeTabIds.has(port.sender.tab.id))\n      ) {\n        port.postMessage(message);\n      }\n    });\n  }\n\n  _getActiveTabIds() {\n    try {\n      proxyChrome.tabs.query({ active: true }, (tabs) => {\n        this._activeTabIds.clear();\n        if (Array.isArray(tabs)) {\n          tabs.forEach((tab) => {\n            if (tab.id) {\n              this._activeTabIds.add(tab.id);\n            }\n          });\n        }\n      });\n    } catch (error) {\n      console.log('[ServerTransport]', error);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}