{"version":3,"file":"ServerTransport.js","names":["_ramda","require","_TransportBase2","_interopRequireDefault","obj","__esModule","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","Number","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","ServerTransport","_TransportBase","_super","options","_this","name","_ports","Set","_requests","Map","_activeTabIds","_getActiveTabIds","chrome","tabs","onActivated","addListener","runtime","onConnect","port","add","onMessage","_ref","type","requestId","payload","_events","request","set","emit","onDisconnect","response","_ref2","error","get","Error","message","postMessage","_ref3","_this2","sender","tab","id","_this3","Promise","resolve","query","active","Array","isArray","reduce","acc","console","log","TransportBase","exports"],"sources":["lib/ChromeTransport/ServerTransport.ts"],"sourcesContent":["import { forEach, reduce } from 'ramda';\n\nimport TransportBase from '../TransportBase';\n\n/* global chrome */\n\nexport class ServerTransport extends TransportBase {\n  constructor(options) {\n    super({\n      ...options,\n      name: 'ChromeTransport',\n    });\n    this._ports = new Set();\n    this._requests = new Map();\n\n    // Keep active tabs up to date\n    this._activeTabIds = null;\n    this._getActiveTabIds();\n    chrome.tabs.onActivated.addListener(() => this._getActiveTabIds());\n    chrome.runtime.onConnect.addListener((port) => {\n      if (port.name === 'transport') {\n        this._ports.add(port);\n        port.onMessage.addListener(({ type, requestId, payload }) => {\n          if (type === this._events.request && requestId && payload) {\n            this._requests.set(requestId, port);\n            this.emit(this._events.request, {\n              requestId,\n              payload,\n            });\n          }\n        });\n        port.onDisconnect.addListener(() => {\n          this._ports.delete(port);\n        });\n      }\n    });\n  }\n\n  response({ requestId, result, error }) {\n    const port = this._requests.get(requestId);\n    if (port) {\n      this._requests.delete(requestId);\n      if (error instanceof Error) {\n        error = error.message;\n      }\n      port.postMessage({\n        type: this._events.response,\n        requestId,\n        result,\n        error,\n      });\n    }\n  }\n\n  push({ payload }) {\n    const message = { type: this._events.push, payload };\n    // Since postMessage is really expensive,\n    // we only send messages to those ports on active tabs.\n    forEach((port) => {\n      if (\n        port.sender &&\n        port.sender.tab &&\n        // send to all instances if app failed to query active tabs\n        (!this._activeTabIds || this._activeTabIds[port.sender.tab.id])\n      ) {\n        port.postMessage(message);\n      }\n    }, this._ports);\n  }\n\n  _getActiveTabIds() {\n    return new Promise((resolve) => {\n      try {\n        chrome.tabs.query({ active: true }, (tabs) => {\n          this._activeTabIds = Array.isArray(tabs)\n            ? // convert tabs array into tabs id truth mapping\n              reduce(\n                (acc, tab) => {\n                  if (tab.id) {\n                    acc[tab.id] = true;\n                  }\n                  return acc;\n                },\n                {},\n                tabs,\n              )\n            : null;\n          resolve(!!this._activeTabIds);\n        });\n      } catch (error: any /** TODO: confirm with instanceof */) {\n        this._activeTabIds = null;\n        console.log(error);\n        resolve(false);\n      }\n    });\n  }\n}\n"],"mappings":"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"}