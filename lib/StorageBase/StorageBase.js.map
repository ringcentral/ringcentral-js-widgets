{"version":3,"file":"StorageBase.js","names":["_core","require","_ObjectMap","_redux","_SynchronizedStorage","_di","_actionTypesBase","_getStorageReducer","_dec","_class","_class2","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","l","Symbol","iterator","n","i","u","a","f","call","next","done","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","constructor","name","from","test","_classCallCheck","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","toPrimitive","String","Number","_inherits","create","_setPrototypeOf","setPrototypeOf","bind","__proto__","_createSuper","_isNativeReflectConstruct","_getPrototypeOf","s","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","initializer","reverse","reduce","StorageBase","Module","deps","dep","optional","_RcModuleV","_super","storageBaseOptions","_storageBaseOptions$S","_this","_storage","_storageReducers","_storageReducer","_StorageProvider","_storageActionTypes","Error","StorageProvider","SynchronizedStorage","ObjectMap","prefixKeys","actionTypesBase","getDataReducer","types","reducers","syncData","data","setData","resetData","_this2","entries","_ref","_ref2","reducer","undefined","registerReducer","_ref3","concat","getItem","get","_reducers","combineReducers","spawnStorageReducersKey","spawnReducersKey","stateKey","set","ready","driver","_deps","prefix","RcModuleV2","action","exports"],"sources":["lib/StorageBase/StorageBase.ts"],"sourcesContent":["import {\n  action,\n  RcModuleV2,\n  spawnReducersKey,\n  spawnStorageReducersKey,\n  stateKey,\n} from '@ringcentral-integration/core';\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\nimport type { Action, Reducer, ReducersMapObject } from 'redux';\nimport { combineReducers } from 'redux';\n\nimport { SynchronizedStorage } from '../SynchronizedStorage';\nimport { Module } from '../di';\n\nimport type {\n  Deps,\n  IStorage,\n  IStorageBaseOptions,\n  StorageBaseOptions,\n} from './StorageBase.interface';\nimport type { ActionTypesBase } from './actionTypesBase';\nimport { actionTypesBase } from './actionTypesBase';\nimport { getDataReducer } from './getStorageReducer';\n\n@Module({\n  name: 'StorageBase',\n  deps: [{ dep: 'Prefix', optional: true }],\n})\nexport abstract class StorageBase<T extends Deps = Deps> extends RcModuleV2<T> {\n  protected abstract _storage: IStorage;\n  protected _storageReducers: ReducersMapObject = {};\n  protected _storageReducer: Reducer;\n  protected _StorageProvider: IStorageBaseOptions['StorageProvider'];\n  protected _storageActionTypes: ActionTypesBase;\n\n  constructor(deps: T, storageBaseOptions: StorageBaseOptions) {\n    super({\n      deps,\n    });\n    if (!storageBaseOptions.name) {\n      throw new Error('name must be defined');\n    }\n    this._StorageProvider =\n      storageBaseOptions.StorageProvider ?? SynchronizedStorage;\n    this._storageActionTypes = ObjectMap.prefixKeys(\n      [...ObjectMap.keys(actionTypesBase)],\n      storageBaseOptions.name,\n    );\n    this._storageReducer = getDataReducer({\n      types: this._storageActionTypes,\n      reducers: this._storageReducers,\n    });\n  }\n\n  @action\n  syncData(key: string, value: any) {\n    this.data[key] = value;\n  }\n\n  @action\n  setData(data: Record<string, any>) {\n    this.data = data;\n  }\n\n  @action\n  resetData() {\n    Object.entries(this._storageReducers).forEach(([key, reducer]) => {\n      this.data[key] = reducer(undefined, {} as Action<any>);\n    });\n  }\n\n  override get reducer() {\n    if (this._reducers)\n      return combineReducers({\n        ...this._reducers,\n        data: this._storageReducer,\n      });\n    this[spawnStorageReducersKey]();\n    this[spawnReducersKey]();\n    return combineReducers({\n      ...this._reducers!,\n      data: this._storageReducer,\n    }) as Reducer<any, Action>;\n  }\n\n  get data() {\n    return this[stateKey].data;\n  }\n\n  set data(value: Record<string, any>) {\n    this[stateKey].data = value;\n  }\n\n  /**\n   * register storage reducer\n   */\n  registerReducer({ key, reducer }: { key: string; reducer: Reducer }) {\n    if (this._storageReducers[key]) {\n      throw new Error(`Reducer of key: '${key}' already exists`);\n    }\n    this._storageReducers[key] = reducer;\n  }\n\n  getItem(key: string) {\n    return this.data[key];\n  }\n\n  get driver() {\n    if (this.ready) {\n      return this._storage.driver;\n    }\n    return null;\n  }\n\n  get prefix() {\n    return this._deps.prefix;\n  }\n}\n"],"mappings":"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","ignoreList":[]}