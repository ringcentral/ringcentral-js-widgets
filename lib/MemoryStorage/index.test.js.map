{"version":3,"sources":["lib/MemoryStorage/index.test.ts"],"names":["describe","it","MemoryStorage","to","be","a","not","instance","exist","getItem","setItem","removeItem","equal","undefined","key","length","forEach","num","idx"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\n\nimport { MemoryStorage } from '.';\n\ndescribe('MemoryStorage', () => {\n  it('should be a constructor function', () => {\n    expect(MemoryStorage).to.be.a('function');\n    expect(() => new MemoryStorage()).to.not.throw();\n    const instance = new MemoryStorage();\n    expect(instance).to.exist;\n    expect(instance instanceof MemoryStorage).to.be.true;\n  });\n  describe('MemoryStorage instance', () => {\n    it('should have function getItem', () => {\n      const instance = new MemoryStorage();\n      expect(instance.getItem).to.be.a('function');\n    });\n    it('should have function setItem', () => {\n      const instance = new MemoryStorage();\n      expect(instance.setItem).to.be.a('function');\n    });\n    it('should have function removeItem', () => {\n      const instance = new MemoryStorage();\n      expect(instance.removeItem).to.be.a('function');\n    });\n    it('should behave similar to localStorage with getItem, setItem, and removeItem', () => {\n      const instance = new MemoryStorage();\n      instance.setItem('foo', 'bar');\n      expect(instance.getItem('foo')).to.equal('bar');\n      instance.removeItem('foo');\n      expect(instance.getItem('bar')).to.be.undefined;\n    });\n    it('should have function key', () => {\n      const instance = new MemoryStorage();\n      expect(instance.key).to.be.a('function');\n    });\n    it('should have property length', () => {\n      const instance = new MemoryStorage();\n      expect(instance.length).to.be.a('number');\n    });\n    it('should have the correct length', () => {\n      const instance = new MemoryStorage();\n      [1, 2, 3, 4, 5].forEach((num) => {\n        instance.setItem(`foo-${num}`, `bar-${num}`);\n        expect(instance.length).to.equal(num);\n      });\n    });\n    it('should return storage keys with key function', () => {\n      const instance = new MemoryStorage();\n      [1, 2, 3, 4, 5].forEach((num, idx) => {\n        instance.setItem(`foo-${num}`, `bar-${num}`);\n        expect(instance.key(idx)).to.equal(`foo-${num}`);\n      });\n    });\n  });\n});\n"],"file":"index.test.js"}