{"version":3,"sources":["lib/getBaseWebpackConfig/WebpackCommandPlugin.ts"],"names":["WebpackCommandPlugin","command","isRunning","compiler","hooks","afterEmit","tap","compilation","execa","stdio"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;IAUaA,oB;AACX;AACF;AACA;AAKE,sCAAwC;AAAA,QAA1BC,OAA0B,QAA1BA,OAA0B;;AAAA;;AAAA,SAJhCA,OAIgC;AAAA,SAFhCC,SAEgC,GAFpB,KAEoB;AACtC,SAAKD,OAAL,GAAeA,OAAf;AACD;;;;0BAEKE,Q,EAAoB;AAAA;;AACxBA,MAAAA,QAAQ,CAACC,KAAT,CAAeC,SAAf,CAAyBC,GAAzB,CAA6B,iBAA7B,EAAgD,UAACC,WAAD,EAAiB;AAC/D,YAAI,KAAI,CAACL,SAAT,EAAoB;;AACpBM,0BAAMP,OAAN,CAAc,KAAI,CAACA,OAAnB,EAA4B;AAC1BQ,UAAAA,KAAK,EAAE;AADmB,SAA5B;;AAGA,QAAA,KAAI,CAACP,SAAL,GAAiB,IAAjB;AACD,OAND;AAOD","sourcesContent":["import execa from 'execa';\nimport { Compiler } from 'webpack';\n\ninterface PluginOptions {\n  /**\n   * exec command\n   */\n  command: string;\n}\n\nexport class WebpackCommandPlugin {\n  /**\n   * exec command\n   */\n  private command: string;\n\n  private isRunning = false;\n\n  constructor({ command }: PluginOptions) {\n    this.command = command;\n  }\n\n  apply(compiler: Compiler) {\n    compiler.hooks.afterEmit.tap('AfterEmitPlugin', (compilation) => {\n      if (this.isRunning) return;\n      execa.command(this.command, {\n        stdio: 'inherit',\n      });\n      this.isRunning = true;\n    });\n  }\n}\n"],"file":"WebpackCommandPlugin.js"}