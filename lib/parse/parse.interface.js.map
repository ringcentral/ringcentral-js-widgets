{"version":3,"file":"parse.interface.js","names":[],"sources":["lib/parse/parse.interface.ts"],"sourcesContent":["import { CountryCode } from 'libphonenumber-js';\n\nexport interface ParseResult {\n  input: string;\n  parsedCountry?: string | null;\n  parsedNumber?: string | null;\n  isValid: boolean;\n  hasInvalidChars: boolean;\n  isExtension: boolean;\n  isServiceNumber: boolean;\n  hasPlus: boolean;\n  phoneNumber?: string | null;\n  extension?: string | null;\n  extendedControls?: any;\n  countryCallingCode?: string | undefined;\n}\nexport interface ParseParam {\n  input: string;\n  countryCode?: CountryCode;\n  /**\n   * Max extension number length, when phone number length is bigger than this, it's not an extension number\n   * Used to support 6 digits @default 6\n   * It can be set in admin web\n   */\n  maxExtensionLength?: number;\n  areaCode?: string;\n}\n\nexport interface ProcessParam {\n  result: ParseResult;\n  tokens: string[];\n  countryCode?: CountryCode;\n  maxExtensionLength?: number;\n}\n"],"mappings":""}