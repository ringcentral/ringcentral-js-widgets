{"version":3,"file":"index.js","names":["_libphonenumberJs","require","_cleanNumber","_interopRequireDefault","_extractControls2","obj","__esModule","invalidCharsRegExp","plusRegex","extensionDelimiter","attachParsedCountryInfo","result","countryCode","asYouType","AsYouType","_ref","parseNumber","phoneNumber","_ref$country","country","_ref$phone","phone","parsedCountry","parsedNumber","input","countryCallingCode","getCallingCode","processServiceNumber","_ref2","tokens","length","isServiceNumber","concat","isValid","processInternational","_ref3","hasPlus","extension","processLocalNumber","_ref4","maxExtensionLength","undefined","isExtension","parse","_ref5","_ref5$countryCode","_ref5$maxExtensionLen","_extractControls","extractControls","extendedControls","cleanInput","cleanNumber","hasInvalidChars","test","startWithPlus","withoutPlus","replace","startWithStar","split"],"sources":["lib/parse/index.ts"],"sourcesContent":["import type { CountryCode, ParsedNumber } from 'libphonenumber-js';\nimport { parseNumber, AsYouType } from 'libphonenumber-js';\nimport cleanNumber from '../cleanNumber';\nimport extractControls from '../extractControls';\nimport type { ParseResult, ParseParam, ProcessParam } from './parse.interface';\n\nconst invalidCharsRegExp = /[^\\d*+#\\-(). ]/;\nconst plusRegex = /\\+/g;\nconst extensionDelimiter = /[*#]/g;\n\n/**\n * helper function to attach parsed country and phone number with libphonenumber\n */\nfunction attachParsedCountryInfo(\n  result: ParseResult,\n  countryCode?: CountryCode,\n) {\n  const asYouType = new AsYouType(countryCode);\n  const { country = null, phone = null } = parseNumber(\n    result.phoneNumber!,\n    countryCode,\n  ) as ParsedNumber;\n  result.parsedCountry = country;\n  result.parsedNumber = phone || asYouType.input(result.phoneNumber!);\n  result.countryCallingCode = asYouType.getCallingCode();\n}\n\nfunction processServiceNumber({ result, tokens }: ProcessParam): ParseResult {\n  if (tokens[1] && tokens[1].length) {\n    result.isServiceNumber = true;\n    result.phoneNumber = `*${tokens[1]}`;\n    result.isValid = true;\n  }\n  return result;\n}\n\n/**\n * process the tokens as an E164 formatted number\n */\nfunction processInternational({ result, tokens, countryCode }: ProcessParam) {\n  if (tokens[0] && tokens[0].length) {\n    result.hasPlus = true;\n    result.phoneNumber = `+${tokens[0]}`;\n    // use libphonenumber to parse country code in the number\n    attachParsedCountryInfo(result, countryCode);\n    if (tokens[1] && tokens[1].length) {\n      result.extension = tokens[1];\n    }\n    result.isValid = true;\n  }\n  return result;\n}\n\n/**\n * process the tokens as local numbers including extensions\n */\nfunction processLocalNumber({\n  result,\n  tokens,\n  countryCode,\n  maxExtensionLength,\n}: ProcessParam): ParseResult {\n  if (tokens[0] && tokens[0].length) {\n    // not extension\n    if (\n      maxExtensionLength !== undefined &&\n      tokens[0].length > maxExtensionLength\n    ) {\n      result.phoneNumber = tokens[0];\n      attachParsedCountryInfo(result, countryCode);\n      if (tokens[1] && tokens[1].length) {\n        result.extension = tokens[1];\n      }\n    } else {\n      result.isExtension = true;\n      result.phoneNumber = tokens[0];\n    }\n    result.isValid = true;\n    return result;\n  }\n  return result;\n}\n/**\n * parse the input phone number\n */\nexport default function parse({\n  input,\n  countryCode = 'US',\n  maxExtensionLength = 6,\n}: ParseParam): ParseResult {\n  const { phoneNumber, extendedControls } = extractControls(input);\n  const cleanInput = cleanNumber(phoneNumber);\n  const result: ParseResult = {\n    input,\n    parsedCountry: null,\n    parsedNumber: null,\n    isValid: false,\n    hasInvalidChars: invalidCharsRegExp.test(input),\n    isExtension: false,\n    isServiceNumber: false,\n    hasPlus: false,\n    phoneNumber: null,\n    extension: null,\n    extendedControls,\n  };\n\n  const startWithPlus = cleanInput[0] === '+';\n  const withoutPlus = cleanInput.replace(plusRegex, '');\n  const startWithStar = withoutPlus[0] === '*';\n\n  // cleanInput = '+*xxxx'; // is invalid\n  if (startWithPlus && startWithStar) {\n    return result;\n  }\n  const tokens = withoutPlus.split(extensionDelimiter);\n\n  // cleanInput = '*xxxx'; // service number\n  if (startWithStar) {\n    return processServiceNumber({ result, tokens });\n  }\n\n  // cleanInput = '+xxx'; // should contain country code\n  if (startWithPlus) {\n    return processInternational({ result, tokens, countryCode });\n  }\n\n  // cleanNumber = 'xxxxx'; // is local number\n  return processLocalNumber({\n    result,\n    tokens,\n    countryCode,\n    maxExtensionLength,\n  });\n}\n"],"mappings":"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"}