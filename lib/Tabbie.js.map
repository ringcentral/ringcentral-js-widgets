{"version":3,"file":"Tabbie.js","names":["_events","require","uuid","_interopRequireWildcard","_ObjectMap","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","iterator","constructor","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","Array","isArray","_arrayLikeToArray","_toArray","_arrayWithHoles","_nonIterableRest","o","minLen","n","toString","slice","name","from","test","len","length","i","arr2","iter","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","HEART_BEAT_INTERVAL","HEART_BEAT_EXPIRE","GC_INTERVAL","getPrefix","prefix","concat","exports","getEventKey","TabbieEvents","ObjectMap","fromKeys","Tabbie","localStorage","getItem","_mainTabKey","mainTabId","id","_getHeartBeatKeys","_this","tabs","map","tab","_getActualId","firstTabId","_this2","enabled","filter","Date","now","Math","floor","_heartBeatInterval","_ref","_this3","_ref$prefix","_ref$heartBeatInterva","heartBeatInterval","_ref$heartBeatExpire","heartBeatExpire","_ref$gcInterval","gcInterval","_ref$autoMainTab","autoMainTab","isMainTab","v4","_emitter","EventEmitter","_autoMainTab","_isMainTab","_heartBeatKey","_heartBeatRegExp","_eventKey","_eventRegExp","_heartBeatExpire","_gcInterval","_heartBeatIntervalId","_gcIntervalId","_heartBeat","setItem","_gc","regeneratorRuntime","mark","_callee","expiredCut","isMainTabAlive","isExpired","wrap","_callee$","_context","prev","next","getMainTabId","sent","removeItem","_setFirstTabAsMainTab","stop","_setAsVisibleTab","document","hidden","setAsMainTab","window","visibilityState","preFixHeartBeatKey","RegExp","_bindInterval","_bindStorageListener","_bindVisibilityListener","_bindUnloadListener","setInterval","addEventListener","_this4","_ref4","_callee2","_ref3","newValue","payload","_payload","event","_this4$_emitter","_callee2$","_context2","t0","t1","events","mainTabIdChanged","t2","emit","t3","t4","JSON","parse","_x","_this5","clearInterval","send","_len","_key","stringify","_getMainTabId","_callee3","_this6","_callee3$","_context3","abrupt","once","_checkIsMain","_callee4","_callee4$","_context4","checkIsMain","checkTabAliveById","_this7","some","on","_this$_emitter","replace","results","Set","add","isFirstTab"],"sources":["lib/Tabbie.ts"],"sourcesContent":["// @ts-nocheck\nimport { EventEmitter } from 'events';\nimport * as uuid from 'uuid';\n\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\n\nconst HEART_BEAT_INTERVAL = 1000;\n// heartbeat older than HEART_BEAT_EXPIRE will be gc'ed\n// chrome and firefox throttles intervals when inactive expire time of 2000\n// sometimes would kill live heartbeats and cause the mainTabId to change\nconst HEART_BEAT_EXPIRE = 3000;\nconst GC_INTERVAL = 5000;\nexport const getPrefix = (prefix: string): string =>\n  prefix && prefix !== '' ? `${prefix}-` : '';\nexport const getEventKey = (prefix: string): string => `${prefix}tabbie-event-`;\n\nconst TabbieEvents = ObjectMap.fromKeys(['mainTabIdChanged', 'event']);\n/**\n * @class\n * @description The base active tab and cross tab event handling class.\n */\nexport class Tabbie {\n  id = uuid.v4();\n  enabled: boolean;\n  prefix: string;\n\n  private _emitter = new EventEmitter();\n\n  private _autoMainTab?: boolean;\n  private _isMainTab?: boolean;\n  private _mainTabKey: string;\n\n  private _heartBeatKey: string;\n  private _heartBeatRegExp: RegExp;\n\n  private _eventKey: string;\n  private _eventRegExp: RegExp;\n\n  private _heartBeatExpire: number;\n  private _heartBeatInterval: number;\n  private _gcInterval: number;\n  private _heartBeatIntervalId: NodeJS.Timeout;\n  private _gcIntervalId: NodeJS.Timeout;\n\n  get events() {\n    return TabbieEvents;\n  }\n\n  get mainTabId() {\n    return localStorage.getItem(this._mainTabKey);\n  }\n\n  get isMainTab() {\n    return this.mainTabId === this.id;\n  }\n\n  get tabs() {\n    return this._getHeartBeatKeys();\n  }\n\n  get actualTabIds() {\n    return this.tabs.map((tab) => this._getActualId(tab));\n  }\n\n  get firstTabId() {\n    const tabs = this.tabs;\n    if (tabs.length) {\n      return this._getActualId(tabs[0]);\n    }\n    return null;\n  }\n\n  get isFirstTab() {\n    return this.id === this.firstTabId;\n  }\n\n  get hasMultipleTabs() {\n    return (\n      this.enabled &&\n      this.tabs.filter(\n        (key) =>\n          Date.now() - Math.floor(+localStorage.getItem(key)) <\n          this._heartBeatInterval * 2 - 100,\n      ).length > 1\n    );\n  }\n\n  constructor({\n    prefix = '',\n    heartBeatInterval = HEART_BEAT_INTERVAL,\n    heartBeatExpire = HEART_BEAT_EXPIRE,\n    gcInterval = GC_INTERVAL,\n    autoMainTab = true,\n    isMainTab,\n  }: {\n    prefix?: string;\n    heartBeatInterval?: number;\n    heartBeatExpire?: number;\n    gcInterval?: number;\n    autoMainTab?: boolean;\n    isMainTab?: boolean;\n  }) {\n    this.prefix = getPrefix(prefix);\n    this._heartBeatInterval = heartBeatInterval;\n    this._heartBeatExpire = heartBeatExpire;\n    this._gcInterval = gcInterval;\n    this._autoMainTab = autoMainTab;\n    this._isMainTab = isMainTab;\n\n    this.enabled =\n      typeof window !== 'undefined' &&\n      typeof document.visibilityState !== 'undefined' &&\n      typeof localStorage !== 'undefined';\n\n    const preFixHeartBeatKey = `${this.prefix}tabbie-heartBeat-`;\n    this._heartBeatKey = `${preFixHeartBeatKey}${this.id}`;\n    this._mainTabKey = `${this.prefix}tabbie-mainTab-id`;\n    this._eventKey = getEventKey(this.prefix);\n\n    this._heartBeatRegExp = new RegExp(`^${preFixHeartBeatKey}`);\n    this._eventRegExp = new RegExp(`^${this._eventKey}`);\n\n    if (this.enabled) {\n      this._bindInterval();\n      this._bindStorageListener();\n      if (autoMainTab) {\n        this._bindVisibilityListener();\n        if (!document.hidden) {\n          this.setAsMainTab();\n        } else if (!this.mainTabId) {\n          this._setFirstTabAsMainTab();\n        }\n      } else if (isMainTab === true) {\n        this.setAsMainTab();\n      }\n      this._bindUnloadListener();\n    }\n  }\n\n  private _bindInterval() {\n    this._heartBeat();\n    this._heartBeatIntervalId = setInterval(\n      this._heartBeat,\n      this._heartBeatInterval,\n    );\n\n    this._gcIntervalId = setInterval(this._gc, this._gcInterval);\n  }\n\n  private _bindVisibilityListener() {\n    document.addEventListener('visibilitychange', this._setAsVisibleTab);\n    window.addEventListener('focus', this._setAsVisibleTab);\n  }\n\n  private _bindStorageListener() {\n    window.addEventListener('storage', async ({ key, newValue }) => {\n      if (key === this._mainTabKey) {\n        // use the newest main tab id from localhost instead of from the event\n        // to avoid race conditions\n        this._emitter.emit(\n          this.events.mainTabIdChanged,\n          await this.getMainTabId(),\n        );\n      } else if (\n        this._heartBeatRegExp.test(key) &&\n        (!newValue || newValue === '')\n      ) {\n        if (this._getActualId(key) === (await this.getMainTabId())) {\n          this._setFirstTabAsMainTab();\n        }\n      } else if (this._eventRegExp.test(key) && newValue && newValue !== '') {\n        const payload = JSON.parse(newValue);\n        const [id, event, ...args] = payload;\n        if (id !== this.id) {\n          // ie fires storage event on original\n          this._emitter.emit(this.events.event, event, ...args);\n        }\n      }\n    });\n  }\n\n  private _bindUnloadListener() {\n    window.addEventListener('unload', () => {\n      clearInterval(this._gcIntervalId);\n      clearInterval(this._heartBeatIntervalId);\n      localStorage.removeItem(this._heartBeatKey);\n      if (this.isMainTab) {\n        localStorage.removeItem(this._mainTabKey);\n      }\n    });\n  }\n\n  send(event: string, ...args: any[]) {\n    if (!this.enabled) {\n      return;\n    }\n\n    const key = `${this._eventKey}${uuid.v4()}`;\n\n    const payload = [this.id, event, ...args];\n    localStorage.setItem(key, JSON.stringify(payload));\n    localStorage.removeItem(key);\n  }\n\n  /**\n   * @function\n   * @return {Promise} - Resolves to current main tab id\n   */\n  async getMainTabId(): Promise<string> {\n    const mainTabId = this.mainTabId;\n    if (mainTabId) return mainTabId;\n    return new Promise<string>((resolve) => {\n      this._emitter.once(this.events.mainTabIdChanged, resolve);\n    });\n  }\n\n  /**\n   * check current tab is main tab.\n   */\n  async checkIsMain() {\n    // assume main if not enabled\n    // this is to ensure that modules depending on this would function\n    // in node like environments\n    if (!this._autoMainTab) {\n      return !!this._isMainTab;\n    }\n    return !this.enabled || (await this.getMainTabId()) === this.id;\n  }\n\n  /**\n   * check tab alive state by tabId\n   * @param id tabId you want to check\n   */\n  checkTabAliveById(id: string) {\n    return this.tabs.some((key) => this._getActualId(key) === id);\n  }\n\n  on(...args: Parameters<EventEmitter['on']>) {\n    return this._emitter.on(...args);\n  }\n\n  private _getActualId(key: string) {\n    return key.replace(this._heartBeatRegExp, '');\n  }\n\n  private _heartBeat = () => {\n    localStorage.setItem(this._heartBeatKey, `${Date.now()}`);\n  };\n\n  // When there is some problem when not remove item from storage, that will remove by gc\n  private _gc = async () => {\n    const expiredCut = Date.now() - this._heartBeatExpire;\n    let isMainTabAlive = false;\n    const mainTabId = await this.getMainTabId();\n    const tabs = this.tabs;\n\n    for (let i = 0, len = tabs.length; i < len; i++) {\n      const key = tabs[i];\n      const isExpired = +localStorage.getItem(key) < expiredCut;\n      const isMainTab = this._getActualId(key) === mainTabId;\n\n      if (isExpired) {\n        localStorage.removeItem(key);\n      }\n\n      if (isMainTab) {\n        isMainTabAlive = !isExpired;\n      }\n    }\n\n    // if mainTab is not alive reset mainTab to firstTab\n    if (!isMainTabAlive) {\n      this._setFirstTabAsMainTab();\n    }\n  };\n\n  private _getHeartBeatKeys() {\n    const results = new Set<string>();\n\n    for (let i = 0; i < localStorage.length; i += 1) {\n      const key = localStorage.key(i);\n      if (key && key !== '' && this._heartBeatRegExp.test(key)) {\n        results.add(key);\n      }\n    }\n    return [...results];\n  }\n\n  public setAsMainTab(id = this.id) {\n    localStorage.setItem(this._mainTabKey, id);\n    this._emitter.emit(this.events.mainTabIdChanged, id);\n  }\n\n  private _setAsVisibleTab = () => {\n    // avoid setting mainTabId repeatedly which may result in forced rendering\n    if (!document.hidden && !this.isMainTab) {\n      this.setAsMainTab();\n    }\n  };\n\n  private _setFirstTabAsMainTab() {\n    if (this.isFirstTab) {\n      localStorage.removeItem(this._mainTabKey);\n      this.setAsMainTab();\n    }\n  }\n}\n"],"mappings":"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"}