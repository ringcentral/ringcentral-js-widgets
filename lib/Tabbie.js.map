{"version":3,"sources":["lib/Tabbie.ts"],"names":["HEART_BEAT_INTERVAL","HEART_BEAT_EXPIRE","GC_INTERVAL","getPrefix","prefix","getEventKey","TabbieEvents","ObjectMap","fromKeys","Tabbie","localStorage","getItem","_mainTabKey","mainTabId","id","_getHeartBeatKeys","tabs","map","tab","_getActualId","length","firstTabId","enabled","filter","key","Date","now","Math","floor","_heartBeatInterval","heartBeatInterval","heartBeatExpire","gcInterval","uuid","v4","_emitter","EventEmitter","_heartBeatKey","_heartBeatRegExp","_eventKey","_eventRegExp","_heartBeatExpire","_gcInterval","_heartBeatIntervalId","_gcIntervalId","_heartBeat","setItem","_gc","expiredCut","isMainTabAlive","getMainTabId","i","len","isExpired","isMainTab","removeItem","_setFirstTabAsMainTab","_setAsVisibleTab","document","hidden","setAsMainTab","window","visibilityState","preFixHeartBeatKey","RegExp","_bindInterval","_bindListener","addEventListener","setInterval","newValue","events","mainTabIdChanged","emit","test","payload","JSON","parse","event","args","clearInterval","stringify","Promise","resolve","once","some","on","replace","results","Set","add","isFirstTab"],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\nimport * as uuid from 'uuid';\n\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\n\nconst HEART_BEAT_INTERVAL = 1000;\n// heartbeat older than HEART_BEAT_EXPIRE will be gc'ed\n// chrome and firefox throttles intervals when inactive expire time of 2000\n// sometimes would kill live heartbeats and cause the mainTabId to change\nconst HEART_BEAT_EXPIRE = 3000;\nconst GC_INTERVAL = 5000;\nexport const getPrefix = (prefix: string): string =>\n  prefix && prefix !== '' ? `${prefix}-` : '';\nexport const getEventKey = (prefix: string): string => `${prefix}tabbie-event-`;\n\nconst TabbieEvents = ObjectMap.fromKeys(['mainTabIdChanged', 'event']);\n/**\n * @class\n * @description The base active tab and cross tab event handling class.\n */\nexport class Tabbie {\n  id = uuid.v4();\n  enabled: boolean;\n  prefix: string;\n\n  private _emitter = new EventEmitter();\n\n  private _mainTabKey: string;\n\n  private _heartBeatKey: string;\n  private _heartBeatRegExp: RegExp;\n\n  private _eventKey: string;\n  private _eventRegExp: RegExp;\n\n  private _heartBeatExpire: number;\n  private _heartBeatInterval: number;\n  private _gcInterval: number;\n  private _heartBeatIntervalId: NodeJS.Timeout;\n  private _gcIntervalId: NodeJS.Timeout;\n\n  get events() {\n    return TabbieEvents;\n  }\n\n  get mainTabId() {\n    return localStorage.getItem(this._mainTabKey);\n  }\n\n  get isMainTab() {\n    return this.mainTabId === this.id;\n  }\n\n  get tabs() {\n    return this._getHeartBeatKeys();\n  }\n\n  get actualTabIds() {\n    return this.tabs.map((tab) => this._getActualId(tab));\n  }\n\n  get firstTabId() {\n    const tabs = this.tabs;\n    if (tabs.length) {\n      return this._getActualId(tabs[0]);\n    }\n    return null;\n  }\n\n  get isFirstTab() {\n    return this.id === this.firstTabId;\n  }\n\n  get hasMultipleTabs() {\n    return (\n      this.enabled &&\n      this.tabs.filter(\n        (key) =>\n          Date.now() - Math.floor(+localStorage.getItem(key)) <\n          this._heartBeatInterval * 2 - 100,\n      ).length > 1\n    );\n  }\n\n  constructor({\n    prefix = '',\n    heartBeatInterval = HEART_BEAT_INTERVAL,\n    heartBeatExpire = HEART_BEAT_EXPIRE,\n    gcInterval = GC_INTERVAL,\n  }) {\n    this.prefix = getPrefix(prefix);\n    this._heartBeatInterval = heartBeatInterval;\n    this._heartBeatExpire = heartBeatExpire;\n    this._gcInterval = gcInterval;\n\n    this.enabled =\n      typeof window !== 'undefined' &&\n      typeof document.visibilityState !== 'undefined' &&\n      typeof localStorage !== 'undefined';\n\n    const preFixHeartBeatKey = `${this.prefix}tabbie-heartBeat-`;\n    this._heartBeatKey = `${preFixHeartBeatKey}${this.id}`;\n    this._mainTabKey = `${this.prefix}tabbie-mainTab-id`;\n    this._eventKey = getEventKey(this.prefix);\n\n    this._heartBeatRegExp = new RegExp(`^${preFixHeartBeatKey}`);\n    this._eventRegExp = new RegExp(`^${this._eventKey}`);\n\n    if (this.enabled) {\n      this._bindInterval();\n\n      this._bindListener();\n      if (!document.hidden) {\n        this.setAsMainTab();\n      } else if (!this.mainTabId) {\n        this._setFirstTabAsMainTab();\n      }\n      window.addEventListener('unload', () => {\n        if (this.isMainTab) {\n          localStorage.removeItem(this._mainTabKey);\n        }\n      });\n    }\n  }\n\n  private _bindInterval() {\n    this._heartBeat();\n    this._heartBeatIntervalId = setInterval(\n      this._heartBeat,\n      this._heartBeatInterval,\n    );\n\n    this._gcIntervalId = setInterval(this._gc, this._gcInterval);\n  }\n\n  private _bindListener() {\n    document.addEventListener('visibilitychange', this._setAsVisibleTab);\n    window.addEventListener('focus', this._setAsVisibleTab);\n\n    window.addEventListener('storage', async ({ key, newValue }) => {\n      if (key === this._mainTabKey) {\n        // use the newest main tab id from localhost instead of from the event\n        // to avoid race conditions\n        this._emitter.emit(\n          this.events.mainTabIdChanged,\n          await this.getMainTabId(),\n        );\n      } else if (\n        this._heartBeatRegExp.test(key) &&\n        (!newValue || newValue === '')\n      ) {\n        if (this._getActualId(key) === (await this.getMainTabId())) {\n          this._setFirstTabAsMainTab();\n        }\n      } else if (this._eventRegExp.test(key) && newValue && newValue !== '') {\n        const payload = JSON.parse(newValue);\n        const [id, event, ...args] = payload;\n        if (id !== this.id) {\n          // ie fires storage event on original\n          this._emitter.emit(this.events.event, event, ...args);\n        }\n      }\n    });\n\n    window.addEventListener('unload', () => {\n      clearInterval(this._gcIntervalId);\n      clearInterval(this._heartBeatIntervalId);\n      localStorage.removeItem(this._heartBeatKey);\n    });\n  }\n\n  send(event: string, ...args: any[]) {\n    if (!this.enabled) {\n      return;\n    }\n\n    const key = `${this._eventKey}${uuid.v4()}`;\n\n    const payload = [this.id, event, ...args];\n    localStorage.setItem(key, JSON.stringify(payload));\n    localStorage.removeItem(key);\n  }\n\n  /**\n   * @function\n   * @return {Promise} - Resolves to current main tab id\n   */\n  async getMainTabId(): Promise<string> {\n    const mainTabId = this.mainTabId;\n    if (mainTabId) return mainTabId;\n    return new Promise<string>((resolve) => {\n      this._emitter.once(this.events.mainTabIdChanged, resolve);\n    });\n  }\n\n  /**\n   * check current tab is main tab.\n   */\n  async checkIsMain() {\n    // assume main if not enabled\n    // this is to ensure that modules depending on this would function\n    // in node like environments\n    return !this.enabled || (await this.getMainTabId()) === this.id;\n  }\n\n  /**\n   * check tab alive state by tabId\n   * @param id tabId you want to check\n   */\n  checkTabAliveById(id: string) {\n    return this.tabs.some((key) => this._getActualId(key) === id);\n  }\n\n  on(...args: Parameters<EventEmitter['on']>) {\n    return this._emitter.on(...args);\n  }\n\n  private _getActualId(key: string) {\n    return key.replace(this._heartBeatRegExp, '');\n  }\n\n  private _heartBeat = () => {\n    localStorage.setItem(this._heartBeatKey, `${Date.now()}`);\n  };\n\n  // When there is some problem when not remove item from storage, that will remove by gc\n  private _gc = async () => {\n    const expiredCut = Date.now() - this._heartBeatExpire;\n    let isMainTabAlive = false;\n    const mainTabId = await this.getMainTabId();\n    const tabs = this.tabs;\n\n    for (let i = 0, len = tabs.length; i < len; i++) {\n      const key = tabs[i];\n      const isExpired = +localStorage.getItem(key) < expiredCut;\n      const isMainTab = this._getActualId(key) === mainTabId;\n\n      if (isExpired) {\n        localStorage.removeItem(key);\n      }\n\n      if (isMainTab) {\n        isMainTabAlive = !isExpired;\n      }\n    }\n\n    // if mainTab is not alive reset mainTab to firstTab\n    if (!isMainTabAlive) {\n      this._setFirstTabAsMainTab();\n    }\n  };\n\n  private _getHeartBeatKeys() {\n    const results = new Set<string>();\n\n    for (let i = 0; i < localStorage.length; i += 1) {\n      const key = localStorage.key(i);\n      if (key && key !== '' && this._heartBeatRegExp.test(key)) {\n        results.add(key);\n      }\n    }\n    return [...results];\n  }\n\n  public setAsMainTab(id = this.id) {\n    localStorage.setItem(this._mainTabKey, id);\n    this._emitter.emit(this.events.mainTabIdChanged, id);\n  }\n\n  private _setAsVisibleTab = () => {\n    // avoid setting mainTabId repeatedly which may result in forced rendering\n    if (!document.hidden && !this.isMainTab) {\n      this.setAsMainTab();\n    }\n  };\n\n  private _setFirstTabAsMainTab() {\n    if (this.isFirstTab) {\n      localStorage.removeItem(this._mainTabKey);\n      this.setAsMainTab();\n    }\n  }\n}\n"],"file":"Tabbie.js"}