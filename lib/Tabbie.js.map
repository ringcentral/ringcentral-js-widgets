{"version":3,"file":"Tabbie.js","names":["_ObjectMap","require","_events","uuid","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","prototype","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","Array","isArray","_arrayLikeToArray","_toArray","_arrayWithHoles","_nonIterableRest","toString","slice","name","from","test","length","asyncGeneratorStep","c","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","enumerable","configurable","writable","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","HEART_BEAT_INTERVAL","HEART_BEAT_EXPIRE","GC_INTERVAL","getPrefix","prefix","concat","exports","getEventKey","TabbieEvents","ObjectMap","fromKeys","Tabbie","localStorage","getItem","_mainTabKey","mainTabId","id","_getHeartBeatKeys","_this","tabs","map","tab","_getActualId","firstTabId","_this2","enabled","filter","Date","now","Math","floor","_heartBeatInterval","_ref","_this3","_ref$prefix","_ref$heartBeatInterva","heartBeatInterval","_ref$heartBeatExpire","heartBeatExpire","_ref$gcInterval","gcInterval","_ref$autoMainTab","autoMainTab","isMainTab","v4","_emitter","EventEmitter","_autoMainTab","_isMainTab","_heartBeatKey","_heartBeatRegExp","_eventKey","_eventRegExp","_heartBeatExpire","_gcInterval","_heartBeatIntervalId","_gcIntervalId","_heartBeat","setItem","_gc","regeneratorRuntime","mark","_callee","expiredCut","isMainTabAlive","len","isExpired","wrap","_callee$","_context","prev","next","getMainTabId","sent","removeItem","_setFirstTabAsMainTab","stop","_setAsVisibleTab","document","hidden","setAsMainTab","window","visibilityState","preFixHeartBeatKey","RegExp","_bindInterval","_bindStorageListener","_bindVisibilityListener","_bindUnloadListener","setInterval","addEventListener","_this4","_ref4","_callee2","_ref3","newValue","payload","_payload","event","args","_this4$_emitter","_callee2$","_context2","t0","t1","events","mainTabIdChanged","t2","emit","t3","t4","JSON","parse","_x","_this5","clearInterval","send","_len","_key","stringify","_getMainTabId","_callee3","_this6","_callee3$","_context3","abrupt","once","_checkIsMain","_callee4","_callee4$","_context4","checkIsMain","checkTabAliveById","_this7","some","on","_this$_emitter","replace","results","Set","add","undefined","isFirstTab"],"sources":["lib/Tabbie.ts"],"sourcesContent":["// @ts-nocheck\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\nimport { EventEmitter } from 'events';\nimport * as uuid from 'uuid';\n\nconst HEART_BEAT_INTERVAL = 1000;\n// heartbeat older than HEART_BEAT_EXPIRE will be gc'ed\n// chrome and firefox throttles intervals when inactive expire time of 2000\n// sometimes would kill live heartbeats and cause the mainTabId to change\nconst HEART_BEAT_EXPIRE = 3000;\nconst GC_INTERVAL = 5000;\nexport const getPrefix = (prefix: string): string =>\n  prefix && prefix !== '' ? `${prefix}-` : '';\nexport const getEventKey = (prefix: string): string => `${prefix}tabbie-event-`;\n\nconst TabbieEvents = ObjectMap.fromKeys(['mainTabIdChanged', 'event']);\n/**\n * @class\n * @description The base active tab and cross tab event handling class.\n */\nexport class Tabbie {\n  id = uuid.v4();\n  enabled: boolean;\n  prefix: string;\n\n  private _emitter = new EventEmitter();\n\n  private _autoMainTab?: boolean;\n  private _isMainTab?: boolean;\n  private _mainTabKey: string;\n\n  private _heartBeatKey: string;\n  private _heartBeatRegExp: RegExp;\n\n  private _eventKey: string;\n  private _eventRegExp: RegExp;\n\n  private _heartBeatExpire: number;\n  private _heartBeatInterval: number;\n  private _gcInterval: number;\n  private _heartBeatIntervalId: NodeJS.Timeout;\n  private _gcIntervalId: NodeJS.Timeout;\n\n  get events() {\n    return TabbieEvents;\n  }\n\n  get mainTabId() {\n    return localStorage.getItem(this._mainTabKey);\n  }\n\n  get isMainTab() {\n    return this.mainTabId === this.id;\n  }\n\n  get tabs() {\n    return this._getHeartBeatKeys();\n  }\n\n  get actualTabIds() {\n    return this.tabs.map((tab) => this._getActualId(tab));\n  }\n\n  get firstTabId() {\n    const tabs = this.tabs;\n    if (tabs.length) {\n      return this._getActualId(tabs[0]);\n    }\n    return null;\n  }\n\n  get isFirstTab() {\n    return this.id === this.firstTabId;\n  }\n\n  get hasMultipleTabs() {\n    return (\n      this.enabled &&\n      this.tabs.filter(\n        (key) =>\n          Date.now() - Math.floor(+localStorage.getItem(key)) <\n          this._heartBeatInterval * 2 - 100,\n      ).length > 1\n    );\n  }\n\n  constructor({\n    prefix = '',\n    heartBeatInterval = HEART_BEAT_INTERVAL,\n    heartBeatExpire = HEART_BEAT_EXPIRE,\n    gcInterval = GC_INTERVAL,\n    autoMainTab = true,\n    isMainTab,\n  }: {\n    prefix?: string;\n    heartBeatInterval?: number;\n    heartBeatExpire?: number;\n    gcInterval?: number;\n    autoMainTab?: boolean;\n    isMainTab?: boolean;\n  }) {\n    this.prefix = getPrefix(prefix);\n    this._heartBeatInterval = heartBeatInterval;\n    this._heartBeatExpire = heartBeatExpire;\n    this._gcInterval = gcInterval;\n    this._autoMainTab = autoMainTab;\n    this._isMainTab = isMainTab;\n\n    this.enabled =\n      typeof window !== 'undefined' &&\n      typeof document.visibilityState !== 'undefined' &&\n      typeof localStorage !== 'undefined';\n\n    const preFixHeartBeatKey = `${this.prefix}tabbie-heartBeat-`;\n    this._heartBeatKey = `${preFixHeartBeatKey}${this.id}`;\n    this._mainTabKey = `${this.prefix}tabbie-mainTab-id`;\n    this._eventKey = getEventKey(this.prefix);\n\n    this._heartBeatRegExp = new RegExp(`^${preFixHeartBeatKey}`);\n    this._eventRegExp = new RegExp(`^${this._eventKey}`);\n\n    if (this.enabled) {\n      this._bindInterval();\n      this._bindStorageListener();\n      if (autoMainTab) {\n        this._bindVisibilityListener();\n        if (!document.hidden) {\n          this.setAsMainTab();\n        } else if (!this.mainTabId) {\n          this._setFirstTabAsMainTab();\n        }\n      } else if (isMainTab === true) {\n        this.setAsMainTab();\n      }\n      this._bindUnloadListener();\n    }\n  }\n\n  private _bindInterval() {\n    this._heartBeat();\n    this._heartBeatIntervalId = setInterval(\n      this._heartBeat,\n      this._heartBeatInterval,\n    );\n\n    this._gcIntervalId = setInterval(this._gc, this._gcInterval);\n  }\n\n  private _bindVisibilityListener() {\n    document.addEventListener('visibilitychange', this._setAsVisibleTab);\n    window.addEventListener('focus', this._setAsVisibleTab);\n  }\n\n  private _bindStorageListener() {\n    window.addEventListener('storage', async ({ key, newValue }) => {\n      if (key === this._mainTabKey) {\n        // use the newest main tab id from localhost instead of from the event\n        // to avoid race conditions\n        this._emitter.emit(\n          this.events.mainTabIdChanged,\n          await this.getMainTabId(),\n        );\n      } else if (\n        this._heartBeatRegExp.test(key) &&\n        (!newValue || newValue === '')\n      ) {\n        if (this._getActualId(key) === (await this.getMainTabId())) {\n          this._setFirstTabAsMainTab();\n        }\n      } else if (this._eventRegExp.test(key) && newValue && newValue !== '') {\n        const payload = JSON.parse(newValue);\n        const [id, event, ...args] = payload;\n        if (id !== this.id) {\n          // ie fires storage event on original\n          this._emitter.emit(this.events.event, event, ...args);\n        }\n      }\n    });\n  }\n\n  private _bindUnloadListener() {\n    window.addEventListener('pagehide', () => {\n      clearInterval(this._gcIntervalId);\n      clearInterval(this._heartBeatIntervalId);\n      localStorage.removeItem(this._heartBeatKey);\n      if (this.isMainTab) {\n        localStorage.removeItem(this._mainTabKey);\n      }\n    });\n  }\n\n  send(event: string, ...args: any[]) {\n    if (!window.document || !this.enabled) {\n      return;\n    }\n\n    const key = `${this._eventKey}${uuid.v4()}`;\n\n    const payload = [this.id, event, ...args];\n    localStorage.setItem(key, JSON.stringify(payload));\n    localStorage.removeItem(key);\n  }\n\n  /**\n   * @function\n   * @return {Promise} - Resolves to current main tab id\n   */\n  async getMainTabId(): Promise<string> {\n    const mainTabId = this.mainTabId;\n    if (mainTabId) return mainTabId;\n    return new Promise<string>((resolve) => {\n      this._emitter.once(this.events.mainTabIdChanged, resolve);\n    });\n  }\n\n  /**\n   * check current tab is main tab.\n   */\n  async checkIsMain() {\n    // assume main if not enabled\n    // this is to ensure that modules depending on this would function\n    // in node like environments\n    if (!this._autoMainTab) {\n      return !!this._isMainTab;\n    }\n    return !this.enabled || (await this.getMainTabId()) === this.id;\n  }\n\n  /**\n   * check tab alive state by tabId\n   * @param id tabId you want to check\n   */\n  checkTabAliveById(id: string) {\n    return this.tabs.some((key) => this._getActualId(key) === id);\n  }\n\n  on(...args: Parameters<EventEmitter['on']>) {\n    return this._emitter.on(...args);\n  }\n\n  private _getActualId(key: string) {\n    return key.replace(this._heartBeatRegExp, '');\n  }\n\n  private _heartBeat = () => {\n    localStorage.setItem(this._heartBeatKey, `${Date.now()}`);\n  };\n\n  // When there is some problem when not remove item from storage, that will remove by gc\n  private _gc = async () => {\n    const expiredCut = Date.now() - this._heartBeatExpire;\n    let isMainTabAlive = false;\n    const mainTabId = await this.getMainTabId();\n    const tabs = this.tabs;\n\n    for (let i = 0, len = tabs.length; i < len; i++) {\n      const key = tabs[i];\n      const isExpired = +localStorage.getItem(key) < expiredCut;\n      const isMainTab = this._getActualId(key) === mainTabId;\n\n      if (isExpired) {\n        localStorage.removeItem(key);\n      }\n\n      if (isMainTab) {\n        isMainTabAlive = !isExpired;\n      }\n    }\n\n    // if mainTab is not alive reset mainTab to firstTab\n    if (!isMainTabAlive) {\n      this._setFirstTabAsMainTab();\n    }\n  };\n\n  private _getHeartBeatKeys() {\n    const results = new Set<string>();\n\n    for (let i = 0; i < localStorage.length; i += 1) {\n      const key = localStorage.key(i);\n      if (key && key !== '' && this._heartBeatRegExp.test(key)) {\n        results.add(key);\n      }\n    }\n    return [...results];\n  }\n\n  public setAsMainTab(id = this.id) {\n    localStorage.setItem(this._mainTabKey, id);\n    this._emitter.emit(this.events.mainTabIdChanged, id);\n  }\n\n  private _setAsVisibleTab = () => {\n    // avoid setting mainTabId repeatedly which may result in forced rendering\n    if (!document.hidden && !this.isMainTab) {\n      this.setAsMainTab();\n    }\n  };\n\n  private _setFirstTabAsMainTab() {\n    if (this.isFirstTab) {\n      localStorage.removeItem(this._mainTabKey);\n      this.setAsMainTab();\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}