{"version":3,"file":"LoggerBase.js","names":["_core","require","_proxify","_loggerBaseHelper","_dec","_class","_descriptor","_objectWithoutProperties","e","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","s","length","includes","propertyIsEnumerable","call","n","hasOwnProperty","asyncGeneratorStep","a","c","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_initializerDefineProperty","l","defineProperty","enumerable","configurable","writable","initializer","ownKeys","keys","filter","getOwnPropertyDescriptor","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_classCallCheck","TypeError","_defineProperties","key","_createClass","prototype","_toPrimitive","_typeof","Symbol","toPrimitive","String","Number","_get","Reflect","get","bind","p","_superPropBase","_getPrototypeOf","_inherits","create","constructor","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","_isNativeReflectConstruct","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","Boolean","valueOf","getPrototypeOf","_applyDecoratedDescriptor","slice","reverse","reduce","_initializerWarningHelper","Error","LoggerBase","computed","that","loggingList","_RcModuleV","_super","deps","options","_this","_identityFunction","defaultIdentityFunction","_logFunction","_readyCheckFunction","_logPromises","Map","setLoggingList","id","indexOf","filterLoggingListById","item","resetLoggingList","_shouldInit","_shouldReset","ready","onReset","_log2","regeneratorRuntime","mark","_callee","_ref","promise","wrap","_callee$","_context","prev","next","concat","name","has","set","t0","stop","_log","_x","_log3","_callee2","_ref2","_callee2$","_context2","log","_x2","convertListToMap","RcModuleV2","state","action","proxify","exports"],"sources":["lib/LoggerBase/LoggerBase.ts"],"sourcesContent":["import {\n  action,\n  computed,\n  RcModuleV2,\n  state,\n} from '@ringcentral-integration/core';\n\nimport { proxify } from '../proxy/proxify';\n\nimport type { Deps, LogOptions, Options } from './LoggerBase.interface';\nimport { convertListToMap, defaultIdentityFunction } from './loggerBaseHelper';\n\nexport abstract class LoggerBase<T extends Deps = Deps> extends RcModuleV2<T> {\n  protected _identityFunction: (...args: any) => string =\n    defaultIdentityFunction;\n\n  abstract _logFunction: <P, S>(options: LogOptions<P, S>) => Promise<void>;\n\n  abstract _readyCheckFunction: () => boolean;\n\n  protected _logPromises = new Map<string, Promise<void>>();\n\n  constructor(deps: T, options: Options) {\n    super({\n      deps,\n      ...options,\n    });\n  }\n\n  @state\n  loggingList: string[] = [];\n\n  @action\n  setLoggingList(id: string) {\n    if (this.loggingList.indexOf(id) === -1) {\n      this.loggingList.push(id);\n    }\n  }\n\n  @action\n  filterLoggingListById(id: string) {\n    this.loggingList = this.loggingList.filter((item) => item !== id);\n  }\n\n  @action\n  resetLoggingList() {\n    this.loggingList = [];\n  }\n\n  override _shouldInit() {\n    return !!(super._shouldInit() && this._readyCheckFunction());\n  }\n\n  override _shouldReset() {\n    return !!(\n      super._shouldReset() ||\n      (this.ready && !this._readyCheckFunction())\n    );\n  }\n\n  override onReset() {\n    this.resetLoggingList();\n  }\n\n  @proxify\n  async _log<P, S>({ item, ...options }: LogOptions<P, S>) {\n    if (!this.ready) {\n      throw new Error(`${this.constructor.name}._log: module is not ready.`);\n    }\n    if (!item) {\n      throw new Error(\n        `${this.constructor.name}._log: options.item is undefined.`,\n      );\n    }\n\n    const id = this._identityFunction(item);\n    // wait for the previous log action to finish\n    if (this._logPromises.has(id)) {\n      await this._logPromises.get(id);\n    }\n    try {\n      this.setLoggingList(id);\n      const promise = this._logFunction({ item, ...options });\n      this._logPromises.set(id, promise);\n      await promise;\n      this._logPromises.delete(id);\n      this.filterLoggingListById(id);\n    } catch (error: any /** TODO: confirm with instanceof */) {\n      this._logPromises.delete(id);\n      this.filterLoggingListById(id);\n      throw error;\n    }\n  }\n\n  @proxify\n  async log<P, S>({ item, ...options }: LogOptions<P, S>) {\n    if (!this.ready) {\n      throw new Error(`${this.constructor.name}.log: module is not ready.`);\n    }\n    if (!item) {\n      throw new Error(\n        `${this.constructor.name}.log: options.item is undefined.`,\n      );\n    }\n    await this._log({ item, ...options });\n  }\n\n  @computed((that: LoggerBase) => [that.loggingList])\n  get loggingMap() {\n    return convertListToMap(this.loggingList);\n  }\n}\n"],"mappings":"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","ignoreList":[]}