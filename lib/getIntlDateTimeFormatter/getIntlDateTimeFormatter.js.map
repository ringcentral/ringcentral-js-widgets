{"version":3,"file":"getIntlDateTimeFormatter.js","names":["isToday","utcString","now","Date","t","getFullYear","getMonth","getDate","formatterCache","exports","getFormatter","locale","options","key","JSON","stringify","Intl","DateTimeFormat","_objectSpread","DEFAULT_DATE_TIME_OPTIONS","year","month","day","hour","minute","hour12","DEFAULT_DATE_OPTIONS","DEFAULT_TIME_OPTIONS","getIntlDateTimeFormatter","_ref","arguments","length","undefined","_ref$dateTimeOptions","dateTimeOptions","_ref$dateOptions","dateOptions","_ref$timeOptions","timeOptions","_ref2","utcTimestamp","_ref2$type","type","console","warn","format","replace"],"sources":["lib/getIntlDateTimeFormatter/getIntlDateTimeFormatter.ts"],"sourcesContent":["export function isToday(utcString: string) {\n  const now = new Date();\n  const t = new Date(utcString);\n\n  return (\n    now.getFullYear() === t.getFullYear() &&\n    now.getMonth() === t.getMonth() &&\n    now.getDate() === t.getDate()\n  );\n}\n\nexport const formatterCache: Record<string, Intl.DateTimeFormat> = {};\n\nexport function getFormatter(\n  locale: string,\n  options: Intl.DateTimeFormatOptions,\n): Intl.DateTimeFormat {\n  const key = JSON.stringify([locale, options]);\n  if (!formatterCache[key]) {\n    formatterCache[key] = new Intl.DateTimeFormat(locale, { ...options });\n  }\n  return formatterCache[key];\n}\n\nexport const DEFAULT_DATE_TIME_OPTIONS: Intl.DateTimeFormatOptions = {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  hour12: false,\n};\n\nexport const DEFAULT_DATE_OPTIONS: Intl.DateTimeFormatOptions = {\n  year: 'numeric',\n  month: 'numeric',\n  day: 'numeric',\n};\n\nexport const DEFAULT_TIME_OPTIONS: Intl.DateTimeFormatOptions = {\n  hour: 'numeric',\n  minute: 'numeric',\n  hour12: false,\n};\n\nexport default function getIntlDateTimeFormatter({\n  dateTimeOptions = DEFAULT_DATE_TIME_OPTIONS,\n  dateOptions = DEFAULT_DATE_OPTIONS,\n  timeOptions = DEFAULT_TIME_OPTIONS,\n} = {}) {\n  return ({\n    utcTimestamp,\n    locale,\n    type = isToday(utcTimestamp) ? 'time' : 'date',\n  }: DateTimeFormatterParams) => {\n    if (!utcTimestamp) {\n      console.warn('timestamp should not be empty');\n      return null;\n    }\n    switch (type) {\n      case 'date':\n        return getFormatter(locale, dateOptions)\n          .format(new Date(utcTimestamp))\n          .replace(/\\u200E|\\u200F/g, ''); // FIX: https://github.com/tc39/ecma402/issues/28\n      case 'time':\n        return getFormatter(locale, timeOptions).format(new Date(utcTimestamp));\n      default:\n        return getFormatter(locale, dateTimeOptions).format(\n          new Date(utcTimestamp),\n        );\n    }\n  };\n}\n\nexport type DateTimeFormatter = ReturnType<typeof getIntlDateTimeFormatter>;\n\nexport type DateTimeFormatterParams = {\n  utcTimestamp: any;\n  locale: string;\n  type?: 'datetime' | 'time' | 'date';\n};\n"],"mappings":"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"}