{"version":3,"sources":["lib/DataFetcher/index.ts"],"names":["DEFAULT_TTL","DEFAULT_RETRY","RETRY_INTERVALS","DataFetcher","deps","dep","optional","auth","client","storage","subscription","sleepDetector","tabManager","timeToRetry","ttl","pollingInterval","polling","disableCache","cleanOnReset","getReducer","getDataFetcherReducer","getDataReducer","getTimestampReducer","fetchFunction","forbiddenHandler","subscriptionFilters","subscriptionHandler","readyCheckFn","options","Error","_auth","ensureExist","call","_client","_sleepDetector","_disableCache","_storage","_subscription","_tabManager","_ttl","_timeToRetry","_polling","_pollingInterval","_fetchFunction","_forbiddenHandler","_subscriptionFilters","_subscriptionHandler","_readyCheckFn","_storageKey","_name","_reducer","actionTypes","registerReducer","key","reducer","data","timestamp","_promise","_lastMessage","store","subscribe","_onStateChange","on","events","detected","_handleSleepDetected","_shouldFetch","fetchData","_shouldInit","dispatch","type","init","_hasPermission","_init","initSuccess","hasPermission","_isDataReady","_shouldReset","_clearTimeout","resetSuccess","_shouldHandleSubscriptionMessage","_processSubscription","loggedIn","ready","pending","message","active","isFreshLogin","Date","now","status","moduleStatuses","initializing","console","error","_retry","_startPolling","response","result","fetch","ownerId","_fetchWithForbiddenCheck","fetchSuccess","fetchError","_fetchData","t","_timeoutId","setTimeout","retry","constructor","name","ObjectMap","prefixKeys","keys","moduleActionTypes","getItem","state","retryCount","Pollable","proxify"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nimport { ObjectMap } from '@ringcentral-integration/core/lib/ObjectMap';\n\nimport { moduleActionTypes } from '../../enums/moduleActionTypes';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport { Library } from '../di';\nimport ensureExist from '../ensureExist';\nimport Pollable from '../Pollable';\nimport proxify from '../proxy/proxify';\nimport {\n  createGetDataReducer,\n  createGetTimestampReducer,\n  getDataFetcherReducer,\n} from './getDataFetcherReducer';\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_RETRY = 62 * 1000;\n\nconst RETRY_INTERVALS = [2 * 1000, 5 * 1000, 10 * 1000, 30 * 1000];\n\n@Library({\n  deps: [\n    'Auth',\n    'Client',\n    { dep: 'Subscription', optional: true },\n    { dep: 'SleepDetector', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'Storage', optional: true },\n    { dep: 'DataFetcherOptions', optional: true },\n  ],\n})\nexport default class DataFetcher extends Pollable {\n  constructor({\n    auth,\n    client,\n    storage,\n    subscription,\n    sleepDetector,\n    tabManager,\n    timeToRetry = DEFAULT_RETRY,\n    ttl = DEFAULT_TTL,\n    pollingInterval = ttl,\n    polling = false,\n    disableCache = false,\n    cleanOnReset = false,\n    getReducer = getDataFetcherReducer,\n    getDataReducer = createGetDataReducer(cleanOnReset),\n    getTimestampReducer = createGetTimestampReducer(cleanOnReset),\n    fetchFunction,\n    forbiddenHandler,\n    subscriptionFilters,\n    subscriptionHandler,\n    readyCheckFn,\n    ...options\n  }) {\n    if (typeof fetchFunction !== 'function') {\n      throw new Error('fetchFunction must be a asynchronous function');\n    }\n    super({\n      ...options,\n    });\n    this._auth = ensureExist.call(this, auth, 'auth');\n    this._client = ensureExist.call(this, client, 'client');\n    this._sleepDetector = sleepDetector;\n    this._disableCache = disableCache;\n    this._storage = storage;\n    this._subscription = subscription;\n    this._tabManager = tabManager;\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._polling = polling;\n    this._pollingInterval = pollingInterval;\n    this._fetchFunction = fetchFunction;\n    this._forbiddenHandler = forbiddenHandler;\n    this._subscriptionFilters = subscriptionFilters;\n    this._subscriptionHandler = subscriptionHandler;\n    this._readyCheckFn = readyCheckFn;\n\n    this._storageKey = `${this._name}-data`; // differentiate from old key\n\n    if (!this._disableCache && this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: combineReducers({\n          data: getDataReducer(this.actionTypes),\n          timestamp: getTimestampReducer(this.actionTypes),\n        }),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        data: getDataReducer(this.actionTypes),\n        timestamp: getTimestampReducer(this.actionTypes),\n      });\n    }\n\n    this._promise = null;\n    this._lastMessage = null;\n  }\n\n  get _name() {\n    throw new Error(`${this.constructor.name}::_name must be defined`);\n  }\n\n  get _actionTypes() {\n    return ObjectMap.prefixKeys(\n      [\n        ...ObjectMap.keys(moduleActionTypes),\n        'fetch',\n        'fetchSuccess',\n        'fetchError',\n        'retry',\n      ],\n      this._name,\n    );\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n    if (this._sleepDetector) {\n      this._sleepDetector.on(\n        this._sleepDetector.events.detected,\n        () => this._handleSleepDetected,\n      );\n    }\n  }\n\n  _handleSleepDetected() {\n    if (this._shouldFetch()) {\n      this.fetchData();\n    }\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this._hasPermission) {\n        await this._init();\n      } else {\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          hasPermission: false,\n        });\n      }\n    } else if (this._isDataReady()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n        hasPermission: this._hasPermission,\n      });\n    } else if (this._shouldReset()) {\n      this._clearTimeout();\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    } else if (this._shouldHandleSubscriptionMessage()) {\n      this._processSubscription();\n    }\n  }\n\n  _shouldInit() {\n    return !!(\n      this._auth.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      (!this._readyCheckFn || this._readyCheckFn()) &&\n      (!this._subscription || this._subscription.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return !!(\n      (!this._auth.loggedIn ||\n        (this._storage && !this._storage.ready) ||\n        (this._readyCheckFn && !this._readyCheckFn()) ||\n        (this._subscription && !this._subscription.ready) ||\n        (this._tabManager && !this._tabManager.ready)) &&\n      !this.pending\n    );\n  }\n\n  _shouldHandleSubscriptionMessage() {\n    return !!(\n      this.ready &&\n      this._subscription &&\n      this._subscription.ready &&\n      this._subscriptionHandler &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    );\n  }\n\n  _shouldFetch() {\n    return (\n      (!this._tabManager || this._tabManager.active) &&\n      (this._auth.isFreshLogin ||\n        !this.timestamp ||\n        Date.now() - this.timestamp > this.ttl)\n    );\n  }\n\n  _isDataReady() {\n    // only turns ready when data has been fetched\n    // (could be from other tabs)\n    return (\n      this.status === moduleStatuses.initializing &&\n      this.data !== null &&\n      this.timestamp !== null\n    );\n  }\n\n  async _init() {\n    if (this._subscription && this._subscriptionFilters) {\n      this._subscription.subscribe(this._subscriptionFilters);\n    }\n    if (this._shouldFetch()) {\n      try {\n        await this.fetchData();\n      } catch (e) {\n        console.error('fetchData error:', e);\n        this._retry();\n      }\n    } else if (this._polling) {\n      this._startPolling();\n    } else {\n      this._retry();\n    }\n  }\n\n  _processSubscription() {\n    this._lastMessage = this._subscription.message;\n    this._subscriptionHandler(this._lastMessage);\n  }\n\n  get data() {\n    if (!this._disableCache && this._storage) {\n      return (\n        (this._storage.getItem(this._storageKey) &&\n          this._storage.getItem(this._storageKey).data) ||\n        null\n      );\n    }\n    return this.state.data;\n  }\n\n  get timestamp() {\n    if (!this._disableCache && this._storage) {\n      return (\n        (this._storage.getItem(this._storageKey) &&\n          this._storage.getItem(this._storageKey).timestamp) ||\n        null\n      );\n    }\n    return this.state.timestamp;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ttl() {\n    return this._ttl;\n  }\n\n  get pollingInterval() {\n    return this._pollingInterval;\n  }\n\n  get retryCount() {\n    return this.state.retryCount;\n  }\n\n  get timeToRetry() {\n    if (this.status === moduleStatuses.initializing) {\n      return RETRY_INTERVALS[this.retryCount] || this._timeToRetry;\n    }\n    return this._timeToRetry;\n  }\n\n  get _hasPermission() {\n    return true;\n  }\n\n  // handle 403 Forbidden error\n  async _fetchWithForbiddenCheck() {\n    try {\n      const data = await this._fetchFunction();\n      return data;\n    } catch (error) {\n      if (\n        error &&\n        error.response &&\n        error.response.status === 403 &&\n        typeof this._forbiddenHandler === 'function'\n      ) {\n        const result = await this._forbiddenHandler(error);\n        return result;\n      }\n      throw error;\n    }\n  }\n\n  @proxify\n  async _fetchData() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    const { ownerId } = this._auth;\n    try {\n      const data = await this._fetchWithForbiddenCheck();\n      if (this._auth.ownerId === ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          data,\n          timestamp: Date.now(),\n        });\n        if (this._polling) {\n          this._startPolling();\n        }\n        this._promise = null;\n      }\n    } catch (error) {\n      if (this._auth.ownerId === ownerId) {\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.fetchError,\n          error,\n        });\n        if (this._polling) {\n          this._startPolling(this.timeToRetry);\n        } else {\n          this._retry();\n        }\n        throw error;\n      }\n    }\n  }\n\n  @proxify\n  async fetchData() {\n    if (!this._promise) {\n      this._promise = this._fetchData();\n    }\n    return this._promise;\n  }\n\n  _retry(t = this.timeToRetry) {\n    this._clearTimeout();\n    this._timeoutId = setTimeout(() => {\n      if (this.status === moduleStatuses.initializing) {\n        this.store.dispatch({\n          type: this.actionTypes.retry,\n        });\n      }\n      this._timeoutId = null;\n      if (!this.timestamp || Date.now() - this.timestamp > this.ttl) {\n        if (!this._tabManager || this._tabManager.active) {\n          this.fetchData();\n        } else {\n          // continue retry checks in case tab becomes main tab\n          this._retry();\n        }\n      }\n    }, t);\n  }\n}\n"],"file":"index.js"}