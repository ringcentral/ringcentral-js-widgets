{"version":3,"file":"contactMatchIdentify.js","names":["separator","contactMatchIdentifyEncode","_ref","phoneNumber","callType","concat","toLocaleLowerCase","exports","contactMatchIdentifyDecode","identify","_ref2","split","_ref3","_slicedToArray"],"sources":["lib/contactMatchIdentify.ts"],"sourcesContent":["interface ContactMatchQuery<T> {\n  phoneNumber: string;\n  callType: T;\n}\n\ntype CallTypeRaw = 'INBOUND' | 'OUTBOUND' | 'INTERNAL';\n\ntype CallType = 'inbound' | 'outbound' | 'internal';\n\nconst separator = '_';\n\nexport const contactMatchIdentifyEncode = ({\n  phoneNumber,\n  callType,\n}: ContactMatchQuery<CallTypeRaw | CallType>) =>\n  `${phoneNumber}${separator}${callType}`.toLocaleLowerCase();\n\nexport const contactMatchIdentifyDecode = (identify: string) => {\n  const [phoneNumber, callType] = identify.split(separator) as [\n    ContactMatchQuery<CallType>['phoneNumber'],\n    ContactMatchQuery<CallType>['callType'],\n  ];\n  return { phoneNumber, callType };\n};\n"],"mappings":";;;;;;;;;;;;;;;;AASA,IAAMA,SAAS,GAAG,GAAG;AAEd,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAAC,IAAA;EAAA,IACrCC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IACXC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAAA,OAER,GAAAC,MAAA,CAAGF,WAAW,EAAAE,MAAA,CAAGL,SAAS,EAAAK,MAAA,CAAGD,QAAQ,EAAGE,iBAAiB,CAAC,CAAC;AAAA;AAACC,OAAA,CAAAN,0BAAA,GAAAA,0BAAA;AAEvD,IAAMO,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAIC,QAAgB,EAAK;EAAA,IAAAC,KAAA,GAC9BD,QAAQ,CAACE,KAAK,CAACX,SAAS,CAAC;IAAAY,KAAA,GAAAC,cAAA,CAAAH,KAAA;IAAlDP,WAAW,GAAAS,KAAA;IAAER,QAAQ,GAAAQ,KAAA;EAI5B,OAAO;IAAET,WAAW,EAAXA,WAAW;IAAEC,QAAQ,EAARA;EAAS,CAAC;AAClC,CAAC;AAACG,OAAA,CAAAC,0BAAA,GAAAA,0BAAA","ignoreList":[]}