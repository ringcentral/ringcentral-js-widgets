{"version":3,"file":"index.js","names":["localeFileRegExp","fileRegExp","isLocaleFile","filename","test","name","replace","localeFilter","locales","Array","isArray","length","includes"],"sources":["lib/isLocaleFile/index.ts"],"sourcesContent":["const localeFileRegExp =\n  /^([a-z]{2}(-|_)([A-Z]{2}|[0-9]{3}|[A-Z][a-z]{3}(-|_)[A-Z]{2})|[a-z]{3}(-|_)[A-Z]{2})$/;\nconst fileRegExp = /\\.(js|ts)$/i;\n\n/**\n * @function\n * @description Determine whether file is valid locale file or not.\n * @param {String} filename\n * @returns {Boolean}\n */\nexport default function isLocaleFile(filename: string) {\n  if (!fileRegExp.test(filename)) {\n    return false;\n  }\n  const name = filename.replace(fileRegExp, '');\n  return localeFileRegExp.test(name);\n}\n\nexport function localeFilter(locales: string[]) {\n  return (filename: string) => {\n    if (!Array.isArray(locales) || locales.length === 0) {\n      return true;\n    }\n    const name = filename.replace(fileRegExp, '');\n    return locales.includes(name);\n  };\n}\n"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,gBAAgB,GACpB,uFAAuF;AACzF,IAAMC,UAAU,GAAG,aAAa;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,YAAYA,CAACC,QAAgB,EAAE;EACrD,IAAI,CAACF,UAAU,CAACG,IAAI,CAACD,QAAQ,CAAC,EAAE;IAC9B,OAAO,KAAK;EACd;EACA,IAAME,IAAI,GAAGF,QAAQ,CAACG,OAAO,CAACL,UAAU,EAAE,EAAE,CAAC;EAC7C,OAAOD,gBAAgB,CAACI,IAAI,CAACC,IAAI,CAAC;AACpC;AAEO,SAASE,YAAYA,CAACC,OAAiB,EAAE;EAC9C,OAAO,UAACL,QAAgB,EAAK;IAC3B,IAAI,CAACM,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,IAAIA,OAAO,CAACG,MAAM,KAAK,CAAC,EAAE;MACnD,OAAO,IAAI;IACb;IACA,IAAMN,IAAI,GAAGF,QAAQ,CAACG,OAAO,CAACL,UAAU,EAAE,EAAE,CAAC;IAC7C,OAAOO,OAAO,CAACI,QAAQ,CAACP,IAAI,CAAC;EAC/B,CAAC;AACH"}