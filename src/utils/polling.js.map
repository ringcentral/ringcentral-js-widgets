{"version":3,"file":"polling.js","names":["_sleep","require","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","polling","interval","process","env","NODE_ENV","Error","finished","sleepPromise","promise","_ref","regeneratorRuntime","mark","_callee","result","wrap","_callee$","_context","prev","next","sent","sleep","t0","stop","_x","_x2","cancel","_sleepPromise","exports"],"sources":["src/utils/polling.ts"],"sourcesContent":["// import { jestFakeTimersAreEnabled } from '@ringcentral-integration/test-utils/lib/jestFakeTimersAreEnabled';\n\nimport { sleep } from './sleep';\n\nexport interface PollingPromise extends Promise<void> {\n  /** cancel polling timer */\n  cancel: () => void;\n}\n\n/**\n * polling execute function, that will be executed until it returns `true`\n * @param fn polling function\n * @param interval interval time in milliseconds, when you not provide it, that will ignore any delay between each execution\n *\n * @example\n * ```ts\n * let count = 5;\n *\n * const pollingPromise = polling(() => {\n *  count++;\n *\n *  return count >= 5;\n * }, 1000);\n *\n * pollingPromise\n *   .then(() => {\n *     console.log('polling done');\n *   })\n *   .catch(() => {\n *     console.log('polling canceled');\n *   }\n *\n * const onClick = () => {\n *   pollingPromise.cancel();\n * }\n * ```\n */\nexport const polling = (\n  fn: () => boolean | Promise<boolean>,\n  interval?: number,\n) => {\n  if (process.env.NODE_ENV !== 'production' && typeof fn !== 'function') {\n    throw new Error(\"'fn' must be a function\");\n  }\n\n  let finished = false;\n  let sleepPromise: ReturnType<typeof sleep>;\n\n  // eslint-disable-next-line no-async-promise-executor\n  const promise = new Promise<void>(async (resolve, reject) => {\n    while (!finished) {\n      const result = await fn();\n\n      // check that still not finished, because user may cancel in that fn execution period\n      if (!finished) {\n        finished = result;\n      }\n\n      if (!finished && typeof interval === 'number' && interval >= 0) {\n        sleepPromise = sleep(interval);\n\n        try {\n          await sleepPromise;\n        } catch (error) {\n          reject(new Error('Async Polling has been cancelled'));\n        }\n      }\n    }\n\n    resolve();\n  }) as PollingPromise;\n\n  promise.cancel = () => {\n    sleepPromise?.cancel();\n    finished = true;\n  };\n\n  return promise;\n};\n"],"mappings":"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"}