{"version":3,"file":"polling.js","names":["_sleep","require","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","polling","fn","interval","process","env","NODE_ENV","Error","finished","sleepPromise","promise","_ref","regeneratorRuntime","mark","_callee","reject","result","wrap","_callee$","_context","prev","next","sent","sleep","t0","stop","_x","_x2","cancel","_sleepPromise","exports"],"sources":["src/utils/polling.ts"],"sourcesContent":["// import { jestFakeTimersAreEnabled } from '@ringcentral-integration/test-utils/lib/jestFakeTimersAreEnabled';\nimport { sleep } from './sleep';\n\nexport interface PollingPromise extends Promise<void> {\n  /** cancel polling timer */\n  cancel: () => void;\n}\n\n/**\n * polling execute function, that will be executed until it returns `true`\n * @param fn polling function\n * @param interval interval time in milliseconds, when you not provide it, that will ignore any delay between each execution\n *\n * @example\n * ```ts\n * let count = 5;\n *\n * const pollingPromise = polling(() => {\n *  count++;\n *\n *  return count >= 5;\n * }, 1000);\n *\n * pollingPromise\n *   .then(() => {\n *     console.log('polling done');\n *   })\n *   .catch(() => {\n *     console.log('polling canceled');\n *   }\n *\n * const onClick = () => {\n *   pollingPromise.cancel();\n * }\n * ```\n */\nexport const polling = (\n  fn: () => boolean | Promise<boolean>,\n  interval?: number,\n) => {\n  if (process.env.NODE_ENV !== 'production' && typeof fn !== 'function') {\n    throw new Error(\"'fn' must be a function\");\n  }\n\n  let finished = false;\n  let sleepPromise: ReturnType<typeof sleep>;\n\n  // eslint-disable-next-line no-async-promise-executor\n  const promise = new Promise<void>(async (resolve, reject) => {\n    while (!finished) {\n      const result = await fn();\n\n      // check that still not finished, because user may cancel in that fn execution period\n      if (!finished) {\n        finished = result;\n      }\n\n      if (!finished && typeof interval === 'number' && interval >= 0) {\n        sleepPromise = sleep(interval);\n\n        try {\n          await sleepPromise;\n        } catch (error) {\n          reject(new Error('Async Polling has been cancelled'));\n        }\n      }\n    }\n\n    resolve();\n  }) as PollingPromise;\n\n  promise.cancel = () => {\n    sleepPromise?.cancel();\n    finished = true;\n  };\n\n  return promise;\n};\n"],"mappings":"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","ignoreList":[]}