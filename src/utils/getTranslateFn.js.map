{"version":3,"file":"getTranslateFn.js","names":["_i18n","require","_format","_toArray","r","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","length","e","n","Symbol","iterator","isArray","_classCallCheck","_inherits","prototype","Object","create","value","writable","configurable","defineProperty","_setPrototypeOf","_createSuper","_isNativeReflectConstruct","o","_getPrototypeOf","s","Reflect","construct","arguments","apply","_possibleConstructorReturn","_typeof","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Map","_isNativeFunction","has","get","set","Wrapper","_construct","enumerable","push","p","bind","Boolean","valueOf","Function","indexOf","setPrototypeOf","__proto__","getPrototypeOf","getTranslateFn","_len","i18nInput","_key","i18nInstances","process","env","NODE_ENV","TranslateError","_Error","_super","message","_this","Error","_i18nInstances","firstI18n","rest","forEach","nextI18n","keys","_cache","RUNTIME","defaultLocale","key","hasOwnProperty","console","warn","concat","duplicatedKey","i18nString","some","i18nInstance","result","getString","_len2","options","_key2","format","exports"],"sources":["src/utils/getTranslateFn.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type I18n from '@ringcentral-integration/i18n';\nimport { RUNTIME } from '@ringcentral-integration/i18n';\n\nimport { format } from './format';\n\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (\n  k: infer I,\n) => void\n  ? I\n  : never;\n\ntype ExtractBraces<S extends string> =\n  S extends `${infer _Start}{${infer Param}}${infer Rest}`\n    ?\n        | {\n            [K in Param]: string | number;\n          }\n        | ExtractBraces<Rest>\n    : never;\ntype UnwrapI18n<T> = T extends I18n<infer U> ? U : never;\ntype MergeTypes<T, U> = T & U;\n\nexport type MergeI18nArray<Types extends any[]> = Types extends [\n  infer First,\n  ...infer Rest,\n]\n  ? MergeTypes<UnwrapI18n<First>, MergeI18nArray<Rest>>\n  : unknown;\n\nexport interface Format<T extends Record<string, string>> {\n  /**\n   * i18n method `t`\n   * Format using an object hash with keys matching [0-9a-zA-Z]+\n   *\n   * ```ts\n   * showMessageWithSlot => '{hello} Show message'\n   *\n   * const message2 = t('showMessageWithSlot', { hello: 'Hello world' }); // => 'Hello world Show message'\n   * ```\n   */\n  <K extends keyof T>(\n    string: K,\n    object: UnionToIntersection<ExtractBraces<T[K]>>,\n  ): string;\n  /**\n   * i18n method `t`\n   * Format using a number indexed array\n   *\n   * ```ts\n   * showMessageWithArraySlot => '{0} Show message {1}'\n   *\n   * const message3 = t('showMessageWithArraySlot', [1, 2]); // => '1 Show message 2'\n   * ```\n   */\n  <K extends keyof T>(string: K, array: Array<any>): string;\n  /**\n   * i18n method `t`\n   * Escape {} pairs by using double {{}}\n   *\n   * ```ts\n   * showMessage => 'Show message'\n   * showMessageWithSlot => '{hello} Show message'\n   * showMessageWithArraySlot => '{0} Show message {1}'\n   *\n   * const message1 = t('showMessage'); // => 'Show message'\n   * const message2 = t('showMessageWithSlot', { hello: 'Hello world' }); // => 'Hello world Show message'\n   * const message3 = t('showMessageWithArraySlot', [1, 2]); // => '1 Show message 2'\n   * const message4 = t('showMessageWithArraySlot', 1, 2); // => '1 Show message 2'\n   * ```\n   */\n  <K extends keyof T>(string: K): string;\n}\n/**\n * provide method to work translate and format string\n */\nexport const getTranslateFn = <\n  T extends Array<I18n<any>>,\n  P extends Record<string, string> = MergeI18nArray<T>,\n>(\n  ...i18nInput: T\n): Format<P> => {\n  const i18nInstances = Array.isArray(i18nInput) ? i18nInput : [i18nInput];\n\n  if (process.env.NODE_ENV !== 'production') {\n    class TranslateError extends Error {\n      constructor(message: string, ...rest: any[]) {\n        super(message);\n        this.name = 'TranslateError';\n      }\n    }\n\n    if (i18nInstances.length > 1) {\n      const [firstI18n, ...rest] = i18nInstances;\n\n      rest.forEach((nextI18n) => {\n        Object.keys(firstI18n._cache[RUNTIME.defaultLocale] || {}).forEach(\n          (key) => {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                nextI18n._cache[RUNTIME.defaultLocale],\n                key,\n              )\n            ) {\n              // eslint-disable-next-line no-console\n              console.warn(\n                new TranslateError(\n                  `[i18n] i18n files has duplicated key \"${key}\"`,\n                ),\n                {\n                  duplicatedKey: key,\n                  i18nInstances,\n                },\n              );\n            }\n          },\n        );\n      });\n    }\n  }\n\n  return (key: any, ...options: any[]) => {\n    let i18nString = key as string;\n\n    i18nInstances.some((i18nInstance) => {\n      const result = i18nInstance.getString(key as any);\n      if (result !== key) {\n        i18nString = result;\n\n        return true;\n      }\n\n      return false;\n    });\n\n    if (options.length > 0) {\n      return format(i18nString, ...options);\n    }\n    return i18nString;\n  };\n};\n"],"mappings":"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","ignoreList":[]}