{"version":3,"file":"MultiPartUTF8FormData.js","names":["_base64Handler","require","_typeof","o","Symbol","iterator","constructor","prototype","_slicedToArray","r","e","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","l","t","n","i","u","a","f","call","next","Object","done","push","value","length","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","name","from","test","asyncGeneratorStep","c","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_classCallCheck","_defineProperties","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","MultiPartUTF8FormData","dataList","_boundary","concat","Math","random","substring","_getData","regeneratorRuntime","mark","_callee","contentType","formDataStringList","wrappedBoundary","outputRowData","_args","wrap","_callee$","_context","prev","undefined","getFormStringList","sent","map","body","join","abrupt","formData","stop","getData","_getFormStringList","_callee4","_this","result","_callee4$","_context4","all","entries","fields","_ref2","_callee2","_ref","_ref3","_callee2$","_context2","getJsonFormString","source","JSON","stringify","_x","files","_ref5","_callee3","_ref4","_ref6","_callee3$","_context3","file","processFile","_x2","flat","_processFile","_callee5","base64","_callee5$","_context5","fileToBase64","getBase64FormString","filename","File","type","_x3","_x4","_ref7","_ref7$type","_ref8","_ref8$filename","_ref8$type","encodedFileName","encodeURI","dataUrl","split","exports"],"sources":["src/utils/MultiPartUTF8FormData.ts"],"sourcesContent":["import { fileToBase64 } from './base64Handler';\n\ntype MultiPartDataType = {\n  key: string;\n  source: string;\n  filename?: string;\n  type?: string;\n};\n\nexport type MultiPartUTF8FormDataOptions = {\n  fields?: Record<string, any>;\n  files?: Record<string, File | Blob | File[] | Blob[]>;\n};\n\n/**\n * make you can send custom form data with `filename*=`\n */\nexport class MultiPartUTF8FormData {\n  private _boundary = `----Boundary${Math.random().toString(35).substring(2)}`;\n\n  constructor(private dataList: MultiPartUTF8FormDataOptions) {}\n\n  async getData(contentType = 'multipart/form-data') {\n    const formDataStringList = await this.getFormStringList();\n    const wrappedBoundary = `--${this._boundary}`;\n    const outputRowData = `${formDataStringList\n      .map((body) => `${wrappedBoundary}\\r\\n${body}`)\n      .join('\\r\\n')}`;\n\n    return {\n      contentType: `${contentType}; boundary=${this._boundary}`,\n      formData: `${outputRowData}\\r\\n${wrappedBoundary}--`,\n    };\n  }\n\n  private async getFormStringList() {\n    const result = await Promise.all([\n      ...Object.entries(this.dataList.fields || {}).map(\n        async ([key, value]) => {\n          if (typeof value === 'object') {\n            return this.getJsonFormString({\n              key,\n              source: JSON.stringify(value),\n            });\n          }\n\n          return this.getJsonFormString({\n            key,\n            source: value,\n          });\n        },\n      ),\n      ...Object.entries(this.dataList.files || {}).map(async ([key, value]) => {\n        if (Array.isArray(value)) {\n          return Promise.all(value.map((file) => this.processFile(key, file)));\n        }\n\n        return this.processFile(key, value);\n      }),\n    ]);\n\n    return result.flat();\n  }\n\n  private async processFile(key: string, file: File | Blob) {\n    const base64 = await fileToBase64(file);\n\n    return this.getBase64FormString({\n      key,\n      source: base64,\n      filename: file instanceof File ? file.name : 'blob',\n      type: file.type,\n    });\n  }\n\n  private getJsonFormString({\n    key,\n    source,\n    type = 'application/json',\n  }: MultiPartDataType) {\n    return [\n      `Content-Disposition: form-data; name=\"${key}\"`,\n      `Content-type: ${type}`,\n      '',\n      `${source}`,\n    ].join('\\r\\n');\n  }\n\n  private getBase64FormString({\n    key,\n    source,\n    filename = 'blob',\n    type = 'application/octet-stream',\n  }: MultiPartDataType) {\n    const encodedFileName = encodeURI(filename);\n    const contentType = type;\n    const dataUrl = source.split('base64,')[1];\n\n    return [\n      `Content-Disposition: form-data; name=\"${key}\"; filename*=\"UTF-8''${encodedFileName}\"; filename=\"${encodedFileName}\"`,\n      `Content-Type: ${contentType}`,\n      'Content-Transfer-Encoding: base64',\n      '',\n      dataUrl,\n    ].join('\\r\\n');\n  }\n}\n"],"mappings":"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","ignoreList":[]}