{"version":3,"file":"MultiPartUTF8FormData.js","names":["_base64Handler","require","_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_i","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","iter","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","MultiPartUTF8FormData","dataList","_boundary","concat","Math","random","substring","_getData","regeneratorRuntime","mark","_callee","contentType","formDataStringList","wrappedBoundary","outputRowData","_args","wrap","_callee$","_context","prev","getFormStringList","sent","map","body","join","abrupt","formData","stop","getData","_getFormStringList","_callee4","_this","result","_callee4$","_context4","all","entries","fields","_ref2","_callee2","_ref","_ref3","_callee2$","_context2","getJsonFormString","source","JSON","stringify","files","_ref5","_callee3","_ref4","_ref6","_callee3$","_context3","file","processFile","_x2","flat","_processFile","_callee5","base64","_callee5$","_context5","fileToBase64","getBase64FormString","filename","File","type","_x3","_x4","_ref7","_ref7$type","_ref8","_ref8$filename","_ref8$type","encodedFileName","encodeURI","dataUrl","split","exports"],"sources":["src/utils/MultiPartUTF8FormData.ts"],"sourcesContent":["import { fileToBase64 } from './base64Handler';\n\ntype MultiPartDataType = {\n  key: string;\n  source: string;\n  filename?: string;\n  type?: string;\n};\n\nexport type MultiPartUTF8FormDataOptions = {\n  fields?: Record<string, any>;\n  files?: Record<string, File | Blob | File[] | Blob[]>;\n};\n\n/**\n * make you can send custom form data with `filename*=`\n */\nexport class MultiPartUTF8FormData {\n  private _boundary = `----Boundary${Math.random().toString(35).substring(2)}`;\n\n  constructor(private dataList: MultiPartUTF8FormDataOptions) {}\n\n  async getData(contentType = 'multipart/form-data') {\n    const formDataStringList = await this.getFormStringList();\n    const wrappedBoundary = `--${this._boundary}`;\n    const outputRowData = `${formDataStringList\n      .map((body) => `${wrappedBoundary}\\r\\n${body}`)\n      .join('\\r\\n')}`;\n\n    return {\n      contentType: `${contentType}; boundary=${this._boundary}`,\n      formData: `${outputRowData}\\r\\n${wrappedBoundary}--`,\n    };\n  }\n\n  private async getFormStringList() {\n    const result = await Promise.all([\n      ...Object.entries(this.dataList.fields || {}).map(\n        async ([key, value]) => {\n          if (typeof value === 'object') {\n            return this.getJsonFormString({\n              key,\n              source: JSON.stringify(value),\n            });\n          }\n\n          return this.getJsonFormString({\n            key,\n            source: value,\n          });\n        },\n      ),\n      ...Object.entries(this.dataList.files || {}).map(async ([key, value]) => {\n        if (Array.isArray(value)) {\n          return Promise.all(value.map((file) => this.processFile(key, file)));\n        }\n\n        return this.processFile(key, value);\n      }),\n    ]);\n\n    return result.flat();\n  }\n\n  private async processFile(key: string, file: File | Blob) {\n    const base64 = await fileToBase64(file);\n\n    return this.getBase64FormString({\n      key,\n      source: base64,\n      filename: file instanceof File ? file.name : 'blob',\n      type: file.type,\n    });\n  }\n\n  private getJsonFormString({\n    key,\n    source,\n    type = 'application/json',\n  }: MultiPartDataType) {\n    return [\n      `Content-Disposition: form-data; name=\"${key}\"`,\n      `Content-type: ${type}`,\n      '',\n      `${source}`,\n    ].join('\\r\\n');\n  }\n\n  private getBase64FormString({\n    key,\n    source,\n    filename = 'blob',\n    type = 'application/octet-stream',\n  }: MultiPartDataType) {\n    const encodedFileName = encodeURI(filename);\n    const contentType = type;\n    const dataUrl = source.split('base64,')[1];\n\n    return [\n      `Content-Disposition: form-data; name=\"${key}\"; filename*=\"UTF-8''${encodedFileName}\"; filename=\"${encodedFileName}\"`,\n      `Content-Type: ${contentType}`,\n      'Content-Transfer-Encoding: base64',\n      '',\n      dataUrl,\n    ].join('\\r\\n');\n  }\n}\n"],"mappings":"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"}