{"version":3,"file":"getOsInfo.js","names":["OsType","exports","DeviceType","isIPad","_userAgentData","platform","global","navigator","userAgentData","isIpad","test","maxTouchPoints","getOsInfo","OS","Unknown","Device","_userAgentData2","userAgent","macosPlatforms","windowsPlatforms","iosPlatforms","indexOf","Mac","IOS","Windows","PC","Android","Linux","toLowerCase","Mobile","err","console","log","isAndroid","isIOS"],"sources":["src/utils/getOsInfo.ts"],"sourcesContent":["export enum OsType {\n  Mac = 'MacOS',\n  IOS = 'iOS',\n  Android = 'Android',\n  Linux = 'Linux',\n  Windows = 'Windows',\n  Unknown = 'Unknown',\n}\n\nexport enum DeviceType {\n  Mac = 'Mac',\n  PC = 'PC',\n  Mobile = 'Mobile',\n  Unknown = 'Unknown',\n}\n\ntype OsInfo = { Device: DeviceType; OS: OsType };\n\nexport function isIPad() {\n  const platform =\n    global.navigator.platform ||\n    (global.navigator as any).userAgentData?.platform;\n\n  const isIpad =\n    /iPad/.test(platform) ||\n    (platform === 'MacIntel' && navigator.maxTouchPoints >= 1); // iPadOS 13 fix\n  return isIpad;\n}\n\nexport function getOsInfo(): OsInfo {\n  let OS = OsType.Unknown;\n  let Device = DeviceType.Unknown;\n  try {\n    const userAgent = global.navigator.userAgent;\n\n    const platform =\n      global.navigator.platform ||\n      (global.navigator as any).userAgentData?.platform;\n    const macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];\n    const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];\n    const iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n    // for new iOS device, it may return the value like MacIntel.\n    // We need to check it if there is a same value for M1 chip device.\n    const isIpad = isIPad();\n\n    if (macosPlatforms.indexOf(platform) !== -1 && !isIpad) {\n      OS = OsType.Mac;\n      Device = DeviceType.Mac;\n    } else if (iosPlatforms.indexOf(platform) !== -1 || isIpad) {\n      OS = OsType.IOS;\n    } else if (windowsPlatforms.indexOf(platform) !== -1) {\n      OS = OsType.Windows;\n      Device = DeviceType.PC;\n    } else if (/Android/.test(userAgent)) {\n      OS = OsType.Android;\n    } else if (!OS && /Linux/.test(platform)) {\n      OS = OsType.Linux;\n    }\n\n    if (\n      /Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(\n        userAgent.toLowerCase(),\n      ) ||\n      OS === OsType.IOS\n    ) {\n      Device = DeviceType.Mobile;\n    }\n  } catch (err) {\n    console.log('get os info error', err);\n  }\n\n  return {\n    OS,\n    Device,\n  };\n}\n\nexport function isAndroid() {\n  return getOsInfo().OS === OsType.Android;\n}\n\nexport function isIOS() {\n  return getOsInfo().OS === OsType.IOS;\n}\n"],"mappings":"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","ignoreList":[]}