{"version":3,"file":"rgbToHex.js","names":["rgbToHex","r","g","b","value","toString","hex","slice"],"sources":["src/utils/rgbToHex.ts"],"sourcesContent":["/**\n * Converts RGB color values to a hexadecimal color string.\n * @param r - The red color component (0-255).\n * @param g - The green color component (0-255).\n * @param b - The blue color component (0-255).\n * @returns The hexadecimal color string representation.\n * @throws {string} If any of the color components are invalid.\n * @example\n * // Convert RGB values to hexadecimal color\n * const hexColor = rgbToHex(255, 0, 0);\n * console.log(hexColor); // Output: \"ff0000\"\n */\nexport function rgbToHex(r: number, g: number, b: number) {\n  if (r > 255 || g > 255 || b > 255) throw 'Invalid color component';\n  const value = ((r << 16) | (g << 8) | b).toString(16);\n\n  const hex = '#' + ('000000' + value).slice(-6);\n\n  return hex;\n}\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,QAAQA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAE;EACxD,IAAIF,CAAC,GAAG,GAAG,IAAIC,CAAC,GAAG,GAAG,IAAIC,CAAC,GAAG,GAAG,EAAE,MAAM,yBAAyB;EAClE,IAAMC,KAAK,GAAG,CAAEH,CAAC,IAAI,EAAE,GAAKC,CAAC,IAAI,CAAE,GAAGC,CAAC,EAAEE,QAAQ,CAAC,EAAE,CAAC;EAErD,IAAMC,GAAG,GAAG,GAAG,GAAG,CAAC,QAAQ,GAAGF,KAAK,EAAEG,KAAK,CAAC,CAAC,CAAC,CAAC;EAE9C,OAAOD,GAAG;AACZ","ignoreList":[]}